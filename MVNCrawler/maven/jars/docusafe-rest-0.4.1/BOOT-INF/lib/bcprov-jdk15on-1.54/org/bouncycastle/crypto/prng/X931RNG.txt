public class org.bouncycastle.crypto.prng.X931RNG {
  private static final long BLOCK64_RESEED_MAX;

  private static final long BLOCK128_RESEED_MAX;

  private static final int BLOCK64_MAX_BITS_REQUEST;

  private static final int BLOCK128_MAX_BITS_REQUEST;

  private final org.bouncycastle.crypto.BlockCipher engine;

  private final org.bouncycastle.crypto.prng.EntropySource entropySource;

  private final byte[] DT;

  private final byte[] I;

  private final byte[] R;

  private byte[] V;

  private long reseedCounter;

  public org.bouncycastle.crypto.prng.X931RNG(org.bouncycastle.crypto.BlockCipher, byte[], org.bouncycastle.crypto.prng.EntropySource);
    Code:
       0: aload_0
       1: invokespecial #91                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_1
       6: putfield      #82                 // Field reseedCounter:J
       9: aload_0
      10: aload_1
      11: putfield      #87                 // Field engine:Lorg/bouncycastle/crypto/BlockCipher;
      14: aload_0
      15: aload_3
      16: putfield      #88                 // Field entropySource:Lorg/bouncycastle/crypto/prng/EntropySource;
      19: aload_0
      20: aload_1
      21: invokeinterface #96,  1           // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      26: newarray       byte
      28: putfield      #83                 // Field DT:[B
      31: aload_2
      32: iconst_0
      33: aload_0
      34: getfield      #83                 // Field DT:[B
      37: iconst_0
      38: aload_0
      39: getfield      #83                 // Field DT:[B
      42: arraylength
      43: invokestatic  #92                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      46: aload_0
      47: aload_1
      48: invokeinterface #96,  1           // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      53: newarray       byte
      55: putfield      #84                 // Field I:[B
      58: aload_0
      59: aload_1
      60: invokeinterface #96,  1           // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      65: newarray       byte
      67: putfield      #85                 // Field R:[B
      70: return

  int generate(byte[], boolean);
    Code:
       0: aload_0
       1: getfield      #85                 // Field R:[B
       4: arraylength
       5: bipush        8
       7: if_icmpne     43
      10: aload_0
      11: getfield      #82                 // Field reseedCounter:J
      14: ldc2_w        #49                 // long 32768l
      17: lcmp
      18: ifle          23
      21: iconst_m1
      22: ireturn
      23: aload_1
      24: sipush        512
      27: invokestatic  #94                 // Method isTooLarge:([BI)Z
      30: ifeq          75
      33: new           #53                 // class java/lang/IllegalArgumentException
      36: dup
      37: ldc           #4                  // String Number of bits per request limited to 4096
      39: invokespecial #89                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: getfield      #82                 // Field reseedCounter:J
      47: ldc2_w        #51                 // long 8388608l
      50: lcmp
      51: ifle          56
      54: iconst_m1
      55: ireturn
      56: aload_1
      57: ldc           #1                  // int 32768
      59: invokestatic  #94                 // Method isTooLarge:([BI)Z
      62: ifeq          75
      65: new           #53                 // class java/lang/IllegalArgumentException
      68: dup
      69: ldc           #3                  // String Number of bits per request limited to 262144
      71: invokespecial #89                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      74: athrow
      75: iload_2
      76: ifne          86
      79: aload_0
      80: getfield      #86                 // Field V:[B
      83: ifnonnull     126
      86: aload_0
      87: aload_0
      88: getfield      #88                 // Field entropySource:Lorg/bouncycastle/crypto/prng/EntropySource;
      91: invokeinterface #98,  1           // InterfaceMethod org/bouncycastle/crypto/prng/EntropySource.getEntropy:()[B
      96: putfield      #86                 // Field V:[B
      99: aload_0
     100: getfield      #86                 // Field V:[B
     103: arraylength
     104: aload_0
     105: getfield      #87                 // Field engine:Lorg/bouncycastle/crypto/BlockCipher;
     108: invokeinterface #96,  1           // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
     113: if_icmpeq     126
     116: new           #54                 // class java/lang/IllegalStateException
     119: dup
     120: ldc           #2                  // String Insufficient entropy returned
     122: invokespecial #90                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     125: athrow
     126: aload_1
     127: arraylength
     128: aload_0
     129: getfield      #85                 // Field R:[B
     132: arraylength
     133: idiv
     134: istore_3
     135: iconst_0
     136: istore        4
     138: iload         4
     140: iload_3
     141: if_icmpge     232
     144: aload_0
     145: getfield      #87                 // Field engine:Lorg/bouncycastle/crypto/BlockCipher;
     148: aload_0
     149: getfield      #83                 // Field DT:[B
     152: iconst_0
     153: aload_0
     154: getfield      #84                 // Field I:[B
     157: iconst_0
     158: invokeinterface #97,  5           // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     163: pop
     164: aload_0
     165: aload_0
     166: getfield      #85                 // Field R:[B
     169: aload_0
     170: getfield      #84                 // Field I:[B
     173: aload_0
     174: getfield      #86                 // Field V:[B
     177: invokespecial #95                 // Method process:([B[B[B)V
     180: aload_0
     181: aload_0
     182: getfield      #86                 // Field V:[B
     185: aload_0
     186: getfield      #85                 // Field R:[B
     189: aload_0
     190: getfield      #84                 // Field I:[B
     193: invokespecial #95                 // Method process:([B[B[B)V
     196: aload_0
     197: getfield      #85                 // Field R:[B
     200: iconst_0
     201: aload_1
     202: iload         4
     204: aload_0
     205: getfield      #85                 // Field R:[B
     208: arraylength
     209: imul
     210: aload_0
     211: getfield      #85                 // Field R:[B
     214: arraylength
     215: invokestatic  #92                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     218: aload_0
     219: aload_0
     220: getfield      #83                 // Field DT:[B
     223: invokespecial #93                 // Method increment:([B)V
     226: iinc          4, 1
     229: goto          138
     232: aload_1
     233: arraylength
     234: iload_3
     235: aload_0
     236: getfield      #85                 // Field R:[B
     239: arraylength
     240: imul
     241: isub
     242: istore        4
     244: iload         4
     246: ifle          327
     249: aload_0
     250: getfield      #87                 // Field engine:Lorg/bouncycastle/crypto/BlockCipher;
     253: aload_0
     254: getfield      #83                 // Field DT:[B
     257: iconst_0
     258: aload_0
     259: getfield      #84                 // Field I:[B
     262: iconst_0
     263: invokeinterface #97,  5           // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
     268: pop
     269: aload_0
     270: aload_0
     271: getfield      #85                 // Field R:[B
     274: aload_0
     275: getfield      #84                 // Field I:[B
     278: aload_0
     279: getfield      #86                 // Field V:[B
     282: invokespecial #95                 // Method process:([B[B[B)V
     285: aload_0
     286: aload_0
     287: getfield      #86                 // Field V:[B
     290: aload_0
     291: getfield      #85                 // Field R:[B
     294: aload_0
     295: getfield      #84                 // Field I:[B
     298: invokespecial #95                 // Method process:([B[B[B)V
     301: aload_0
     302: getfield      #85                 // Field R:[B
     305: iconst_0
     306: aload_1
     307: iload_3
     308: aload_0
     309: getfield      #85                 // Field R:[B
     312: arraylength
     313: imul
     314: iload         4
     316: invokestatic  #92                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     319: aload_0
     320: aload_0
     321: getfield      #83                 // Field DT:[B
     324: invokespecial #93                 // Method increment:([B)V
     327: aload_0
     328: dup
     329: getfield      #82                 // Field reseedCounter:J
     332: lconst_1
     333: ladd
     334: putfield      #82                 // Field reseedCounter:J
     337: aload_1
     338: arraylength
     339: ireturn

  void reseed();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #88                 // Field entropySource:Lorg/bouncycastle/crypto/prng/EntropySource;
       5: invokeinterface #98,  1           // InterfaceMethod org/bouncycastle/crypto/prng/EntropySource.getEntropy:()[B
      10: putfield      #86                 // Field V:[B
      13: aload_0
      14: getfield      #86                 // Field V:[B
      17: arraylength
      18: aload_0
      19: getfield      #87                 // Field engine:Lorg/bouncycastle/crypto/BlockCipher;
      22: invokeinterface #96,  1           // InterfaceMethod org/bouncycastle/crypto/BlockCipher.getBlockSize:()I
      27: if_icmpeq     40
      30: new           #54                 // class java/lang/IllegalStateException
      33: dup
      34: ldc           #2                  // String Insufficient entropy returned
      36: invokespecial #90                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: lconst_1
      42: putfield      #82                 // Field reseedCounter:J
      45: return

  org.bouncycastle.crypto.prng.EntropySource getEntropySource();
    Code:
       0: aload_0
       1: getfield      #88                 // Field entropySource:Lorg/bouncycastle/crypto/prng/EntropySource;
       4: areturn

  private void process(byte[], byte[], byte[]);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: aload_1
       6: arraylength
       7: if_icmpeq     30
      10: aload_1
      11: iload         4
      13: aload_2
      14: iload         4
      16: baload
      17: aload_3
      18: iload         4
      20: baload
      21: ixor
      22: i2b
      23: bastore
      24: iinc          4, 1
      27: goto          3
      30: aload_0
      31: getfield      #87                 // Field engine:Lorg/bouncycastle/crypto/BlockCipher;
      34: aload_1
      35: iconst_0
      36: aload_1
      37: iconst_0
      38: invokeinterface #97,  5           // InterfaceMethod org/bouncycastle/crypto/BlockCipher.processBlock:([BI[BI)I
      43: pop
      44: return

  private void increment(byte[]);
    Code:
       0: aload_1
       1: arraylength
       2: iconst_1
       3: isub
       4: istore_2
       5: iload_2
       6: iflt          30
       9: aload_1
      10: iload_2
      11: dup2
      12: baload
      13: iconst_1
      14: iadd
      15: i2b
      16: dup_x2
      17: bastore
      18: ifeq          24
      21: goto          30
      24: iinc          2, -1
      27: goto          5
      30: return

  private static boolean isTooLarge(byte[], int);
    Code:
       0: aload_0
       1: ifnull        14
       4: aload_0
       5: arraylength
       6: iload_1
       7: if_icmple     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn
}
