public abstract class org.bouncycastle.crypto.modes.gcm.GCMUtil {
  private static final int E1;

  private static final long E1L;

  private static final int[] LOOKUP;

  public org.bouncycastle.crypto.modes.gcm.GCMUtil();
    Code:
       0: aload_0
       1: invokespecial #83                 // Method java/lang/Object."<init>":()V
       4: return

  private static int[] generateLookup();
    Code:
       0: sipush        256
       3: newarray       int
       5: astore_0
       6: iconst_0
       7: istore_1
       8: iload_1
       9: sipush        256
      12: if_icmpge     58
      15: iconst_0
      16: istore_2
      17: bipush        7
      19: istore_3
      20: iload_3
      21: iflt          48
      24: iload_1
      25: iconst_1
      26: iload_3
      27: ishl
      28: iand
      29: ifeq          42
      32: iload_2
      33: ldc           #2                  // int -520093696
      35: bipush        7
      37: iload_3
      38: isub
      39: iushr
      40: ixor
      41: istore_2
      42: iinc          3, -1
      45: goto          20
      48: aload_0
      49: iload_1
      50: iload_2
      51: iastore
      52: iinc          1, 1
      55: goto          8
      58: aload_0
      59: areturn

  public static byte[] oneAsBytes();
    Code:
       0: bipush        16
       2: newarray       byte
       4: astore_0
       5: aload_0
       6: iconst_0
       7: bipush        -128
       9: bastore
      10: aload_0
      11: areturn

  public static int[] oneAsInts();
    Code:
       0: iconst_4
       1: newarray       int
       3: astore_0
       4: aload_0
       5: iconst_0
       6: ldc           #1                  // int -2147483648
       8: iastore
       9: aload_0
      10: areturn

  public static long[] oneAsLongs();
    Code:
       0: iconst_2
       1: newarray       long
       3: astore_0
       4: aload_0
       5: iconst_0
       6: ldc2_w        #61                 // long -9223372036854775808l
       9: lastore
      10: aload_0
      11: areturn

  public static byte[] asBytes(int[]);
    Code:
       0: bipush        16
       2: newarray       byte
       4: astore_1
       5: aload_0
       6: aload_1
       7: iconst_0
       8: invokestatic  #94                 // Method org/bouncycastle/util/Pack.intToBigEndian:([I[BI)V
      11: aload_1
      12: areturn

  public static void asBytes(int[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokestatic  #94                 // Method org/bouncycastle/util/Pack.intToBigEndian:([I[BI)V
       6: return

  public static byte[] asBytes(long[]);
    Code:
       0: bipush        16
       2: newarray       byte
       4: astore_1
       5: aload_0
       6: aload_1
       7: iconst_0
       8: invokestatic  #95                 // Method org/bouncycastle/util/Pack.longToBigEndian:([J[BI)V
      11: aload_1
      12: areturn

  public static void asBytes(long[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokestatic  #95                 // Method org/bouncycastle/util/Pack.longToBigEndian:([J[BI)V
       6: return

  public static int[] asInts(byte[]);
    Code:
       0: iconst_4
       1: newarray       int
       3: astore_1
       4: aload_0
       5: iconst_0
       6: aload_1
       7: invokestatic  #92                 // Method org/bouncycastle/util/Pack.bigEndianToInt:([BI[I)V
      10: aload_1
      11: areturn

  public static void asInts(byte[], int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: invokestatic  #92                 // Method org/bouncycastle/util/Pack.bigEndianToInt:([BI[I)V
       6: return

  public static long[] asLongs(byte[]);
    Code:
       0: iconst_2
       1: newarray       long
       3: astore_1
       4: aload_0
       5: iconst_0
       6: aload_1
       7: invokestatic  #93                 // Method org/bouncycastle/util/Pack.bigEndianToLong:([BI[J)V
      10: aload_1
      11: areturn

  public static void asLongs(byte[], long[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: invokestatic  #93                 // Method org/bouncycastle/util/Pack.bigEndianToLong:([BI[J)V
       6: return

  public static void multiply(byte[], byte[]);
    Code:
       0: aload_0
       1: invokestatic  #85                 // Method asInts:([B)[I
       4: astore_2
       5: aload_1
       6: invokestatic  #85                 // Method asInts:([B)[I
       9: astore_3
      10: aload_2
      11: aload_3
      12: invokestatic  #91                 // Method multiply:([I[I)V
      15: aload_2
      16: aload_0
      17: invokestatic  #89                 // Method asBytes:([I[B)V
      20: return

  public static void multiply(int[], int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: istore_2
       4: aload_0
       5: iconst_1
       6: iaload
       7: istore_3
       8: aload_0
       9: iconst_2
      10: iaload
      11: istore        4
      13: aload_0
      14: iconst_3
      15: iaload
      16: istore        5
      18: iconst_0
      19: istore        6
      21: iconst_0
      22: istore        7
      24: iconst_0
      25: istore        8
      27: iconst_0
      28: istore        9
      30: iconst_0
      31: istore        10
      33: iload         10
      35: iconst_4
      36: if_icmpge     170
      39: aload_1
      40: iload         10
      42: iaload
      43: istore        11
      45: iconst_0
      46: istore        12
      48: iload         12
      50: bipush        32
      52: if_icmpge     164
      55: iload         11
      57: bipush        31
      59: ishr
      60: istore        13
      62: iload         11
      64: iconst_1
      65: ishl
      66: istore        11
      68: iload         6
      70: iload_2
      71: iload         13
      73: iand
      74: ixor
      75: istore        6
      77: iload         7
      79: iload_3
      80: iload         13
      82: iand
      83: ixor
      84: istore        7
      86: iload         8
      88: iload         4
      90: iload         13
      92: iand
      93: ixor
      94: istore        8
      96: iload         9
      98: iload         5
     100: iload         13
     102: iand
     103: ixor
     104: istore        9
     106: iload         5
     108: bipush        31
     110: ishl
     111: bipush        8
     113: ishr
     114: istore        14
     116: iload         5
     118: iconst_1
     119: iushr
     120: iload         4
     122: bipush        31
     124: ishl
     125: ior
     126: istore        5
     128: iload         4
     130: iconst_1
     131: iushr
     132: iload_3
     133: bipush        31
     135: ishl
     136: ior
     137: istore        4
     139: iload_3
     140: iconst_1
     141: iushr
     142: iload_2
     143: bipush        31
     145: ishl
     146: ior
     147: istore_3
     148: iload_2
     149: iconst_1
     150: iushr
     151: iload         14
     153: ldc           #2                  // int -520093696
     155: iand
     156: ixor
     157: istore_2
     158: iinc          12, 1
     161: goto          48
     164: iinc          10, 1
     167: goto          33
     170: aload_0
     171: iconst_0
     172: iload         6
     174: iastore
     175: aload_0
     176: iconst_1
     177: iload         7
     179: iastore
     180: aload_0
     181: iconst_2
     182: iload         8
     184: iastore
     185: aload_0
     186: iconst_3
     187: iload         9
     189: iastore
     190: return

  public static void multiply(long[], long[]);
    Code:
       0: aload_0
       1: iconst_0
       2: laload
       3: lstore_2
       4: aload_0
       5: iconst_1
       6: laload
       7: lstore        4
       9: lconst_0
      10: lstore        6
      12: lconst_0
      13: lstore        8
      15: iconst_0
      16: istore        10
      18: iload         10
      20: iconst_2
      21: if_icmpge     116
      24: aload_1
      25: iload         10
      27: laload
      28: lstore        11
      30: iconst_0
      31: istore        13
      33: iload         13
      35: bipush        64
      37: if_icmpge     110
      40: lload         11
      42: bipush        63
      44: lshr
      45: lstore        14
      47: lload         11
      49: iconst_1
      50: lshl
      51: lstore        11
      53: lload         6
      55: lload_2
      56: lload         14
      58: land
      59: lxor
      60: lstore        6
      62: lload         8
      64: lload         4
      66: lload         14
      68: land
      69: lxor
      70: lstore        8
      72: lload         4
      74: bipush        63
      76: lshl
      77: bipush        8
      79: lshr
      80: lstore        16
      82: lload         4
      84: iconst_1
      85: lushr
      86: lload_2
      87: bipush        63
      89: lshl
      90: lor
      91: lstore        4
      93: lload_2
      94: iconst_1
      95: lushr
      96: lload         16
      98: ldc2_w        #63                 // long -2233785415175766016l
     101: land
     102: lxor
     103: lstore_2
     104: iinc          13, 1
     107: goto          33
     110: iinc          10, 1
     113: goto          18
     116: aload_0
     117: iconst_0
     118: lload         6
     120: lastore
     121: aload_0
     122: iconst_1
     123: lload         8
     125: lastore
     126: return

  public static void multiplyP(int[]);
    Code:
       0: aload_0
       1: invokestatic  #86                 // Method shiftRight:([I)I
       4: bipush        8
       6: ishr
       7: istore_1
       8: aload_0
       9: iconst_0
      10: dup2
      11: iaload
      12: iload_1
      13: ldc           #2                  // int -520093696
      15: iand
      16: ixor
      17: iastore
      18: return

  public static void multiplyP(int[], int[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #90                 // Method shiftRight:([I[I)I
       5: bipush        8
       7: ishr
       8: istore_2
       9: aload_1
      10: iconst_0
      11: dup2
      12: iaload
      13: iload_2
      14: ldc           #2                  // int -520093696
      16: iand
      17: ixor
      18: iastore
      19: return

  public static void multiplyP8(int[]);
    Code:
       0: aload_0
       1: bipush        8
       3: invokestatic  #87                 // Method shiftRightN:([II)I
       6: istore_1
       7: aload_0
       8: iconst_0
       9: dup2
      10: iaload
      11: getstatic     #82                 // Field LOOKUP:[I
      14: iload_1
      15: bipush        24
      17: iushr
      18: iaload
      19: ixor
      20: iastore
      21: return

  public static void multiplyP8(int[], int[]);
    Code:
       0: aload_0
       1: bipush        8
       3: aload_1
       4: invokestatic  #88                 // Method shiftRightN:([II[I)I
       7: istore_2
       8: aload_1
       9: iconst_0
      10: dup2
      11: iaload
      12: getstatic     #82                 // Field LOOKUP:[I
      15: iload_2
      16: bipush        24
      18: iushr
      19: iaload
      20: ixor
      21: iastore
      22: return

  static int shiftRight(int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: istore_1
       4: aload_0
       5: iconst_0
       6: iload_1
       7: iconst_1
       8: iushr
       9: iastore
      10: iload_1
      11: bipush        31
      13: ishl
      14: istore_2
      15: aload_0
      16: iconst_1
      17: iaload
      18: istore_1
      19: aload_0
      20: iconst_1
      21: iload_1
      22: iconst_1
      23: iushr
      24: iload_2
      25: ior
      26: iastore
      27: iload_1
      28: bipush        31
      30: ishl
      31: istore_2
      32: aload_0
      33: iconst_2
      34: iaload
      35: istore_1
      36: aload_0
      37: iconst_2
      38: iload_1
      39: iconst_1
      40: iushr
      41: iload_2
      42: ior
      43: iastore
      44: iload_1
      45: bipush        31
      47: ishl
      48: istore_2
      49: aload_0
      50: iconst_3
      51: iaload
      52: istore_1
      53: aload_0
      54: iconst_3
      55: iload_1
      56: iconst_1
      57: iushr
      58: iload_2
      59: ior
      60: iastore
      61: iload_1
      62: bipush        31
      64: ishl
      65: ireturn

  static int shiftRight(int[], int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: istore_2
       4: aload_1
       5: iconst_0
       6: iload_2
       7: iconst_1
       8: iushr
       9: iastore
      10: iload_2
      11: bipush        31
      13: ishl
      14: istore_3
      15: aload_0
      16: iconst_1
      17: iaload
      18: istore_2
      19: aload_1
      20: iconst_1
      21: iload_2
      22: iconst_1
      23: iushr
      24: iload_3
      25: ior
      26: iastore
      27: iload_2
      28: bipush        31
      30: ishl
      31: istore_3
      32: aload_0
      33: iconst_2
      34: iaload
      35: istore_2
      36: aload_1
      37: iconst_2
      38: iload_2
      39: iconst_1
      40: iushr
      41: iload_3
      42: ior
      43: iastore
      44: iload_2
      45: bipush        31
      47: ishl
      48: istore_3
      49: aload_0
      50: iconst_3
      51: iaload
      52: istore_2
      53: aload_1
      54: iconst_3
      55: iload_2
      56: iconst_1
      57: iushr
      58: iload_3
      59: ior
      60: iastore
      61: iload_2
      62: bipush        31
      64: ishl
      65: ireturn

  static long shiftRight(long[]);
    Code:
       0: aload_0
       1: iconst_0
       2: laload
       3: lstore_1
       4: aload_0
       5: iconst_0
       6: lload_1
       7: iconst_1
       8: lushr
       9: lastore
      10: lload_1
      11: bipush        63
      13: lshl
      14: lstore_3
      15: aload_0
      16: iconst_1
      17: laload
      18: lstore_1
      19: aload_0
      20: iconst_1
      21: lload_1
      22: iconst_1
      23: lushr
      24: lload_3
      25: lor
      26: lastore
      27: lload_1
      28: bipush        63
      30: lshl
      31: lreturn

  static long shiftRight(long[], long[]);
    Code:
       0: aload_0
       1: iconst_0
       2: laload
       3: lstore_2
       4: aload_1
       5: iconst_0
       6: lload_2
       7: iconst_1
       8: lushr
       9: lastore
      10: lload_2
      11: bipush        63
      13: lshl
      14: lstore        4
      16: aload_0
      17: iconst_1
      18: laload
      19: lstore_2
      20: aload_1
      21: iconst_1
      22: lload_2
      23: iconst_1
      24: lushr
      25: lload         4
      27: lor
      28: lastore
      29: lload_2
      30: bipush        63
      32: lshl
      33: lreturn

  static int shiftRightN(int[], int);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: istore_2
       4: bipush        32
       6: iload_1
       7: isub
       8: istore_3
       9: aload_0
      10: iconst_0
      11: iload_2
      12: iload_1
      13: iushr
      14: iastore
      15: iload_2
      16: iload_3
      17: ishl
      18: istore        4
      20: aload_0
      21: iconst_1
      22: iaload
      23: istore_2
      24: aload_0
      25: iconst_1
      26: iload_2
      27: iload_1
      28: iushr
      29: iload         4
      31: ior
      32: iastore
      33: iload_2
      34: iload_3
      35: ishl
      36: istore        4
      38: aload_0
      39: iconst_2
      40: iaload
      41: istore_2
      42: aload_0
      43: iconst_2
      44: iload_2
      45: iload_1
      46: iushr
      47: iload         4
      49: ior
      50: iastore
      51: iload_2
      52: iload_3
      53: ishl
      54: istore        4
      56: aload_0
      57: iconst_3
      58: iaload
      59: istore_2
      60: aload_0
      61: iconst_3
      62: iload_2
      63: iload_1
      64: iushr
      65: iload         4
      67: ior
      68: iastore
      69: iload_2
      70: iload_3
      71: ishl
      72: ireturn

  static int shiftRightN(int[], int, int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: iaload
       3: istore_3
       4: bipush        32
       6: iload_1
       7: isub
       8: istore        4
      10: aload_2
      11: iconst_0
      12: iload_3
      13: iload_1
      14: iushr
      15: iastore
      16: iload_3
      17: iload         4
      19: ishl
      20: istore        5
      22: aload_0
      23: iconst_1
      24: iaload
      25: istore_3
      26: aload_2
      27: iconst_1
      28: iload_3
      29: iload_1
      30: iushr
      31: iload         5
      33: ior
      34: iastore
      35: iload_3
      36: iload         4
      38: ishl
      39: istore        5
      41: aload_0
      42: iconst_2
      43: iaload
      44: istore_3
      45: aload_2
      46: iconst_2
      47: iload_3
      48: iload_1
      49: iushr
      50: iload         5
      52: ior
      53: iastore
      54: iload_3
      55: iload         4
      57: ishl
      58: istore        5
      60: aload_0
      61: iconst_3
      62: iaload
      63: istore_3
      64: aload_2
      65: iconst_3
      66: iload_3
      67: iload_1
      68: iushr
      69: iload         5
      71: ior
      72: iastore
      73: iload_3
      74: iload         4
      76: ishl
      77: ireturn

  public static void xor(byte[], byte[]);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: iload_2
       4: dup2
       5: baload
       6: aload_1
       7: iload_2
       8: baload
       9: ixor
      10: i2b
      11: bastore
      12: iinc          2, 1
      15: aload_0
      16: iload_2
      17: dup2
      18: baload
      19: aload_1
      20: iload_2
      21: baload
      22: ixor
      23: i2b
      24: bastore
      25: iinc          2, 1
      28: aload_0
      29: iload_2
      30: dup2
      31: baload
      32: aload_1
      33: iload_2
      34: baload
      35: ixor
      36: i2b
      37: bastore
      38: iinc          2, 1
      41: aload_0
      42: iload_2
      43: dup2
      44: baload
      45: aload_1
      46: iload_2
      47: baload
      48: ixor
      49: i2b
      50: bastore
      51: iinc          2, 1
      54: iload_2
      55: bipush        16
      57: if_icmplt     2
      60: return

  public static void xor(byte[], byte[], int, int);
    Code:
       0: iinc          3, -1
       3: iload_3
       4: iflt          22
       7: aload_0
       8: iload_3
       9: dup2
      10: baload
      11: aload_1
      12: iload_2
      13: iload_3
      14: iadd
      15: baload
      16: ixor
      17: i2b
      18: bastore
      19: goto          0
      22: return

  public static void xor(byte[], byte[], byte[]);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_2
       3: iload_3
       4: aload_0
       5: iload_3
       6: baload
       7: aload_1
       8: iload_3
       9: baload
      10: ixor
      11: i2b
      12: bastore
      13: iinc          3, 1
      16: aload_2
      17: iload_3
      18: aload_0
      19: iload_3
      20: baload
      21: aload_1
      22: iload_3
      23: baload
      24: ixor
      25: i2b
      26: bastore
      27: iinc          3, 1
      30: aload_2
      31: iload_3
      32: aload_0
      33: iload_3
      34: baload
      35: aload_1
      36: iload_3
      37: baload
      38: ixor
      39: i2b
      40: bastore
      41: iinc          3, 1
      44: aload_2
      45: iload_3
      46: aload_0
      47: iload_3
      48: baload
      49: aload_1
      50: iload_3
      51: baload
      52: ixor
      53: i2b
      54: bastore
      55: iinc          3, 1
      58: iload_3
      59: bipush        16
      61: if_icmplt     2
      64: return

  public static void xor(int[], int[]);
    Code:
       0: aload_0
       1: iconst_0
       2: dup2
       3: iaload
       4: aload_1
       5: iconst_0
       6: iaload
       7: ixor
       8: iastore
       9: aload_0
      10: iconst_1
      11: dup2
      12: iaload
      13: aload_1
      14: iconst_1
      15: iaload
      16: ixor
      17: iastore
      18: aload_0
      19: iconst_2
      20: dup2
      21: iaload
      22: aload_1
      23: iconst_2
      24: iaload
      25: ixor
      26: iastore
      27: aload_0
      28: iconst_3
      29: dup2
      30: iaload
      31: aload_1
      32: iconst_3
      33: iaload
      34: ixor
      35: iastore
      36: return

  public static void xor(int[], int[], int[]);
    Code:
       0: aload_2
       1: iconst_0
       2: aload_0
       3: iconst_0
       4: iaload
       5: aload_1
       6: iconst_0
       7: iaload
       8: ixor
       9: iastore
      10: aload_2
      11: iconst_1
      12: aload_0
      13: iconst_1
      14: iaload
      15: aload_1
      16: iconst_1
      17: iaload
      18: ixor
      19: iastore
      20: aload_2
      21: iconst_2
      22: aload_0
      23: iconst_2
      24: iaload
      25: aload_1
      26: iconst_2
      27: iaload
      28: ixor
      29: iastore
      30: aload_2
      31: iconst_3
      32: aload_0
      33: iconst_3
      34: iaload
      35: aload_1
      36: iconst_3
      37: iaload
      38: ixor
      39: iastore
      40: return

  public static void xor(long[], long[]);
    Code:
       0: aload_0
       1: iconst_0
       2: dup2
       3: laload
       4: aload_1
       5: iconst_0
       6: laload
       7: lxor
       8: lastore
       9: aload_0
      10: iconst_1
      11: dup2
      12: laload
      13: aload_1
      14: iconst_1
      15: laload
      16: lxor
      17: lastore
      18: return

  public static void xor(long[], long[], long[]);
    Code:
       0: aload_2
       1: iconst_0
       2: aload_0
       3: iconst_0
       4: laload
       5: aload_1
       6: iconst_0
       7: laload
       8: lxor
       9: lastore
      10: aload_2
      11: iconst_1
      12: aload_0
      13: iconst_1
      14: laload
      15: aload_1
      16: iconst_1
      17: laload
      18: lxor
      19: lastore
      20: return

  static {};
    Code:
       0: invokestatic  #84                 // Method generateLookup:()[I
       3: putstatic     #82                 // Field LOOKUP:[I
       6: return
}
