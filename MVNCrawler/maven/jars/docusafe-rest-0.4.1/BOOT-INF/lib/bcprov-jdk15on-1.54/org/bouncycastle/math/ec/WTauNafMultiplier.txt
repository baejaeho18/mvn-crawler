public class org.bouncycastle.math.ec.WTauNafMultiplier extends org.bouncycastle.math.ec.AbstractECMultiplier {
  static final java.lang.String PRECOMP_NAME;

  public org.bouncycastle.math.ec.WTauNafMultiplier();
    Code:
       0: aload_0
       1: invokespecial #112                // Method org/bouncycastle/math/ec/AbstractECMultiplier."<init>":()V
       4: return

  protected org.bouncycastle.math.ec.ECPoint multiplyPositive(org.bouncycastle.math.ec.ECPoint, java.math.BigInteger);
    Code:
       0: aload_1
       1: instanceof    #55                 // class org/bouncycastle/math/ec/ECPoint$AbstractF2m
       4: ifne          17
       7: new           #48                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #1                  // String Only ECPoint.AbstractF2m can be used in WTauNafMultiplier
      13: invokespecial #109                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: checkcast     #55                 // class org/bouncycastle/math/ec/ECPoint$AbstractF2m
      21: astore_3
      22: aload_3
      23: invokevirtual #120                // Method org/bouncycastle/math/ec/ECPoint$AbstractF2m.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
      26: checkcast     #52                 // class org/bouncycastle/math/ec/ECCurve$AbstractF2m
      29: astore        4
      31: aload         4
      33: invokevirtual #114                // Method org/bouncycastle/math/ec/ECCurve$AbstractF2m.getFieldSize:()I
      36: istore        5
      38: aload         4
      40: invokevirtual #116                // Method org/bouncycastle/math/ec/ECCurve$AbstractF2m.getA:()Lorg/bouncycastle/math/ec/ECFieldElement;
      43: invokevirtual #119                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      46: invokevirtual #110                // Method java/math/BigInteger.byteValue:()B
      49: istore        6
      51: iload         6
      53: invokestatic  #124                // Method org/bouncycastle/math/ec/Tnaf.getMu:(I)B
      56: istore        7
      58: aload         4
      60: invokevirtual #115                // Method org/bouncycastle/math/ec/ECCurve$AbstractF2m.getSi:()[Ljava/math/BigInteger;
      63: astore        8
      65: aload_2
      66: iload         5
      68: iload         6
      70: aload         8
      72: iload         7
      74: bipush        10
      76: invokestatic  #127                // Method org/bouncycastle/math/ec/Tnaf.partModReduction:(Ljava/math/BigInteger;IB[Ljava/math/BigInteger;BB)Lorg/bouncycastle/math/ec/ZTauElement;
      79: astore        9
      81: aload_0
      82: aload_3
      83: aload         9
      85: aload         4
      87: aload_3
      88: ldc           #2                  // String bc_wtnaf
      90: invokevirtual #117                // Method org/bouncycastle/math/ec/ECCurve$AbstractF2m.getPreCompInfo:(Lorg/bouncycastle/math/ec/ECPoint;Ljava/lang/String;)Lorg/bouncycastle/math/ec/PreCompInfo;
      93: iload         6
      95: iload         7
      97: invokespecial #130                // Method multiplyWTnaf:(Lorg/bouncycastle/math/ec/ECPoint$AbstractF2m;Lorg/bouncycastle/math/ec/ZTauElement;Lorg/bouncycastle/math/ec/PreCompInfo;BB)Lorg/bouncycastle/math/ec/ECPoint$AbstractF2m;
     100: areturn

  private org.bouncycastle.math.ec.ECPoint$AbstractF2m multiplyWTnaf(org.bouncycastle.math.ec.ECPoint$AbstractF2m, org.bouncycastle.math.ec.ZTauElement, org.bouncycastle.math.ec.PreCompInfo, byte, byte);
    Code:
       0: iload         4
       2: ifne          11
       5: getstatic     #107                // Field org/bouncycastle/math/ec/Tnaf.alpha0:[Lorg/bouncycastle/math/ec/ZTauElement;
       8: goto          14
      11: getstatic     #108                // Field org/bouncycastle/math/ec/Tnaf.alpha1:[Lorg/bouncycastle/math/ec/ZTauElement;
      14: astore        6
      16: iload         5
      18: iconst_4
      19: invokestatic  #125                // Method org/bouncycastle/math/ec/Tnaf.getTw:(BI)Ljava/math/BigInteger;
      22: astore        7
      24: iload         5
      26: aload_2
      27: iconst_4
      28: ldc2_w        #46                 // long 16l
      31: invokestatic  #111                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      34: aload         7
      36: aload         6
      38: invokestatic  #128                // Method org/bouncycastle/math/ec/Tnaf.tauAdicWNaf:(BLorg/bouncycastle/math/ec/ZTauElement;BLjava/math/BigInteger;Ljava/math/BigInteger;[Lorg/bouncycastle/math/ec/ZTauElement;)[B
      41: astore        8
      43: aload_1
      44: aload         8
      46: aload_3
      47: invokestatic  #129                // Method multiplyFromWTnaf:(Lorg/bouncycastle/math/ec/ECPoint$AbstractF2m;[BLorg/bouncycastle/math/ec/PreCompInfo;)Lorg/bouncycastle/math/ec/ECPoint$AbstractF2m;
      50: areturn

  private static org.bouncycastle.math.ec.ECPoint$AbstractF2m multiplyFromWTnaf(org.bouncycastle.math.ec.ECPoint$AbstractF2m, byte[], org.bouncycastle.math.ec.PreCompInfo);
    Code:
       0: aload_0
       1: invokevirtual #120                // Method org/bouncycastle/math/ec/ECPoint$AbstractF2m.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
       4: checkcast     #52                 // class org/bouncycastle/math/ec/ECCurve$AbstractF2m
       7: astore_3
       8: aload_3
       9: invokevirtual #116                // Method org/bouncycastle/math/ec/ECCurve$AbstractF2m.getA:()Lorg/bouncycastle/math/ec/ECFieldElement;
      12: invokevirtual #119                // Method org/bouncycastle/math/ec/ECFieldElement.toBigInteger:()Ljava/math/BigInteger;
      15: invokevirtual #110                // Method java/math/BigInteger.byteValue:()B
      18: istore        4
      20: aload_2
      21: ifnull        31
      24: aload_2
      25: instanceof    #58                 // class org/bouncycastle/math/ec/WTauNafPreCompInfo
      28: ifne          67
      31: aload_0
      32: iload         4
      34: invokestatic  #126                // Method org/bouncycastle/math/ec/Tnaf.getPreComp:(Lorg/bouncycastle/math/ec/ECPoint$AbstractF2m;B)[Lorg/bouncycastle/math/ec/ECPoint$AbstractF2m;
      37: astore        5
      39: new           #58                 // class org/bouncycastle/math/ec/WTauNafPreCompInfo
      42: dup
      43: invokespecial #131                // Method org/bouncycastle/math/ec/WTauNafPreCompInfo."<init>":()V
      46: astore        6
      48: aload         6
      50: aload         5
      52: invokevirtual #133                // Method org/bouncycastle/math/ec/WTauNafPreCompInfo.setPreComp:([Lorg/bouncycastle/math/ec/ECPoint$AbstractF2m;)V
      55: aload_3
      56: aload_0
      57: ldc           #2                  // String bc_wtnaf
      59: aload         6
      61: invokevirtual #118                // Method org/bouncycastle/math/ec/ECCurve$AbstractF2m.setPreCompInfo:(Lorg/bouncycastle/math/ec/ECPoint;Ljava/lang/String;Lorg/bouncycastle/math/ec/PreCompInfo;)V
      64: goto          76
      67: aload_2
      68: checkcast     #58                 // class org/bouncycastle/math/ec/WTauNafPreCompInfo
      71: invokevirtual #132                // Method org/bouncycastle/math/ec/WTauNafPreCompInfo.getPreComp:()[Lorg/bouncycastle/math/ec/ECPoint$AbstractF2m;
      74: astore        5
      76: aload         5
      78: arraylength
      79: anewarray     #55                 // class org/bouncycastle/math/ec/ECPoint$AbstractF2m
      82: astore        6
      84: iconst_0
      85: istore        7
      87: iload         7
      89: aload         5
      91: arraylength
      92: if_icmpge     117
      95: aload         6
      97: iload         7
      99: aload         5
     101: iload         7
     103: aaload
     104: invokevirtual #121                // Method org/bouncycastle/math/ec/ECPoint$AbstractF2m.negate:()Lorg/bouncycastle/math/ec/ECPoint;
     107: checkcast     #55                 // class org/bouncycastle/math/ec/ECPoint$AbstractF2m
     110: aastore
     111: iinc          7, 1
     114: goto          87
     117: aload_0
     118: invokevirtual #120                // Method org/bouncycastle/math/ec/ECPoint$AbstractF2m.getCurve:()Lorg/bouncycastle/math/ec/ECCurve;
     121: invokevirtual #113                // Method org/bouncycastle/math/ec/ECCurve.getInfinity:()Lorg/bouncycastle/math/ec/ECPoint;
     124: checkcast     #55                 // class org/bouncycastle/math/ec/ECPoint$AbstractF2m
     127: astore        7
     129: iconst_0
     130: istore        8
     132: aload_1
     133: arraylength
     134: iconst_1
     135: isub
     136: istore        9
     138: iload         9
     140: iflt          212
     143: iinc          8, 1
     146: aload_1
     147: iload         9
     149: baload
     150: istore        10
     152: iload         10
     154: ifeq          206
     157: aload         7
     159: iload         8
     161: invokevirtual #122                // Method org/bouncycastle/math/ec/ECPoint$AbstractF2m.tauPow:(I)Lorg/bouncycastle/math/ec/ECPoint$AbstractF2m;
     164: astore        7
     166: iconst_0
     167: istore        8
     169: iload         10
     171: ifle          184
     174: aload         5
     176: iload         10
     178: iconst_1
     179: iushr
     180: aaload
     181: goto          192
     184: aload         6
     186: iload         10
     188: ineg
     189: iconst_1
     190: iushr
     191: aaload
     192: astore        11
     194: aload         7
     196: aload         11
     198: invokevirtual #123                // Method org/bouncycastle/math/ec/ECPoint$AbstractF2m.add:(Lorg/bouncycastle/math/ec/ECPoint;)Lorg/bouncycastle/math/ec/ECPoint;
     201: checkcast     #55                 // class org/bouncycastle/math/ec/ECPoint$AbstractF2m
     204: astore        7
     206: iinc          9, -1
     209: goto          138
     212: iload         8
     214: ifle          226
     217: aload         7
     219: iload         8
     221: invokevirtual #122                // Method org/bouncycastle/math/ec/ECPoint$AbstractF2m.tauPow:(I)Lorg/bouncycastle/math/ec/ECPoint$AbstractF2m;
     224: astore        7
     226: aload         7
     228: areturn
}
