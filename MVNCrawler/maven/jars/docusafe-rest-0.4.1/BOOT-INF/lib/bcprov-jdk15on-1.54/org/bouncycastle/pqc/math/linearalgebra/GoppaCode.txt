public final class org.bouncycastle.pqc.math.linearalgebra.GoppaCode {
  private org.bouncycastle.pqc.math.linearalgebra.GoppaCode();
    Code:
       0: aload_0
       1: invokespecial #101                // Method java/lang/Object."<init>":()V
       4: return

  public static org.bouncycastle.pqc.math.linearalgebra.GF2Matrix createCanonicalCheckMatrix(org.bouncycastle.pqc.math.linearalgebra.GF2mField, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM);
    Code:
       0: aload_0
       1: invokevirtual #113                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.getDegree:()I
       4: istore_2
       5: iconst_1
       6: iload_2
       7: ishl
       8: istore_3
       9: aload_1
      10: invokevirtual #119                // Method org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM.getDegree:()I
      13: istore        4
      15: iload         4
      17: iload_3
      18: multianewarray #45,  2            // class "[[I"
      22: astore        5
      24: iload         4
      26: iload_3
      27: multianewarray #45,  2            // class "[[I"
      31: astore        6
      33: iconst_0
      34: istore        7
      36: iload         7
      38: iload_3
      39: if_icmpge     65
      42: aload         6
      44: iconst_0
      45: aaload
      46: iload         7
      48: aload_0
      49: aload_1
      50: iload         7
      52: invokevirtual #121                // Method org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM.evaluateAt:(I)I
      55: invokevirtual #114                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.inverse:(I)I
      58: iastore
      59: iinc          7, 1
      62: goto          36
      65: iconst_1
      66: istore        7
      68: iload         7
      70: iload         4
      72: if_icmpge     120
      75: iconst_0
      76: istore        8
      78: iload         8
      80: iload_3
      81: if_icmpge     114
      84: aload         6
      86: iload         7
      88: aaload
      89: iload         8
      91: aload_0
      92: aload         6
      94: iload         7
      96: iconst_1
      97: isub
      98: aaload
      99: iload         8
     101: iaload
     102: iload         8
     104: invokevirtual #116                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.mult:(II)I
     107: iastore
     108: iinc          8, 1
     111: goto          78
     114: iinc          7, 1
     117: goto          68
     120: iconst_0
     121: istore        7
     123: iload         7
     125: iload         4
     127: if_icmpge     211
     130: iconst_0
     131: istore        8
     133: iload         8
     135: iload_3
     136: if_icmpge     205
     139: iconst_0
     140: istore        9
     142: iload         9
     144: iload         7
     146: if_icmpgt     199
     149: aload         5
     151: iload         7
     153: aaload
     154: iload         8
     156: aload_0
     157: aload         5
     159: iload         7
     161: aaload
     162: iload         8
     164: iaload
     165: aload_0
     166: aload         6
     168: iload         9
     170: aaload
     171: iload         8
     173: iaload
     174: aload_1
     175: iload         4
     177: iload         9
     179: iadd
     180: iload         7
     182: isub
     183: invokevirtual #122                // Method org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM.getCoefficient:(I)I
     186: invokevirtual #116                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.mult:(II)I
     189: invokevirtual #115                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.add:(II)I
     192: iastore
     193: iinc          9, 1
     196: goto          142
     199: iinc          8, 1
     202: goto          133
     205: iinc          7, 1
     208: goto          123
     211: iload         4
     213: iload_2
     214: imul
     215: iload_3
     216: bipush        31
     218: iadd
     219: iconst_5
     220: iushr
     221: multianewarray #45,  2            // class "[[I"
     225: astore        7
     227: iconst_0
     228: istore        8
     230: iload         8
     232: iload_3
     233: if_icmpge     338
     236: iload         8
     238: iconst_5
     239: iushr
     240: istore        9
     242: iconst_1
     243: iload         8
     245: bipush        31
     247: iand
     248: ishl
     249: istore        10
     251: iconst_0
     252: istore        11
     254: iload         11
     256: iload         4
     258: if_icmpge     332
     261: aload         5
     263: iload         11
     265: aaload
     266: iload         8
     268: iaload
     269: istore        12
     271: iconst_0
     272: istore        13
     274: iload         13
     276: iload_2
     277: if_icmpge     326
     280: iload         12
     282: iload         13
     284: iushr
     285: iconst_1
     286: iand
     287: istore        14
     289: iload         14
     291: ifeq          320
     294: iload         11
     296: iconst_1
     297: iadd
     298: iload_2
     299: imul
     300: iload         13
     302: isub
     303: iconst_1
     304: isub
     305: istore        15
     307: aload         7
     309: iload         15
     311: aaload
     312: iload         9
     314: dup2
     315: iaload
     316: iload         10
     318: ixor
     319: iastore
     320: iinc          13, 1
     323: goto          274
     326: iinc          11, 1
     329: goto          254
     332: iinc          8, 1
     335: goto          230
     338: new           #48                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
     341: dup
     342: iload_3
     343: aload         7
     345: invokespecial #103                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Matrix."<init>":(I[[I)V
     348: areturn

  public static org.bouncycastle.pqc.math.linearalgebra.GoppaCode$MaMaPe computeSystematicForm(org.bouncycastle.pqc.math.linearalgebra.GF2Matrix, java.security.SecureRandom);
    Code:
       0: aload_0
       1: invokevirtual #102                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Matrix.getNumColumns:()I
       4: istore_2
       5: aconst_null
       6: astore        5
       8: iconst_0
       9: istore        7
      11: new           #54                 // class org/bouncycastle/pqc/math/linearalgebra/Permutation
      14: dup
      15: iload_2
      16: aload_1
      17: invokespecial #118                // Method org/bouncycastle/pqc/math/linearalgebra/Permutation."<init>":(ILjava/security/SecureRandom;)V
      20: astore        6
      22: aload_0
      23: aload         6
      25: invokevirtual #108                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Matrix.rightMultiply:(Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;)Lorg/bouncycastle/pqc/math/linearalgebra/Matrix;
      28: checkcast     #48                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
      31: astore_3
      32: aload_3
      33: invokevirtual #104                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Matrix.getLeftSubMatrix:()Lorg/bouncycastle/pqc/math/linearalgebra/GF2Matrix;
      36: astore        4
      38: iconst_1
      39: istore        7
      41: aload         4
      43: invokevirtual #106                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Matrix.computeInverse:()Lorg/bouncycastle/pqc/math/linearalgebra/Matrix;
      46: checkcast     #48                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
      49: astore        5
      51: goto          59
      54: astore        8
      56: iconst_0
      57: istore        7
      59: iload         7
      61: ifeq          11
      64: aload         5
      66: aload_3
      67: invokevirtual #107                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Matrix.rightMultiply:(Lorg/bouncycastle/pqc/math/linearalgebra/Matrix;)Lorg/bouncycastle/pqc/math/linearalgebra/Matrix;
      70: checkcast     #48                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Matrix
      73: astore        8
      75: aload         8
      77: invokevirtual #105                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Matrix.getRightSubMatrix:()Lorg/bouncycastle/pqc/math/linearalgebra/GF2Matrix;
      80: astore        9
      82: new           #52                 // class org/bouncycastle/pqc/math/linearalgebra/GoppaCode$MaMaPe
      85: dup
      86: aload         4
      88: aload         9
      90: aload         6
      92: invokespecial #117                // Method org/bouncycastle/pqc/math/linearalgebra/GoppaCode$MaMaPe."<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2Matrix;Lorg/bouncycastle/pqc/math/linearalgebra/GF2Matrix;Lorg/bouncycastle/pqc/math/linearalgebra/Permutation;)V
      95: areturn
    Exception table:
       from    to  target type
          38    51    54   Class java/lang/ArithmeticException

  public static org.bouncycastle.pqc.math.linearalgebra.GF2Vector syndromeDecode(org.bouncycastle.pqc.math.linearalgebra.GF2Vector, org.bouncycastle.pqc.math.linearalgebra.GF2mField, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM, org.bouncycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM[]);
    Code:
       0: iconst_1
       1: aload_1
       2: invokevirtual #113                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.getDegree:()I
       5: ishl
       6: istore        4
       8: new           #49                 // class org/bouncycastle/pqc/math/linearalgebra/GF2Vector
      11: dup
      12: iload         4
      14: invokespecial #110                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector."<init>":(I)V
      17: astore        5
      19: aload_0
      20: invokevirtual #109                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector.isZero:()Z
      23: ifne          176
      26: new           #55                 // class org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM
      29: dup
      30: aload_0
      31: aload_1
      32: invokevirtual #112                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector.toExtensionFieldVector:(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mField;)Lorg/bouncycastle/pqc/math/linearalgebra/GF2mVector;
      35: invokespecial #123                // Method org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM."<init>":(Lorg/bouncycastle/pqc/math/linearalgebra/GF2mVector;)V
      38: astore        6
      40: aload         6
      42: aload_2
      43: invokevirtual #128                // Method org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM.modInverse:(Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;)Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;
      46: astore        7
      48: aload         7
      50: iconst_1
      51: invokevirtual #124                // Method org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM.addMonomial:(I)Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;
      54: astore        8
      56: aload         8
      58: aload_3
      59: invokevirtual #131                // Method org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM.modSquareRootMatrix:([Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;)Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;
      62: astore        8
      64: aload         8
      66: aload_2
      67: invokevirtual #130                // Method org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM.modPolynomialToFracton:(Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;)[Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;
      70: astore        9
      72: aload         9
      74: iconst_0
      75: aaload
      76: aload         9
      78: iconst_0
      79: aaload
      80: invokevirtual #129                // Method org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM.multiply:(Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;)Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;
      83: astore        10
      85: aload         9
      87: iconst_1
      88: aaload
      89: aload         9
      91: iconst_1
      92: aaload
      93: invokevirtual #129                // Method org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM.multiply:(Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;)Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;
      96: astore        11
      98: aload         11
     100: iconst_1
     101: invokevirtual #126                // Method org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM.multWithMonomial:(I)Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;
     104: astore        12
     106: aload         10
     108: aload         12
     110: invokevirtual #127                // Method org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM.add:(Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;)Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;
     113: astore        13
     115: aload         13
     117: invokevirtual #120                // Method org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM.getHeadCoefficient:()I
     120: istore        14
     122: aload_1
     123: iload         14
     125: invokevirtual #114                // Method org/bouncycastle/pqc/math/linearalgebra/GF2mField.inverse:(I)I
     128: istore        15
     130: aload         13
     132: iload         15
     134: invokevirtual #125                // Method org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM.multWithElement:(I)Lorg/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;
     137: astore        16
     139: iconst_0
     140: istore        17
     142: iload         17
     144: iload         4
     146: if_icmpge     176
     149: aload         16
     151: iload         17
     153: invokevirtual #121                // Method org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM.evaluateAt:(I)I
     156: istore        18
     158: iload         18
     160: ifne          170
     163: aload         5
     165: iload         17
     167: invokevirtual #111                // Method org/bouncycastle/pqc/math/linearalgebra/GF2Vector.setBit:(I)V
     170: iinc          17, 1
     173: goto          142
     176: aload         5
     178: areturn
}
