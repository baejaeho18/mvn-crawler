public class org.bouncycastle.crypto.params.SkeinParameters implements org.bouncycastle.crypto.CipherParameters {
  public static final int PARAM_TYPE_KEY;

  public static final int PARAM_TYPE_CONFIG;

  public static final int PARAM_TYPE_PERSONALISATION;

  public static final int PARAM_TYPE_PUBLIC_KEY;

  public static final int PARAM_TYPE_KEY_IDENTIFIER;

  public static final int PARAM_TYPE_NONCE;

  public static final int PARAM_TYPE_MESSAGE;

  public static final int PARAM_TYPE_OUTPUT;

  private java.util.Hashtable parameters;

  public org.bouncycastle.crypto.params.SkeinParameters();
    Code:
       0: aload_0
       1: new           #41                 // class java/util/Hashtable
       4: dup
       5: invokespecial #61                 // Method java/util/Hashtable."<init>":()V
       8: invokespecial #63                 // Method "<init>":(Ljava/util/Hashtable;)V
      11: return

  private org.bouncycastle.crypto.params.SkeinParameters(java.util.Hashtable);
    Code:
       0: aload_0
       1: invokespecial #60                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #59                 // Field parameters:Ljava/util/Hashtable;
       9: return

  public java.util.Hashtable getParameters();
    Code:
       0: aload_0
       1: getfield      #59                 // Field parameters:Ljava/util/Hashtable;
       4: areturn

  public byte[] getKey();
    Code:
       0: aload_0
       1: getfield      #59                 // Field parameters:Ljava/util/Hashtable;
       4: iconst_0
       5: invokestatic  #64                 // Method org/bouncycastle/util/Integers.valueOf:(I)Ljava/lang/Integer;
       8: invokevirtual #62                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #39                 // class "[B"
      14: checkcast     #39                 // class "[B"
      17: areturn

  public byte[] getPersonalisation();
    Code:
       0: aload_0
       1: getfield      #59                 // Field parameters:Ljava/util/Hashtable;
       4: bipush        8
       6: invokestatic  #64                 // Method org/bouncycastle/util/Integers.valueOf:(I)Ljava/lang/Integer;
       9: invokevirtual #62                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #39                 // class "[B"
      15: checkcast     #39                 // class "[B"
      18: areturn

  public byte[] getPublicKey();
    Code:
       0: aload_0
       1: getfield      #59                 // Field parameters:Ljava/util/Hashtable;
       4: bipush        12
       6: invokestatic  #64                 // Method org/bouncycastle/util/Integers.valueOf:(I)Ljava/lang/Integer;
       9: invokevirtual #62                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #39                 // class "[B"
      15: checkcast     #39                 // class "[B"
      18: areturn

  public byte[] getKeyIdentifier();
    Code:
       0: aload_0
       1: getfield      #59                 // Field parameters:Ljava/util/Hashtable;
       4: bipush        16
       6: invokestatic  #64                 // Method org/bouncycastle/util/Integers.valueOf:(I)Ljava/lang/Integer;
       9: invokevirtual #62                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #39                 // class "[B"
      15: checkcast     #39                 // class "[B"
      18: areturn

  public byte[] getNonce();
    Code:
       0: aload_0
       1: getfield      #59                 // Field parameters:Ljava/util/Hashtable;
       4: bipush        20
       6: invokestatic  #64                 // Method org/bouncycastle/util/Integers.valueOf:(I)Ljava/lang/Integer;
       9: invokevirtual #62                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #39                 // class "[B"
      15: checkcast     #39                 // class "[B"
      18: areturn

  static java.util.Hashtable access$000(org.bouncycastle.crypto.params.SkeinParameters);
    Code:
       0: aload_0
       1: getfield      #59                 // Field parameters:Ljava/util/Hashtable;
       4: areturn

  org.bouncycastle.crypto.params.SkeinParameters(java.util.Hashtable, org.bouncycastle.crypto.params.SkeinParameters$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #63                 // Method "<init>":(Ljava/util/Hashtable;)V
       5: return
}
