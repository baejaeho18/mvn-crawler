Compiled from "Http2Connection.java"
public final class okhttp3.internal.http2.Http2Connection implements java.io.Closeable {
  static final java.util.concurrent.ExecutorService executor;

  final boolean client;

  final okhttp3.internal.http2.Http2Connection$Listener listener;

  final java.util.Map<java.lang.Integer, okhttp3.internal.http2.Http2Stream> streams;

  final java.lang.String hostname;

  int lastGoodStreamId;

  int nextStreamId;

  boolean shutdown;

  private final java.util.concurrent.ExecutorService pushExecutor;

  private java.util.Map<java.lang.Integer, okhttp3.internal.http2.Ping> pings;

  final okhttp3.internal.http2.PushObserver pushObserver;

  private int nextPingId;

  long unacknowledgedBytesRead;

  long bytesLeftInWriteWindow;

  okhttp3.internal.http2.Settings okHttpSettings;

  private static final int OKHTTP_CLIENT_WINDOW_SIZE;

  final okhttp3.internal.http2.Settings peerSettings;

  boolean receivedInitialPeerSettings;

  final java.net.Socket socket;

  final okhttp3.internal.http2.Http2Writer writer;

  final okhttp3.internal.http2.Http2Connection$ReaderRunnable readerRunnable;

  final java.util.Set<java.lang.Integer> currentPushRequests;

  static final boolean $assertionsDisabled;

  okhttp3.internal.http2.Http2Connection(okhttp3.internal.http2.Http2Connection$Builder);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #4                  // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #5                  // Field streams:Ljava/util/Map;
      15: aload_0
      16: lconst_0
      17: putfield      #6                  // Field unacknowledgedBytesRead:J
      20: aload_0
      21: new           #1                  // class okhttp3/internal/http2/Settings
      24: dup
      25: invokespecial #7                  // Method okhttp3/internal/http2/Settings."<init>":()V
      28: putfield      #8                  // Field okHttpSettings:Lokhttp3/internal/http2/Settings;
      31: aload_0
      32: new           #1                  // class okhttp3/internal/http2/Settings
      35: dup
      36: invokespecial #7                  // Method okhttp3/internal/http2/Settings."<init>":()V
      39: putfield      #9                  // Field peerSettings:Lokhttp3/internal/http2/Settings;
      42: aload_0
      43: iconst_0
      44: putfield      #10                 // Field receivedInitialPeerSettings:Z
      47: aload_0
      48: new           #11                 // class java/util/LinkedHashSet
      51: dup
      52: invokespecial #12                 // Method java/util/LinkedHashSet."<init>":()V
      55: putfield      #13                 // Field currentPushRequests:Ljava/util/Set;
      58: aload_0
      59: aload_1
      60: getfield      #14                 // Field okhttp3/internal/http2/Http2Connection$Builder.pushObserver:Lokhttp3/internal/http2/PushObserver;
      63: putfield      #15                 // Field pushObserver:Lokhttp3/internal/http2/PushObserver;
      66: aload_0
      67: aload_1
      68: getfield      #16                 // Field okhttp3/internal/http2/Http2Connection$Builder.client:Z
      71: putfield      #17                 // Field client:Z
      74: aload_0
      75: aload_1
      76: getfield      #18                 // Field okhttp3/internal/http2/Http2Connection$Builder.listener:Lokhttp3/internal/http2/Http2Connection$Listener;
      79: putfield      #19                 // Field listener:Lokhttp3/internal/http2/Http2Connection$Listener;
      82: aload_0
      83: aload_1
      84: getfield      #16                 // Field okhttp3/internal/http2/Http2Connection$Builder.client:Z
      87: ifeq          94
      90: iconst_1
      91: goto          95
      94: iconst_2
      95: putfield      #20                 // Field nextStreamId:I
      98: aload_1
      99: getfield      #16                 // Field okhttp3/internal/http2/Http2Connection$Builder.client:Z
     102: ifeq          115
     105: aload_0
     106: dup
     107: getfield      #20                 // Field nextStreamId:I
     110: iconst_2
     111: iadd
     112: putfield      #20                 // Field nextStreamId:I
     115: aload_0
     116: aload_1
     117: getfield      #16                 // Field okhttp3/internal/http2/Http2Connection$Builder.client:Z
     120: ifeq          127
     123: iconst_1
     124: goto          128
     127: iconst_2
     128: putfield      #21                 // Field nextPingId:I
     131: aload_1
     132: getfield      #16                 // Field okhttp3/internal/http2/Http2Connection$Builder.client:Z
     135: ifeq          150
     138: aload_0
     139: getfield      #8                  // Field okHttpSettings:Lokhttp3/internal/http2/Settings;
     142: bipush        7
     144: ldc           #23                 // int 16777216
     146: invokevirtual #24                 // Method okhttp3/internal/http2/Settings.set:(II)Lokhttp3/internal/http2/Settings;
     149: pop
     150: aload_0
     151: aload_1
     152: getfield      #25                 // Field okhttp3/internal/http2/Http2Connection$Builder.hostname:Ljava/lang/String;
     155: putfield      #26                 // Field hostname:Ljava/lang/String;
     158: aload_0
     159: new           #27                 // class java/util/concurrent/ThreadPoolExecutor
     162: dup
     163: iconst_0
     164: iconst_1
     165: ldc2_w        #28                 // long 60l
     168: getstatic     #30                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
     171: new           #31                 // class java/util/concurrent/LinkedBlockingQueue
     174: dup
     175: invokespecial #32                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
     178: ldc           #33                 // String OkHttp %s Push Observer
     180: iconst_1
     181: anewarray     #34                 // class java/lang/Object
     184: dup
     185: iconst_0
     186: aload_0
     187: getfield      #26                 // Field hostname:Ljava/lang/String;
     190: aastore
     191: invokestatic  #35                 // Method okhttp3/internal/Util.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     194: iconst_1
     195: invokestatic  #36                 // Method okhttp3/internal/Util.threadFactory:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;
     198: invokespecial #37                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
     201: putfield      #38                 // Field pushExecutor:Ljava/util/concurrent/ExecutorService;
     204: aload_0
     205: getfield      #9                  // Field peerSettings:Lokhttp3/internal/http2/Settings;
     208: bipush        7
     210: ldc           #39                 // int 65535
     212: invokevirtual #24                 // Method okhttp3/internal/http2/Settings.set:(II)Lokhttp3/internal/http2/Settings;
     215: pop
     216: aload_0
     217: getfield      #9                  // Field peerSettings:Lokhttp3/internal/http2/Settings;
     220: iconst_5
     221: sipush        16384
     224: invokevirtual #24                 // Method okhttp3/internal/http2/Settings.set:(II)Lokhttp3/internal/http2/Settings;
     227: pop
     228: aload_0
     229: aload_0
     230: getfield      #9                  // Field peerSettings:Lokhttp3/internal/http2/Settings;
     233: invokevirtual #41                 // Method okhttp3/internal/http2/Settings.getInitialWindowSize:()I
     236: i2l
     237: putfield      #42                 // Field bytesLeftInWriteWindow:J
     240: aload_0
     241: aload_1
     242: getfield      #43                 // Field okhttp3/internal/http2/Http2Connection$Builder.socket:Ljava/net/Socket;
     245: putfield      #44                 // Field socket:Ljava/net/Socket;
     248: aload_0
     249: new           #45                 // class okhttp3/internal/http2/Http2Writer
     252: dup
     253: aload_1
     254: getfield      #46                 // Field okhttp3/internal/http2/Http2Connection$Builder.sink:Lokio/BufferedSink;
     257: aload_0
     258: getfield      #17                 // Field client:Z
     261: invokespecial #47                 // Method okhttp3/internal/http2/Http2Writer."<init>":(Lokio/BufferedSink;Z)V
     264: putfield      #48                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
     267: aload_0
     268: new           #49                 // class okhttp3/internal/http2/Http2Connection$ReaderRunnable
     271: dup
     272: aload_0
     273: new           #50                 // class okhttp3/internal/http2/Http2Reader
     276: dup
     277: aload_1
     278: getfield      #51                 // Field okhttp3/internal/http2/Http2Connection$Builder.source:Lokio/BufferedSource;
     281: aload_0
     282: getfield      #17                 // Field client:Z
     285: invokespecial #52                 // Method okhttp3/internal/http2/Http2Reader."<init>":(Lokio/BufferedSource;Z)V
     288: invokespecial #53                 // Method okhttp3/internal/http2/Http2Connection$ReaderRunnable."<init>":(Lokhttp3/internal/http2/Http2Connection;Lokhttp3/internal/http2/Http2Reader;)V
     291: putfield      #54                 // Field readerRunnable:Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;
     294: return

  public okhttp3.Protocol getProtocol();
    Code:
       0: getstatic     #55                 // Field okhttp3/Protocol.HTTP_2:Lokhttp3/Protocol;
       3: areturn

  public synchronized int openStreamCount();
    Code:
       0: aload_0
       1: getfield      #5                  // Field streams:Ljava/util/Map;
       4: invokeinterface #56,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  synchronized okhttp3.internal.http2.Http2Stream getStream(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field streams:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #57                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #58,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #59                 // class okhttp3/internal/http2/Http2Stream
      16: areturn

  synchronized okhttp3.internal.http2.Http2Stream removeStream(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field streams:Ljava/util/Map;
       4: iload_1
       5: invokestatic  #57                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokeinterface #60,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #59                 // class okhttp3/internal/http2/Http2Stream
      16: astore_2
      17: aload_0
      18: invokevirtual #61                 // Method java/lang/Object.notifyAll:()V
      21: aload_2
      22: areturn

  public synchronized int maxConcurrentStreams();
    Code:
       0: aload_0
       1: getfield      #9                  // Field peerSettings:Lokhttp3/internal/http2/Settings;
       4: ldc           #63                 // int 2147483647
       6: invokevirtual #64                 // Method okhttp3/internal/http2/Settings.getMaxConcurrentStreams:(I)I
       9: ireturn

  public okhttp3.internal.http2.Http2Stream pushStream(int, java.util.List<okhttp3.internal.http2.Header>, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field client:Z
       4: ifeq          17
       7: new           #65                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #66                 // String Client cannot push requests.
      13: invokespecial #67                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iload_1
      19: aload_2
      20: iload_3
      21: invokespecial #68                 // Method newStream:(ILjava/util/List;Z)Lokhttp3/internal/http2/Http2Stream;
      24: areturn

  public okhttp3.internal.http2.Http2Stream newStream(java.util.List<okhttp3.internal.http2.Header>, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: iload_2
       4: invokespecial #68                 // Method newStream:(ILjava/util/List;Z)Lokhttp3/internal/http2/Http2Stream;
       7: areturn

  private okhttp3.internal.http2.Http2Stream newStream(int, java.util.List<okhttp3.internal.http2.Header>, boolean) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifne          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: istore        4
      11: iconst_0
      12: istore        5
      14: aload_0
      15: getfield      #48                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
      18: dup
      19: astore        9
      21: monitorenter
      22: aload_0
      23: dup
      24: astore        10
      26: monitorenter
      27: aload_0
      28: getfield      #69                 // Field shutdown:Z
      31: ifeq          42
      34: new           #70                 // class okhttp3/internal/http2/ConnectionShutdownException
      37: dup
      38: invokespecial #71                 // Method okhttp3/internal/http2/ConnectionShutdownException."<init>":()V
      41: athrow
      42: aload_0
      43: getfield      #20                 // Field nextStreamId:I
      46: istore        8
      48: aload_0
      49: dup
      50: getfield      #20                 // Field nextStreamId:I
      53: iconst_2
      54: iadd
      55: putfield      #20                 // Field nextStreamId:I
      58: new           #59                 // class okhttp3/internal/http2/Http2Stream
      61: dup
      62: iload         8
      64: aload_0
      65: iload         4
      67: iload         5
      69: aload_2
      70: invokespecial #72                 // Method okhttp3/internal/http2/Http2Stream."<init>":(ILokhttp3/internal/http2/Http2Connection;ZZLjava/util/List;)V
      73: astore        7
      75: iload_3
      76: ifeq          98
      79: aload_0
      80: getfield      #42                 // Field bytesLeftInWriteWindow:J
      83: lconst_0
      84: lcmp
      85: ifeq          98
      88: aload         7
      90: getfield      #73                 // Field okhttp3/internal/http2/Http2Stream.bytesLeftInWriteWindow:J
      93: lconst_0
      94: lcmp
      95: ifne          102
      98: iconst_1
      99: goto          103
     102: iconst_0
     103: istore        6
     105: aload         7
     107: invokevirtual #74                 // Method okhttp3/internal/http2/Http2Stream.isOpen:()Z
     110: ifeq          130
     113: aload_0
     114: getfield      #5                  // Field streams:Ljava/util/Map;
     117: iload         8
     119: invokestatic  #57                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     122: aload         7
     124: invokeinterface #75,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     129: pop
     130: aload         10
     132: monitorexit
     133: goto          144
     136: astore        11
     138: aload         10
     140: monitorexit
     141: aload         11
     143: athrow
     144: iload_1
     145: ifne          164
     148: aload_0
     149: getfield      #48                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
     152: iload         4
     154: iload         8
     156: iload_1
     157: aload_2
     158: invokevirtual #76                 // Method okhttp3/internal/http2/Http2Writer.synStream:(ZIILjava/util/List;)V
     161: goto          192
     164: aload_0
     165: getfield      #17                 // Field client:Z
     168: ifeq          181
     171: new           #77                 // class java/lang/IllegalArgumentException
     174: dup
     175: ldc           #78                 // String client streams shouldn\'t have associated stream IDs
     177: invokespecial #79                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     180: athrow
     181: aload_0
     182: getfield      #48                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
     185: iload_1
     186: iload         8
     188: aload_2
     189: invokevirtual #80                 // Method okhttp3/internal/http2/Http2Writer.pushPromise:(IILjava/util/List;)V
     192: aload         9
     194: monitorexit
     195: goto          206
     198: astore        12
     200: aload         9
     202: monitorexit
     203: aload         12
     205: athrow
     206: iload         6
     208: ifeq          218
     211: aload_0
     212: getfield      #48                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
     215: invokevirtual #81                 // Method okhttp3/internal/http2/Http2Writer.flush:()V
     218: aload         7
     220: areturn
    Exception table:
       from    to  target type
          27   133   136   any
         136   141   136   any
          22   195   198   any
         198   203   198   any

  void writeSynReply(int, boolean, java.util.List<okhttp3.internal.http2.Header>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #48                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
       4: iload_2
       5: iload_1
       6: aload_3
       7: invokevirtual #82                 // Method okhttp3/internal/http2/Http2Writer.synReply:(ZILjava/util/List;)V
      10: return

  public void writeData(int, boolean, okio.Buffer, long) throws java.io.IOException;
    Code:
       0: lload         4
       2: lconst_0
       3: lcmp
       4: ifne          19
       7: aload_0
       8: getfield      #48                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
      11: iload_2
      12: iload_1
      13: aload_3
      14: iconst_0
      15: invokevirtual #83                 // Method okhttp3/internal/http2/Http2Writer.data:(ZILokio/Buffer;I)V
      18: return
      19: lload         4
      21: lconst_0
      22: lcmp
      23: ifle          176
      26: aload_0
      27: dup
      28: astore        7
      30: monitorenter
      31: aload_0
      32: getfield      #42                 // Field bytesLeftInWriteWindow:J
      35: lconst_0
      36: lcmp
      37: ifgt          73
      40: aload_0
      41: getfield      #5                  // Field streams:Ljava/util/Map;
      44: iload_1
      45: invokestatic  #57                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      48: invokeinterface #84,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      53: ifne          66
      56: new           #85                 // class java/io/IOException
      59: dup
      60: ldc           #86                 // String stream closed
      62: invokespecial #87                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aload_0
      67: invokevirtual #88                 // Method java/lang/Object.wait:()V
      70: goto          31
      73: goto          86
      76: astore        8
      78: new           #90                 // class java/io/InterruptedIOException
      81: dup
      82: invokespecial #91                 // Method java/io/InterruptedIOException."<init>":()V
      85: athrow
      86: lload         4
      88: aload_0
      89: getfield      #42                 // Field bytesLeftInWriteWindow:J
      92: invokestatic  #92                 // Method java/lang/Math.min:(JJ)J
      95: l2i
      96: istore        6
      98: iload         6
     100: aload_0
     101: getfield      #48                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
     104: invokevirtual #93                 // Method okhttp3/internal/http2/Http2Writer.maxDataLength:()I
     107: invokestatic  #94                 // Method java/lang/Math.min:(II)I
     110: istore        6
     112: aload_0
     113: dup
     114: getfield      #42                 // Field bytesLeftInWriteWindow:J
     117: iload         6
     119: i2l
     120: lsub
     121: putfield      #42                 // Field bytesLeftInWriteWindow:J
     124: aload         7
     126: monitorexit
     127: goto          138
     130: astore        9
     132: aload         7
     134: monitorexit
     135: aload         9
     137: athrow
     138: lload         4
     140: iload         6
     142: i2l
     143: lsub
     144: lstore        4
     146: aload_0
     147: getfield      #48                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
     150: iload_2
     151: ifeq          165
     154: lload         4
     156: lconst_0
     157: lcmp
     158: ifne          165
     161: iconst_1
     162: goto          166
     165: iconst_0
     166: iload_1
     167: aload_3
     168: iload         6
     170: invokevirtual #83                 // Method okhttp3/internal/http2/Http2Writer.data:(ZILokio/Buffer;I)V
     173: goto          19
     176: return
    Exception table:
       from    to  target type
          31    73    76   Class java/lang/InterruptedException
          31   127   130   any
         130   135   130   any

  void addBytesToWriteWindow(long);
    Code:
       0: aload_0
       1: dup
       2: getfield      #42                 // Field bytesLeftInWriteWindow:J
       5: lload_1
       6: ladd
       7: putfield      #42                 // Field bytesLeftInWriteWindow:J
      10: lload_1
      11: lconst_0
      12: lcmp
      13: ifle          20
      16: aload_0
      17: invokevirtual #61                 // Method java/lang/Object.notifyAll:()V
      20: return

  void writeSynResetLater(int, okhttp3.internal.http2.ErrorCode);
    Code:
       0: getstatic     #95                 // Field executor:Ljava/util/concurrent/ExecutorService;
       3: new           #96                 // class okhttp3/internal/http2/Http2Connection$1
       6: dup
       7: aload_0
       8: ldc           #97                 // String OkHttp %s stream %d
      10: iconst_2
      11: anewarray     #34                 // class java/lang/Object
      14: dup
      15: iconst_0
      16: aload_0
      17: getfield      #26                 // Field hostname:Ljava/lang/String;
      20: aastore
      21: dup
      22: iconst_1
      23: iload_1
      24: invokestatic  #57                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: aastore
      28: iload_1
      29: aload_2
      30: invokespecial #98                 // Method okhttp3/internal/http2/Http2Connection$1."<init>":(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ILokhttp3/internal/http2/ErrorCode;)V
      33: invokeinterface #99,  2           // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
      38: return

  void writeSynReset(int, okhttp3.internal.http2.ErrorCode) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #48                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
       4: iload_1
       5: aload_2
       6: invokevirtual #100                // Method okhttp3/internal/http2/Http2Writer.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V
       9: return

  void writeWindowUpdateLater(int, long);
    Code:
       0: getstatic     #95                 // Field executor:Ljava/util/concurrent/ExecutorService;
       3: new           #101                // class okhttp3/internal/http2/Http2Connection$2
       6: dup
       7: aload_0
       8: ldc           #102                // String OkHttp Window Update %s stream %d
      10: iconst_2
      11: anewarray     #34                 // class java/lang/Object
      14: dup
      15: iconst_0
      16: aload_0
      17: getfield      #26                 // Field hostname:Ljava/lang/String;
      20: aastore
      21: dup
      22: iconst_1
      23: iload_1
      24: invokestatic  #57                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: aastore
      28: iload_1
      29: lload_2
      30: invokespecial #103                // Method okhttp3/internal/http2/Http2Connection$2."<init>":(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;IJ)V
      33: invokeinterface #99,  2           // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
      38: return

  public okhttp3.internal.http2.Ping ping() throws java.io.IOException;
    Code:
       0: new           #104                // class okhttp3/internal/http2/Ping
       3: dup
       4: invokespecial #105                // Method okhttp3/internal/http2/Ping."<init>":()V
       7: astore_1
       8: aload_0
       9: dup
      10: astore_3
      11: monitorenter
      12: aload_0
      13: getfield      #69                 // Field shutdown:Z
      16: ifeq          27
      19: new           #70                 // class okhttp3/internal/http2/ConnectionShutdownException
      22: dup
      23: invokespecial #71                 // Method okhttp3/internal/http2/ConnectionShutdownException."<init>":()V
      26: athrow
      27: aload_0
      28: getfield      #21                 // Field nextPingId:I
      31: istore_2
      32: aload_0
      33: dup
      34: getfield      #21                 // Field nextPingId:I
      37: iconst_2
      38: iadd
      39: putfield      #21                 // Field nextPingId:I
      42: aload_0
      43: getfield      #106                // Field pings:Ljava/util/Map;
      46: ifnonnull     60
      49: aload_0
      50: new           #3                  // class java/util/LinkedHashMap
      53: dup
      54: invokespecial #4                  // Method java/util/LinkedHashMap."<init>":()V
      57: putfield      #106                // Field pings:Ljava/util/Map;
      60: aload_0
      61: getfield      #106                // Field pings:Ljava/util/Map;
      64: iload_2
      65: invokestatic  #57                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      68: aload_1
      69: invokeinterface #75,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      74: pop
      75: aload_3
      76: monitorexit
      77: goto          87
      80: astore        4
      82: aload_3
      83: monitorexit
      84: aload         4
      86: athrow
      87: aload_0
      88: iconst_0
      89: iload_2
      90: ldc           #107                // int 1330343787
      92: aload_1
      93: invokevirtual #108                // Method writePing:(ZIILokhttp3/internal/http2/Ping;)V
      96: aload_1
      97: areturn
    Exception table:
       from    to  target type
          12    77    80   any
          80    84    80   any

  void writePingLater(boolean, int, int, okhttp3.internal.http2.Ping);
    Code:
       0: getstatic     #95                 // Field executor:Ljava/util/concurrent/ExecutorService;
       3: new           #109                // class okhttp3/internal/http2/Http2Connection$3
       6: dup
       7: aload_0
       8: ldc           #110                // String OkHttp %s ping %08x%08x
      10: iconst_3
      11: anewarray     #34                 // class java/lang/Object
      14: dup
      15: iconst_0
      16: aload_0
      17: getfield      #26                 // Field hostname:Ljava/lang/String;
      20: aastore
      21: dup
      22: iconst_1
      23: iload_2
      24: invokestatic  #57                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: aastore
      28: dup
      29: iconst_2
      30: iload_3
      31: invokestatic  #57                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: aastore
      35: iload_1
      36: iload_2
      37: iload_3
      38: aload         4
      40: invokespecial #111                // Method okhttp3/internal/http2/Http2Connection$3."<init>":(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ZIILokhttp3/internal/http2/Ping;)V
      43: invokeinterface #99,  2           // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
      48: return

  void writePing(boolean, int, int, okhttp3.internal.http2.Ping) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #48                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
       4: dup
       5: astore        5
       7: monitorenter
       8: aload         4
      10: ifnull        18
      13: aload         4
      15: invokevirtual #112                // Method okhttp3/internal/http2/Ping.send:()V
      18: aload_0
      19: getfield      #48                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
      22: iload_1
      23: iload_2
      24: iload_3
      25: invokevirtual #113                // Method okhttp3/internal/http2/Http2Writer.ping:(ZII)V
      28: aload         5
      30: monitorexit
      31: goto          42
      34: astore        6
      36: aload         5
      38: monitorexit
      39: aload         6
      41: athrow
      42: return
    Exception table:
       from    to  target type
           8    31    34   any
          34    39    34   any

  synchronized okhttp3.internal.http2.Ping removePing(int);
    Code:
       0: aload_0
       1: getfield      #106                // Field pings:Ljava/util/Map;
       4: ifnull        26
       7: aload_0
       8: getfield      #106                // Field pings:Ljava/util/Map;
      11: iload_1
      12: invokestatic  #57                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: invokeinterface #60,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #104                // class okhttp3/internal/http2/Ping
      23: goto          27
      26: aconst_null
      27: areturn

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #48                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
       4: invokevirtual #81                 // Method okhttp3/internal/http2/Http2Writer.flush:()V
       7: return

  public void shutdown(okhttp3.internal.http2.ErrorCode) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #48                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: dup
       9: astore        4
      11: monitorenter
      12: aload_0
      13: getfield      #69                 // Field shutdown:Z
      16: ifeq          25
      19: aload         4
      21: monitorexit
      22: aload_2
      23: monitorexit
      24: return
      25: aload_0
      26: iconst_1
      27: putfield      #69                 // Field shutdown:Z
      30: aload_0
      31: getfield      #114                // Field lastGoodStreamId:I
      34: istore_3
      35: aload         4
      37: monitorexit
      38: goto          49
      41: astore        5
      43: aload         4
      45: monitorexit
      46: aload         5
      48: athrow
      49: aload_0
      50: getfield      #48                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
      53: iload_3
      54: aload_1
      55: getstatic     #115                // Field okhttp3/internal/Util.EMPTY_BYTE_ARRAY:[B
      58: invokevirtual #116                // Method okhttp3/internal/http2/Http2Writer.goAway:(ILokhttp3/internal/http2/ErrorCode;[B)V
      61: aload_2
      62: monitorexit
      63: goto          73
      66: astore        6
      68: aload_2
      69: monitorexit
      70: aload         6
      72: athrow
      73: return
    Exception table:
       from    to  target type
          12    22    41   any
          25    38    41   any
          41    46    41   any
           7    24    66   any
          25    63    66   any
          66    70    66   any

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getstatic     #117                // Field okhttp3/internal/http2/ErrorCode.NO_ERROR:Lokhttp3/internal/http2/ErrorCode;
       4: getstatic     #118                // Field okhttp3/internal/http2/ErrorCode.CANCEL:Lokhttp3/internal/http2/ErrorCode;
       7: invokevirtual #119                // Method close:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;)V
      10: return

  void close(okhttp3.internal.http2.ErrorCode, okhttp3.internal.http2.ErrorCode) throws java.io.IOException;
    Code:
       0: getstatic     #120                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #121                // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifeq          21
      13: new           #122                // class java/lang/AssertionError
      16: dup
      17: invokespecial #123                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aconst_null
      22: astore_3
      23: aload_0
      24: aload_1
      25: invokevirtual #124                // Method shutdown:(Lokhttp3/internal/http2/ErrorCode;)V
      28: goto          36
      31: astore        4
      33: aload         4
      35: astore_3
      36: aconst_null
      37: astore        4
      39: aconst_null
      40: astore        5
      42: aload_0
      43: dup
      44: astore        6
      46: monitorenter
      47: aload_0
      48: getfield      #5                  // Field streams:Ljava/util/Map;
      51: invokeinterface #125,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
      56: ifne          99
      59: aload_0
      60: getfield      #5                  // Field streams:Ljava/util/Map;
      63: invokeinterface #126,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      68: aload_0
      69: getfield      #5                  // Field streams:Ljava/util/Map;
      72: invokeinterface #56,  1           // InterfaceMethod java/util/Map.size:()I
      77: anewarray     #59                 // class okhttp3/internal/http2/Http2Stream
      80: invokeinterface #127,  2          // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      85: checkcast     #128                // class "[Lokhttp3/internal/http2/Http2Stream;"
      88: astore        4
      90: aload_0
      91: getfield      #5                  // Field streams:Ljava/util/Map;
      94: invokeinterface #129,  1          // InterfaceMethod java/util/Map.clear:()V
      99: aload_0
     100: getfield      #106                // Field pings:Ljava/util/Map;
     103: ifnull        142
     106: aload_0
     107: getfield      #106                // Field pings:Ljava/util/Map;
     110: invokeinterface #126,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     115: aload_0
     116: getfield      #106                // Field pings:Ljava/util/Map;
     119: invokeinterface #56,  1           // InterfaceMethod java/util/Map.size:()I
     124: anewarray     #104                // class okhttp3/internal/http2/Ping
     127: invokeinterface #127,  2          // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     132: checkcast     #130                // class "[Lokhttp3/internal/http2/Ping;"
     135: astore        5
     137: aload_0
     138: aconst_null
     139: putfield      #106                // Field pings:Ljava/util/Map;
     142: aload         6
     144: monitorexit
     145: goto          156
     148: astore        7
     150: aload         6
     152: monitorexit
     153: aload         7
     155: athrow
     156: aload         4
     158: ifnull        211
     161: aload         4
     163: astore        6
     165: aload         6
     167: arraylength
     168: istore        7
     170: iconst_0
     171: istore        8
     173: iload         8
     175: iload         7
     177: if_icmpge     211
     180: aload         6
     182: iload         8
     184: aaload
     185: astore        9
     187: aload         9
     189: aload_2
     190: invokevirtual #131                // Method okhttp3/internal/http2/Http2Stream.close:(Lokhttp3/internal/http2/ErrorCode;)V
     193: goto          205
     196: astore        10
     198: aload_3
     199: ifnull        205
     202: aload         10
     204: astore_3
     205: iinc          8, 1
     208: goto          173
     211: aload         5
     213: ifnull        253
     216: aload         5
     218: astore        6
     220: aload         6
     222: arraylength
     223: istore        7
     225: iconst_0
     226: istore        8
     228: iload         8
     230: iload         7
     232: if_icmpge     253
     235: aload         6
     237: iload         8
     239: aaload
     240: astore        9
     242: aload         9
     244: invokevirtual #132                // Method okhttp3/internal/http2/Ping.cancel:()V
     247: iinc          8, 1
     250: goto          228
     253: aload_0
     254: getfield      #48                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
     257: invokevirtual #133                // Method okhttp3/internal/http2/Http2Writer.close:()V
     260: goto          272
     263: astore        6
     265: aload_3
     266: ifnonnull     272
     269: aload         6
     271: astore_3
     272: aload_0
     273: getfield      #44                 // Field socket:Ljava/net/Socket;
     276: invokevirtual #134                // Method java/net/Socket.close:()V
     279: goto          287
     282: astore        6
     284: aload         6
     286: astore_3
     287: aload_3
     288: ifnull        293
     291: aload_3
     292: athrow
     293: return
    Exception table:
       from    to  target type
          23    28    31   Class java/io/IOException
          47   145   148   any
         148   153   148   any
         187   193   196   Class java/io/IOException
         253   260   263   Class java/io/IOException
         272   279   282   Class java/io/IOException

  public void start() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #135                // Method start:(Z)V
       5: return

  void start(boolean) throws java.io.IOException;
    Code:
       0: iload_1
       1: ifeq          49
       4: aload_0
       5: getfield      #48                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
       8: invokevirtual #136                // Method okhttp3/internal/http2/Http2Writer.connectionPreface:()V
      11: aload_0
      12: getfield      #48                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
      15: aload_0
      16: getfield      #8                  // Field okHttpSettings:Lokhttp3/internal/http2/Settings;
      19: invokevirtual #137                // Method okhttp3/internal/http2/Http2Writer.settings:(Lokhttp3/internal/http2/Settings;)V
      22: aload_0
      23: getfield      #8                  // Field okHttpSettings:Lokhttp3/internal/http2/Settings;
      26: invokevirtual #41                 // Method okhttp3/internal/http2/Settings.getInitialWindowSize:()I
      29: istore_2
      30: iload_2
      31: ldc           #39                 // int 65535
      33: if_icmpeq     49
      36: aload_0
      37: getfield      #48                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
      40: iconst_0
      41: iload_2
      42: ldc           #39                 // int 65535
      44: isub
      45: i2l
      46: invokevirtual #138                // Method okhttp3/internal/http2/Http2Writer.windowUpdate:(IJ)V
      49: new           #139                // class java/lang/Thread
      52: dup
      53: aload_0
      54: getfield      #54                 // Field readerRunnable:Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;
      57: invokespecial #140                // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
      60: invokevirtual #141                // Method java/lang/Thread.start:()V
      63: return

  public void setSettings(okhttp3.internal.http2.Settings) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #48                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: dup
       9: astore_3
      10: monitorenter
      11: aload_0
      12: getfield      #69                 // Field shutdown:Z
      15: ifeq          26
      18: new           #70                 // class okhttp3/internal/http2/ConnectionShutdownException
      21: dup
      22: invokespecial #71                 // Method okhttp3/internal/http2/ConnectionShutdownException."<init>":()V
      25: athrow
      26: aload_0
      27: getfield      #8                  // Field okHttpSettings:Lokhttp3/internal/http2/Settings;
      30: aload_1
      31: invokevirtual #142                // Method okhttp3/internal/http2/Settings.merge:(Lokhttp3/internal/http2/Settings;)V
      34: aload_0
      35: getfield      #48                 // Field writer:Lokhttp3/internal/http2/Http2Writer;
      38: aload_1
      39: invokevirtual #137                // Method okhttp3/internal/http2/Http2Writer.settings:(Lokhttp3/internal/http2/Settings;)V
      42: aload_3
      43: monitorexit
      44: goto          54
      47: astore        4
      49: aload_3
      50: monitorexit
      51: aload         4
      53: athrow
      54: aload_2
      55: monitorexit
      56: goto          66
      59: astore        5
      61: aload_2
      62: monitorexit
      63: aload         5
      65: athrow
      66: return
    Exception table:
       from    to  target type
          11    44    47   any
          47    51    47   any
           7    56    59   any
          59    63    59   any

  public synchronized boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #69                 // Field shutdown:Z
       4: ireturn

  boolean pushedStream(int);
    Code:
       0: iload_1
       1: ifeq          14
       4: iload_1
       5: iconst_1
       6: iand
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  void pushRequestLater(int, java.util.List<okhttp3.internal.http2.Header>);
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: getfield      #13                 // Field currentPushRequests:Ljava/util/Set;
       8: iload_1
       9: invokestatic  #57                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      12: invokeinterface #143,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      17: ifeq          31
      20: aload_0
      21: iload_1
      22: getstatic     #144                // Field okhttp3/internal/http2/ErrorCode.PROTOCOL_ERROR:Lokhttp3/internal/http2/ErrorCode;
      25: invokevirtual #145                // Method writeSynResetLater:(ILokhttp3/internal/http2/ErrorCode;)V
      28: aload_3
      29: monitorexit
      30: return
      31: aload_0
      32: getfield      #13                 // Field currentPushRequests:Ljava/util/Set;
      35: iload_1
      36: invokestatic  #57                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      39: invokeinterface #146,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      44: pop
      45: aload_3
      46: monitorexit
      47: goto          57
      50: astore        4
      52: aload_3
      53: monitorexit
      54: aload         4
      56: athrow
      57: aload_0
      58: getfield      #38                 // Field pushExecutor:Ljava/util/concurrent/ExecutorService;
      61: new           #147                // class okhttp3/internal/http2/Http2Connection$4
      64: dup
      65: aload_0
      66: ldc           #148                // String OkHttp %s Push Request[%s]
      68: iconst_2
      69: anewarray     #34                 // class java/lang/Object
      72: dup
      73: iconst_0
      74: aload_0
      75: getfield      #26                 // Field hostname:Ljava/lang/String;
      78: aastore
      79: dup
      80: iconst_1
      81: iload_1
      82: invokestatic  #57                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      85: aastore
      86: iload_1
      87: aload_2
      88: invokespecial #149                // Method okhttp3/internal/http2/Http2Connection$4."<init>":(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;)V
      91: invokeinterface #99,  2           // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
      96: return
    Exception table:
       from    to  target type
           4    30    50   any
          31    47    50   any
          50    54    50   any

  void pushHeadersLater(int, java.util.List<okhttp3.internal.http2.Header>, boolean);
    Code:
       0: aload_0
       1: getfield      #38                 // Field pushExecutor:Ljava/util/concurrent/ExecutorService;
       4: new           #150                // class okhttp3/internal/http2/Http2Connection$5
       7: dup
       8: aload_0
       9: ldc           #151                // String OkHttp %s Push Headers[%s]
      11: iconst_2
      12: anewarray     #34                 // class java/lang/Object
      15: dup
      16: iconst_0
      17: aload_0
      18: getfield      #26                 // Field hostname:Ljava/lang/String;
      21: aastore
      22: dup
      23: iconst_1
      24: iload_1
      25: invokestatic  #57                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: aastore
      29: iload_1
      30: aload_2
      31: iload_3
      32: invokespecial #152                // Method okhttp3/internal/http2/Http2Connection$5."<init>":(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;Z)V
      35: invokeinterface #99,  2           // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
      40: return

  void pushDataLater(int, okio.BufferedSource, int, boolean) throws java.io.IOException;
    Code:
       0: new           #153                // class okio/Buffer
       3: dup
       4: invokespecial #154                // Method okio/Buffer."<init>":()V
       7: astore        5
       9: aload_2
      10: iload_3
      11: i2l
      12: invokeinterface #155,  3          // InterfaceMethod okio/BufferedSource.require:(J)V
      17: aload_2
      18: aload         5
      20: iload_3
      21: i2l
      22: invokeinterface #156,  4          // InterfaceMethod okio/BufferedSource.read:(Lokio/Buffer;J)J
      27: pop2
      28: aload         5
      30: invokevirtual #157                // Method okio/Buffer.size:()J
      33: iload_3
      34: i2l
      35: lcmp
      36: ifeq          74
      39: new           #85                 // class java/io/IOException
      42: dup
      43: new           #158                // class java/lang/StringBuilder
      46: dup
      47: invokespecial #159                // Method java/lang/StringBuilder."<init>":()V
      50: aload         5
      52: invokevirtual #157                // Method okio/Buffer.size:()J
      55: invokevirtual #160                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      58: ldc           #161                // String  !=
      60: invokevirtual #162                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: iload_3
      64: invokevirtual #163                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      67: invokevirtual #164                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #87                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: aload_0
      75: getfield      #38                 // Field pushExecutor:Ljava/util/concurrent/ExecutorService;
      78: new           #165                // class okhttp3/internal/http2/Http2Connection$6
      81: dup
      82: aload_0
      83: ldc           #166                // String OkHttp %s Push Data[%s]
      85: iconst_2
      86: anewarray     #34                 // class java/lang/Object
      89: dup
      90: iconst_0
      91: aload_0
      92: getfield      #26                 // Field hostname:Ljava/lang/String;
      95: aastore
      96: dup
      97: iconst_1
      98: iload_1
      99: invokestatic  #57                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     102: aastore
     103: iload_1
     104: aload         5
     106: iload_3
     107: iload         4
     109: invokespecial #167                // Method okhttp3/internal/http2/Http2Connection$6."<init>":(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ILokio/Buffer;IZ)V
     112: invokeinterface #99,  2           // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
     117: return

  void pushResetLater(int, okhttp3.internal.http2.ErrorCode);
    Code:
       0: aload_0
       1: getfield      #38                 // Field pushExecutor:Ljava/util/concurrent/ExecutorService;
       4: new           #168                // class okhttp3/internal/http2/Http2Connection$7
       7: dup
       8: aload_0
       9: ldc           #169                // String OkHttp %s Push Reset[%s]
      11: iconst_2
      12: anewarray     #34                 // class java/lang/Object
      15: dup
      16: iconst_0
      17: aload_0
      18: getfield      #26                 // Field hostname:Ljava/lang/String;
      21: aastore
      22: dup
      23: iconst_1
      24: iload_1
      25: invokestatic  #57                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: aastore
      29: iload_1
      30: aload_2
      31: invokespecial #170                // Method okhttp3/internal/http2/Http2Connection$7."<init>":(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ILokhttp3/internal/http2/ErrorCode;)V
      34: invokeinterface #99,  2           // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
      39: return

  static {};
    Code:
       0: ldc           #22                 // class okhttp3/internal/http2/Http2Connection
       2: invokevirtual #171                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #120                // Field $assertionsDisabled:Z
      16: new           #27                 // class java/util/concurrent/ThreadPoolExecutor
      19: dup
      20: iconst_0
      21: ldc           #63                 // int 2147483647
      23: ldc2_w        #28                 // long 60l
      26: getstatic     #30                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      29: new           #172                // class java/util/concurrent/SynchronousQueue
      32: dup
      33: invokespecial #173                // Method java/util/concurrent/SynchronousQueue."<init>":()V
      36: ldc           #174                // String OkHttp Http2Connection
      38: iconst_1
      39: invokestatic  #36                 // Method okhttp3/internal/Util.threadFactory:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;
      42: invokespecial #37                 // Method java/util/concurrent/ThreadPoolExecutor."<init>":(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V
      45: putstatic     #95                 // Field executor:Ljava/util/concurrent/ExecutorService;
      48: return
}
