Compiled from "FileOperator.java"
final class okhttp3.internal.cache2.FileOperator {
  private static final int BUFFER_SIZE;

  private final byte[] byteArray;

  private final java.nio.ByteBuffer byteBuffer;

  private final java.nio.channels.FileChannel fileChannel;

  public okhttp3.internal.cache2.FileOperator(java.nio.channels.FileChannel);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        8192
       8: newarray       byte
      10: putfield      #3                  // Field byteArray:[B
      13: aload_0
      14: aload_0
      15: getfield      #3                  // Field byteArray:[B
      18: invokestatic  #4                  // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      21: putfield      #5                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      24: aload_0
      25: aload_1
      26: putfield      #6                  // Field fileChannel:Ljava/nio/channels/FileChannel;
      29: return

  public void write(long, okio.Buffer, long) throws java.io.IOException;
    Code:
       0: lload         4
       2: lconst_0
       3: lcmp
       4: iflt          17
       7: lload         4
       9: aload_3
      10: invokevirtual #7                  // Method okio/Buffer.size:()J
      13: lcmp
      14: ifle          25
      17: new           #8                  // class java/lang/IndexOutOfBoundsException
      20: dup
      21: invokespecial #9                  // Method java/lang/IndexOutOfBoundsException."<init>":()V
      24: athrow
      25: lload         4
      27: lconst_0
      28: lcmp
      29: ifle          130
      32: ldc2_w        #10                 // long 8192l
      35: lload         4
      37: invokestatic  #12                 // Method java/lang/Math.min:(JJ)J
      40: l2i
      41: istore        6
      43: aload_3
      44: aload_0
      45: getfield      #3                  // Field byteArray:[B
      48: iconst_0
      49: iload         6
      51: invokevirtual #13                 // Method okio/Buffer.read:([BII)I
      54: pop
      55: aload_0
      56: getfield      #5                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      59: iload         6
      61: invokevirtual #14                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      64: pop
      65: aload_0
      66: getfield      #6                  // Field fileChannel:Ljava/nio/channels/FileChannel;
      69: aload_0
      70: getfield      #5                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      73: lload_1
      74: invokevirtual #15                 // Method java/nio/channels/FileChannel.write:(Ljava/nio/ByteBuffer;J)I
      77: istore        7
      79: lload_1
      80: iload         7
      82: i2l
      83: ladd
      84: lstore_1
      85: aload_0
      86: getfield      #5                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      89: invokevirtual #16                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      92: ifne          65
      95: lload         4
      97: iload         6
      99: i2l
     100: lsub
     101: lstore        4
     103: aload_0
     104: getfield      #5                  // Field byteBuffer:Ljava/nio/ByteBuffer;
     107: invokevirtual #17                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     110: pop
     111: goto          127
     114: astore        8
     116: aload_0
     117: getfield      #5                  // Field byteBuffer:Ljava/nio/ByteBuffer;
     120: invokevirtual #17                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     123: pop
     124: aload         8
     126: athrow
     127: goto          25
     130: return
    Exception table:
       from    to  target type
          32   103   114   any
         114   116   114   any

  public void read(long, okio.Buffer, long) throws java.io.IOException;
    Code:
       0: lload         4
       2: lconst_0
       3: lcmp
       4: ifge          15
       7: new           #8                  // class java/lang/IndexOutOfBoundsException
      10: dup
      11: invokespecial #9                  // Method java/lang/IndexOutOfBoundsException."<init>":()V
      14: athrow
      15: lload         4
      17: lconst_0
      18: lcmp
      19: ifle          125
      22: aload_0
      23: getfield      #5                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      26: ldc2_w        #10                 // long 8192l
      29: lload         4
      31: invokestatic  #12                 // Method java/lang/Math.min:(JJ)J
      34: l2i
      35: invokevirtual #14                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      38: pop
      39: aload_0
      40: getfield      #6                  // Field fileChannel:Ljava/nio/channels/FileChannel;
      43: aload_0
      44: getfield      #5                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      47: lload_1
      48: invokevirtual #18                 // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;J)I
      51: iconst_m1
      52: if_icmpne     63
      55: new           #19                 // class java/io/EOFException
      58: dup
      59: invokespecial #20                 // Method java/io/EOFException."<init>":()V
      62: athrow
      63: aload_0
      64: getfield      #5                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      67: invokevirtual #21                 // Method java/nio/ByteBuffer.position:()I
      70: istore        6
      72: aload_3
      73: aload_0
      74: getfield      #3                  // Field byteArray:[B
      77: iconst_0
      78: iload         6
      80: invokevirtual #22                 // Method okio/Buffer.write:([BII)Lokio/Buffer;
      83: pop
      84: lload_1
      85: iload         6
      87: i2l
      88: ladd
      89: lstore_1
      90: lload         4
      92: iload         6
      94: i2l
      95: lsub
      96: lstore        4
      98: aload_0
      99: getfield      #5                  // Field byteBuffer:Ljava/nio/ByteBuffer;
     102: invokevirtual #17                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     105: pop
     106: goto          122
     109: astore        7
     111: aload_0
     112: getfield      #5                  // Field byteBuffer:Ljava/nio/ByteBuffer;
     115: invokevirtual #17                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     118: pop
     119: aload         7
     121: athrow
     122: goto          15
     125: return
    Exception table:
       from    to  target type
          22    98   109   any
         109   111   109   any
}
