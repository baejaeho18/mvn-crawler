Compiled from "Http2Stream.java"
final class okhttp3.internal.http2.Http2Stream$FramingSource implements okio.Source {
  private final okio.Buffer receiveBuffer;

  private final okio.Buffer readBuffer;

  private final long maxByteCount;

  boolean closed;

  boolean finished;

  static final boolean $assertionsDisabled;

  final okhttp3.internal.http2.Http2Stream this$0;

  okhttp3.internal.http2.Http2Stream$FramingSource(okhttp3.internal.http2.Http2Stream, long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #3                  // class okio/Buffer
      13: dup
      14: invokespecial #4                  // Method okio/Buffer."<init>":()V
      17: putfield      #5                  // Field receiveBuffer:Lokio/Buffer;
      20: aload_0
      21: new           #3                  // class okio/Buffer
      24: dup
      25: invokespecial #4                  // Method okio/Buffer."<init>":()V
      28: putfield      #6                  // Field readBuffer:Lokio/Buffer;
      31: aload_0
      32: lload_2
      33: putfield      #7                  // Field maxByteCount:J
      36: return

  public long read(okio.Buffer, long) throws java.io.IOException;
    Code:
       0: lload_2
       1: lconst_0
       2: lcmp
       3: ifge          33
       6: new           #8                  // class java/lang/IllegalArgumentException
       9: dup
      10: new           #9                  // class java/lang/StringBuilder
      13: dup
      14: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #11                 // String byteCount < 0:
      19: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: lload_2
      23: invokevirtual #13                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      26: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_0
      34: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      37: dup
      38: astore        6
      40: monitorenter
      41: aload_0
      42: invokespecial #16                 // Method waitUntilReadable:()V
      45: aload_0
      46: invokespecial #17                 // Method checkNotClosed:()V
      49: aload_0
      50: getfield      #6                  // Field readBuffer:Lokio/Buffer;
      53: invokevirtual #18                 // Method okio/Buffer.size:()J
      56: lconst_0
      57: lcmp
      58: ifne          68
      61: ldc2_w        #19                 // long -1l
      64: aload         6
      66: monitorexit
      67: lreturn
      68: aload_0
      69: getfield      #6                  // Field readBuffer:Lokio/Buffer;
      72: aload_1
      73: lload_2
      74: aload_0
      75: getfield      #6                  // Field readBuffer:Lokio/Buffer;
      78: invokevirtual #18                 // Method okio/Buffer.size:()J
      81: invokestatic  #21                 // Method java/lang/Math.min:(JJ)J
      84: invokevirtual #22                 // Method okio/Buffer.read:(Lokio/Buffer;J)J
      87: lstore        4
      89: aload_0
      90: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      93: dup
      94: getfield      #23                 // Field okhttp3/internal/http2/Http2Stream.unacknowledgedBytesRead:J
      97: lload         4
      99: ladd
     100: putfield      #23                 // Field okhttp3/internal/http2/Http2Stream.unacknowledgedBytesRead:J
     103: aload_0
     104: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     107: getfield      #23                 // Field okhttp3/internal/http2/Http2Stream.unacknowledgedBytesRead:J
     110: aload_0
     111: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     114: getfield      #24                 // Field okhttp3/internal/http2/Http2Stream.connection:Lokhttp3/internal/http2/Http2Connection;
     117: getfield      #25                 // Field okhttp3/internal/http2/Http2Connection.okHttpSettings:Lokhttp3/internal/http2/Settings;
     120: invokevirtual #26                 // Method okhttp3/internal/http2/Settings.getInitialWindowSize:()I
     123: iconst_2
     124: idiv
     125: i2l
     126: lcmp
     127: iflt          162
     130: aload_0
     131: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     134: getfield      #24                 // Field okhttp3/internal/http2/Http2Stream.connection:Lokhttp3/internal/http2/Http2Connection;
     137: aload_0
     138: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     141: getfield      #27                 // Field okhttp3/internal/http2/Http2Stream.id:I
     144: aload_0
     145: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     148: getfield      #23                 // Field okhttp3/internal/http2/Http2Stream.unacknowledgedBytesRead:J
     151: invokevirtual #28                 // Method okhttp3/internal/http2/Http2Connection.writeWindowUpdateLater:(IJ)V
     154: aload_0
     155: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     158: lconst_0
     159: putfield      #23                 // Field okhttp3/internal/http2/Http2Stream.unacknowledgedBytesRead:J
     162: aload         6
     164: monitorexit
     165: goto          176
     168: astore        7
     170: aload         6
     172: monitorexit
     173: aload         7
     175: athrow
     176: aload_0
     177: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     180: getfield      #24                 // Field okhttp3/internal/http2/Http2Stream.connection:Lokhttp3/internal/http2/Http2Connection;
     183: dup
     184: astore        6
     186: monitorenter
     187: aload_0
     188: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     191: getfield      #24                 // Field okhttp3/internal/http2/Http2Stream.connection:Lokhttp3/internal/http2/Http2Connection;
     194: dup
     195: getfield      #29                 // Field okhttp3/internal/http2/Http2Connection.unacknowledgedBytesRead:J
     198: lload         4
     200: ladd
     201: putfield      #29                 // Field okhttp3/internal/http2/Http2Connection.unacknowledgedBytesRead:J
     204: aload_0
     205: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     208: getfield      #24                 // Field okhttp3/internal/http2/Http2Stream.connection:Lokhttp3/internal/http2/Http2Connection;
     211: getfield      #29                 // Field okhttp3/internal/http2/Http2Connection.unacknowledgedBytesRead:J
     214: aload_0
     215: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     218: getfield      #24                 // Field okhttp3/internal/http2/Http2Stream.connection:Lokhttp3/internal/http2/Http2Connection;
     221: getfield      #25                 // Field okhttp3/internal/http2/Http2Connection.okHttpSettings:Lokhttp3/internal/http2/Settings;
     224: invokevirtual #26                 // Method okhttp3/internal/http2/Settings.getInitialWindowSize:()I
     227: iconst_2
     228: idiv
     229: i2l
     230: lcmp
     231: iflt          266
     234: aload_0
     235: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     238: getfield      #24                 // Field okhttp3/internal/http2/Http2Stream.connection:Lokhttp3/internal/http2/Http2Connection;
     241: iconst_0
     242: aload_0
     243: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     246: getfield      #24                 // Field okhttp3/internal/http2/Http2Stream.connection:Lokhttp3/internal/http2/Http2Connection;
     249: getfield      #29                 // Field okhttp3/internal/http2/Http2Connection.unacknowledgedBytesRead:J
     252: invokevirtual #28                 // Method okhttp3/internal/http2/Http2Connection.writeWindowUpdateLater:(IJ)V
     255: aload_0
     256: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     259: getfield      #24                 // Field okhttp3/internal/http2/Http2Stream.connection:Lokhttp3/internal/http2/Http2Connection;
     262: lconst_0
     263: putfield      #29                 // Field okhttp3/internal/http2/Http2Connection.unacknowledgedBytesRead:J
     266: aload         6
     268: monitorexit
     269: goto          280
     272: astore        8
     274: aload         6
     276: monitorexit
     277: aload         8
     279: athrow
     280: lload         4
     282: lreturn
    Exception table:
       from    to  target type
          41    67   168   any
          68   165   168   any
         168   173   168   any
         187   269   272   any
         272   277   272   any

  private void waitUntilReadable() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
       4: getfield      #30                 // Field okhttp3/internal/http2/Http2Stream.readTimeout:Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
       7: invokevirtual #31                 // Method okhttp3/internal/http2/Http2Stream$StreamTimeout.enter:()V
      10: aload_0
      11: getfield      #6                  // Field readBuffer:Lokio/Buffer;
      14: invokevirtual #18                 // Method okio/Buffer.size:()J
      17: lconst_0
      18: lcmp
      19: ifne          56
      22: aload_0
      23: getfield      #32                 // Field finished:Z
      26: ifne          56
      29: aload_0
      30: getfield      #33                 // Field closed:Z
      33: ifne          56
      36: aload_0
      37: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      40: getfield      #34                 // Field okhttp3/internal/http2/Http2Stream.errorCode:Lokhttp3/internal/http2/ErrorCode;
      43: ifnonnull     56
      46: aload_0
      47: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      50: invokevirtual #35                 // Method okhttp3/internal/http2/Http2Stream.waitForIo:()V
      53: goto          10
      56: aload_0
      57: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      60: getfield      #30                 // Field okhttp3/internal/http2/Http2Stream.readTimeout:Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
      63: invokevirtual #36                 // Method okhttp3/internal/http2/Http2Stream$StreamTimeout.exitAndThrowIfTimedOut:()V
      66: goto          82
      69: astore_1
      70: aload_0
      71: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      74: getfield      #30                 // Field okhttp3/internal/http2/Http2Stream.readTimeout:Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
      77: invokevirtual #36                 // Method okhttp3/internal/http2/Http2Stream$StreamTimeout.exitAndThrowIfTimedOut:()V
      80: aload_1
      81: athrow
      82: return
    Exception table:
       from    to  target type
          10    56    69   any

  void receive(okio.BufferedSource, long) throws java.io.IOException;
    Code:
       0: getstatic     #37                 // Field $assertionsDisabled:Z
       3: ifne          24
       6: aload_0
       7: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      10: invokestatic  #38                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      13: ifeq          24
      16: new           #39                 // class java/lang/AssertionError
      19: dup
      20: invokespecial #40                 // Method java/lang/AssertionError."<init>":()V
      23: athrow
      24: lload_2
      25: lconst_0
      26: lcmp
      27: ifle          221
      30: aload_0
      31: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      34: dup
      35: astore        6
      37: monitorenter
      38: aload_0
      39: getfield      #32                 // Field finished:Z
      42: istore        4
      44: lload_2
      45: aload_0
      46: getfield      #6                  // Field readBuffer:Lokio/Buffer;
      49: invokevirtual #18                 // Method okio/Buffer.size:()J
      52: ladd
      53: aload_0
      54: getfield      #7                  // Field maxByteCount:J
      57: lcmp
      58: ifle          65
      61: iconst_1
      62: goto          66
      65: iconst_0
      66: istore        5
      68: aload         6
      70: monitorexit
      71: goto          82
      74: astore        7
      76: aload         6
      78: monitorexit
      79: aload         7
      81: athrow
      82: iload         5
      84: ifeq          105
      87: aload_1
      88: lload_2
      89: invokeinterface #41,  3           // InterfaceMethod okio/BufferedSource.skip:(J)V
      94: aload_0
      95: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      98: getstatic     #42                 // Field okhttp3/internal/http2/ErrorCode.FLOW_CONTROL_ERROR:Lokhttp3/internal/http2/ErrorCode;
     101: invokevirtual #43                 // Method okhttp3/internal/http2/Http2Stream.closeLater:(Lokhttp3/internal/http2/ErrorCode;)V
     104: return
     105: iload         4
     107: ifeq          118
     110: aload_1
     111: lload_2
     112: invokeinterface #41,  3           // InterfaceMethod okio/BufferedSource.skip:(J)V
     117: return
     118: aload_1
     119: aload_0
     120: getfield      #5                  // Field receiveBuffer:Lokio/Buffer;
     123: lload_2
     124: invokeinterface #44,  4           // InterfaceMethod okio/BufferedSource.read:(Lokio/Buffer;J)J
     129: lstore        6
     131: lload         6
     133: ldc2_w        #19                 // long -1l
     136: lcmp
     137: ifne          148
     140: new           #45                 // class java/io/EOFException
     143: dup
     144: invokespecial #46                 // Method java/io/EOFException."<init>":()V
     147: athrow
     148: lload_2
     149: lload         6
     151: lsub
     152: lstore_2
     153: aload_0
     154: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     157: dup
     158: astore        8
     160: monitorenter
     161: aload_0
     162: getfield      #6                  // Field readBuffer:Lokio/Buffer;
     165: invokevirtual #18                 // Method okio/Buffer.size:()J
     168: lconst_0
     169: lcmp
     170: ifne          177
     173: iconst_1
     174: goto          178
     177: iconst_0
     178: istore        9
     180: aload_0
     181: getfield      #6                  // Field readBuffer:Lokio/Buffer;
     184: aload_0
     185: getfield      #5                  // Field receiveBuffer:Lokio/Buffer;
     188: invokevirtual #47                 // Method okio/Buffer.writeAll:(Lokio/Source;)J
     191: pop2
     192: iload         9
     194: ifeq          204
     197: aload_0
     198: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
     201: invokevirtual #48                 // Method java/lang/Object.notifyAll:()V
     204: aload         8
     206: monitorexit
     207: goto          218
     210: astore        10
     212: aload         8
     214: monitorexit
     215: aload         10
     217: athrow
     218: goto          24
     221: return
    Exception table:
       from    to  target type
          38    71    74   any
          74    79    74   any
         161   207   210   any
         210   215   210   any

  public okio.Timeout timeout();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
       4: getfield      #30                 // Field okhttp3/internal/http2/Http2Stream.readTimeout:Lokhttp3/internal/http2/Http2Stream$StreamTimeout;
       7: areturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: iconst_1
       9: putfield      #33                 // Field closed:Z
      12: aload_0
      13: getfield      #6                  // Field readBuffer:Lokio/Buffer;
      16: invokevirtual #49                 // Method okio/Buffer.clear:()V
      19: aload_0
      20: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      23: invokevirtual #48                 // Method java/lang/Object.notifyAll:()V
      26: aload_1
      27: monitorexit
      28: goto          36
      31: astore_2
      32: aload_1
      33: monitorexit
      34: aload_2
      35: athrow
      36: aload_0
      37: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      40: invokevirtual #50                 // Method okhttp3/internal/http2/Http2Stream.cancelStreamIfNecessary:()V
      43: return
    Exception table:
       from    to  target type
           7    28    31   any
          31    34    31   any

  private void checkNotClosed() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field closed:Z
       4: ifeq          17
       7: new           #51                 // class java/io/IOException
      10: dup
      11: ldc           #52                 // String stream closed
      13: invokespecial #53                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      21: getfield      #34                 // Field okhttp3/internal/http2/Http2Stream.errorCode:Lokhttp3/internal/http2/ErrorCode;
      24: ifnull        42
      27: new           #54                 // class okhttp3/internal/http2/StreamResetException
      30: dup
      31: aload_0
      32: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Stream;
      35: getfield      #34                 // Field okhttp3/internal/http2/Http2Stream.errorCode:Lokhttp3/internal/http2/ErrorCode;
      38: invokespecial #55                 // Method okhttp3/internal/http2/StreamResetException."<init>":(Lokhttp3/internal/http2/ErrorCode;)V
      41: athrow
      42: return

  static {};
    Code:
       0: ldc           #56                 // class okhttp3/internal/http2/Http2Stream
       2: invokevirtual #57                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #37                 // Field $assertionsDisabled:Z
      16: return
}
