Compiled from "Http1Codec.java"
public final class okhttp3.internal.http1.Http1Codec implements okhttp3.internal.http.HttpCodec {
  private static final int STATE_IDLE;

  private static final int STATE_OPEN_REQUEST_BODY;

  private static final int STATE_WRITING_REQUEST_BODY;

  private static final int STATE_READ_RESPONSE_HEADERS;

  private static final int STATE_OPEN_RESPONSE_BODY;

  private static final int STATE_READING_RESPONSE_BODY;

  private static final int STATE_CLOSED;

  final okhttp3.OkHttpClient client;

  final okhttp3.internal.connection.StreamAllocation streamAllocation;

  final okio.BufferedSource source;

  final okio.BufferedSink sink;

  int state;

  public okhttp3.internal.http1.Http1Codec(okhttp3.OkHttpClient, okhttp3.internal.connection.StreamAllocation, okio.BufferedSource, okio.BufferedSink);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #4                  // Field state:I
       9: aload_0
      10: aload_1
      11: putfield      #5                  // Field client:Lokhttp3/OkHttpClient;
      14: aload_0
      15: aload_2
      16: putfield      #6                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
      19: aload_0
      20: aload_3
      21: putfield      #7                  // Field source:Lokio/BufferedSource;
      24: aload_0
      25: aload         4
      27: putfield      #8                  // Field sink:Lokio/BufferedSink;
      30: return

  public okio.Sink createRequestBody(okhttp3.Request, long);
    Code:
       0: ldc           #9                  // String chunked
       2: aload_1
       3: ldc           #10                 // String Transfer-Encoding
       5: invokevirtual #11                 // Method okhttp3/Request.header:(Ljava/lang/String;)Ljava/lang/String;
       8: invokevirtual #12                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      11: ifeq          19
      14: aload_0
      15: invokevirtual #13                 // Method newChunkedSink:()Lokio/Sink;
      18: areturn
      19: lload_2
      20: ldc2_w        #14                 // long -1l
      23: lcmp
      24: ifeq          33
      27: aload_0
      28: lload_2
      29: invokevirtual #16                 // Method newFixedLengthSink:(J)Lokio/Sink;
      32: areturn
      33: new           #17                 // class java/lang/IllegalStateException
      36: dup
      37: ldc           #18                 // String Cannot stream a request body without chunked encoding or a known content length!
      39: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      42: athrow

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #6                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
       4: invokevirtual #20                 // Method okhttp3/internal/connection/StreamAllocation.connection:()Lokhttp3/internal/connection/RealConnection;
       7: astore_1
       8: aload_1
       9: ifnull        16
      12: aload_1
      13: invokevirtual #21                 // Method okhttp3/internal/connection/RealConnection.cancel:()V
      16: return

  public void writeRequestHeaders(okhttp3.Request) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
       5: invokevirtual #20                 // Method okhttp3/internal/connection/StreamAllocation.connection:()Lokhttp3/internal/connection/RealConnection;
       8: invokevirtual #22                 // Method okhttp3/internal/connection/RealConnection.route:()Lokhttp3/Route;
      11: invokevirtual #23                 // Method okhttp3/Route.proxy:()Ljava/net/Proxy;
      14: invokevirtual #24                 // Method java/net/Proxy.type:()Ljava/net/Proxy$Type;
      17: invokestatic  #25                 // Method okhttp3/internal/http/RequestLine.get:(Lokhttp3/Request;Ljava/net/Proxy$Type;)Ljava/lang/String;
      20: astore_2
      21: aload_0
      22: aload_1
      23: invokevirtual #26                 // Method okhttp3/Request.headers:()Lokhttp3/Headers;
      26: aload_2
      27: invokevirtual #27                 // Method writeRequest:(Lokhttp3/Headers;Ljava/lang/String;)V
      30: return

  public okhttp3.ResponseBody openResponseBody(okhttp3.Response) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #28                 // Method getTransferStream:(Lokhttp3/Response;)Lokio/Source;
       5: astore_2
       6: new           #29                 // class okhttp3/internal/http/RealResponseBody
       9: dup
      10: aload_1
      11: invokevirtual #30                 // Method okhttp3/Response.headers:()Lokhttp3/Headers;
      14: aload_2
      15: invokestatic  #31                 // Method okio/Okio.buffer:(Lokio/Source;)Lokio/BufferedSource;
      18: invokespecial #32                 // Method okhttp3/internal/http/RealResponseBody."<init>":(Lokhttp3/Headers;Lokio/BufferedSource;)V
      21: areturn

  private okio.Source getTransferStream(okhttp3.Response) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #33                 // Method okhttp3/internal/http/HttpHeaders.hasBody:(Lokhttp3/Response;)Z
       4: ifne          13
       7: aload_0
       8: lconst_0
       9: invokevirtual #34                 // Method newFixedLengthSource:(J)Lokio/Source;
      12: areturn
      13: ldc           #9                  // String chunked
      15: aload_1
      16: ldc           #10                 // String Transfer-Encoding
      18: invokevirtual #35                 // Method okhttp3/Response.header:(Ljava/lang/String;)Ljava/lang/String;
      21: invokevirtual #12                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      24: ifeq          39
      27: aload_0
      28: aload_1
      29: invokevirtual #36                 // Method okhttp3/Response.request:()Lokhttp3/Request;
      32: invokevirtual #37                 // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
      35: invokevirtual #38                 // Method newChunkedSource:(Lokhttp3/HttpUrl;)Lokio/Source;
      38: areturn
      39: aload_1
      40: invokestatic  #39                 // Method okhttp3/internal/http/HttpHeaders.contentLength:(Lokhttp3/Response;)J
      43: lstore_2
      44: lload_2
      45: ldc2_w        #14                 // long -1l
      48: lcmp
      49: ifeq          58
      52: aload_0
      53: lload_2
      54: invokevirtual #34                 // Method newFixedLengthSource:(J)Lokio/Source;
      57: areturn
      58: aload_0
      59: invokevirtual #40                 // Method newUnknownLengthSource:()Lokio/Source;
      62: areturn

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: bipush        6
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public void flushRequest() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field sink:Lokio/BufferedSink;
       4: invokeinterface #41,  1           // InterfaceMethod okio/BufferedSink.flush:()V
       9: return

  public void finishRequest() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field sink:Lokio/BufferedSink;
       4: invokeinterface #41,  1           // InterfaceMethod okio/BufferedSink.flush:()V
       9: return

  public void writeRequest(okhttp3.Headers, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: ifeq          37
       7: new           #17                 // class java/lang/IllegalStateException
      10: dup
      11: new           #42                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #44                 // String state:
      20: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: getfield      #4                  // Field state:I
      27: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_0
      38: getfield      #8                  // Field sink:Lokio/BufferedSink;
      41: aload_2
      42: invokeinterface #48,  2           // InterfaceMethod okio/BufferedSink.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;
      47: ldc           #49                 // String \r\n
      49: invokeinterface #48,  2           // InterfaceMethod okio/BufferedSink.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;
      54: pop
      55: iconst_0
      56: istore_3
      57: aload_1
      58: invokevirtual #50                 // Method okhttp3/Headers.size:()I
      61: istore        4
      63: iload_3
      64: iload         4
      66: if_icmpge     114
      69: aload_0
      70: getfield      #8                  // Field sink:Lokio/BufferedSink;
      73: aload_1
      74: iload_3
      75: invokevirtual #51                 // Method okhttp3/Headers.name:(I)Ljava/lang/String;
      78: invokeinterface #48,  2           // InterfaceMethod okio/BufferedSink.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;
      83: ldc           #52                 // String :
      85: invokeinterface #48,  2           // InterfaceMethod okio/BufferedSink.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;
      90: aload_1
      91: iload_3
      92: invokevirtual #53                 // Method okhttp3/Headers.value:(I)Ljava/lang/String;
      95: invokeinterface #48,  2           // InterfaceMethod okio/BufferedSink.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;
     100: ldc           #49                 // String \r\n
     102: invokeinterface #48,  2           // InterfaceMethod okio/BufferedSink.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;
     107: pop
     108: iinc          3, 1
     111: goto          63
     114: aload_0
     115: getfield      #8                  // Field sink:Lokio/BufferedSink;
     118: ldc           #49                 // String \r\n
     120: invokeinterface #48,  2           // InterfaceMethod okio/BufferedSink.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;
     125: pop
     126: aload_0
     127: iconst_1
     128: putfield      #4                  // Field state:I
     131: return

  public okhttp3.Response$Builder readResponseHeaders(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: iconst_1
       5: if_icmpeq     46
       8: aload_0
       9: getfield      #4                  // Field state:I
      12: iconst_3
      13: if_icmpeq     46
      16: new           #17                 // class java/lang/IllegalStateException
      19: dup
      20: new           #42                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #44                 // String state:
      29: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: getfield      #4                  // Field state:I
      36: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      39: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_0
      47: getfield      #7                  // Field source:Lokio/BufferedSource;
      50: invokeinterface #54,  1           // InterfaceMethod okio/BufferedSource.readUtf8LineStrict:()Ljava/lang/String;
      55: invokestatic  #55                 // Method okhttp3/internal/http/StatusLine.parse:(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;
      58: astore_2
      59: new           #56                 // class okhttp3/Response$Builder
      62: dup
      63: invokespecial #57                 // Method okhttp3/Response$Builder."<init>":()V
      66: aload_2
      67: getfield      #58                 // Field okhttp3/internal/http/StatusLine.protocol:Lokhttp3/Protocol;
      70: invokevirtual #59                 // Method okhttp3/Response$Builder.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;
      73: aload_2
      74: getfield      #60                 // Field okhttp3/internal/http/StatusLine.code:I
      77: invokevirtual #61                 // Method okhttp3/Response$Builder.code:(I)Lokhttp3/Response$Builder;
      80: aload_2
      81: getfield      #62                 // Field okhttp3/internal/http/StatusLine.message:Ljava/lang/String;
      84: invokevirtual #63                 // Method okhttp3/Response$Builder.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;
      87: aload_0
      88: invokevirtual #64                 // Method readHeaders:()Lokhttp3/Headers;
      91: invokevirtual #65                 // Method okhttp3/Response$Builder.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;
      94: astore_3
      95: iload_1
      96: ifeq          110
      99: aload_2
     100: getfield      #60                 // Field okhttp3/internal/http/StatusLine.code:I
     103: bipush        100
     105: if_icmpne     110
     108: aconst_null
     109: areturn
     110: aload_0
     111: iconst_4
     112: putfield      #4                  // Field state:I
     115: aload_3
     116: areturn
     117: astore_2
     118: new           #67                 // class java/io/IOException
     121: dup
     122: new           #42                 // class java/lang/StringBuilder
     125: dup
     126: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
     129: ldc           #68                 // String unexpected end of stream on
     131: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: aload_0
     135: getfield      #6                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
     138: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     141: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     144: invokespecial #70                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     147: astore_3
     148: aload_3
     149: aload_2
     150: invokevirtual #71                 // Method java/io/IOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     153: pop
     154: aload_3
     155: athrow
    Exception table:
       from    to  target type
          46   109   117   Class java/io/EOFException
         110   116   117   Class java/io/EOFException

  public okhttp3.Headers readHeaders() throws java.io.IOException;
    Code:
       0: new           #72                 // class okhttp3/Headers$Builder
       3: dup
       4: invokespecial #73                 // Method okhttp3/Headers$Builder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #7                  // Field source:Lokio/BufferedSource;
      12: invokeinterface #54,  1           // InterfaceMethod okio/BufferedSource.readUtf8LineStrict:()Ljava/lang/String;
      17: dup
      18: astore_2
      19: invokevirtual #74                 // Method java/lang/String.length:()I
      22: ifeq          36
      25: getstatic     #75                 // Field okhttp3/internal/Internal.instance:Lokhttp3/internal/Internal;
      28: aload_1
      29: aload_2
      30: invokevirtual #76                 // Method okhttp3/internal/Internal.addLenient:(Lokhttp3/Headers$Builder;Ljava/lang/String;)V
      33: goto          8
      36: aload_1
      37: invokevirtual #77                 // Method okhttp3/Headers$Builder.build:()Lokhttp3/Headers;
      40: areturn

  public okio.Sink newChunkedSink();
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: iconst_1
       5: if_icmpeq     38
       8: new           #17                 // class java/lang/IllegalStateException
      11: dup
      12: new           #42                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #44                 // String state:
      21: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #4                  // Field state:I
      28: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: iconst_2
      40: putfield      #4                  // Field state:I
      43: new           #78                 // class okhttp3/internal/http1/Http1Codec$ChunkedSink
      46: dup
      47: aload_0
      48: invokespecial #79                 // Method okhttp3/internal/http1/Http1Codec$ChunkedSink."<init>":(Lokhttp3/internal/http1/Http1Codec;)V
      51: areturn

  public okio.Sink newFixedLengthSink(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: iconst_1
       5: if_icmpeq     38
       8: new           #17                 // class java/lang/IllegalStateException
      11: dup
      12: new           #42                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #44                 // String state:
      21: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #4                  // Field state:I
      28: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: iconst_2
      40: putfield      #4                  // Field state:I
      43: new           #80                 // class okhttp3/internal/http1/Http1Codec$FixedLengthSink
      46: dup
      47: aload_0
      48: lload_1
      49: invokespecial #81                 // Method okhttp3/internal/http1/Http1Codec$FixedLengthSink."<init>":(Lokhttp3/internal/http1/Http1Codec;J)V
      52: areturn

  public okio.Source newFixedLengthSource(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: iconst_4
       5: if_icmpeq     38
       8: new           #17                 // class java/lang/IllegalStateException
      11: dup
      12: new           #42                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #44                 // String state:
      21: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #4                  // Field state:I
      28: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: iconst_5
      40: putfield      #4                  // Field state:I
      43: new           #82                 // class okhttp3/internal/http1/Http1Codec$FixedLengthSource
      46: dup
      47: aload_0
      48: lload_1
      49: invokespecial #83                 // Method okhttp3/internal/http1/Http1Codec$FixedLengthSource."<init>":(Lokhttp3/internal/http1/Http1Codec;J)V
      52: areturn

  public okio.Source newChunkedSource(okhttp3.HttpUrl) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: iconst_4
       5: if_icmpeq     38
       8: new           #17                 // class java/lang/IllegalStateException
      11: dup
      12: new           #42                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #44                 // String state:
      21: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #4                  // Field state:I
      28: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: iconst_5
      40: putfield      #4                  // Field state:I
      43: new           #84                 // class okhttp3/internal/http1/Http1Codec$ChunkedSource
      46: dup
      47: aload_0
      48: aload_1
      49: invokespecial #85                 // Method okhttp3/internal/http1/Http1Codec$ChunkedSource."<init>":(Lokhttp3/internal/http1/Http1Codec;Lokhttp3/HttpUrl;)V
      52: areturn

  public okio.Source newUnknownLengthSource() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: iconst_4
       5: if_icmpeq     38
       8: new           #17                 // class java/lang/IllegalStateException
      11: dup
      12: new           #42                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #43                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #44                 // String state:
      21: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #4                  // Field state:I
      28: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: getfield      #6                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
      42: ifnonnull     55
      45: new           #17                 // class java/lang/IllegalStateException
      48: dup
      49: ldc           #86                 // String streamAllocation == null
      51: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_0
      56: iconst_5
      57: putfield      #4                  // Field state:I
      60: aload_0
      61: getfield      #6                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
      64: invokevirtual #87                 // Method okhttp3/internal/connection/StreamAllocation.noNewStreams:()V
      67: new           #88                 // class okhttp3/internal/http1/Http1Codec$UnknownLengthSource
      70: dup
      71: aload_0
      72: invokespecial #89                 // Method okhttp3/internal/http1/Http1Codec$UnknownLengthSource."<init>":(Lokhttp3/internal/http1/Http1Codec;)V
      75: areturn

  void detachTimeout(okio.ForwardingTimeout);
    Code:
       0: aload_1
       1: invokevirtual #90                 // Method okio/ForwardingTimeout.delegate:()Lokio/Timeout;
       4: astore_2
       5: aload_1
       6: getstatic     #91                 // Field okio/Timeout.NONE:Lokio/Timeout;
       9: invokevirtual #92                 // Method okio/ForwardingTimeout.setDelegate:(Lokio/Timeout;)Lokio/ForwardingTimeout;
      12: pop
      13: aload_2
      14: invokevirtual #93                 // Method okio/Timeout.clearDeadline:()Lokio/Timeout;
      17: pop
      18: aload_2
      19: invokevirtual #94                 // Method okio/Timeout.clearTimeout:()Lokio/Timeout;
      22: pop
      23: return
}
