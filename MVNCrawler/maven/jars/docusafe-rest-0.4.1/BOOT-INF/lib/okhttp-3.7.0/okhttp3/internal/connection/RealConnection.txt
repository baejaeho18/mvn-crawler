Compiled from "RealConnection.java"
public final class okhttp3.internal.connection.RealConnection extends okhttp3.internal.http2.Http2Connection$Listener implements okhttp3.Connection {
  private final okhttp3.ConnectionPool connectionPool;

  private final okhttp3.Route route;

  private java.net.Socket rawSocket;

  private java.net.Socket socket;

  private okhttp3.Handshake handshake;

  private okhttp3.Protocol protocol;

  private okhttp3.internal.http2.Http2Connection http2Connection;

  private okio.BufferedSource source;

  private okio.BufferedSink sink;

  public boolean noNewStreams;

  public int successCount;

  public int allocationLimit;

  public final java.util.List<java.lang.ref.Reference<okhttp3.internal.connection.StreamAllocation>> allocations;

  public long idleAtNanos;

  public okhttp3.internal.connection.RealConnection(okhttp3.ConnectionPool, okhttp3.Route);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method okhttp3/internal/http2/Http2Connection$Listener."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #3                  // Field allocationLimit:I
       9: aload_0
      10: new           #4                  // class java/util/ArrayList
      13: dup
      14: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      17: putfield      #6                  // Field allocations:Ljava/util/List;
      20: aload_0
      21: ldc2_w        #8                  // long 9223372036854775807l
      24: putfield      #10                 // Field idleAtNanos:J
      27: aload_0
      28: aload_1
      29: putfield      #11                 // Field connectionPool:Lokhttp3/ConnectionPool;
      32: aload_0
      33: aload_2
      34: putfield      #12                 // Field route:Lokhttp3/Route;
      37: return

  public static okhttp3.internal.connection.RealConnection testConnection(okhttp3.ConnectionPool, okhttp3.Route, java.net.Socket, long);
    Code:
       0: new           #13                 // class okhttp3/internal/connection/RealConnection
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #14                 // Method "<init>":(Lokhttp3/ConnectionPool;Lokhttp3/Route;)V
       9: astore        5
      11: aload         5
      13: aload_2
      14: putfield      #15                 // Field socket:Ljava/net/Socket;
      17: aload         5
      19: lload_3
      20: putfield      #10                 // Field idleAtNanos:J
      23: aload         5
      25: areturn

  public void connect(int, int, int, boolean);
    Code:
       0: aload_0
       1: getfield      #16                 // Field protocol:Lokhttp3/Protocol;
       4: ifnull        17
       7: new           #17                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #18                 // String already connected
      13: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aconst_null
      18: astore        5
      20: aload_0
      21: getfield      #12                 // Field route:Lokhttp3/Route;
      24: invokevirtual #20                 // Method okhttp3/Route.address:()Lokhttp3/Address;
      27: invokevirtual #21                 // Method okhttp3/Address.connectionSpecs:()Ljava/util/List;
      30: astore        6
      32: new           #22                 // class okhttp3/internal/connection/ConnectionSpecSelector
      35: dup
      36: aload         6
      38: invokespecial #23                 // Method okhttp3/internal/connection/ConnectionSpecSelector."<init>":(Ljava/util/List;)V
      41: astore        7
      43: aload_0
      44: getfield      #12                 // Field route:Lokhttp3/Route;
      47: invokevirtual #20                 // Method okhttp3/Route.address:()Lokhttp3/Address;
      50: invokevirtual #24                 // Method okhttp3/Address.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;
      53: ifnonnull     152
      56: aload         6
      58: getstatic     #25                 // Field okhttp3/ConnectionSpec.CLEARTEXT:Lokhttp3/ConnectionSpec;
      61: invokeinterface #26,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      66: ifne          86
      69: new           #27                 // class okhttp3/internal/connection/RouteException
      72: dup
      73: new           #28                 // class java/net/UnknownServiceException
      76: dup
      77: ldc           #29                 // String CLEARTEXT communication not enabled for client
      79: invokespecial #30                 // Method java/net/UnknownServiceException."<init>":(Ljava/lang/String;)V
      82: invokespecial #31                 // Method okhttp3/internal/connection/RouteException."<init>":(Ljava/io/IOException;)V
      85: athrow
      86: aload_0
      87: getfield      #12                 // Field route:Lokhttp3/Route;
      90: invokevirtual #20                 // Method okhttp3/Route.address:()Lokhttp3/Address;
      93: invokevirtual #32                 // Method okhttp3/Address.url:()Lokhttp3/HttpUrl;
      96: invokevirtual #33                 // Method okhttp3/HttpUrl.host:()Ljava/lang/String;
      99: astore        8
     101: invokestatic  #34                 // Method okhttp3/internal/platform/Platform.get:()Lokhttp3/internal/platform/Platform;
     104: aload         8
     106: invokevirtual #35                 // Method okhttp3/internal/platform/Platform.isCleartextTrafficPermitted:(Ljava/lang/String;)Z
     109: ifne          152
     112: new           #27                 // class okhttp3/internal/connection/RouteException
     115: dup
     116: new           #28                 // class java/net/UnknownServiceException
     119: dup
     120: new           #36                 // class java/lang/StringBuilder
     123: dup
     124: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
     127: ldc           #38                 // String CLEARTEXT communication to
     129: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: aload         8
     134: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: ldc           #40                 // String  not permitted by network security policy
     139: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     145: invokespecial #30                 // Method java/net/UnknownServiceException."<init>":(Ljava/lang/String;)V
     148: invokespecial #31                 // Method okhttp3/internal/connection/RouteException."<init>":(Ljava/io/IOException;)V
     151: athrow
     152: aload_0
     153: getfield      #12                 // Field route:Lokhttp3/Route;
     156: invokevirtual #42                 // Method okhttp3/Route.requiresTunnel:()Z
     159: ifeq          172
     162: aload_0
     163: iload_1
     164: iload_2
     165: iload_3
     166: invokespecial #43                 // Method connectTunnel:(III)V
     169: goto          178
     172: aload_0
     173: iload_1
     174: iload_2
     175: invokespecial #44                 // Method connectSocket:(II)V
     178: aload_0
     179: aload         7
     181: invokespecial #45                 // Method establishProtocol:(Lokhttp3/internal/connection/ConnectionSpecSelector;)V
     184: goto          285
     187: astore        8
     189: aload_0
     190: getfield      #15                 // Field socket:Ljava/net/Socket;
     193: invokestatic  #47                 // Method okhttp3/internal/Util.closeQuietly:(Ljava/net/Socket;)V
     196: aload_0
     197: getfield      #48                 // Field rawSocket:Ljava/net/Socket;
     200: invokestatic  #47                 // Method okhttp3/internal/Util.closeQuietly:(Ljava/net/Socket;)V
     203: aload_0
     204: aconst_null
     205: putfield      #15                 // Field socket:Ljava/net/Socket;
     208: aload_0
     209: aconst_null
     210: putfield      #48                 // Field rawSocket:Ljava/net/Socket;
     213: aload_0
     214: aconst_null
     215: putfield      #49                 // Field source:Lokio/BufferedSource;
     218: aload_0
     219: aconst_null
     220: putfield      #50                 // Field sink:Lokio/BufferedSink;
     223: aload_0
     224: aconst_null
     225: putfield      #51                 // Field handshake:Lokhttp3/Handshake;
     228: aload_0
     229: aconst_null
     230: putfield      #16                 // Field protocol:Lokhttp3/Protocol;
     233: aload_0
     234: aconst_null
     235: putfield      #52                 // Field http2Connection:Lokhttp3/internal/http2/Http2Connection;
     238: aload         5
     240: ifnonnull     257
     243: new           #27                 // class okhttp3/internal/connection/RouteException
     246: dup
     247: aload         8
     249: invokespecial #31                 // Method okhttp3/internal/connection/RouteException."<init>":(Ljava/io/IOException;)V
     252: astore        5
     254: goto          264
     257: aload         5
     259: aload         8
     261: invokevirtual #53                 // Method okhttp3/internal/connection/RouteException.addConnectException:(Ljava/io/IOException;)V
     264: iload         4
     266: ifeq          279
     269: aload         7
     271: aload         8
     273: invokevirtual #54                 // Method okhttp3/internal/connection/ConnectionSpecSelector.connectionFailed:(Ljava/io/IOException;)Z
     276: ifne          282
     279: aload         5
     281: athrow
     282: goto          152
     285: aload_0
     286: getfield      #52                 // Field http2Connection:Lokhttp3/internal/http2/Http2Connection;
     289: ifnull        325
     292: aload_0
     293: getfield      #11                 // Field connectionPool:Lokhttp3/ConnectionPool;
     296: dup
     297: astore        8
     299: monitorenter
     300: aload_0
     301: aload_0
     302: getfield      #52                 // Field http2Connection:Lokhttp3/internal/http2/Http2Connection;
     305: invokevirtual #55                 // Method okhttp3/internal/http2/Http2Connection.maxConcurrentStreams:()I
     308: putfield      #3                  // Field allocationLimit:I
     311: aload         8
     313: monitorexit
     314: goto          325
     317: astore        9
     319: aload         8
     321: monitorexit
     322: aload         9
     324: athrow
     325: return
    Exception table:
       from    to  target type
         152   184   187   Class java/io/IOException
         300   314   317   any
         317   322   317   any

  private void connectTunnel(int, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #56                 // Method createTunnelRequest:()Lokhttp3/Request;
       4: astore        4
       6: aload         4
       8: invokevirtual #57                 // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
      11: astore        5
      13: iconst_0
      14: istore        6
      16: bipush        21
      18: istore        7
      20: iinc          6, 1
      23: iload         6
      25: iload         7
      27: if_icmple     58
      30: new           #58                 // class java/net/ProtocolException
      33: dup
      34: new           #36                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #59                 // String Too many tunnel connections attempted:
      43: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: iload         7
      48: invokevirtual #60                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      51: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokespecial #61                 // Method java/net/ProtocolException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: aload_0
      59: iload_1
      60: iload_2
      61: invokespecial #44                 // Method connectSocket:(II)V
      64: aload_0
      65: iload_2
      66: iload_3
      67: aload         4
      69: aload         5
      71: invokespecial #62                 // Method createTunnel:(IILokhttp3/Request;Lokhttp3/HttpUrl;)Lokhttp3/Request;
      74: astore        4
      76: aload         4
      78: ifnonnull     84
      81: goto          109
      84: aload_0
      85: getfield      #48                 // Field rawSocket:Ljava/net/Socket;
      88: invokestatic  #47                 // Method okhttp3/internal/Util.closeQuietly:(Ljava/net/Socket;)V
      91: aload_0
      92: aconst_null
      93: putfield      #48                 // Field rawSocket:Ljava/net/Socket;
      96: aload_0
      97: aconst_null
      98: putfield      #50                 // Field sink:Lokio/BufferedSink;
     101: aload_0
     102: aconst_null
     103: putfield      #49                 // Field source:Lokio/BufferedSource;
     106: goto          20
     109: return

  private void connectSocket(int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field route:Lokhttp3/Route;
       4: invokevirtual #63                 // Method okhttp3/Route.proxy:()Ljava/net/Proxy;
       7: astore_3
       8: aload_0
       9: getfield      #12                 // Field route:Lokhttp3/Route;
      12: invokevirtual #20                 // Method okhttp3/Route.address:()Lokhttp3/Address;
      15: astore        4
      17: aload_0
      18: aload_3
      19: invokevirtual #64                 // Method java/net/Proxy.type:()Ljava/net/Proxy$Type;
      22: getstatic     #65                 // Field java/net/Proxy$Type.DIRECT:Ljava/net/Proxy$Type;
      25: if_acmpeq     38
      28: aload_3
      29: invokevirtual #64                 // Method java/net/Proxy.type:()Ljava/net/Proxy$Type;
      32: getstatic     #66                 // Field java/net/Proxy$Type.HTTP:Ljava/net/Proxy$Type;
      35: if_acmpne     49
      38: aload         4
      40: invokevirtual #67                 // Method okhttp3/Address.socketFactory:()Ljavax/net/SocketFactory;
      43: invokevirtual #68                 // Method javax/net/SocketFactory.createSocket:()Ljava/net/Socket;
      46: goto          57
      49: new           #69                 // class java/net/Socket
      52: dup
      53: aload_3
      54: invokespecial #70                 // Method java/net/Socket."<init>":(Ljava/net/Proxy;)V
      57: putfield      #48                 // Field rawSocket:Ljava/net/Socket;
      60: aload_0
      61: getfield      #48                 // Field rawSocket:Ljava/net/Socket;
      64: iload_2
      65: invokevirtual #71                 // Method java/net/Socket.setSoTimeout:(I)V
      68: invokestatic  #34                 // Method okhttp3/internal/platform/Platform.get:()Lokhttp3/internal/platform/Platform;
      71: aload_0
      72: getfield      #48                 // Field rawSocket:Ljava/net/Socket;
      75: aload_0
      76: getfield      #12                 // Field route:Lokhttp3/Route;
      79: invokevirtual #72                 // Method okhttp3/Route.socketAddress:()Ljava/net/InetSocketAddress;
      82: iload_1
      83: invokevirtual #73                 // Method okhttp3/internal/platform/Platform.connectSocket:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V
      86: goto          136
      89: astore        5
      91: new           #74                 // class java/net/ConnectException
      94: dup
      95: new           #36                 // class java/lang/StringBuilder
      98: dup
      99: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
     102: ldc           #75                 // String Failed to connect to
     104: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: aload_0
     108: getfield      #12                 // Field route:Lokhttp3/Route;
     111: invokevirtual #72                 // Method okhttp3/Route.socketAddress:()Ljava/net/InetSocketAddress;
     114: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     117: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     120: invokespecial #77                 // Method java/net/ConnectException."<init>":(Ljava/lang/String;)V
     123: astore        6
     125: aload         6
     127: aload         5
     129: invokevirtual #78                 // Method java/net/ConnectException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     132: pop
     133: aload         6
     135: athrow
     136: aload_0
     137: aload_0
     138: getfield      #48                 // Field rawSocket:Ljava/net/Socket;
     141: invokestatic  #79                 // Method okio/Okio.source:(Ljava/net/Socket;)Lokio/Source;
     144: invokestatic  #80                 // Method okio/Okio.buffer:(Lokio/Source;)Lokio/BufferedSource;
     147: putfield      #49                 // Field source:Lokio/BufferedSource;
     150: aload_0
     151: aload_0
     152: getfield      #48                 // Field rawSocket:Ljava/net/Socket;
     155: invokestatic  #81                 // Method okio/Okio.sink:(Ljava/net/Socket;)Lokio/Sink;
     158: invokestatic  #82                 // Method okio/Okio.buffer:(Lokio/Sink;)Lokio/BufferedSink;
     161: putfield      #50                 // Field sink:Lokio/BufferedSink;
     164: return
    Exception table:
       from    to  target type
          68    86    89   Class java/net/ConnectException

  private void establishProtocol(okhttp3.internal.connection.ConnectionSpecSelector) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field route:Lokhttp3/Route;
       4: invokevirtual #20                 // Method okhttp3/Route.address:()Lokhttp3/Address;
       7: invokevirtual #24                 // Method okhttp3/Address.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;
      10: ifnonnull     29
      13: aload_0
      14: getstatic     #83                 // Field okhttp3/Protocol.HTTP_1_1:Lokhttp3/Protocol;
      17: putfield      #16                 // Field protocol:Lokhttp3/Protocol;
      20: aload_0
      21: aload_0
      22: getfield      #48                 // Field rawSocket:Ljava/net/Socket;
      25: putfield      #15                 // Field socket:Ljava/net/Socket;
      28: return
      29: aload_0
      30: aload_1
      31: invokespecial #84                 // Method connectTls:(Lokhttp3/internal/connection/ConnectionSpecSelector;)V
      34: aload_0
      35: getfield      #16                 // Field protocol:Lokhttp3/Protocol;
      38: getstatic     #85                 // Field okhttp3/Protocol.HTTP_2:Lokhttp3/Protocol;
      41: if_acmpne     106
      44: aload_0
      45: getfield      #15                 // Field socket:Ljava/net/Socket;
      48: iconst_0
      49: invokevirtual #71                 // Method java/net/Socket.setSoTimeout:(I)V
      52: aload_0
      53: new           #86                 // class okhttp3/internal/http2/Http2Connection$Builder
      56: dup
      57: iconst_1
      58: invokespecial #87                 // Method okhttp3/internal/http2/Http2Connection$Builder."<init>":(Z)V
      61: aload_0
      62: getfield      #15                 // Field socket:Ljava/net/Socket;
      65: aload_0
      66: getfield      #12                 // Field route:Lokhttp3/Route;
      69: invokevirtual #20                 // Method okhttp3/Route.address:()Lokhttp3/Address;
      72: invokevirtual #32                 // Method okhttp3/Address.url:()Lokhttp3/HttpUrl;
      75: invokevirtual #33                 // Method okhttp3/HttpUrl.host:()Ljava/lang/String;
      78: aload_0
      79: getfield      #49                 // Field source:Lokio/BufferedSource;
      82: aload_0
      83: getfield      #50                 // Field sink:Lokio/BufferedSink;
      86: invokevirtual #88                 // Method okhttp3/internal/http2/Http2Connection$Builder.socket:(Ljava/net/Socket;Ljava/lang/String;Lokio/BufferedSource;Lokio/BufferedSink;)Lokhttp3/internal/http2/Http2Connection$Builder;
      89: aload_0
      90: invokevirtual #89                 // Method okhttp3/internal/http2/Http2Connection$Builder.listener:(Lokhttp3/internal/http2/Http2Connection$Listener;)Lokhttp3/internal/http2/Http2Connection$Builder;
      93: invokevirtual #90                 // Method okhttp3/internal/http2/Http2Connection$Builder.build:()Lokhttp3/internal/http2/Http2Connection;
      96: putfield      #52                 // Field http2Connection:Lokhttp3/internal/http2/Http2Connection;
      99: aload_0
     100: getfield      #52                 // Field http2Connection:Lokhttp3/internal/http2/Http2Connection;
     103: invokevirtual #91                 // Method okhttp3/internal/http2/Http2Connection.start:()V
     106: return

  private void connectTls(okhttp3.internal.connection.ConnectionSpecSelector) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field route:Lokhttp3/Route;
       4: invokevirtual #20                 // Method okhttp3/Route.address:()Lokhttp3/Address;
       7: astore_2
       8: aload_2
       9: invokevirtual #24                 // Method okhttp3/Address.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;
      12: astore_3
      13: iconst_0
      14: istore        4
      16: aconst_null
      17: astore        5
      19: aload_3
      20: aload_0
      21: getfield      #48                 // Field rawSocket:Ljava/net/Socket;
      24: aload_2
      25: invokevirtual #32                 // Method okhttp3/Address.url:()Lokhttp3/HttpUrl;
      28: invokevirtual #33                 // Method okhttp3/HttpUrl.host:()Ljava/lang/String;
      31: aload_2
      32: invokevirtual #32                 // Method okhttp3/Address.url:()Lokhttp3/HttpUrl;
      35: invokevirtual #92                 // Method okhttp3/HttpUrl.port:()I
      38: iconst_1
      39: invokevirtual #93                 // Method javax/net/ssl/SSLSocketFactory.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;
      42: checkcast     #94                 // class javax/net/ssl/SSLSocket
      45: astore        5
      47: aload_1
      48: aload         5
      50: invokevirtual #95                 // Method okhttp3/internal/connection/ConnectionSpecSelector.configureSecureSocket:(Ljavax/net/ssl/SSLSocket;)Lokhttp3/ConnectionSpec;
      53: astore        6
      55: aload         6
      57: invokevirtual #96                 // Method okhttp3/ConnectionSpec.supportsTlsExtensions:()Z
      60: ifeq          82
      63: invokestatic  #34                 // Method okhttp3/internal/platform/Platform.get:()Lokhttp3/internal/platform/Platform;
      66: aload         5
      68: aload_2
      69: invokevirtual #32                 // Method okhttp3/Address.url:()Lokhttp3/HttpUrl;
      72: invokevirtual #33                 // Method okhttp3/HttpUrl.host:()Ljava/lang/String;
      75: aload_2
      76: invokevirtual #97                 // Method okhttp3/Address.protocols:()Ljava/util/List;
      79: invokevirtual #98                 // Method okhttp3/internal/platform/Platform.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
      82: aload         5
      84: invokevirtual #99                 // Method javax/net/ssl/SSLSocket.startHandshake:()V
      87: aload         5
      89: invokevirtual #100                // Method javax/net/ssl/SSLSocket.getSession:()Ljavax/net/ssl/SSLSession;
      92: invokestatic  #101                // Method okhttp3/Handshake.get:(Ljavax/net/ssl/SSLSession;)Lokhttp3/Handshake;
      95: astore        7
      97: aload_2
      98: invokevirtual #102                // Method okhttp3/Address.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;
     101: aload_2
     102: invokevirtual #32                 // Method okhttp3/Address.url:()Lokhttp3/HttpUrl;
     105: invokevirtual #33                 // Method okhttp3/HttpUrl.host:()Ljava/lang/String;
     108: aload         5
     110: invokevirtual #100                // Method javax/net/ssl/SSLSocket.getSession:()Ljavax/net/ssl/SSLSession;
     113: invokeinterface #103,  3          // InterfaceMethod javax/net/ssl/HostnameVerifier.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z
     118: ifne          214
     121: aload         7
     123: invokevirtual #104                // Method okhttp3/Handshake.peerCertificates:()Ljava/util/List;
     126: iconst_0
     127: invokeinterface #105,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     132: checkcast     #106                // class java/security/cert/X509Certificate
     135: astore        8
     137: new           #107                // class javax/net/ssl/SSLPeerUnverifiedException
     140: dup
     141: new           #36                 // class java/lang/StringBuilder
     144: dup
     145: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
     148: ldc           #108                // String Hostname
     150: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     153: aload_2
     154: invokevirtual #32                 // Method okhttp3/Address.url:()Lokhttp3/HttpUrl;
     157: invokevirtual #33                 // Method okhttp3/HttpUrl.host:()Ljava/lang/String;
     160: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     163: ldc           #109                // String  not verified:\n    certificate:
     165: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: aload         8
     170: invokestatic  #110                // Method okhttp3/CertificatePinner.pin:(Ljava/security/cert/Certificate;)Ljava/lang/String;
     173: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     176: ldc           #111                // String \n    DN:
     178: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     181: aload         8
     183: invokevirtual #112                // Method java/security/cert/X509Certificate.getSubjectDN:()Ljava/security/Principal;
     186: invokeinterface #113,  1          // InterfaceMethod java/security/Principal.getName:()Ljava/lang/String;
     191: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     194: ldc           #114                // String \n    subjectAltNames:
     196: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     199: aload         8
     201: invokestatic  #115                // Method okhttp3/internal/tls/OkHostnameVerifier.allSubjectAltNames:(Ljava/security/cert/X509Certificate;)Ljava/util/List;
     204: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     207: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     210: invokespecial #116                // Method javax/net/ssl/SSLPeerUnverifiedException."<init>":(Ljava/lang/String;)V
     213: athrow
     214: aload_2
     215: invokevirtual #117                // Method okhttp3/Address.certificatePinner:()Lokhttp3/CertificatePinner;
     218: aload_2
     219: invokevirtual #32                 // Method okhttp3/Address.url:()Lokhttp3/HttpUrl;
     222: invokevirtual #33                 // Method okhttp3/HttpUrl.host:()Ljava/lang/String;
     225: aload         7
     227: invokevirtual #104                // Method okhttp3/Handshake.peerCertificates:()Ljava/util/List;
     230: invokevirtual #118                // Method okhttp3/CertificatePinner.check:(Ljava/lang/String;Ljava/util/List;)V
     233: aload         6
     235: invokevirtual #96                 // Method okhttp3/ConnectionSpec.supportsTlsExtensions:()Z
     238: ifeq          252
     241: invokestatic  #34                 // Method okhttp3/internal/platform/Platform.get:()Lokhttp3/internal/platform/Platform;
     244: aload         5
     246: invokevirtual #119                // Method okhttp3/internal/platform/Platform.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
     249: goto          253
     252: aconst_null
     253: astore        8
     255: aload_0
     256: aload         5
     258: putfield      #15                 // Field socket:Ljava/net/Socket;
     261: aload_0
     262: aload_0
     263: getfield      #15                 // Field socket:Ljava/net/Socket;
     266: invokestatic  #79                 // Method okio/Okio.source:(Ljava/net/Socket;)Lokio/Source;
     269: invokestatic  #80                 // Method okio/Okio.buffer:(Lokio/Source;)Lokio/BufferedSource;
     272: putfield      #49                 // Field source:Lokio/BufferedSource;
     275: aload_0
     276: aload_0
     277: getfield      #15                 // Field socket:Ljava/net/Socket;
     280: invokestatic  #81                 // Method okio/Okio.sink:(Ljava/net/Socket;)Lokio/Sink;
     283: invokestatic  #82                 // Method okio/Okio.buffer:(Lokio/Sink;)Lokio/BufferedSink;
     286: putfield      #50                 // Field sink:Lokio/BufferedSink;
     289: aload_0
     290: aload         7
     292: putfield      #51                 // Field handshake:Lokhttp3/Handshake;
     295: aload_0
     296: aload         8
     298: ifnull        309
     301: aload         8
     303: invokestatic  #120                // Method okhttp3/Protocol.get:(Ljava/lang/String;)Lokhttp3/Protocol;
     306: goto          312
     309: getstatic     #83                 // Field okhttp3/Protocol.HTTP_1_1:Lokhttp3/Protocol;
     312: putfield      #16                 // Field protocol:Lokhttp3/Protocol;
     315: iconst_1
     316: istore        4
     318: aload         5
     320: ifnull        331
     323: invokestatic  #34                 // Method okhttp3/internal/platform/Platform.get:()Lokhttp3/internal/platform/Platform;
     326: aload         5
     328: invokevirtual #121                // Method okhttp3/internal/platform/Platform.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V
     331: iload         4
     333: ifne          395
     336: aload         5
     338: invokestatic  #47                 // Method okhttp3/internal/Util.closeQuietly:(Ljava/net/Socket;)V
     341: goto          395
     344: astore        6
     346: aload         6
     348: invokestatic  #123                // Method okhttp3/internal/Util.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z
     351: ifeq          364
     354: new           #46                 // class java/io/IOException
     357: dup
     358: aload         6
     360: invokespecial #124                // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
     363: athrow
     364: aload         6
     366: athrow
     367: astore        9
     369: aload         5
     371: ifnull        382
     374: invokestatic  #34                 // Method okhttp3/internal/platform/Platform.get:()Lokhttp3/internal/platform/Platform;
     377: aload         5
     379: invokevirtual #121                // Method okhttp3/internal/platform/Platform.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V
     382: iload         4
     384: ifne          392
     387: aload         5
     389: invokestatic  #47                 // Method okhttp3/internal/Util.closeQuietly:(Ljava/net/Socket;)V
     392: aload         9
     394: athrow
     395: return
    Exception table:
       from    to  target type
          19   318   344   Class java/lang/AssertionError
          19   318   367   any
         344   369   367   any

  private okhttp3.Request createTunnel(int, int, okhttp3.Request, okhttp3.HttpUrl) throws java.io.IOException;
    Code:
       0: new           #36                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #125                // String CONNECT
       9: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload         4
      14: iconst_1
      15: invokestatic  #126                // Method okhttp3/internal/Util.hostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;
      18: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #127                // String  HTTP/1.1
      23: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: astore        5
      31: new           #128                // class okhttp3/internal/http1/Http1Codec
      34: dup
      35: aconst_null
      36: aconst_null
      37: aload_0
      38: getfield      #49                 // Field source:Lokio/BufferedSource;
      41: aload_0
      42: getfield      #50                 // Field sink:Lokio/BufferedSink;
      45: invokespecial #129                // Method okhttp3/internal/http1/Http1Codec."<init>":(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/StreamAllocation;Lokio/BufferedSource;Lokio/BufferedSink;)V
      48: astore        6
      50: aload_0
      51: getfield      #49                 // Field source:Lokio/BufferedSource;
      54: invokeinterface #130,  1          // InterfaceMethod okio/BufferedSource.timeout:()Lokio/Timeout;
      59: iload_1
      60: i2l
      61: getstatic     #131                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      64: invokevirtual #132                // Method okio/Timeout.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;
      67: pop
      68: aload_0
      69: getfield      #50                 // Field sink:Lokio/BufferedSink;
      72: invokeinterface #133,  1          // InterfaceMethod okio/BufferedSink.timeout:()Lokio/Timeout;
      77: iload_2
      78: i2l
      79: getstatic     #131                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      82: invokevirtual #132                // Method okio/Timeout.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;
      85: pop
      86: aload         6
      88: aload_3
      89: invokevirtual #134                // Method okhttp3/Request.headers:()Lokhttp3/Headers;
      92: aload         5
      94: invokevirtual #135                // Method okhttp3/internal/http1/Http1Codec.writeRequest:(Lokhttp3/Headers;Ljava/lang/String;)V
      97: aload         6
      99: invokevirtual #136                // Method okhttp3/internal/http1/Http1Codec.finishRequest:()V
     102: aload         6
     104: iconst_0
     105: invokevirtual #137                // Method okhttp3/internal/http1/Http1Codec.readResponseHeaders:(Z)Lokhttp3/Response$Builder;
     108: aload_3
     109: invokevirtual #138                // Method okhttp3/Response$Builder.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;
     112: invokevirtual #139                // Method okhttp3/Response$Builder.build:()Lokhttp3/Response;
     115: astore        7
     117: aload         7
     119: invokestatic  #140                // Method okhttp3/internal/http/HttpHeaders.contentLength:(Lokhttp3/Response;)J
     122: lstore        8
     124: lload         8
     126: ldc2_w        #141                // long -1l
     129: lcmp
     130: ifne          136
     133: lconst_0
     134: lstore        8
     136: aload         6
     138: lload         8
     140: invokevirtual #143                // Method okhttp3/internal/http1/Http1Codec.newFixedLengthSource:(J)Lokio/Source;
     143: astore        10
     145: aload         10
     147: ldc           #145                // int 2147483647
     149: getstatic     #131                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     152: invokestatic  #146                // Method okhttp3/internal/Util.skipAll:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z
     155: pop
     156: aload         10
     158: invokeinterface #147,  1          // InterfaceMethod okio/Source.close:()V
     163: aload         7
     165: invokevirtual #148                // Method okhttp3/Response.code:()I
     168: lookupswitch  { // 2
                   200: 196
                   407: 238
               default: 291
          }
     196: aload_0
     197: getfield      #49                 // Field source:Lokio/BufferedSource;
     200: invokeinterface #149,  1          // InterfaceMethod okio/BufferedSource.buffer:()Lokio/Buffer;
     205: invokevirtual #150                // Method okio/Buffer.exhausted:()Z
     208: ifeq          226
     211: aload_0
     212: getfield      #50                 // Field sink:Lokio/BufferedSink;
     215: invokeinterface #151,  1          // InterfaceMethod okio/BufferedSink.buffer:()Lokio/Buffer;
     220: invokevirtual #150                // Method okio/Buffer.exhausted:()Z
     223: ifne          236
     226: new           #46                 // class java/io/IOException
     229: dup
     230: ldc           #152                // String TLS tunnel buffered too many bytes!
     232: invokespecial #153                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     235: athrow
     236: aconst_null
     237: areturn
     238: aload_0
     239: getfield      #12                 // Field route:Lokhttp3/Route;
     242: invokevirtual #20                 // Method okhttp3/Route.address:()Lokhttp3/Address;
     245: invokevirtual #154                // Method okhttp3/Address.proxyAuthenticator:()Lokhttp3/Authenticator;
     248: aload_0
     249: getfield      #12                 // Field route:Lokhttp3/Route;
     252: aload         7
     254: invokeinterface #155,  3          // InterfaceMethod okhttp3/Authenticator.authenticate:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;
     259: astore_3
     260: aload_3
     261: ifnonnull     274
     264: new           #46                 // class java/io/IOException
     267: dup
     268: ldc           #156                // String Failed to authenticate with proxy
     270: invokespecial #153                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     273: athrow
     274: ldc           #157                // String close
     276: aload         7
     278: ldc           #158                // String Connection
     280: invokevirtual #159                // Method okhttp3/Response.header:(Ljava/lang/String;)Ljava/lang/String;
     283: invokevirtual #160                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     286: ifeq          322
     289: aload_3
     290: areturn
     291: new           #46                 // class java/io/IOException
     294: dup
     295: new           #36                 // class java/lang/StringBuilder
     298: dup
     299: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
     302: ldc           #161                // String Unexpected response code for CONNECT:
     304: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     307: aload         7
     309: invokevirtual #148                // Method okhttp3/Response.code:()I
     312: invokevirtual #60                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     315: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     318: invokespecial #153                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     321: athrow
     322: goto          31

  private okhttp3.Request createTunnelRequest();
    Code:
       0: new           #162                // class okhttp3/Request$Builder
       3: dup
       4: invokespecial #163                // Method okhttp3/Request$Builder."<init>":()V
       7: aload_0
       8: getfield      #12                 // Field route:Lokhttp3/Route;
      11: invokevirtual #20                 // Method okhttp3/Route.address:()Lokhttp3/Address;
      14: invokevirtual #32                 // Method okhttp3/Address.url:()Lokhttp3/HttpUrl;
      17: invokevirtual #164                // Method okhttp3/Request$Builder.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;
      20: ldc           #165                // String Host
      22: aload_0
      23: getfield      #12                 // Field route:Lokhttp3/Route;
      26: invokevirtual #20                 // Method okhttp3/Route.address:()Lokhttp3/Address;
      29: invokevirtual #32                 // Method okhttp3/Address.url:()Lokhttp3/HttpUrl;
      32: iconst_1
      33: invokestatic  #126                // Method okhttp3/internal/Util.hostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;
      36: invokevirtual #166                // Method okhttp3/Request$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
      39: ldc           #167                // String Proxy-Connection
      41: ldc           #168                // String Keep-Alive
      43: invokevirtual #166                // Method okhttp3/Request$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
      46: ldc           #169                // String User-Agent
      48: invokestatic  #170                // Method okhttp3/internal/Version.userAgent:()Ljava/lang/String;
      51: invokevirtual #166                // Method okhttp3/Request$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
      54: invokevirtual #171                // Method okhttp3/Request$Builder.build:()Lokhttp3/Request;
      57: areturn

  public boolean isEligible(okhttp3.Address, okhttp3.Route);
    Code:
       0: aload_0
       1: getfield      #6                  // Field allocations:Ljava/util/List;
       4: invokeinterface #172,  1          // InterfaceMethod java/util/List.size:()I
       9: aload_0
      10: getfield      #3                  // Field allocationLimit:I
      13: if_icmpge     23
      16: aload_0
      17: getfield      #173                // Field noNewStreams:Z
      20: ifeq          25
      23: iconst_0
      24: ireturn
      25: getstatic     #174                // Field okhttp3/internal/Internal.instance:Lokhttp3/internal/Internal;
      28: aload_0
      29: getfield      #12                 // Field route:Lokhttp3/Route;
      32: invokevirtual #20                 // Method okhttp3/Route.address:()Lokhttp3/Address;
      35: aload_1
      36: invokevirtual #175                // Method okhttp3/internal/Internal.equalsNonHost:(Lokhttp3/Address;Lokhttp3/Address;)Z
      39: ifne          44
      42: iconst_0
      43: ireturn
      44: aload_1
      45: invokevirtual #32                 // Method okhttp3/Address.url:()Lokhttp3/HttpUrl;
      48: invokevirtual #33                 // Method okhttp3/HttpUrl.host:()Ljava/lang/String;
      51: aload_0
      52: invokevirtual #176                // Method route:()Lokhttp3/Route;
      55: invokevirtual #20                 // Method okhttp3/Route.address:()Lokhttp3/Address;
      58: invokevirtual #32                 // Method okhttp3/Address.url:()Lokhttp3/HttpUrl;
      61: invokevirtual #33                 // Method okhttp3/HttpUrl.host:()Ljava/lang/String;
      64: invokevirtual #177                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      67: ifeq          72
      70: iconst_1
      71: ireturn
      72: aload_0
      73: getfield      #52                 // Field http2Connection:Lokhttp3/internal/http2/Http2Connection;
      76: ifnonnull     81
      79: iconst_0
      80: ireturn
      81: aload_2
      82: ifnonnull     87
      85: iconst_0
      86: ireturn
      87: aload_2
      88: invokevirtual #63                 // Method okhttp3/Route.proxy:()Ljava/net/Proxy;
      91: invokevirtual #64                 // Method java/net/Proxy.type:()Ljava/net/Proxy$Type;
      94: getstatic     #65                 // Field java/net/Proxy$Type.DIRECT:Ljava/net/Proxy$Type;
      97: if_acmpeq     102
     100: iconst_0
     101: ireturn
     102: aload_0
     103: getfield      #12                 // Field route:Lokhttp3/Route;
     106: invokevirtual #63                 // Method okhttp3/Route.proxy:()Ljava/net/Proxy;
     109: invokevirtual #64                 // Method java/net/Proxy.type:()Ljava/net/Proxy$Type;
     112: getstatic     #65                 // Field java/net/Proxy$Type.DIRECT:Ljava/net/Proxy$Type;
     115: if_acmpeq     120
     118: iconst_0
     119: ireturn
     120: aload_0
     121: getfield      #12                 // Field route:Lokhttp3/Route;
     124: invokevirtual #72                 // Method okhttp3/Route.socketAddress:()Ljava/net/InetSocketAddress;
     127: aload_2
     128: invokevirtual #72                 // Method okhttp3/Route.socketAddress:()Ljava/net/InetSocketAddress;
     131: invokevirtual #178                // Method java/net/InetSocketAddress.equals:(Ljava/lang/Object;)Z
     134: ifne          139
     137: iconst_0
     138: ireturn
     139: aload_2
     140: invokevirtual #20                 // Method okhttp3/Route.address:()Lokhttp3/Address;
     143: invokevirtual #102                // Method okhttp3/Address.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;
     146: getstatic     #179                // Field okhttp3/internal/tls/OkHostnameVerifier.INSTANCE:Lokhttp3/internal/tls/OkHostnameVerifier;
     149: if_acmpeq     154
     152: iconst_0
     153: ireturn
     154: aload_0
     155: aload_1
     156: invokevirtual #32                 // Method okhttp3/Address.url:()Lokhttp3/HttpUrl;
     159: invokevirtual #180                // Method supportsUrl:(Lokhttp3/HttpUrl;)Z
     162: ifne          167
     165: iconst_0
     166: ireturn
     167: aload_1
     168: invokevirtual #117                // Method okhttp3/Address.certificatePinner:()Lokhttp3/CertificatePinner;
     171: aload_1
     172: invokevirtual #32                 // Method okhttp3/Address.url:()Lokhttp3/HttpUrl;
     175: invokevirtual #33                 // Method okhttp3/HttpUrl.host:()Ljava/lang/String;
     178: aload_0
     179: invokevirtual #181                // Method handshake:()Lokhttp3/Handshake;
     182: invokevirtual #104                // Method okhttp3/Handshake.peerCertificates:()Ljava/util/List;
     185: invokevirtual #118                // Method okhttp3/CertificatePinner.check:(Ljava/lang/String;Ljava/util/List;)V
     188: goto          194
     191: astore_3
     192: iconst_0
     193: ireturn
     194: iconst_1
     195: ireturn
    Exception table:
       from    to  target type
         167   188   191   Class javax/net/ssl/SSLPeerUnverifiedException

  public boolean supportsUrl(okhttp3.HttpUrl);
    Code:
       0: aload_1
       1: invokevirtual #92                 // Method okhttp3/HttpUrl.port:()I
       4: aload_0
       5: getfield      #12                 // Field route:Lokhttp3/Route;
       8: invokevirtual #20                 // Method okhttp3/Route.address:()Lokhttp3/Address;
      11: invokevirtual #32                 // Method okhttp3/Address.url:()Lokhttp3/HttpUrl;
      14: invokevirtual #92                 // Method okhttp3/HttpUrl.port:()I
      17: if_icmpeq     22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: invokevirtual #33                 // Method okhttp3/HttpUrl.host:()Ljava/lang/String;
      26: aload_0
      27: getfield      #12                 // Field route:Lokhttp3/Route;
      30: invokevirtual #20                 // Method okhttp3/Route.address:()Lokhttp3/Address;
      33: invokevirtual #32                 // Method okhttp3/Address.url:()Lokhttp3/HttpUrl;
      36: invokevirtual #33                 // Method okhttp3/HttpUrl.host:()Ljava/lang/String;
      39: invokevirtual #177                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      42: ifne          87
      45: aload_0
      46: getfield      #51                 // Field handshake:Lokhttp3/Handshake;
      49: ifnull        85
      52: getstatic     #179                // Field okhttp3/internal/tls/OkHostnameVerifier.INSTANCE:Lokhttp3/internal/tls/OkHostnameVerifier;
      55: aload_1
      56: invokevirtual #33                 // Method okhttp3/HttpUrl.host:()Ljava/lang/String;
      59: aload_0
      60: getfield      #51                 // Field handshake:Lokhttp3/Handshake;
      63: invokevirtual #104                // Method okhttp3/Handshake.peerCertificates:()Ljava/util/List;
      66: iconst_0
      67: invokeinterface #105,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      72: checkcast     #106                // class java/security/cert/X509Certificate
      75: invokevirtual #182                // Method okhttp3/internal/tls/OkHostnameVerifier.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z
      78: ifeq          85
      81: iconst_1
      82: goto          86
      85: iconst_0
      86: ireturn
      87: iconst_1
      88: ireturn

  public okhttp3.internal.http.HttpCodec newCodec(okhttp3.OkHttpClient, okhttp3.internal.connection.StreamAllocation) throws java.net.SocketException;
    Code:
       0: aload_0
       1: getfield      #52                 // Field http2Connection:Lokhttp3/internal/http2/Http2Connection;
       4: ifnull        21
       7: new           #183                // class okhttp3/internal/http2/Http2Codec
      10: dup
      11: aload_1
      12: aload_2
      13: aload_0
      14: getfield      #52                 // Field http2Connection:Lokhttp3/internal/http2/Http2Connection;
      17: invokespecial #184                // Method okhttp3/internal/http2/Http2Codec."<init>":(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http2/Http2Connection;)V
      20: areturn
      21: aload_0
      22: getfield      #15                 // Field socket:Ljava/net/Socket;
      25: aload_1
      26: invokevirtual #185                // Method okhttp3/OkHttpClient.readTimeoutMillis:()I
      29: invokevirtual #71                 // Method java/net/Socket.setSoTimeout:(I)V
      32: aload_0
      33: getfield      #49                 // Field source:Lokio/BufferedSource;
      36: invokeinterface #130,  1          // InterfaceMethod okio/BufferedSource.timeout:()Lokio/Timeout;
      41: aload_1
      42: invokevirtual #185                // Method okhttp3/OkHttpClient.readTimeoutMillis:()I
      45: i2l
      46: getstatic     #131                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      49: invokevirtual #132                // Method okio/Timeout.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;
      52: pop
      53: aload_0
      54: getfield      #50                 // Field sink:Lokio/BufferedSink;
      57: invokeinterface #133,  1          // InterfaceMethod okio/BufferedSink.timeout:()Lokio/Timeout;
      62: aload_1
      63: invokevirtual #186                // Method okhttp3/OkHttpClient.writeTimeoutMillis:()I
      66: i2l
      67: getstatic     #131                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      70: invokevirtual #132                // Method okio/Timeout.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;
      73: pop
      74: new           #128                // class okhttp3/internal/http1/Http1Codec
      77: dup
      78: aload_1
      79: aload_2
      80: aload_0
      81: getfield      #49                 // Field source:Lokio/BufferedSource;
      84: aload_0
      85: getfield      #50                 // Field sink:Lokio/BufferedSink;
      88: invokespecial #129                // Method okhttp3/internal/http1/Http1Codec."<init>":(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/StreamAllocation;Lokio/BufferedSource;Lokio/BufferedSink;)V
      91: areturn

  public okhttp3.internal.ws.RealWebSocket$Streams newWebSocketStreams(okhttp3.internal.connection.StreamAllocation);
    Code:
       0: new           #187                // class okhttp3/internal/connection/RealConnection$1
       3: dup
       4: aload_0
       5: iconst_1
       6: aload_0
       7: getfield      #49                 // Field source:Lokio/BufferedSource;
      10: aload_0
      11: getfield      #50                 // Field sink:Lokio/BufferedSink;
      14: aload_1
      15: invokespecial #188                // Method okhttp3/internal/connection/RealConnection$1."<init>":(Lokhttp3/internal/connection/RealConnection;ZLokio/BufferedSource;Lokio/BufferedSink;Lokhttp3/internal/connection/StreamAllocation;)V
      18: areturn

  public okhttp3.Route route();
    Code:
       0: aload_0
       1: getfield      #12                 // Field route:Lokhttp3/Route;
       4: areturn

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #48                 // Field rawSocket:Ljava/net/Socket;
       4: invokestatic  #47                 // Method okhttp3/internal/Util.closeQuietly:(Ljava/net/Socket;)V
       7: return

  public java.net.Socket socket();
    Code:
       0: aload_0
       1: getfield      #15                 // Field socket:Ljava/net/Socket;
       4: areturn

  public boolean isHealthy(boolean);
    Code:
       0: aload_0
       1: getfield      #15                 // Field socket:Ljava/net/Socket;
       4: invokevirtual #189                // Method java/net/Socket.isClosed:()Z
       7: ifne          30
      10: aload_0
      11: getfield      #15                 // Field socket:Ljava/net/Socket;
      14: invokevirtual #190                // Method java/net/Socket.isInputShutdown:()Z
      17: ifne          30
      20: aload_0
      21: getfield      #15                 // Field socket:Ljava/net/Socket;
      24: invokevirtual #191                // Method java/net/Socket.isOutputShutdown:()Z
      27: ifeq          32
      30: iconst_0
      31: ireturn
      32: aload_0
      33: getfield      #52                 // Field http2Connection:Lokhttp3/internal/http2/Http2Connection;
      36: ifnull        55
      39: aload_0
      40: getfield      #52                 // Field http2Connection:Lokhttp3/internal/http2/Http2Connection;
      43: invokevirtual #192                // Method okhttp3/internal/http2/Http2Connection.isShutdown:()Z
      46: ifne          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: ireturn
      55: iload_1
      56: ifeq          131
      59: aload_0
      60: getfield      #15                 // Field socket:Ljava/net/Socket;
      63: invokevirtual #193                // Method java/net/Socket.getSoTimeout:()I
      66: istore_2
      67: aload_0
      68: getfield      #15                 // Field socket:Ljava/net/Socket;
      71: iconst_1
      72: invokevirtual #71                 // Method java/net/Socket.setSoTimeout:(I)V
      75: aload_0
      76: getfield      #49                 // Field source:Lokio/BufferedSource;
      79: invokeinterface #194,  1          // InterfaceMethod okio/BufferedSource.exhausted:()Z
      84: ifeq          99
      87: iconst_0
      88: istore_3
      89: aload_0
      90: getfield      #15                 // Field socket:Ljava/net/Socket;
      93: iload_2
      94: invokevirtual #71                 // Method java/net/Socket.setSoTimeout:(I)V
      97: iload_3
      98: ireturn
      99: iconst_1
     100: istore_3
     101: aload_0
     102: getfield      #15                 // Field socket:Ljava/net/Socket;
     105: iload_2
     106: invokevirtual #71                 // Method java/net/Socket.setSoTimeout:(I)V
     109: iload_3
     110: ireturn
     111: astore        4
     113: aload_0
     114: getfield      #15                 // Field socket:Ljava/net/Socket;
     117: iload_2
     118: invokevirtual #71                 // Method java/net/Socket.setSoTimeout:(I)V
     121: aload         4
     123: athrow
     124: astore_2
     125: goto          131
     128: astore_2
     129: iconst_0
     130: ireturn
     131: iconst_1
     132: ireturn
    Exception table:
       from    to  target type
          67    89   111   any
          99   101   111   any
         111   113   111   any
          59    97   124   Class java/net/SocketTimeoutException
          99   109   124   Class java/net/SocketTimeoutException
         111   124   124   Class java/net/SocketTimeoutException
          59    97   128   Class java/io/IOException
          99   109   128   Class java/io/IOException
         111   124   128   Class java/io/IOException

  public void onStream(okhttp3.internal.http2.Http2Stream) throws java.io.IOException;
    Code:
       0: aload_1
       1: getstatic     #196                // Field okhttp3/internal/http2/ErrorCode.REFUSED_STREAM:Lokhttp3/internal/http2/ErrorCode;
       4: invokevirtual #197                // Method okhttp3/internal/http2/Http2Stream.close:(Lokhttp3/internal/http2/ErrorCode;)V
       7: return

  public void onSettings(okhttp3.internal.http2.Http2Connection);
    Code:
       0: aload_0
       1: getfield      #11                 // Field connectionPool:Lokhttp3/ConnectionPool;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: aload_1
       9: invokevirtual #55                 // Method okhttp3/internal/http2/Http2Connection.maxConcurrentStreams:()I
      12: putfield      #3                  // Field allocationLimit:I
      15: aload_2
      16: monitorexit
      17: goto          25
      20: astore_3
      21: aload_2
      22: monitorexit
      23: aload_3
      24: athrow
      25: return
    Exception table:
       from    to  target type
           7    17    20   any
          20    23    20   any

  public okhttp3.Handshake handshake();
    Code:
       0: aload_0
       1: getfield      #51                 // Field handshake:Lokhttp3/Handshake;
       4: areturn

  public boolean isMultiplexed();
    Code:
       0: aload_0
       1: getfield      #52                 // Field http2Connection:Lokhttp3/internal/http2/Http2Connection;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public okhttp3.Protocol protocol();
    Code:
       0: aload_0
       1: getfield      #16                 // Field protocol:Lokhttp3/Protocol;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #36                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #198                // String Connection{
       9: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #12                 // Field route:Lokhttp3/Route;
      16: invokevirtual #20                 // Method okhttp3/Route.address:()Lokhttp3/Address;
      19: invokevirtual #32                 // Method okhttp3/Address.url:()Lokhttp3/HttpUrl;
      22: invokevirtual #33                 // Method okhttp3/HttpUrl.host:()Ljava/lang/String;
      25: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #199                // String :
      30: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: getfield      #12                 // Field route:Lokhttp3/Route;
      37: invokevirtual #20                 // Method okhttp3/Route.address:()Lokhttp3/Address;
      40: invokevirtual #32                 // Method okhttp3/Address.url:()Lokhttp3/HttpUrl;
      43: invokevirtual #92                 // Method okhttp3/HttpUrl.port:()I
      46: invokevirtual #60                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      49: ldc           #200                // String , proxy=
      51: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_0
      55: getfield      #12                 // Field route:Lokhttp3/Route;
      58: invokevirtual #63                 // Method okhttp3/Route.proxy:()Ljava/net/Proxy;
      61: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      64: ldc           #201                // String  hostAddress=
      66: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_0
      70: getfield      #12                 // Field route:Lokhttp3/Route;
      73: invokevirtual #72                 // Method okhttp3/Route.socketAddress:()Ljava/net/InetSocketAddress;
      76: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: ldc           #202                // String  cipherSuite=
      81: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: getfield      #51                 // Field handshake:Lokhttp3/Handshake;
      88: ifnull        101
      91: aload_0
      92: getfield      #51                 // Field handshake:Lokhttp3/Handshake;
      95: invokevirtual #203                // Method okhttp3/Handshake.cipherSuite:()Lokhttp3/CipherSuite;
      98: goto          103
     101: ldc           #204                // String none
     103: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     106: ldc           #205                // String  protocol=
     108: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload_0
     112: getfield      #16                 // Field protocol:Lokhttp3/Protocol;
     115: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     118: bipush        125
     120: invokevirtual #206                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     123: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     126: areturn
}
