Compiled from "RetryAndFollowUpInterceptor.java"
public final class okhttp3.internal.http.RetryAndFollowUpInterceptor implements okhttp3.Interceptor {
  private static final int MAX_FOLLOW_UPS;

  private final okhttp3.OkHttpClient client;

  private final boolean forWebSocket;

  private okhttp3.internal.connection.StreamAllocation streamAllocation;

  private java.lang.Object callStackTrace;

  private volatile boolean canceled;

  public okhttp3.internal.http.RetryAndFollowUpInterceptor(okhttp3.OkHttpClient, boolean);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field client:Lokhttp3/OkHttpClient;
       9: aload_0
      10: iload_2
      11: putfield      #5                  // Field forWebSocket:Z
      14: return

  public void cancel();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #6                  // Field canceled:Z
       5: aload_0
       6: getfield      #7                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
       9: astore_1
      10: aload_1
      11: ifnull        18
      14: aload_1
      15: invokevirtual #8                  // Method okhttp3/internal/connection/StreamAllocation.cancel:()V
      18: return

  public boolean isCanceled();
    Code:
       0: aload_0
       1: getfield      #6                  // Field canceled:Z
       4: ireturn

  public void setCallStackTrace(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field callStackTrace:Ljava/lang/Object;
       5: return

  public okhttp3.internal.connection.StreamAllocation streamAllocation();
    Code:
       0: aload_0
       1: getfield      #7                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
       4: areturn

  public okhttp3.Response intercept(okhttp3.Interceptor$Chain) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #10,  1           // InterfaceMethod okhttp3/Interceptor$Chain.request:()Lokhttp3/Request;
       6: astore_2
       7: aload_0
       8: new           #11                 // class okhttp3/internal/connection/StreamAllocation
      11: dup
      12: aload_0
      13: getfield      #4                  // Field client:Lokhttp3/OkHttpClient;
      16: invokevirtual #12                 // Method okhttp3/OkHttpClient.connectionPool:()Lokhttp3/ConnectionPool;
      19: aload_0
      20: aload_2
      21: invokevirtual #13                 // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
      24: invokespecial #14                 // Method createAddress:(Lokhttp3/HttpUrl;)Lokhttp3/Address;
      27: aload_0
      28: getfield      #9                  // Field callStackTrace:Ljava/lang/Object;
      31: invokespecial #15                 // Method okhttp3/internal/connection/StreamAllocation."<init>":(Lokhttp3/ConnectionPool;Lokhttp3/Address;Ljava/lang/Object;)V
      34: putfield      #7                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
      37: iconst_0
      38: istore_3
      39: aconst_null
      40: astore        4
      42: aload_0
      43: getfield      #6                  // Field canceled:Z
      46: ifeq          66
      49: aload_0
      50: getfield      #7                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
      53: invokevirtual #16                 // Method okhttp3/internal/connection/StreamAllocation.release:()V
      56: new           #17                 // class java/io/IOException
      59: dup
      60: ldc           #18                 // String Canceled
      62: invokespecial #19                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aconst_null
      67: astore        5
      69: iconst_1
      70: istore        6
      72: aload_1
      73: checkcast     #20                 // class okhttp3/internal/http/RealInterceptorChain
      76: aload_2
      77: aload_0
      78: getfield      #7                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
      81: aconst_null
      82: aconst_null
      83: invokevirtual #21                 // Method okhttp3/internal/http/RealInterceptorChain.proceed:(Lokhttp3/Request;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http/HttpCodec;Lokhttp3/internal/connection/RealConnection;)Lokhttp3/Response;
      86: astore        5
      88: iconst_0
      89: istore        6
      91: iload         6
      93: ifeq          245
      96: aload_0
      97: getfield      #7                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
     100: aconst_null
     101: invokevirtual #22                 // Method okhttp3/internal/connection/StreamAllocation.streamFailed:(Ljava/io/IOException;)V
     104: aload_0
     105: getfield      #7                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
     108: invokevirtual #16                 // Method okhttp3/internal/connection/StreamAllocation.release:()V
     111: goto          245
     114: astore        7
     116: aload_0
     117: aload         7
     119: invokevirtual #24                 // Method okhttp3/internal/connection/RouteException.getLastConnectException:()Ljava/io/IOException;
     122: iconst_0
     123: aload_2
     124: invokespecial #25                 // Method recover:(Ljava/io/IOException;ZLokhttp3/Request;)Z
     127: ifne          136
     130: aload         7
     132: invokevirtual #24                 // Method okhttp3/internal/connection/RouteException.getLastConnectException:()Ljava/io/IOException;
     135: athrow
     136: iconst_0
     137: istore        6
     139: iload         6
     141: ifeq          42
     144: aload_0
     145: getfield      #7                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
     148: aconst_null
     149: invokevirtual #22                 // Method okhttp3/internal/connection/StreamAllocation.streamFailed:(Ljava/io/IOException;)V
     152: aload_0
     153: getfield      #7                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
     156: invokevirtual #16                 // Method okhttp3/internal/connection/StreamAllocation.release:()V
     159: goto          42
     162: astore        7
     164: aload         7
     166: instanceof    #26                 // class okhttp3/internal/http2/ConnectionShutdownException
     169: ifne          176
     172: iconst_1
     173: goto          177
     176: iconst_0
     177: istore        8
     179: aload_0
     180: aload         7
     182: iload         8
     184: aload_2
     185: invokespecial #25                 // Method recover:(Ljava/io/IOException;ZLokhttp3/Request;)Z
     188: ifne          194
     191: aload         7
     193: athrow
     194: iconst_0
     195: istore        6
     197: iload         6
     199: ifeq          42
     202: aload_0
     203: getfield      #7                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
     206: aconst_null
     207: invokevirtual #22                 // Method okhttp3/internal/connection/StreamAllocation.streamFailed:(Ljava/io/IOException;)V
     210: aload_0
     211: getfield      #7                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
     214: invokevirtual #16                 // Method okhttp3/internal/connection/StreamAllocation.release:()V
     217: goto          42
     220: astore        9
     222: iload         6
     224: ifeq          242
     227: aload_0
     228: getfield      #7                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
     231: aconst_null
     232: invokevirtual #22                 // Method okhttp3/internal/connection/StreamAllocation.streamFailed:(Ljava/io/IOException;)V
     235: aload_0
     236: getfield      #7                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
     239: invokevirtual #16                 // Method okhttp3/internal/connection/StreamAllocation.release:()V
     242: aload         9
     244: athrow
     245: aload         4
     247: ifnull        275
     250: aload         5
     252: invokevirtual #27                 // Method okhttp3/Response.newBuilder:()Lokhttp3/Response$Builder;
     255: aload         4
     257: invokevirtual #27                 // Method okhttp3/Response.newBuilder:()Lokhttp3/Response$Builder;
     260: aconst_null
     261: invokevirtual #28                 // Method okhttp3/Response$Builder.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;
     264: invokevirtual #29                 // Method okhttp3/Response$Builder.build:()Lokhttp3/Response;
     267: invokevirtual #30                 // Method okhttp3/Response$Builder.priorResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;
     270: invokevirtual #29                 // Method okhttp3/Response$Builder.build:()Lokhttp3/Response;
     273: astore        5
     275: aload_0
     276: aload         5
     278: invokespecial #31                 // Method followUpRequest:(Lokhttp3/Response;)Lokhttp3/Request;
     281: astore        7
     283: aload         7
     285: ifnonnull     305
     288: aload_0
     289: getfield      #5                  // Field forWebSocket:Z
     292: ifne          302
     295: aload_0
     296: getfield      #7                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
     299: invokevirtual #16                 // Method okhttp3/internal/connection/StreamAllocation.release:()V
     302: aload         5
     304: areturn
     305: aload         5
     307: invokevirtual #32                 // Method okhttp3/Response.body:()Lokhttp3/ResponseBody;
     310: invokestatic  #33                 // Method okhttp3/internal/Util.closeQuietly:(Ljava/io/Closeable;)V
     313: iinc          3, 1
     316: iload_3
     317: bipush        20
     319: if_icmple     356
     322: aload_0
     323: getfield      #7                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
     326: invokevirtual #16                 // Method okhttp3/internal/connection/StreamAllocation.release:()V
     329: new           #35                 // class java/net/ProtocolException
     332: dup
     333: new           #36                 // class java/lang/StringBuilder
     336: dup
     337: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
     340: ldc           #38                 // String Too many follow-up requests:
     342: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     345: iload_3
     346: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     349: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     352: invokespecial #42                 // Method java/net/ProtocolException."<init>":(Ljava/lang/String;)V
     355: athrow
     356: aload         7
     358: invokevirtual #43                 // Method okhttp3/Request.body:()Lokhttp3/RequestBody;
     361: instanceof    #44                 // class okhttp3/internal/http/UnrepeatableRequestBody
     364: ifeq          389
     367: aload_0
     368: getfield      #7                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
     371: invokevirtual #16                 // Method okhttp3/internal/connection/StreamAllocation.release:()V
     374: new           #45                 // class java/net/HttpRetryException
     377: dup
     378: ldc           #46                 // String Cannot retry streamed HTTP body
     380: aload         5
     382: invokevirtual #47                 // Method okhttp3/Response.code:()I
     385: invokespecial #48                 // Method java/net/HttpRetryException."<init>":(Ljava/lang/String;I)V
     388: athrow
     389: aload_0
     390: aload         5
     392: aload         7
     394: invokevirtual #13                 // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
     397: invokespecial #49                 // Method sameConnection:(Lokhttp3/Response;Lokhttp3/HttpUrl;)Z
     400: ifne          444
     403: aload_0
     404: getfield      #7                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
     407: invokevirtual #16                 // Method okhttp3/internal/connection/StreamAllocation.release:()V
     410: aload_0
     411: new           #11                 // class okhttp3/internal/connection/StreamAllocation
     414: dup
     415: aload_0
     416: getfield      #4                  // Field client:Lokhttp3/OkHttpClient;
     419: invokevirtual #12                 // Method okhttp3/OkHttpClient.connectionPool:()Lokhttp3/ConnectionPool;
     422: aload_0
     423: aload         7
     425: invokevirtual #13                 // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
     428: invokespecial #14                 // Method createAddress:(Lokhttp3/HttpUrl;)Lokhttp3/Address;
     431: aload_0
     432: getfield      #9                  // Field callStackTrace:Ljava/lang/Object;
     435: invokespecial #15                 // Method okhttp3/internal/connection/StreamAllocation."<init>":(Lokhttp3/ConnectionPool;Lokhttp3/Address;Ljava/lang/Object;)V
     438: putfield      #7                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
     441: goto          487
     444: aload_0
     445: getfield      #7                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
     448: invokevirtual #50                 // Method okhttp3/internal/connection/StreamAllocation.codec:()Lokhttp3/internal/http/HttpCodec;
     451: ifnull        487
     454: new           #51                 // class java/lang/IllegalStateException
     457: dup
     458: new           #36                 // class java/lang/StringBuilder
     461: dup
     462: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
     465: ldc           #52                 // String Closing the body of
     467: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     470: aload         5
     472: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     475: ldc           #54                 // String  didn\'t close its backing stream. Bad interceptor?
     477: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     480: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     483: invokespecial #55                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     486: athrow
     487: aload         7
     489: astore_2
     490: aload         5
     492: astore        4
     494: goto          42
    Exception table:
       from    to  target type
          72    91   114   Class okhttp3/internal/connection/RouteException
          72    91   162   Class java/io/IOException
          72    91   220   any
         114   139   220   any
         162   197   220   any
         220   222   220   any

  private okhttp3.Address createAddress(okhttp3.HttpUrl);
    Code:
       0: aconst_null
       1: astore_2
       2: aconst_null
       3: astore_3
       4: aconst_null
       5: astore        4
       7: aload_1
       8: invokevirtual #56                 // Method okhttp3/HttpUrl.isHttps:()Z
      11: ifeq          39
      14: aload_0
      15: getfield      #4                  // Field client:Lokhttp3/OkHttpClient;
      18: invokevirtual #57                 // Method okhttp3/OkHttpClient.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;
      21: astore_2
      22: aload_0
      23: getfield      #4                  // Field client:Lokhttp3/OkHttpClient;
      26: invokevirtual #58                 // Method okhttp3/OkHttpClient.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;
      29: astore_3
      30: aload_0
      31: getfield      #4                  // Field client:Lokhttp3/OkHttpClient;
      34: invokevirtual #59                 // Method okhttp3/OkHttpClient.certificatePinner:()Lokhttp3/CertificatePinner;
      37: astore        4
      39: new           #60                 // class okhttp3/Address
      42: dup
      43: aload_1
      44: invokevirtual #61                 // Method okhttp3/HttpUrl.host:()Ljava/lang/String;
      47: aload_1
      48: invokevirtual #62                 // Method okhttp3/HttpUrl.port:()I
      51: aload_0
      52: getfield      #4                  // Field client:Lokhttp3/OkHttpClient;
      55: invokevirtual #63                 // Method okhttp3/OkHttpClient.dns:()Lokhttp3/Dns;
      58: aload_0
      59: getfield      #4                  // Field client:Lokhttp3/OkHttpClient;
      62: invokevirtual #64                 // Method okhttp3/OkHttpClient.socketFactory:()Ljavax/net/SocketFactory;
      65: aload_2
      66: aload_3
      67: aload         4
      69: aload_0
      70: getfield      #4                  // Field client:Lokhttp3/OkHttpClient;
      73: invokevirtual #65                 // Method okhttp3/OkHttpClient.proxyAuthenticator:()Lokhttp3/Authenticator;
      76: aload_0
      77: getfield      #4                  // Field client:Lokhttp3/OkHttpClient;
      80: invokevirtual #66                 // Method okhttp3/OkHttpClient.proxy:()Ljava/net/Proxy;
      83: aload_0
      84: getfield      #4                  // Field client:Lokhttp3/OkHttpClient;
      87: invokevirtual #67                 // Method okhttp3/OkHttpClient.protocols:()Ljava/util/List;
      90: aload_0
      91: getfield      #4                  // Field client:Lokhttp3/OkHttpClient;
      94: invokevirtual #68                 // Method okhttp3/OkHttpClient.connectionSpecs:()Ljava/util/List;
      97: aload_0
      98: getfield      #4                  // Field client:Lokhttp3/OkHttpClient;
     101: invokevirtual #69                 // Method okhttp3/OkHttpClient.proxySelector:()Ljava/net/ProxySelector;
     104: invokespecial #70                 // Method okhttp3/Address."<init>":(Ljava/lang/String;ILokhttp3/Dns;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;Lokhttp3/CertificatePinner;Lokhttp3/Authenticator;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V
     107: areturn

  private boolean recover(java.io.IOException, boolean, okhttp3.Request);
    Code:
       0: aload_0
       1: getfield      #7                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
       4: aload_1
       5: invokevirtual #22                 // Method okhttp3/internal/connection/StreamAllocation.streamFailed:(Ljava/io/IOException;)V
       8: aload_0
       9: getfield      #4                  // Field client:Lokhttp3/OkHttpClient;
      12: invokevirtual #71                 // Method okhttp3/OkHttpClient.retryOnConnectionFailure:()Z
      15: ifne          20
      18: iconst_0
      19: ireturn
      20: iload_2
      21: ifeq          36
      24: aload_3
      25: invokevirtual #43                 // Method okhttp3/Request.body:()Lokhttp3/RequestBody;
      28: instanceof    #44                 // class okhttp3/internal/http/UnrepeatableRequestBody
      31: ifeq          36
      34: iconst_0
      35: ireturn
      36: aload_0
      37: aload_1
      38: iload_2
      39: invokespecial #72                 // Method isRecoverable:(Ljava/io/IOException;Z)Z
      42: ifne          47
      45: iconst_0
      46: ireturn
      47: aload_0
      48: getfield      #7                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
      51: invokevirtual #73                 // Method okhttp3/internal/connection/StreamAllocation.hasMoreRoutes:()Z
      54: ifne          59
      57: iconst_0
      58: ireturn
      59: iconst_1
      60: ireturn

  private boolean isRecoverable(java.io.IOException, boolean);
    Code:
       0: aload_1
       1: instanceof    #35                 // class java/net/ProtocolException
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: instanceof    #74                 // class java/io/InterruptedIOException
      13: ifeq          33
      16: aload_1
      17: instanceof    #75                 // class java/net/SocketTimeoutException
      20: ifeq          31
      23: iload_2
      24: ifne          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn
      33: aload_1
      34: instanceof    #76                 // class javax/net/ssl/SSLHandshakeException
      37: ifeq          52
      40: aload_1
      41: invokevirtual #77                 // Method java/io/IOException.getCause:()Ljava/lang/Throwable;
      44: instanceof    #78                 // class java/security/cert/CertificateException
      47: ifeq          52
      50: iconst_0
      51: ireturn
      52: aload_1
      53: instanceof    #79                 // class javax/net/ssl/SSLPeerUnverifiedException
      56: ifeq          61
      59: iconst_0
      60: ireturn
      61: iconst_1
      62: ireturn

  private okhttp3.Request followUpRequest(okhttp3.Response) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #51                 // class java/lang/IllegalStateException
       7: dup
       8: invokespecial #80                 // Method java/lang/IllegalStateException."<init>":()V
      11: athrow
      12: aload_0
      13: getfield      #7                  // Field streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
      16: invokevirtual #81                 // Method okhttp3/internal/connection/StreamAllocation.connection:()Lokhttp3/internal/connection/RealConnection;
      19: astore_2
      20: aload_2
      21: ifnull        33
      24: aload_2
      25: invokeinterface #82,  1           // InterfaceMethod okhttp3/Connection.route:()Lokhttp3/Route;
      30: goto          34
      33: aconst_null
      34: astore_3
      35: aload_1
      36: invokevirtual #47                 // Method okhttp3/Response.code:()I
      39: istore        4
      41: aload_1
      42: invokevirtual #83                 // Method okhttp3/Response.request:()Lokhttp3/Request;
      45: invokevirtual #84                 // Method okhttp3/Request.method:()Ljava/lang/String;
      48: astore        5
      50: iload         4
      52: lookupswitch  { // 9
                   300: 229
                   301: 229
                   302: 229
                   303: 229
                   307: 207
                   308: 207
                   401: 192
                   407: 136
                   408: 444
               default: 464
          }
     136: aload_3
     137: ifnull        147
     140: aload_3
     141: invokevirtual #85                 // Method okhttp3/Route.proxy:()Ljava/net/Proxy;
     144: goto          154
     147: aload_0
     148: getfield      #4                  // Field client:Lokhttp3/OkHttpClient;
     151: invokevirtual #66                 // Method okhttp3/OkHttpClient.proxy:()Ljava/net/Proxy;
     154: astore        6
     156: aload         6
     158: invokevirtual #86                 // Method java/net/Proxy.type:()Ljava/net/Proxy$Type;
     161: getstatic     #87                 // Field java/net/Proxy$Type.HTTP:Ljava/net/Proxy$Type;
     164: if_acmpeq     177
     167: new           #35                 // class java/net/ProtocolException
     170: dup
     171: ldc           #88                 // String Received HTTP_PROXY_AUTH (407) code while not using proxy
     173: invokespecial #42                 // Method java/net/ProtocolException."<init>":(Ljava/lang/String;)V
     176: athrow
     177: aload_0
     178: getfield      #4                  // Field client:Lokhttp3/OkHttpClient;
     181: invokevirtual #65                 // Method okhttp3/OkHttpClient.proxyAuthenticator:()Lokhttp3/Authenticator;
     184: aload_3
     185: aload_1
     186: invokeinterface #89,  3           // InterfaceMethod okhttp3/Authenticator.authenticate:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;
     191: areturn
     192: aload_0
     193: getfield      #4                  // Field client:Lokhttp3/OkHttpClient;
     196: invokevirtual #90                 // Method okhttp3/OkHttpClient.authenticator:()Lokhttp3/Authenticator;
     199: aload_3
     200: aload_1
     201: invokeinterface #89,  3           // InterfaceMethod okhttp3/Authenticator.authenticate:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;
     206: areturn
     207: aload         5
     209: ldc           #91                 // String GET
     211: invokevirtual #92                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     214: ifne          229
     217: aload         5
     219: ldc           #93                 // String HEAD
     221: invokevirtual #92                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     224: ifne          229
     227: aconst_null
     228: areturn
     229: aload_0
     230: getfield      #4                  // Field client:Lokhttp3/OkHttpClient;
     233: invokevirtual #94                 // Method okhttp3/OkHttpClient.followRedirects:()Z
     236: ifne          241
     239: aconst_null
     240: areturn
     241: aload_1
     242: ldc           #95                 // String Location
     244: invokevirtual #96                 // Method okhttp3/Response.header:(Ljava/lang/String;)Ljava/lang/String;
     247: astore        7
     249: aload         7
     251: ifnonnull     256
     254: aconst_null
     255: areturn
     256: aload_1
     257: invokevirtual #83                 // Method okhttp3/Response.request:()Lokhttp3/Request;
     260: invokevirtual #13                 // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
     263: aload         7
     265: invokevirtual #97                 // Method okhttp3/HttpUrl.resolve:(Ljava/lang/String;)Lokhttp3/HttpUrl;
     268: astore        8
     270: aload         8
     272: ifnonnull     277
     275: aconst_null
     276: areturn
     277: aload         8
     279: invokevirtual #98                 // Method okhttp3/HttpUrl.scheme:()Ljava/lang/String;
     282: aload_1
     283: invokevirtual #83                 // Method okhttp3/Response.request:()Lokhttp3/Request;
     286: invokevirtual #13                 // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
     289: invokevirtual #98                 // Method okhttp3/HttpUrl.scheme:()Ljava/lang/String;
     292: invokevirtual #92                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     295: istore        9
     297: iload         9
     299: ifne          314
     302: aload_0
     303: getfield      #4                  // Field client:Lokhttp3/OkHttpClient;
     306: invokevirtual #99                 // Method okhttp3/OkHttpClient.followSslRedirects:()Z
     309: ifne          314
     312: aconst_null
     313: areturn
     314: aload_1
     315: invokevirtual #83                 // Method okhttp3/Response.request:()Lokhttp3/Request;
     318: invokevirtual #100                // Method okhttp3/Request.newBuilder:()Lokhttp3/Request$Builder;
     321: astore        10
     323: aload         5
     325: invokestatic  #101                // Method okhttp3/internal/http/HttpMethod.permitsRequestBody:(Ljava/lang/String;)Z
     328: ifeq          415
     331: aload         5
     333: invokestatic  #102                // Method okhttp3/internal/http/HttpMethod.redirectsWithBody:(Ljava/lang/String;)Z
     336: istore        11
     338: aload         5
     340: invokestatic  #103                // Method okhttp3/internal/http/HttpMethod.redirectsToGet:(Ljava/lang/String;)Z
     343: ifeq          358
     346: aload         10
     348: ldc           #91                 // String GET
     350: aconst_null
     351: invokevirtual #104                // Method okhttp3/Request$Builder.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;
     354: pop
     355: goto          386
     358: iload         11
     360: ifeq          373
     363: aload_1
     364: invokevirtual #83                 // Method okhttp3/Response.request:()Lokhttp3/Request;
     367: invokevirtual #43                 // Method okhttp3/Request.body:()Lokhttp3/RequestBody;
     370: goto          374
     373: aconst_null
     374: astore        12
     376: aload         10
     378: aload         5
     380: aload         12
     382: invokevirtual #104                // Method okhttp3/Request$Builder.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;
     385: pop
     386: iload         11
     388: ifne          415
     391: aload         10
     393: ldc           #105                // String Transfer-Encoding
     395: invokevirtual #106                // Method okhttp3/Request$Builder.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;
     398: pop
     399: aload         10
     401: ldc           #107                // String Content-Length
     403: invokevirtual #106                // Method okhttp3/Request$Builder.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;
     406: pop
     407: aload         10
     409: ldc           #108                // String Content-Type
     411: invokevirtual #106                // Method okhttp3/Request$Builder.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;
     414: pop
     415: aload_0
     416: aload_1
     417: aload         8
     419: invokespecial #49                 // Method sameConnection:(Lokhttp3/Response;Lokhttp3/HttpUrl;)Z
     422: ifne          433
     425: aload         10
     427: ldc           #109                // String Authorization
     429: invokevirtual #106                // Method okhttp3/Request$Builder.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;
     432: pop
     433: aload         10
     435: aload         8
     437: invokevirtual #110                // Method okhttp3/Request$Builder.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;
     440: invokevirtual #111                // Method okhttp3/Request$Builder.build:()Lokhttp3/Request;
     443: areturn
     444: aload_1
     445: invokevirtual #83                 // Method okhttp3/Response.request:()Lokhttp3/Request;
     448: invokevirtual #43                 // Method okhttp3/Request.body:()Lokhttp3/RequestBody;
     451: instanceof    #44                 // class okhttp3/internal/http/UnrepeatableRequestBody
     454: ifeq          459
     457: aconst_null
     458: areturn
     459: aload_1
     460: invokevirtual #83                 // Method okhttp3/Response.request:()Lokhttp3/Request;
     463: areturn
     464: aconst_null
     465: areturn

  private boolean sameConnection(okhttp3.Response, okhttp3.HttpUrl);
    Code:
       0: aload_1
       1: invokevirtual #83                 // Method okhttp3/Response.request:()Lokhttp3/Request;
       4: invokevirtual #13                 // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
       7: astore_3
       8: aload_3
       9: invokevirtual #61                 // Method okhttp3/HttpUrl.host:()Ljava/lang/String;
      12: aload_2
      13: invokevirtual #61                 // Method okhttp3/HttpUrl.host:()Ljava/lang/String;
      16: invokevirtual #92                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      19: ifeq          51
      22: aload_3
      23: invokevirtual #62                 // Method okhttp3/HttpUrl.port:()I
      26: aload_2
      27: invokevirtual #62                 // Method okhttp3/HttpUrl.port:()I
      30: if_icmpne     51
      33: aload_3
      34: invokevirtual #98                 // Method okhttp3/HttpUrl.scheme:()Ljava/lang/String;
      37: aload_2
      38: invokevirtual #98                 // Method okhttp3/HttpUrl.scheme:()Ljava/lang/String;
      41: invokevirtual #92                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      44: ifeq          51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: ireturn
}
