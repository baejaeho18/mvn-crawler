Compiled from "Http2Connection.java"
class okhttp3.internal.http2.Http2Connection$5 extends okhttp3.internal.NamedRunnable {
  final int val$streamId;

  final java.util.List val$requestHeaders;

  final boolean val$inFinished;

  final okhttp3.internal.http2.Http2Connection this$0;

  okhttp3.internal.http2.Http2Connection$5(okhttp3.internal.http2.Http2Connection, java.lang.String, java.lang.Object..., int, java.util.List, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Connection;
       5: aload_0
       6: iload         4
       8: putfield      #2                  // Field val$streamId:I
      11: aload_0
      12: aload         5
      14: putfield      #3                  // Field val$requestHeaders:Ljava/util/List;
      17: aload_0
      18: iload         6
      20: putfield      #4                  // Field val$inFinished:Z
      23: aload_0
      24: aload_2
      25: aload_3
      26: invokespecial #5                  // Method okhttp3/internal/NamedRunnable."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      29: return

  public void execute();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Connection;
       4: getfield      #6                  // Field okhttp3/internal/http2/Http2Connection.pushObserver:Lokhttp3/internal/http2/PushObserver;
       7: aload_0
       8: getfield      #2                  // Field val$streamId:I
      11: aload_0
      12: getfield      #3                  // Field val$requestHeaders:Ljava/util/List;
      15: aload_0
      16: getfield      #4                  // Field val$inFinished:Z
      19: invokeinterface #7,  4            // InterfaceMethod okhttp3/internal/http2/PushObserver.onHeaders:(ILjava/util/List;Z)Z
      24: istore_1
      25: iload_1
      26: ifeq          46
      29: aload_0
      30: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      33: getfield      #8                  // Field okhttp3/internal/http2/Http2Connection.writer:Lokhttp3/internal/http2/Http2Writer;
      36: aload_0
      37: getfield      #2                  // Field val$streamId:I
      40: getstatic     #9                  // Field okhttp3/internal/http2/ErrorCode.CANCEL:Lokhttp3/internal/http2/ErrorCode;
      43: invokevirtual #10                 // Method okhttp3/internal/http2/Http2Writer.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V
      46: iload_1
      47: ifne          57
      50: aload_0
      51: getfield      #4                  // Field val$inFinished:Z
      54: ifeq          94
      57: aload_0
      58: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      61: dup
      62: astore_2
      63: monitorenter
      64: aload_0
      65: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      68: getfield      #11                 // Field okhttp3/internal/http2/Http2Connection.currentPushRequests:Ljava/util/Set;
      71: aload_0
      72: getfield      #2                  // Field val$streamId:I
      75: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      78: invokeinterface #13,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      83: pop
      84: aload_2
      85: monitorexit
      86: goto          94
      89: astore_3
      90: aload_2
      91: monitorexit
      92: aload_3
      93: athrow
      94: goto          98
      97: astore_2
      98: return
    Exception table:
       from    to  target type
          64    86    89   any
          89    92    89   any
          25    94    97   Class java/io/IOException
}
