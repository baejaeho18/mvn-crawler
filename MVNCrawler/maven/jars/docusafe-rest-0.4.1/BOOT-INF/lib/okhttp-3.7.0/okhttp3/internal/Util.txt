Compiled from "Util.java"
public final class okhttp3.internal.Util {
  public static final byte[] EMPTY_BYTE_ARRAY;

  public static final java.lang.String[] EMPTY_STRING_ARRAY;

  public static final okhttp3.ResponseBody EMPTY_RESPONSE;

  public static final okhttp3.RequestBody EMPTY_REQUEST;

  private static final okio.ByteString UTF_8_BOM;

  private static final okio.ByteString UTF_16_BE_BOM;

  private static final okio.ByteString UTF_16_LE_BOM;

  private static final okio.ByteString UTF_32_BE_BOM;

  private static final okio.ByteString UTF_32_LE_BOM;

  public static final java.nio.charset.Charset UTF_8;

  private static final java.nio.charset.Charset UTF_16_BE;

  private static final java.nio.charset.Charset UTF_16_LE;

  private static final java.nio.charset.Charset UTF_32_BE;

  private static final java.nio.charset.Charset UTF_32_LE;

  public static final java.util.TimeZone UTC;

  public static final java.util.Comparator<java.lang.String> NATURAL_ORDER;

  private static final java.util.regex.Pattern VERIFY_AS_IP_ADDRESS;

  private okhttp3.internal.Util();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void checkOffsetAndCount(long, long, long);
    Code:
       0: lload_2
       1: lload         4
       3: lor
       4: lconst_0
       5: lcmp
       6: iflt          24
       9: lload_2
      10: lload_0
      11: lcmp
      12: ifgt          24
      15: lload_0
      16: lload_2
      17: lsub
      18: lload         4
      20: lcmp
      21: ifge          32
      24: new           #2                  // class java/lang/ArrayIndexOutOfBoundsException
      27: dup
      28: invokespecial #3                  // Method java/lang/ArrayIndexOutOfBoundsException."<init>":()V
      31: athrow
      32: return

  public static boolean equal(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     17
       5: aload_0
       6: ifnull        21
       9: aload_0
      10: aload_1
      11: invokevirtual #4                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public static void closeQuietly(java.io.Closeable);
    Code:
       0: aload_0
       1: ifnull        17
       4: aload_0
       5: invokeinterface #5,  1            // InterfaceMethod java/io/Closeable.close:()V
      10: goto          17
      13: astore_1
      14: aload_1
      15: athrow
      16: astore_1
      17: return
    Exception table:
       from    to  target type
           4    10    13   Class java/lang/RuntimeException
           4    10    16   Class java/lang/Exception

  public static void closeQuietly(java.net.Socket);
    Code:
       0: aload_0
       1: ifnull        28
       4: aload_0
       5: invokevirtual #8                  // Method java/net/Socket.close:()V
       8: goto          28
      11: astore_1
      12: aload_1
      13: invokestatic  #10                 // Method isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z
      16: ifne          21
      19: aload_1
      20: athrow
      21: goto          28
      24: astore_1
      25: aload_1
      26: athrow
      27: astore_1
      28: return
    Exception table:
       from    to  target type
           4     8    11   Class java/lang/AssertionError
           4     8    24   Class java/lang/RuntimeException
           4     8    27   Class java/lang/Exception

  public static void closeQuietly(java.net.ServerSocket);
    Code:
       0: aload_0
       1: ifnull        15
       4: aload_0
       5: invokevirtual #11                 // Method java/net/ServerSocket.close:()V
       8: goto          15
      11: astore_1
      12: aload_1
      13: athrow
      14: astore_1
      15: return
    Exception table:
       from    to  target type
           4     8    11   Class java/lang/RuntimeException
           4     8    14   Class java/lang/Exception

  public static boolean discard(okio.Source, int, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #12                 // Method skipAll:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z
       6: ireturn
       7: astore_3
       8: iconst_0
       9: ireturn
    Exception table:
       from    to  target type
           0     6     7   Class java/io/IOException

  public static boolean skipAll(okio.Source, int, java.util.concurrent.TimeUnit) throws java.io.IOException;
    Code:
       0: invokestatic  #14                 // Method java/lang/System.nanoTime:()J
       3: lstore_3
       4: aload_0
       5: invokeinterface #15,  1           // InterfaceMethod okio/Source.timeout:()Lokio/Timeout;
      10: invokevirtual #16                 // Method okio/Timeout.hasDeadline:()Z
      13: ifeq          30
      16: aload_0
      17: invokeinterface #15,  1           // InterfaceMethod okio/Source.timeout:()Lokio/Timeout;
      22: invokevirtual #17                 // Method okio/Timeout.deadlineNanoTime:()J
      25: lload_3
      26: lsub
      27: goto          33
      30: ldc2_w        #19                 // long 9223372036854775807l
      33: lstore        5
      35: aload_0
      36: invokeinterface #15,  1           // InterfaceMethod okio/Source.timeout:()Lokio/Timeout;
      41: lload_3
      42: lload         5
      44: aload_2
      45: iload_1
      46: i2l
      47: invokevirtual #21                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      50: invokestatic  #22                 // Method java/lang/Math.min:(JJ)J
      53: ladd
      54: invokevirtual #23                 // Method okio/Timeout.deadlineNanoTime:(J)Lokio/Timeout;
      57: pop
      58: new           #24                 // class okio/Buffer
      61: dup
      62: invokespecial #25                 // Method okio/Buffer."<init>":()V
      65: astore        7
      67: aload_0
      68: aload         7
      70: ldc2_w        #26                 // long 8192l
      73: invokeinterface #28,  4           // InterfaceMethod okio/Source.read:(Lokio/Buffer;J)J
      78: ldc2_w        #29                 // long -1l
      81: lcmp
      82: ifeq          93
      85: aload         7
      87: invokevirtual #31                 // Method okio/Buffer.clear:()V
      90: goto          67
      93: iconst_1
      94: istore        8
      96: lload         5
      98: ldc2_w        #19                 // long 9223372036854775807l
     101: lcmp
     102: ifne          118
     105: aload_0
     106: invokeinterface #15,  1           // InterfaceMethod okio/Source.timeout:()Lokio/Timeout;
     111: invokevirtual #32                 // Method okio/Timeout.clearDeadline:()Lokio/Timeout;
     114: pop
     115: goto          132
     118: aload_0
     119: invokeinterface #15,  1           // InterfaceMethod okio/Source.timeout:()Lokio/Timeout;
     124: lload_3
     125: lload         5
     127: ladd
     128: invokevirtual #23                 // Method okio/Timeout.deadlineNanoTime:(J)Lokio/Timeout;
     131: pop
     132: iload         8
     134: ireturn
     135: astore        7
     137: iconst_0
     138: istore        8
     140: lload         5
     142: ldc2_w        #19                 // long 9223372036854775807l
     145: lcmp
     146: ifne          162
     149: aload_0
     150: invokeinterface #15,  1           // InterfaceMethod okio/Source.timeout:()Lokio/Timeout;
     155: invokevirtual #32                 // Method okio/Timeout.clearDeadline:()Lokio/Timeout;
     158: pop
     159: goto          176
     162: aload_0
     163: invokeinterface #15,  1           // InterfaceMethod okio/Source.timeout:()Lokio/Timeout;
     168: lload_3
     169: lload         5
     171: ladd
     172: invokevirtual #23                 // Method okio/Timeout.deadlineNanoTime:(J)Lokio/Timeout;
     175: pop
     176: iload         8
     178: ireturn
     179: astore        9
     181: lload         5
     183: ldc2_w        #19                 // long 9223372036854775807l
     186: lcmp
     187: ifne          203
     190: aload_0
     191: invokeinterface #15,  1           // InterfaceMethod okio/Source.timeout:()Lokio/Timeout;
     196: invokevirtual #32                 // Method okio/Timeout.clearDeadline:()Lokio/Timeout;
     199: pop
     200: goto          217
     203: aload_0
     204: invokeinterface #15,  1           // InterfaceMethod okio/Source.timeout:()Lokio/Timeout;
     209: lload_3
     210: lload         5
     212: ladd
     213: invokevirtual #23                 // Method okio/Timeout.deadlineNanoTime:(J)Lokio/Timeout;
     216: pop
     217: aload         9
     219: athrow
    Exception table:
       from    to  target type
          58    96   135   Class java/io/InterruptedIOException
          58    96   179   any
         135   140   179   any
         179   181   179   any

  public static <T> java.util.List<T> immutableList(java.util.List<T>);
    Code:
       0: new           #34                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: invokespecial #35                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
       8: invokestatic  #36                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      11: areturn

  public static <T> java.util.List<T> immutableList(T...);
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method "[Ljava/lang/Object;".clone:()Ljava/lang/Object;
       4: checkcast     #38                 // class "[Ljava/lang/Object;"
       7: invokestatic  #39                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      10: invokestatic  #36                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      13: areturn

  public static java.util.concurrent.ThreadFactory threadFactory(java.lang.String, boolean);
    Code:
       0: new           #40                 // class okhttp3/internal/Util$2
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #41                 // Method okhttp3/internal/Util$2."<init>":(Ljava/lang/String;Z)V
       9: areturn

  public static java.lang.String[] intersect(java.util.Comparator<? super java.lang.String>, java.lang.String[], java.lang.String[]);
    Code:
       0: new           #34                 // class java/util/ArrayList
       3: dup
       4: invokespecial #42                 // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: aload_1
       9: astore        4
      11: aload         4
      13: arraylength
      14: istore        5
      16: iconst_0
      17: istore        6
      19: iload         6
      21: iload         5
      23: if_icmpge     95
      26: aload         4
      28: iload         6
      30: aaload
      31: astore        7
      33: aload_2
      34: astore        8
      36: aload         8
      38: arraylength
      39: istore        9
      41: iconst_0
      42: istore        10
      44: iload         10
      46: iload         9
      48: if_icmpge     89
      51: aload         8
      53: iload         10
      55: aaload
      56: astore        11
      58: aload_0
      59: aload         7
      61: aload         11
      63: invokeinterface #43,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      68: ifne          83
      71: aload_3
      72: aload         7
      74: invokeinterface #44,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      79: pop
      80: goto          89
      83: iinc          10, 1
      86: goto          44
      89: iinc          6, 1
      92: goto          19
      95: aload_3
      96: aload_3
      97: invokeinterface #45,  1           // InterfaceMethod java/util/List.size:()I
     102: anewarray     #46                 // class java/lang/String
     105: invokeinterface #47,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     110: checkcast     #48                 // class "[Ljava/lang/String;"
     113: areturn

  public static boolean nonEmptyIntersection(java.util.Comparator<java.lang.String>, java.lang.String[], java.lang.String[]);
    Code:
       0: aload_1
       1: ifnull        18
       4: aload_2
       5: ifnull        18
       8: aload_1
       9: arraylength
      10: ifeq          18
      13: aload_2
      14: arraylength
      15: ifne          20
      18: iconst_0
      19: ireturn
      20: aload_1
      21: astore_3
      22: aload_3
      23: arraylength
      24: istore        4
      26: iconst_0
      27: istore        5
      29: iload         5
      31: iload         4
      33: if_icmpge     94
      36: aload_3
      37: iload         5
      39: aaload
      40: astore        6
      42: aload_2
      43: astore        7
      45: aload         7
      47: arraylength
      48: istore        8
      50: iconst_0
      51: istore        9
      53: iload         9
      55: iload         8
      57: if_icmpge     88
      60: aload         7
      62: iload         9
      64: aaload
      65: astore        10
      67: aload_0
      68: aload         6
      70: aload         10
      72: invokeinterface #43,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      77: ifne          82
      80: iconst_1
      81: ireturn
      82: iinc          9, 1
      85: goto          53
      88: iinc          5, 1
      91: goto          29
      94: iconst_0
      95: ireturn

  public static java.lang.String hostHeader(okhttp3.HttpUrl, boolean);
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method okhttp3/HttpUrl.host:()Ljava/lang/String;
       4: ldc           #50                 // String :
       6: invokevirtual #51                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
       9: ifeq          42
      12: new           #52                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #53                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #54                 // String [
      21: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #49                 // Method okhttp3/HttpUrl.host:()Ljava/lang/String;
      28: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #56                 // String ]
      33: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: goto          46
      42: aload_0
      43: invokevirtual #49                 // Method okhttp3/HttpUrl.host:()Ljava/lang/String;
      46: astore_2
      47: iload_1
      48: ifne          65
      51: aload_0
      52: invokevirtual #58                 // Method okhttp3/HttpUrl.port:()I
      55: aload_0
      56: invokevirtual #59                 // Method okhttp3/HttpUrl.scheme:()Ljava/lang/String;
      59: invokestatic  #60                 // Method okhttp3/HttpUrl.defaultPort:(Ljava/lang/String;)I
      62: if_icmpeq     94
      65: new           #52                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #53                 // Method java/lang/StringBuilder."<init>":()V
      72: aload_2
      73: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: ldc           #50                 // String :
      78: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload_0
      82: invokevirtual #58                 // Method okhttp3/HttpUrl.port:()I
      85: invokevirtual #61                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      88: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: goto          95
      94: aload_2
      95: areturn

  public static java.lang.String toHumanReadableAscii(java.lang.String);
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #62                 // Method java/lang/String.length:()I
       6: istore_2
       7: iload_1
       8: iload_2
       9: if_icmpge     119
      12: aload_0
      13: iload_1
      14: invokevirtual #63                 // Method java/lang/String.codePointAt:(I)I
      17: istore_3
      18: iload_3
      19: bipush        31
      21: if_icmple     33
      24: iload_3
      25: bipush        127
      27: if_icmpge     33
      30: goto          109
      33: new           #24                 // class okio/Buffer
      36: dup
      37: invokespecial #25                 // Method okio/Buffer."<init>":()V
      40: astore        4
      42: aload         4
      44: aload_0
      45: iconst_0
      46: iload_1
      47: invokevirtual #64                 // Method okio/Buffer.writeUtf8:(Ljava/lang/String;II)Lokio/Buffer;
      50: pop
      51: iload_1
      52: istore        5
      54: iload         5
      56: iload_2
      57: if_icmpge     103
      60: aload_0
      61: iload         5
      63: invokevirtual #63                 // Method java/lang/String.codePointAt:(I)I
      66: istore_3
      67: aload         4
      69: iload_3
      70: bipush        31
      72: if_icmple     85
      75: iload_3
      76: bipush        127
      78: if_icmpge     85
      81: iload_3
      82: goto          87
      85: bipush        63
      87: invokevirtual #65                 // Method okio/Buffer.writeUtf8CodePoint:(I)Lokio/Buffer;
      90: pop
      91: iload         5
      93: iload_3
      94: invokestatic  #66                 // Method java/lang/Character.charCount:(I)I
      97: iadd
      98: istore        5
     100: goto          54
     103: aload         4
     105: invokevirtual #67                 // Method okio/Buffer.readUtf8:()Ljava/lang/String;
     108: areturn
     109: iload_1
     110: iload_3
     111: invokestatic  #66                 // Method java/lang/Character.charCount:(I)I
     114: iadd
     115: istore_1
     116: goto          7
     119: aload_0
     120: areturn

  public static boolean isAndroidGetsocknameError(java.lang.AssertionError);
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method java/lang/AssertionError.getCause:()Ljava/lang/Throwable;
       4: ifnull        30
       7: aload_0
       8: invokevirtual #69                 // Method java/lang/AssertionError.getMessage:()Ljava/lang/String;
      11: ifnull        30
      14: aload_0
      15: invokevirtual #69                 // Method java/lang/AssertionError.getMessage:()Ljava/lang/String;
      18: ldc           #70                 // String getsockname failed
      20: invokevirtual #51                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public static int indexOf(java.util.Comparator<java.lang.String>, java.lang.String[], java.lang.String);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_1
       3: arraylength
       4: istore        4
       6: iload_3
       7: iload         4
       9: if_icmpge     33
      12: aload_0
      13: aload_1
      14: iload_3
      15: aaload
      16: aload_2
      17: invokeinterface #43,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      22: ifne          27
      25: iload_3
      26: ireturn
      27: iinc          3, 1
      30: goto          6
      33: iconst_m1
      34: ireturn

  public static java.lang.String[] concat(java.lang.String[], java.lang.String);
    Code:
       0: aload_0
       1: arraylength
       2: iconst_1
       3: iadd
       4: anewarray     #46                 // class java/lang/String
       7: astore_2
       8: aload_0
       9: iconst_0
      10: aload_2
      11: iconst_0
      12: aload_0
      13: arraylength
      14: invokestatic  #71                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      17: aload_2
      18: aload_2
      19: arraylength
      20: iconst_1
      21: isub
      22: aload_1
      23: aastore
      24: aload_2
      25: areturn

  public static int skipLeadingAsciiWhitespace(java.lang.String, int, int);
    Code:
       0: iload_1
       1: istore_3
       2: iload_3
       3: iload_2
       4: if_icmpge     75
       7: aload_0
       8: iload_3
       9: invokevirtual #72                 // Method java/lang/String.charAt:(I)C
      12: lookupswitch  { // 5
                     9: 64
                    10: 64
                    12: 64
                    13: 64
                    32: 64
               default: 67
          }
      64: goto          69
      67: iload_3
      68: ireturn
      69: iinc          3, 1
      72: goto          2
      75: iload_2
      76: ireturn

  public static int skipTrailingAsciiWhitespace(java.lang.String, int, int);
    Code:
       0: iload_2
       1: iconst_1
       2: isub
       3: istore_3
       4: iload_3
       5: iload_1
       6: if_icmplt     77
       9: aload_0
      10: iload_3
      11: invokevirtual #72                 // Method java/lang/String.charAt:(I)C
      14: lookupswitch  { // 5
                     9: 64
                    10: 64
                    12: 64
                    13: 64
                    32: 64
               default: 67
          }
      64: goto          71
      67: iload_3
      68: iconst_1
      69: iadd
      70: ireturn
      71: iinc          3, -1
      74: goto          4
      77: iload_1
      78: ireturn

  public static java.lang.String trimSubstring(java.lang.String, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #73                 // Method skipLeadingAsciiWhitespace:(Ljava/lang/String;II)I
       6: istore_3
       7: aload_0
       8: iload_3
       9: iload_2
      10: invokestatic  #74                 // Method skipTrailingAsciiWhitespace:(Ljava/lang/String;II)I
      13: istore        4
      15: aload_0
      16: iload_3
      17: iload         4
      19: invokevirtual #75                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      22: areturn

  public static int delimiterOffset(java.lang.String, int, int, java.lang.String);
    Code:
       0: iload_1
       1: istore        4
       3: iload         4
       5: iload_2
       6: if_icmpge     32
       9: aload_3
      10: aload_0
      11: iload         4
      13: invokevirtual #72                 // Method java/lang/String.charAt:(I)C
      16: invokevirtual #76                 // Method java/lang/String.indexOf:(I)I
      19: iconst_m1
      20: if_icmpeq     26
      23: iload         4
      25: ireturn
      26: iinc          4, 1
      29: goto          3
      32: iload_2
      33: ireturn

  public static int delimiterOffset(java.lang.String, int, int, char);
    Code:
       0: iload_1
       1: istore        4
       3: iload         4
       5: iload_2
       6: if_icmpge     28
       9: aload_0
      10: iload         4
      12: invokevirtual #72                 // Method java/lang/String.charAt:(I)C
      15: iload_3
      16: if_icmpne     22
      19: iload         4
      21: ireturn
      22: iinc          4, 1
      25: goto          3
      28: iload_2
      29: ireturn

  public static java.lang.String domainToAscii(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #77                 // Method java/net/IDN.toASCII:(Ljava/lang/String;)Ljava/lang/String;
       4: getstatic     #78                 // Field java/util/Locale.US:Ljava/util/Locale;
       7: invokevirtual #79                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      10: astore_1
      11: aload_1
      12: invokevirtual #80                 // Method java/lang/String.isEmpty:()Z
      15: ifeq          20
      18: aconst_null
      19: areturn
      20: aload_1
      21: invokestatic  #81                 // Method containsInvalidHostnameAsciiCodes:(Ljava/lang/String;)Z
      24: ifeq          29
      27: aconst_null
      28: areturn
      29: aload_1
      30: areturn
      31: astore_1
      32: aconst_null
      33: areturn
    Exception table:
       from    to  target type
           0    19    31   Class java/lang/IllegalArgumentException
          20    28    31   Class java/lang/IllegalArgumentException
          29    30    31   Class java/lang/IllegalArgumentException

  private static boolean containsInvalidHostnameAsciiCodes(java.lang.String);
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: invokevirtual #62                 // Method java/lang/String.length:()I
       7: if_icmpge     48
      10: aload_0
      11: iload_1
      12: invokevirtual #72                 // Method java/lang/String.charAt:(I)C
      15: istore_2
      16: iload_2
      17: bipush        31
      19: if_icmple     28
      22: iload_2
      23: bipush        127
      25: if_icmplt     30
      28: iconst_1
      29: ireturn
      30: ldc           #83                 // String  #%/:?@[\\]
      32: iload_2
      33: invokevirtual #76                 // Method java/lang/String.indexOf:(I)I
      36: iconst_m1
      37: if_icmpeq     42
      40: iconst_1
      41: ireturn
      42: iinc          1, 1
      45: goto          2
      48: iconst_0
      49: ireturn

  public static int indexOfControlOrNonAscii(java.lang.String);
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #62                 // Method java/lang/String.length:()I
       6: istore_2
       7: iload_1
       8: iload_2
       9: if_icmpge     38
      12: aload_0
      13: iload_1
      14: invokevirtual #72                 // Method java/lang/String.charAt:(I)C
      17: istore_3
      18: iload_3
      19: bipush        31
      21: if_icmple     30
      24: iload_3
      25: bipush        127
      27: if_icmplt     32
      30: iload_1
      31: ireturn
      32: iinc          1, 1
      35: goto          7
      38: iconst_m1
      39: ireturn

  public static boolean verifyAsIpAddress(java.lang.String);
    Code:
       0: getstatic     #84                 // Field VERIFY_AS_IP_ADDRESS:Ljava/util/regex/Pattern;
       3: aload_0
       4: invokevirtual #85                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: invokevirtual #86                 // Method java/util/regex/Matcher.matches:()Z
      10: ireturn

  public static java.lang.String format(java.lang.String, java.lang.Object...);
    Code:
       0: getstatic     #78                 // Field java/util/Locale.US:Ljava/util/Locale;
       3: aload_0
       4: aload_1
       5: invokestatic  #87                 // Method java/lang/String.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
       8: areturn

  public static java.nio.charset.Charset bomAwareCharset(okio.BufferedSource, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: lconst_0
       2: getstatic     #88                 // Field UTF_8_BOM:Lokio/ByteString;
       5: invokeinterface #89,  4           // InterfaceMethod okio/BufferedSource.rangeEquals:(JLokio/ByteString;)Z
      10: ifeq          30
      13: aload_0
      14: getstatic     #88                 // Field UTF_8_BOM:Lokio/ByteString;
      17: invokevirtual #90                 // Method okio/ByteString.size:()I
      20: i2l
      21: invokeinterface #91,  3           // InterfaceMethod okio/BufferedSource.skip:(J)V
      26: getstatic     #92                 // Field UTF_8:Ljava/nio/charset/Charset;
      29: areturn
      30: aload_0
      31: lconst_0
      32: getstatic     #93                 // Field UTF_16_BE_BOM:Lokio/ByteString;
      35: invokeinterface #89,  4           // InterfaceMethod okio/BufferedSource.rangeEquals:(JLokio/ByteString;)Z
      40: ifeq          60
      43: aload_0
      44: getstatic     #93                 // Field UTF_16_BE_BOM:Lokio/ByteString;
      47: invokevirtual #90                 // Method okio/ByteString.size:()I
      50: i2l
      51: invokeinterface #91,  3           // InterfaceMethod okio/BufferedSource.skip:(J)V
      56: getstatic     #94                 // Field UTF_16_BE:Ljava/nio/charset/Charset;
      59: areturn
      60: aload_0
      61: lconst_0
      62: getstatic     #95                 // Field UTF_16_LE_BOM:Lokio/ByteString;
      65: invokeinterface #89,  4           // InterfaceMethod okio/BufferedSource.rangeEquals:(JLokio/ByteString;)Z
      70: ifeq          90
      73: aload_0
      74: getstatic     #95                 // Field UTF_16_LE_BOM:Lokio/ByteString;
      77: invokevirtual #90                 // Method okio/ByteString.size:()I
      80: i2l
      81: invokeinterface #91,  3           // InterfaceMethod okio/BufferedSource.skip:(J)V
      86: getstatic     #96                 // Field UTF_16_LE:Ljava/nio/charset/Charset;
      89: areturn
      90: aload_0
      91: lconst_0
      92: getstatic     #97                 // Field UTF_32_BE_BOM:Lokio/ByteString;
      95: invokeinterface #89,  4           // InterfaceMethod okio/BufferedSource.rangeEquals:(JLokio/ByteString;)Z
     100: ifeq          120
     103: aload_0
     104: getstatic     #97                 // Field UTF_32_BE_BOM:Lokio/ByteString;
     107: invokevirtual #90                 // Method okio/ByteString.size:()I
     110: i2l
     111: invokeinterface #91,  3           // InterfaceMethod okio/BufferedSource.skip:(J)V
     116: getstatic     #98                 // Field UTF_32_BE:Ljava/nio/charset/Charset;
     119: areturn
     120: aload_0
     121: lconst_0
     122: getstatic     #99                 // Field UTF_32_LE_BOM:Lokio/ByteString;
     125: invokeinterface #89,  4           // InterfaceMethod okio/BufferedSource.rangeEquals:(JLokio/ByteString;)Z
     130: ifeq          150
     133: aload_0
     134: getstatic     #99                 // Field UTF_32_LE_BOM:Lokio/ByteString;
     137: invokevirtual #90                 // Method okio/ByteString.size:()I
     140: i2l
     141: invokeinterface #91,  3           // InterfaceMethod okio/BufferedSource.skip:(J)V
     146: getstatic     #100                // Field UTF_32_LE:Ljava/nio/charset/Charset;
     149: areturn
     150: aload_1
     151: areturn

  static {};
    Code:
       0: iconst_0
       1: newarray       byte
       3: putstatic     #101                // Field EMPTY_BYTE_ARRAY:[B
       6: iconst_0
       7: anewarray     #46                 // class java/lang/String
      10: putstatic     #102                // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;
      13: aconst_null
      14: getstatic     #101                // Field EMPTY_BYTE_ARRAY:[B
      17: invokestatic  #103                // Method okhttp3/ResponseBody.create:(Lokhttp3/MediaType;[B)Lokhttp3/ResponseBody;
      20: putstatic     #104                // Field EMPTY_RESPONSE:Lokhttp3/ResponseBody;
      23: aconst_null
      24: getstatic     #101                // Field EMPTY_BYTE_ARRAY:[B
      27: invokestatic  #105                // Method okhttp3/RequestBody.create:(Lokhttp3/MediaType;[B)Lokhttp3/RequestBody;
      30: putstatic     #106                // Field EMPTY_REQUEST:Lokhttp3/RequestBody;
      33: ldc           #107                // String efbbbf
      35: invokestatic  #108                // Method okio/ByteString.decodeHex:(Ljava/lang/String;)Lokio/ByteString;
      38: putstatic     #88                 // Field UTF_8_BOM:Lokio/ByteString;
      41: ldc           #109                // String feff
      43: invokestatic  #108                // Method okio/ByteString.decodeHex:(Ljava/lang/String;)Lokio/ByteString;
      46: putstatic     #93                 // Field UTF_16_BE_BOM:Lokio/ByteString;
      49: ldc           #110                // String fffe
      51: invokestatic  #108                // Method okio/ByteString.decodeHex:(Ljava/lang/String;)Lokio/ByteString;
      54: putstatic     #95                 // Field UTF_16_LE_BOM:Lokio/ByteString;
      57: ldc           #111                // String 0000ffff
      59: invokestatic  #108                // Method okio/ByteString.decodeHex:(Ljava/lang/String;)Lokio/ByteString;
      62: putstatic     #97                 // Field UTF_32_BE_BOM:Lokio/ByteString;
      65: ldc           #112                // String ffff0000
      67: invokestatic  #108                // Method okio/ByteString.decodeHex:(Ljava/lang/String;)Lokio/ByteString;
      70: putstatic     #99                 // Field UTF_32_LE_BOM:Lokio/ByteString;
      73: ldc           #113                // String UTF-8
      75: invokestatic  #114                // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      78: putstatic     #92                 // Field UTF_8:Ljava/nio/charset/Charset;
      81: ldc           #115                // String UTF-16BE
      83: invokestatic  #114                // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      86: putstatic     #94                 // Field UTF_16_BE:Ljava/nio/charset/Charset;
      89: ldc           #116                // String UTF-16LE
      91: invokestatic  #114                // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      94: putstatic     #96                 // Field UTF_16_LE:Ljava/nio/charset/Charset;
      97: ldc           #117                // String UTF-32BE
      99: invokestatic  #114                // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
     102: putstatic     #98                 // Field UTF_32_BE:Ljava/nio/charset/Charset;
     105: ldc           #118                // String UTF-32LE
     107: invokestatic  #114                // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
     110: putstatic     #100                // Field UTF_32_LE:Ljava/nio/charset/Charset;
     113: ldc           #119                // String GMT
     115: invokestatic  #120                // Method java/util/TimeZone.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;
     118: putstatic     #121                // Field UTC:Ljava/util/TimeZone;
     121: new           #122                // class okhttp3/internal/Util$1
     124: dup
     125: invokespecial #123                // Method okhttp3/internal/Util$1."<init>":()V
     128: putstatic     #124                // Field NATURAL_ORDER:Ljava/util/Comparator;
     131: ldc           #125                // String ([0-9a-fA-F]*:[0-9a-fA-F:.]*)|([\\d.]+)
     133: invokestatic  #126                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
     136: putstatic     #84                 // Field VERIFY_AS_IP_ADDRESS:Ljava/util/regex/Pattern;
     139: return
}
