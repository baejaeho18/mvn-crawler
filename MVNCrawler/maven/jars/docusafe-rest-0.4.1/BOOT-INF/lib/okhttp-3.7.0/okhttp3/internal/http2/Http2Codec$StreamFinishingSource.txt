Compiled from "Http2Codec.java"
class okhttp3.internal.http2.Http2Codec$StreamFinishingSource extends okio.ForwardingSource {
  final okhttp3.internal.http2.Http2Codec this$0;

  public okhttp3.internal.http2.Http2Codec$StreamFinishingSource(okhttp3.internal.http2.Http2Codec, okio.Source);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Codec;
       5: aload_0
       6: aload_2
       7: invokespecial #2                  // Method okio/ForwardingSource."<init>":(Lokio/Source;)V
      10: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Codec;
       4: getfield      #3                  // Field okhttp3/internal/http2/Http2Codec.streamAllocation:Lokhttp3/internal/connection/StreamAllocation;
       7: iconst_0
       8: aload_0
       9: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Codec;
      12: invokevirtual #4                  // Method okhttp3/internal/connection/StreamAllocation.streamFinished:(ZLokhttp3/internal/http/HttpCodec;)V
      15: aload_0
      16: invokespecial #5                  // Method okio/ForwardingSource.close:()V
      19: return
}
