Compiled from "RequestBody.java"
final class okhttp3.RequestBody$3 extends okhttp3.RequestBody {
  final okhttp3.MediaType val$contentType;

  final java.io.File val$file;

  okhttp3.RequestBody$3(okhttp3.MediaType, java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$contentType:Lokhttp3/MediaType;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$file:Ljava/io/File;
      10: aload_0
      11: invokespecial #3                  // Method okhttp3/RequestBody."<init>":()V
      14: return

  public okhttp3.MediaType contentType();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$contentType:Lokhttp3/MediaType;
       4: areturn

  public long contentLength();
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$file:Ljava/io/File;
       4: invokevirtual #4                  // Method java/io/File.length:()J
       7: lreturn

  public void writeTo(okio.BufferedSink) throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #2                  // Field val$file:Ljava/io/File;
       6: invokestatic  #5                  // Method okio/Okio.source:(Ljava/io/File;)Lokio/Source;
       9: astore_2
      10: aload_1
      11: aload_2
      12: invokeinterface #6,  2            // InterfaceMethod okio/BufferedSink.writeAll:(Lokio/Source;)J
      17: pop2
      18: aload_2
      19: invokestatic  #7                  // Method okhttp3/internal/Util.closeQuietly:(Ljava/io/Closeable;)V
      22: goto          32
      25: astore_3
      26: aload_2
      27: invokestatic  #7                  // Method okhttp3/internal/Util.closeQuietly:(Ljava/io/Closeable;)V
      30: aload_3
      31: athrow
      32: return
    Exception table:
       from    to  target type
           2    18    25   any
}
