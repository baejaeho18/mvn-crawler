Compiled from "Http2Connection.java"
class okhttp3.internal.http2.Http2Connection$6 extends okhttp3.internal.NamedRunnable {
  final int val$streamId;

  final okio.Buffer val$buffer;

  final int val$byteCount;

  final boolean val$inFinished;

  final okhttp3.internal.http2.Http2Connection this$0;

  okhttp3.internal.http2.Http2Connection$6(okhttp3.internal.http2.Http2Connection, java.lang.String, java.lang.Object..., int, okio.Buffer, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Connection;
       5: aload_0
       6: iload         4
       8: putfield      #2                  // Field val$streamId:I
      11: aload_0
      12: aload         5
      14: putfield      #3                  // Field val$buffer:Lokio/Buffer;
      17: aload_0
      18: iload         6
      20: putfield      #4                  // Field val$byteCount:I
      23: aload_0
      24: iload         7
      26: putfield      #5                  // Field val$inFinished:Z
      29: aload_0
      30: aload_2
      31: aload_3
      32: invokespecial #6                  // Method okhttp3/internal/NamedRunnable."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      35: return

  public void execute();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Connection;
       4: getfield      #7                  // Field okhttp3/internal/http2/Http2Connection.pushObserver:Lokhttp3/internal/http2/PushObserver;
       7: aload_0
       8: getfield      #2                  // Field val$streamId:I
      11: aload_0
      12: getfield      #3                  // Field val$buffer:Lokio/Buffer;
      15: aload_0
      16: getfield      #4                  // Field val$byteCount:I
      19: aload_0
      20: getfield      #5                  // Field val$inFinished:Z
      23: invokeinterface #8,  5            // InterfaceMethod okhttp3/internal/http2/PushObserver.onData:(ILokio/BufferedSource;IZ)Z
      28: istore_1
      29: iload_1
      30: ifeq          50
      33: aload_0
      34: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      37: getfield      #9                  // Field okhttp3/internal/http2/Http2Connection.writer:Lokhttp3/internal/http2/Http2Writer;
      40: aload_0
      41: getfield      #2                  // Field val$streamId:I
      44: getstatic     #10                 // Field okhttp3/internal/http2/ErrorCode.CANCEL:Lokhttp3/internal/http2/ErrorCode;
      47: invokevirtual #11                 // Method okhttp3/internal/http2/Http2Writer.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V
      50: iload_1
      51: ifne          61
      54: aload_0
      55: getfield      #5                  // Field val$inFinished:Z
      58: ifeq          98
      61: aload_0
      62: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      65: dup
      66: astore_2
      67: monitorenter
      68: aload_0
      69: getfield      #1                  // Field this$0:Lokhttp3/internal/http2/Http2Connection;
      72: getfield      #12                 // Field okhttp3/internal/http2/Http2Connection.currentPushRequests:Ljava/util/Set;
      75: aload_0
      76: getfield      #2                  // Field val$streamId:I
      79: invokestatic  #13                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      82: invokeinterface #14,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      87: pop
      88: aload_2
      89: monitorexit
      90: goto          98
      93: astore_3
      94: aload_2
      95: monitorexit
      96: aload_3
      97: athrow
      98: goto          102
     101: astore_1
     102: return
    Exception table:
       from    to  target type
          68    90    93   any
          93    96    93   any
           0    98   101   Class java/io/IOException
}
