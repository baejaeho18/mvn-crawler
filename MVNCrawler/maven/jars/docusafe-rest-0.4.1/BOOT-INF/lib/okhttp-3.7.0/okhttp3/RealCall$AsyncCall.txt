Compiled from "RealCall.java"
final class okhttp3.RealCall$AsyncCall extends okhttp3.internal.NamedRunnable {
  private final okhttp3.Callback responseCallback;

  final okhttp3.RealCall this$0;

  okhttp3.RealCall$AsyncCall(okhttp3.RealCall, okhttp3.Callback);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lokhttp3/RealCall;
       5: aload_0
       6: ldc           #3                  // String OkHttp %s
       8: iconst_1
       9: anewarray     #4                  // class java/lang/Object
      12: dup
      13: iconst_0
      14: aload_1
      15: invokevirtual #5                  // Method okhttp3/RealCall.redactedUrl:()Ljava/lang/String;
      18: aastore
      19: invokespecial #6                  // Method okhttp3/internal/NamedRunnable."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      22: aload_0
      23: aload_2
      24: putfield      #7                  // Field responseCallback:Lokhttp3/Callback;
      27: return

  java.lang.String host();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lokhttp3/RealCall;
       4: getfield      #8                  // Field okhttp3/RealCall.originalRequest:Lokhttp3/Request;
       7: invokevirtual #9                  // Method okhttp3/Request.url:()Lokhttp3/HttpUrl;
      10: invokevirtual #10                 // Method okhttp3/HttpUrl.host:()Ljava/lang/String;
      13: areturn

  okhttp3.Request request();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lokhttp3/RealCall;
       4: getfield      #8                  // Field okhttp3/RealCall.originalRequest:Lokhttp3/Request;
       7: areturn

  okhttp3.RealCall get();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lokhttp3/RealCall;
       4: areturn

  protected void execute();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #2                  // Field this$0:Lokhttp3/RealCall;
       6: invokevirtual #11                 // Method okhttp3/RealCall.getResponseWithInterceptorChain:()Lokhttp3/Response;
       9: astore_2
      10: aload_0
      11: getfield      #2                  // Field this$0:Lokhttp3/RealCall;
      14: getfield      #12                 // Field okhttp3/RealCall.retryAndFollowUpInterceptor:Lokhttp3/internal/http/RetryAndFollowUpInterceptor;
      17: invokevirtual #13                 // Method okhttp3/internal/http/RetryAndFollowUpInterceptor.isCanceled:()Z
      20: ifeq          50
      23: iconst_1
      24: istore_1
      25: aload_0
      26: getfield      #7                  // Field responseCallback:Lokhttp3/Callback;
      29: aload_0
      30: getfield      #2                  // Field this$0:Lokhttp3/RealCall;
      33: new           #14                 // class java/io/IOException
      36: dup
      37: ldc           #15                 // String Canceled
      39: invokespecial #16                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      42: invokeinterface #17,  3           // InterfaceMethod okhttp3/Callback.onFailure:(Lokhttp3/Call;Ljava/io/IOException;)V
      47: goto          66
      50: iconst_1
      51: istore_1
      52: aload_0
      53: getfield      #7                  // Field responseCallback:Lokhttp3/Callback;
      56: aload_0
      57: getfield      #2                  // Field this$0:Lokhttp3/RealCall;
      60: aload_2
      61: invokeinterface #18,  3           // InterfaceMethod okhttp3/Callback.onResponse:(Lokhttp3/Call;Lokhttp3/Response;)V
      66: aload_0
      67: getfield      #2                  // Field this$0:Lokhttp3/RealCall;
      70: getfield      #19                 // Field okhttp3/RealCall.client:Lokhttp3/OkHttpClient;
      73: invokevirtual #20                 // Method okhttp3/OkHttpClient.dispatcher:()Lokhttp3/Dispatcher;
      76: aload_0
      77: invokevirtual #21                 // Method okhttp3/Dispatcher.finished:(Lokhttp3/RealCall$AsyncCall;)V
      80: goto          172
      83: astore_2
      84: iload_1
      85: ifeq          124
      88: invokestatic  #22                 // Method okhttp3/internal/platform/Platform.get:()Lokhttp3/internal/platform/Platform;
      91: iconst_4
      92: new           #23                 // class java/lang/StringBuilder
      95: dup
      96: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      99: ldc           #25                 // String Callback failure for
     101: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload_0
     105: getfield      #2                  // Field this$0:Lokhttp3/RealCall;
     108: invokevirtual #27                 // Method okhttp3/RealCall.toLoggableString:()Ljava/lang/String;
     111: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     117: aload_2
     118: invokevirtual #29                 // Method okhttp3/internal/platform/Platform.log:(ILjava/lang/String;Ljava/lang/Throwable;)V
     121: goto          138
     124: aload_0
     125: getfield      #7                  // Field responseCallback:Lokhttp3/Callback;
     128: aload_0
     129: getfield      #2                  // Field this$0:Lokhttp3/RealCall;
     132: aload_2
     133: invokeinterface #17,  3           // InterfaceMethod okhttp3/Callback.onFailure:(Lokhttp3/Call;Ljava/io/IOException;)V
     138: aload_0
     139: getfield      #2                  // Field this$0:Lokhttp3/RealCall;
     142: getfield      #19                 // Field okhttp3/RealCall.client:Lokhttp3/OkHttpClient;
     145: invokevirtual #20                 // Method okhttp3/OkHttpClient.dispatcher:()Lokhttp3/Dispatcher;
     148: aload_0
     149: invokevirtual #21                 // Method okhttp3/Dispatcher.finished:(Lokhttp3/RealCall$AsyncCall;)V
     152: goto          172
     155: astore_3
     156: aload_0
     157: getfield      #2                  // Field this$0:Lokhttp3/RealCall;
     160: getfield      #19                 // Field okhttp3/RealCall.client:Lokhttp3/OkHttpClient;
     163: invokevirtual #20                 // Method okhttp3/OkHttpClient.dispatcher:()Lokhttp3/Dispatcher;
     166: aload_0
     167: invokevirtual #21                 // Method okhttp3/Dispatcher.finished:(Lokhttp3/RealCall$AsyncCall;)V
     170: aload_3
     171: athrow
     172: return
    Exception table:
       from    to  target type
           2    66    83   Class java/io/IOException
           2    66   155   any
          83   138   155   any
}
