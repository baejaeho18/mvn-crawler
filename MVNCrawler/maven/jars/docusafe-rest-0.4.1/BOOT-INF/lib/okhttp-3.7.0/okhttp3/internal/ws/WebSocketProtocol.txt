Compiled from "WebSocketProtocol.java"
public final class okhttp3.internal.ws.WebSocketProtocol {
  static final java.lang.String ACCEPT_MAGIC;

  static final int B0_FLAG_FIN;

  static final int B0_FLAG_RSV1;

  static final int B0_FLAG_RSV2;

  static final int B0_FLAG_RSV3;

  static final int B0_MASK_OPCODE;

  static final int OPCODE_FLAG_CONTROL;

  static final int B1_FLAG_MASK;

  static final int B1_MASK_LENGTH;

  static final int OPCODE_CONTINUATION;

  static final int OPCODE_TEXT;

  static final int OPCODE_BINARY;

  static final int OPCODE_CONTROL_CLOSE;

  static final int OPCODE_CONTROL_PING;

  static final int OPCODE_CONTROL_PONG;

  static final long PAYLOAD_BYTE_MAX;

  static final long CLOSE_MESSAGE_MAX;

  static final int PAYLOAD_SHORT;

  static final long PAYLOAD_SHORT_MAX;

  static final int PAYLOAD_LONG;

  static final int CLOSE_CLIENT_GOING_AWAY;

  static final int CLOSE_PROTOCOL_EXCEPTION;

  static final int CLOSE_NO_STATUS_CODE;

  static final int CLOSE_ABNORMAL_TERMINATION;

  static void toggleMask(byte[], long, byte[], long);
    Code:
       0: aload_3
       1: arraylength
       2: istore        6
       4: iconst_0
       5: istore        7
       7: iload         7
       9: i2l
      10: lload_1
      11: lcmp
      12: ifge          50
      15: lload         4
      17: iload         6
      19: i2l
      20: lrem
      21: l2i
      22: istore        8
      24: aload_0
      25: iload         7
      27: aload_0
      28: iload         7
      30: baload
      31: aload_3
      32: iload         8
      34: baload
      35: ixor
      36: i2b
      37: bastore
      38: iinc          7, 1
      41: lload         4
      43: lconst_1
      44: ladd
      45: lstore        4
      47: goto          7
      50: return

  static java.lang.String closeCodeExceptionMessage(int);
    Code:
       0: iload_0
       1: sipush        1000
       4: if_icmplt     14
       7: iload_0
       8: sipush        5000
      11: if_icmplt     34
      14: new           #2                  // class java/lang/StringBuilder
      17: dup
      18: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #4                  // String Code must be in range [1000,5000):
      23: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: iload_0
      27: invokevirtual #6                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: areturn
      34: iload_0
      35: sipush        1004
      38: if_icmplt     48
      41: iload_0
      42: sipush        1006
      45: if_icmple     62
      48: iload_0
      49: sipush        1012
      52: if_icmplt     87
      55: iload_0
      56: sipush        2999
      59: if_icmpgt     87
      62: new           #2                  // class java/lang/StringBuilder
      65: dup
      66: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #8                  // String Code
      71: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: iload_0
      75: invokevirtual #6                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      78: ldc           #9                  // String  is reserved and may not be used.
      80: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: areturn
      87: aconst_null
      88: areturn

  static void validateCloseCode(int);
    Code:
       0: iload_0
       1: invokestatic  #10                 // Method closeCodeExceptionMessage:(I)Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnull        18
       9: new           #11                 // class java/lang/IllegalArgumentException
      12: dup
      13: aload_1
      14: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: return

  public static java.lang.String acceptHeader(java.lang.String);
    Code:
       0: new           #2                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc           #13                 // String 258EAFA5-E914-47DA-95CA-C5AB0DC85B11
      13: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: invokestatic  #14                 // Method okio/ByteString.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;
      22: invokevirtual #15                 // Method okio/ByteString.sha1:()Lokio/ByteString;
      25: invokevirtual #16                 // Method okio/ByteString.base64:()Ljava/lang/String;
      28: areturn

  private okhttp3.internal.ws.WebSocketProtocol();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method java/lang/Object."<init>":()V
       4: new           #18                 // class java/lang/AssertionError
       7: dup
       8: ldc           #19                 // String No instances.
      10: invokespecial #20                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      13: athrow
}
