Compiled from "DecimalNumberComparatorHelper.java"
final class org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalNumberComparatorHelper {
  private org.hibernate.validator.internal.constraintvalidators.bv.number.bound.decimal.DecimalNumberComparatorHelper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static int compare(java.math.BigDecimal, java.math.BigDecimal);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
       5: ireturn

  public static int compare(java.math.BigInteger, java.math.BigDecimal);
    Code:
       0: new           #3                  // class java/math/BigDecimal
       3: dup
       4: aload_0
       5: invokespecial #4                  // Method java/math/BigDecimal."<init>":(Ljava/math/BigInteger;)V
       8: aload_1
       9: invokevirtual #2                  // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
      12: ireturn

  public static int compare(java.lang.Long, java.math.BigDecimal);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method java/lang/Long.longValue:()J
       4: invokestatic  #6                  // Method java/math/BigDecimal.valueOf:(J)Ljava/math/BigDecimal;
       7: aload_1
       8: invokevirtual #2                  // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
      11: ireturn

  public static int compare(java.lang.Number, java.math.BigDecimal);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method java/lang/Number.doubleValue:()D
       4: invokestatic  #8                  // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;
       7: aload_1
       8: invokevirtual #2                  // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
      11: ireturn

  public static int compare(java.lang.Double, java.math.BigDecimal, java.util.OptionalInt);
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #9                  // Method org/hibernate/validator/internal/constraintvalidators/bv/number/InfinityNumberComparatorHelper.infinityCheck:(Ljava/lang/Double;Ljava/util/OptionalInt;)Ljava/util/OptionalInt;
       5: astore_3
       6: aload_3
       7: invokevirtual #10                 // Method java/util/OptionalInt.isPresent:()Z
      10: ifeq          18
      13: aload_3
      14: invokevirtual #11                 // Method java/util/OptionalInt.getAsInt:()I
      17: ireturn
      18: aload_0
      19: invokevirtual #12                 // Method java/lang/Double.doubleValue:()D
      22: invokestatic  #8                  // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;
      25: aload_1
      26: invokevirtual #2                  // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
      29: ireturn

  public static int compare(java.lang.Float, java.math.BigDecimal, java.util.OptionalInt);
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #13                 // Method org/hibernate/validator/internal/constraintvalidators/bv/number/InfinityNumberComparatorHelper.infinityCheck:(Ljava/lang/Float;Ljava/util/OptionalInt;)Ljava/util/OptionalInt;
       5: astore_3
       6: aload_3
       7: invokevirtual #10                 // Method java/util/OptionalInt.isPresent:()Z
      10: ifeq          18
      13: aload_3
      14: invokevirtual #11                 // Method java/util/OptionalInt.getAsInt:()I
      17: ireturn
      18: aload_0
      19: invokevirtual #14                 // Method java/lang/Float.floatValue:()F
      22: f2d
      23: invokestatic  #8                  // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;
      26: aload_1
      27: invokevirtual #2                  // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
      30: ireturn
}
