Compiled from "ECDHDecrypter.java"
public class com.nimbusds.jose.crypto.ECDHDecrypter extends com.nimbusds.jose.crypto.ECDHCryptoProvider implements com.nimbusds.jose.JWEDecrypter,com.nimbusds.jose.CriticalHeaderParamsAware {
  private final java.security.interfaces.ECPrivateKey privateKey;

  private final com.nimbusds.jose.crypto.CriticalHeaderParamsDeferral critPolicy;

  public com.nimbusds.jose.crypto.ECDHDecrypter(java.security.interfaces.ECPrivateKey) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #19                 // Method "<init>":(Ljava/security/interfaces/ECPrivateKey;Ljava/util/Set;)V
       6: return

  public com.nimbusds.jose.crypto.ECDHDecrypter(com.nimbusds.jose.jwk.ECKey) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method com/nimbusds/jose/jwk/ECKey.getCurve:()Lcom/nimbusds/jose/jwk/ECKey$Curve;
       5: invokespecial #33                 // Method com/nimbusds/jose/crypto/ECDHCryptoProvider."<init>":(Lcom/nimbusds/jose/jwk/ECKey$Curve;)V
       8: aload_0
       9: new           #36                 // class com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral
      12: dup
      13: invokespecial #38                 // Method com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral."<init>":()V
      16: putfield      #41                 // Field critPolicy:Lcom/nimbusds/jose/crypto/CriticalHeaderParamsDeferral;
      19: aload_1
      20: invokevirtual #43                 // Method com/nimbusds/jose/jwk/ECKey.isPrivate:()Z
      23: ifne          36
      26: new           #16                 // class com/nimbusds/jose/JOSEException
      29: dup
      30: ldc           #47                 // String The EC JWK doesn\'t contain a private part
      32: invokespecial #49                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: aload_1
      38: invokevirtual #52                 // Method com/nimbusds/jose/jwk/ECKey.toECPrivateKey:()Ljava/security/interfaces/ECPrivateKey;
      41: putfield      #56                 // Field privateKey:Ljava/security/interfaces/ECPrivateKey;
      44: return

  public com.nimbusds.jose.crypto.ECDHDecrypter(java.security.interfaces.ECPrivateKey, java.util.Set<java.lang.String>) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #63,  1           // InterfaceMethod java/security/interfaces/ECPrivateKey.getParams:()Ljava/security/spec/ECParameterSpec;
       7: invokestatic  #69                 // Method com/nimbusds/jose/jwk/ECKey$Curve.forECParameterSpec:(Ljava/security/spec/ECParameterSpec;)Lcom/nimbusds/jose/jwk/ECKey$Curve;
      10: invokespecial #33                 // Method com/nimbusds/jose/crypto/ECDHCryptoProvider."<init>":(Lcom/nimbusds/jose/jwk/ECKey$Curve;)V
      13: aload_0
      14: new           #36                 // class com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral
      17: dup
      18: invokespecial #38                 // Method com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral."<init>":()V
      21: putfield      #41                 // Field critPolicy:Lcom/nimbusds/jose/crypto/CriticalHeaderParamsDeferral;
      24: aload_0
      25: getfield      #41                 // Field critPolicy:Lcom/nimbusds/jose/crypto/CriticalHeaderParamsDeferral;
      28: aload_2
      29: invokevirtual #75                 // Method com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral.setDeferredCriticalHeaderParams:(Ljava/util/Set;)V
      32: aload_0
      33: aload_1
      34: putfield      #56                 // Field privateKey:Ljava/security/interfaces/ECPrivateKey;
      37: return

  public java.security.interfaces.ECPrivateKey getPrivateKey();
    Code:
       0: aload_0
       1: getfield      #56                 // Field privateKey:Ljava/security/interfaces/ECPrivateKey;
       4: areturn

  public java.util.Set<java.lang.String> getProcessedCriticalHeaderParams();
    Code:
       0: aload_0
       1: getfield      #41                 // Field critPolicy:Lcom/nimbusds/jose/crypto/CriticalHeaderParamsDeferral;
       4: invokevirtual #87                 // Method com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral.getProcessedCriticalHeaderParams:()Ljava/util/Set;
       7: areturn

  public java.util.Set<java.lang.String> getDeferredCriticalHeaderParams();
    Code:
       0: aload_0
       1: getfield      #41                 // Field critPolicy:Lcom/nimbusds/jose/crypto/CriticalHeaderParamsDeferral;
       4: invokevirtual #87                 // Method com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral.getProcessedCriticalHeaderParams:()Ljava/util/Set;
       7: areturn

  public byte[] decrypt(com.nimbusds.jose.JWEHeader, com.nimbusds.jose.util.Base64URL, com.nimbusds.jose.util.Base64URL, com.nimbusds.jose.util.Base64URL, com.nimbusds.jose.util.Base64URL) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_1
       1: invokevirtual #92                 // Method com/nimbusds/jose/JWEHeader.getAlgorithm:()Lcom/nimbusds/jose/JWEAlgorithm;
       4: astore        6
       6: aload         6
       8: invokestatic  #98                 // Method com/nimbusds/jose/crypto/ECDH.resolveAlgorithmMode:(Lcom/nimbusds/jose/JWEAlgorithm;)Lcom/nimbusds/jose/crypto/ECDH$AlgorithmMode;
      11: astore        7
      13: aload_0
      14: getfield      #41                 // Field critPolicy:Lcom/nimbusds/jose/crypto/CriticalHeaderParamsDeferral;
      17: aload_1
      18: invokevirtual #104                // Method com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral.ensureHeaderPasses:(Lcom/nimbusds/jose/JWEHeader;)V
      21: aload_1
      22: invokevirtual #108                // Method com/nimbusds/jose/JWEHeader.getEphemeralPublicKey:()Lcom/nimbusds/jose/jwk/ECKey;
      25: astore        8
      27: aload         8
      29: ifnonnull     42
      32: new           #16                 // class com/nimbusds/jose/JOSEException
      35: dup
      36: ldc           #112                // String Missing ephemeral public EC key \"epk\" JWE header parameter
      38: invokespecial #49                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload         8
      44: invokevirtual #114                // Method com/nimbusds/jose/jwk/ECKey.toECPublicKey:()Ljava/security/interfaces/ECPublicKey;
      47: astore        9
      49: aload         9
      51: aload_0
      52: getfield      #56                 // Field privateKey:Ljava/security/interfaces/ECPrivateKey;
      55: aload_0
      56: invokevirtual #118                // Method getJCAContext:()Lcom/nimbusds/jose/jca/JWEJCAContext;
      59: invokevirtual #122                // Method com/nimbusds/jose/jca/JWEJCAContext.getKeyEncryptionProvider:()Ljava/security/Provider;
      62: invokestatic  #128                // Method com/nimbusds/jose/crypto/ECDH.deriveSharedSecret:(Ljava/security/interfaces/ECPublicKey;Ljava/security/interfaces/ECPrivateKey;Ljava/security/Provider;)Ljavax/crypto/SecretKey;
      65: astore        10
      67: aload_0
      68: invokevirtual #132                // Method getConcatKDF:()Lcom/nimbusds/jose/crypto/ConcatKDF;
      71: invokevirtual #136                // Method com/nimbusds/jose/crypto/ConcatKDF.getJCAContext:()Lcom/nimbusds/jose/jca/JCAContext;
      74: aload_0
      75: invokevirtual #118                // Method getJCAContext:()Lcom/nimbusds/jose/jca/JWEJCAContext;
      78: invokevirtual #141                // Method com/nimbusds/jose/jca/JWEJCAContext.getMACProvider:()Ljava/security/Provider;
      81: invokevirtual #144                // Method com/nimbusds/jose/jca/JCAContext.setProvider:(Ljava/security/Provider;)V
      84: aload_1
      85: aload         10
      87: aload_0
      88: invokevirtual #132                // Method getConcatKDF:()Lcom/nimbusds/jose/crypto/ConcatKDF;
      91: invokestatic  #150                // Method com/nimbusds/jose/crypto/ECDH.deriveSharedKey:(Lcom/nimbusds/jose/JWEHeader;Ljavax/crypto/SecretKey;Lcom/nimbusds/jose/crypto/ConcatKDF;)Ljavax/crypto/SecretKey;
      94: astore        11
      96: aload         7
      98: getstatic     #154                // Field com/nimbusds/jose/crypto/ECDH$AlgorithmMode.DIRECT:Lcom/nimbusds/jose/crypto/ECDH$AlgorithmMode;
     101: invokevirtual #160                // Method com/nimbusds/jose/crypto/ECDH$AlgorithmMode.equals:(Ljava/lang/Object;)Z
     104: ifeq          114
     107: aload         11
     109: astore        12
     111: goto          185
     114: aload         7
     116: getstatic     #164                // Field com/nimbusds/jose/crypto/ECDH$AlgorithmMode.KW:Lcom/nimbusds/jose/crypto/ECDH$AlgorithmMode;
     119: invokevirtual #160                // Method com/nimbusds/jose/crypto/ECDH$AlgorithmMode.equals:(Ljava/lang/Object;)Z
     122: ifeq          160
     125: aload_2
     126: ifnonnull     139
     129: new           #16                 // class com/nimbusds/jose/JOSEException
     132: dup
     133: ldc           #167                // String Missing JWE encrypted key
     135: invokespecial #49                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
     138: athrow
     139: aload         11
     141: aload_2
     142: invokevirtual #169                // Method com/nimbusds/jose/util/Base64URL.decode:()[B
     145: aload_0
     146: invokevirtual #118                // Method getJCAContext:()Lcom/nimbusds/jose/jca/JWEJCAContext;
     149: invokevirtual #122                // Method com/nimbusds/jose/jca/JWEJCAContext.getKeyEncryptionProvider:()Ljava/security/Provider;
     152: invokestatic  #175                // Method com/nimbusds/jose/crypto/AESKW.unwrapCEK:(Ljavax/crypto/SecretKey;[BLjava/security/Provider;)Ljavax/crypto/SecretKey;
     155: astore        12
     157: goto          185
     160: new           #16                 // class com/nimbusds/jose/JOSEException
     163: dup
     164: new           #181                // class java/lang/StringBuilder
     167: dup
     168: ldc           #183                // String Unexpected JWE ECDH algorithm mode:
     170: invokespecial #185                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     173: aload         7
     175: invokevirtual #186                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     178: invokevirtual #190                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     181: invokespecial #49                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
     184: athrow
     185: aload_1
     186: aload_2
     187: aload_3
     188: aload         4
     190: aload         5
     192: aload         12
     194: aload_0
     195: invokevirtual #118                // Method getJCAContext:()Lcom/nimbusds/jose/jca/JWEJCAContext;
     198: invokestatic  #194                // Method com/nimbusds/jose/crypto/ContentCryptoProvider.decrypt:(Lcom/nimbusds/jose/JWEHeader;Lcom/nimbusds/jose/util/Base64URL;Lcom/nimbusds/jose/util/Base64URL;Lcom/nimbusds/jose/util/Base64URL;Lcom/nimbusds/jose/util/Base64URL;Ljavax/crypto/SecretKey;Lcom/nimbusds/jose/jca/JWEJCAContext;)[B
     201: areturn

  public java.util.Set supportedEncryptionMethods();
    Code:
       0: aload_0
       1: invokespecial #223                // Method com/nimbusds/jose/crypto/ECDHCryptoProvider.supportedEncryptionMethods:()Ljava/util/Set;
       4: areturn

  public com.nimbusds.jose.jca.JWEJCAContext getJCAContext();
    Code:
       0: aload_0
       1: invokespecial #225                // Method com/nimbusds/jose/crypto/ECDHCryptoProvider.getJCAContext:()Lcom/nimbusds/jose/jca/JWEJCAContext;
       4: areturn

  public java.util.Set supportedEllipticCurves();
    Code:
       0: aload_0
       1: invokespecial #227                // Method com/nimbusds/jose/crypto/ECDHCryptoProvider.supportedEllipticCurves:()Ljava/util/Set;
       4: areturn

  public com.nimbusds.jose.jwk.ECKey$Curve getCurve();
    Code:
       0: aload_0
       1: invokespecial #229                // Method com/nimbusds/jose/crypto/ECDHCryptoProvider.getCurve:()Lcom/nimbusds/jose/jwk/ECKey$Curve;
       4: areturn

  public java.util.Set supportedJWEAlgorithms();
    Code:
       0: aload_0
       1: invokespecial #231                // Method com/nimbusds/jose/crypto/ECDHCryptoProvider.supportedJWEAlgorithms:()Ljava/util/Set;
       4: areturn
}
