Compiled from "DirectDecrypter.java"
public class com.nimbusds.jose.crypto.DirectDecrypter extends com.nimbusds.jose.crypto.DirectCryptoProvider implements com.nimbusds.jose.JWEDecrypter,com.nimbusds.jose.CriticalHeaderParamsAware {
  private final com.nimbusds.jose.crypto.CriticalHeaderParamsDeferral critPolicy;

  public com.nimbusds.jose.crypto.DirectDecrypter(javax.crypto.SecretKey) throws com.nimbusds.jose.KeyLengthException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #17                 // Method com/nimbusds/jose/crypto/DirectCryptoProvider."<init>":(Ljavax/crypto/SecretKey;)V
       5: aload_0
       6: new           #19                 // class com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral
       9: dup
      10: invokespecial #21                 // Method com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral."<init>":()V
      13: putfield      #24                 // Field critPolicy:Lcom/nimbusds/jose/crypto/CriticalHeaderParamsDeferral;
      16: return

  public com.nimbusds.jose.crypto.DirectDecrypter(byte[]) throws com.nimbusds.jose.KeyLengthException;
    Code:
       0: aload_0
       1: new           #33                 // class javax/crypto/spec/SecretKeySpec
       4: dup
       5: aload_1
       6: ldc           #35                 // String AES
       8: invokespecial #37                 // Method javax/crypto/spec/SecretKeySpec."<init>":([BLjava/lang/String;)V
      11: invokespecial #40                 // Method "<init>":(Ljavax/crypto/SecretKey;)V
      14: return

  public com.nimbusds.jose.crypto.DirectDecrypter(com.nimbusds.jose.jwk.OctetSequenceKey) throws com.nimbusds.jose.KeyLengthException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #35                 // String AES
       4: invokevirtual #44                 // Method com/nimbusds/jose/jwk/OctetSequenceKey.toSecretKey:(Ljava/lang/String;)Ljavax/crypto/SecretKey;
       7: invokespecial #40                 // Method "<init>":(Ljavax/crypto/SecretKey;)V
      10: return

  public com.nimbusds.jose.crypto.DirectDecrypter(javax.crypto.SecretKey, java.util.Set<java.lang.String>) throws com.nimbusds.jose.KeyLengthException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #17                 // Method com/nimbusds/jose/crypto/DirectCryptoProvider."<init>":(Ljavax/crypto/SecretKey;)V
       5: aload_0
       6: new           #19                 // class com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral
       9: dup
      10: invokespecial #21                 // Method com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral."<init>":()V
      13: putfield      #24                 // Field critPolicy:Lcom/nimbusds/jose/crypto/CriticalHeaderParamsDeferral;
      16: aload_0
      17: getfield      #24                 // Field critPolicy:Lcom/nimbusds/jose/crypto/CriticalHeaderParamsDeferral;
      20: aload_2
      21: invokevirtual #55                 // Method com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral.setDeferredCriticalHeaderParams:(Ljava/util/Set;)V
      24: return

  public java.util.Set<java.lang.String> getProcessedCriticalHeaderParams();
    Code:
       0: aload_0
       1: getfield      #24                 // Field critPolicy:Lcom/nimbusds/jose/crypto/CriticalHeaderParamsDeferral;
       4: invokevirtual #66                 // Method com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral.getProcessedCriticalHeaderParams:()Ljava/util/Set;
       7: areturn

  public java.util.Set<java.lang.String> getDeferredCriticalHeaderParams();
    Code:
       0: aload_0
       1: getfield      #24                 // Field critPolicy:Lcom/nimbusds/jose/crypto/CriticalHeaderParamsDeferral;
       4: invokevirtual #66                 // Method com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral.getProcessedCriticalHeaderParams:()Ljava/util/Set;
       7: areturn

  public byte[] decrypt(com.nimbusds.jose.JWEHeader, com.nimbusds.jose.util.Base64URL, com.nimbusds.jose.util.Base64URL, com.nimbusds.jose.util.Base64URL, com.nimbusds.jose.util.Base64URL) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_2
       1: ifnull        14
       4: new           #71                 // class com/nimbusds/jose/JOSEException
       7: dup
       8: ldc           #73                 // String Unexpected present JWE encrypted key
      10: invokespecial #75                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_3
      15: ifnonnull     28
      18: new           #71                 // class com/nimbusds/jose/JOSEException
      21: dup
      22: ldc           #78                 // String Unexpected present JWE initialization vector (IV)
      24: invokespecial #75                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload         5
      30: ifnonnull     43
      33: new           #71                 // class com/nimbusds/jose/JOSEException
      36: dup
      37: ldc           #80                 // String Missing JWE authentication tag
      39: invokespecial #75                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_1
      44: invokevirtual #82                 // Method com/nimbusds/jose/JWEHeader.getAlgorithm:()Lcom/nimbusds/jose/JWEAlgorithm;
      47: astore        6
      49: aload         6
      51: getstatic     #88                 // Field com/nimbusds/jose/JWEAlgorithm.DIR:Lcom/nimbusds/jose/JWEAlgorithm;
      54: invokevirtual #94                 // Method com/nimbusds/jose/JWEAlgorithm.equals:(Ljava/lang/Object;)Z
      57: ifne          76
      60: new           #71                 // class com/nimbusds/jose/JOSEException
      63: dup
      64: aload         6
      66: getstatic     #98                 // Field SUPPORTED_ALGORITHMS:Ljava/util/Set;
      69: invokestatic  #101                // Method com/nimbusds/jose/crypto/AlgorithmSupportMessage.unsupportedJWEAlgorithm:(Lcom/nimbusds/jose/JWEAlgorithm;Ljava/util/Collection;)Ljava/lang/String;
      72: invokespecial #75                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
      75: athrow
      76: aload_0
      77: getfield      #24                 // Field critPolicy:Lcom/nimbusds/jose/crypto/CriticalHeaderParamsDeferral;
      80: aload_1
      81: invokevirtual #107                // Method com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral.ensureHeaderPasses:(Lcom/nimbusds/jose/JWEHeader;)V
      84: aload_1
      85: aconst_null
      86: aload_3
      87: aload         4
      89: aload         5
      91: aload_0
      92: invokevirtual #111                // Method getKey:()Ljavax/crypto/SecretKey;
      95: aload_0
      96: invokevirtual #115                // Method getJCAContext:()Lcom/nimbusds/jose/jca/JWEJCAContext;
      99: invokestatic  #119                // Method com/nimbusds/jose/crypto/ContentCryptoProvider.decrypt:(Lcom/nimbusds/jose/JWEHeader;Lcom/nimbusds/jose/util/Base64URL;Lcom/nimbusds/jose/util/Base64URL;Lcom/nimbusds/jose/util/Base64URL;Lcom/nimbusds/jose/util/Base64URL;Ljavax/crypto/SecretKey;Lcom/nimbusds/jose/jca/JWEJCAContext;)[B
     102: areturn

  public javax.crypto.SecretKey getKey();
    Code:
       0: aload_0
       1: invokespecial #133                // Method com/nimbusds/jose/crypto/DirectCryptoProvider.getKey:()Ljavax/crypto/SecretKey;
       4: areturn

  public java.util.Set supportedEncryptionMethods();
    Code:
       0: aload_0
       1: invokespecial #135                // Method com/nimbusds/jose/crypto/DirectCryptoProvider.supportedEncryptionMethods:()Ljava/util/Set;
       4: areturn

  public com.nimbusds.jose.jca.JWEJCAContext getJCAContext();
    Code:
       0: aload_0
       1: invokespecial #137                // Method com/nimbusds/jose/crypto/DirectCryptoProvider.getJCAContext:()Lcom/nimbusds/jose/jca/JWEJCAContext;
       4: areturn

  public java.util.Set supportedJWEAlgorithms();
    Code:
       0: aload_0
       1: invokespecial #139                // Method com/nimbusds/jose/crypto/DirectCryptoProvider.supportedJWEAlgorithms:()Ljava/util/Set;
       4: areturn
}
