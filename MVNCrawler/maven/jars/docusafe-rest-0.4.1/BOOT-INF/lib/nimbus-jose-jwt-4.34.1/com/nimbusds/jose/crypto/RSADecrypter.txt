Compiled from "RSADecrypter.java"
public class com.nimbusds.jose.crypto.RSADecrypter extends com.nimbusds.jose.crypto.RSACryptoProvider implements com.nimbusds.jose.JWEDecrypter,com.nimbusds.jose.CriticalHeaderParamsAware {
  private final com.nimbusds.jose.crypto.CriticalHeaderParamsDeferral critPolicy;

  private final java.security.PrivateKey privateKey;

  private java.lang.Exception cekDecryptionException;

  public com.nimbusds.jose.crypto.RSADecrypter(java.security.PrivateKey);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #18                 // Method "<init>":(Ljava/security/PrivateKey;Ljava/util/Set;)V
       6: return

  public com.nimbusds.jose.crypto.RSADecrypter(com.nimbusds.jose.jwk.RSAKey) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_0
       1: invokespecial #29                 // Method com/nimbusds/jose/crypto/RSACryptoProvider."<init>":()V
       4: aload_0
       5: new           #32                 // class com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral
       8: dup
       9: invokespecial #34                 // Method com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral."<init>":()V
      12: putfield      #35                 // Field critPolicy:Lcom/nimbusds/jose/crypto/CriticalHeaderParamsDeferral;
      15: aload_1
      16: invokevirtual #37                 // Method com/nimbusds/jose/jwk/RSAKey.isPrivate:()Z
      19: ifne          32
      22: new           #27                 // class com/nimbusds/jose/JOSEException
      25: dup
      26: ldc           #43                 // String The RSA JWK doesn\'t contain a private part
      28: invokespecial #45                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aload_0
      33: aload_1
      34: invokevirtual #48                 // Method com/nimbusds/jose/jwk/RSAKey.toPrivateKey:()Ljava/security/PrivateKey;
      37: putfield      #52                 // Field privateKey:Ljava/security/PrivateKey;
      40: return

  public com.nimbusds.jose.crypto.RSADecrypter(java.security.PrivateKey, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #29                 // Method com/nimbusds/jose/crypto/RSACryptoProvider."<init>":()V
       4: aload_0
       5: new           #32                 // class com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral
       8: dup
       9: invokespecial #34                 // Method com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral."<init>":()V
      12: putfield      #35                 // Field critPolicy:Lcom/nimbusds/jose/crypto/CriticalHeaderParamsDeferral;
      15: aload_1
      16: ifnonnull     29
      19: new           #59                 // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #61                 // String The private RSA key must not be null
      25: invokespecial #63                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_1
      30: invokeinterface #64,  1           // InterfaceMethod java/security/PrivateKey.getAlgorithm:()Ljava/lang/String;
      35: ldc           #70                 // String RSA
      37: invokevirtual #72                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      40: ifne          53
      43: new           #59                 // class java/lang/IllegalArgumentException
      46: dup
      47: ldc           #78                 // String The private key algorithm must be RSA
      49: invokespecial #63                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: aload_0
      54: aload_1
      55: putfield      #52                 // Field privateKey:Ljava/security/PrivateKey;
      58: aload_0
      59: getfield      #35                 // Field critPolicy:Lcom/nimbusds/jose/crypto/CriticalHeaderParamsDeferral;
      62: aload_2
      63: invokevirtual #80                 // Method com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral.setDeferredCriticalHeaderParams:(Ljava/util/Set;)V
      66: return

  public java.security.PrivateKey getPrivateKey();
    Code:
       0: aload_0
       1: getfield      #52                 // Field privateKey:Ljava/security/PrivateKey;
       4: areturn

  public java.util.Set<java.lang.String> getProcessedCriticalHeaderParams();
    Code:
       0: aload_0
       1: getfield      #35                 // Field critPolicy:Lcom/nimbusds/jose/crypto/CriticalHeaderParamsDeferral;
       4: invokevirtual #94                 // Method com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral.getProcessedCriticalHeaderParams:()Ljava/util/Set;
       7: areturn

  public java.util.Set<java.lang.String> getDeferredCriticalHeaderParams();
    Code:
       0: aload_0
       1: getfield      #35                 // Field critPolicy:Lcom/nimbusds/jose/crypto/CriticalHeaderParamsDeferral;
       4: invokevirtual #94                 // Method com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral.getProcessedCriticalHeaderParams:()Ljava/util/Set;
       7: areturn

  public byte[] decrypt(com.nimbusds.jose.JWEHeader, com.nimbusds.jose.util.Base64URL, com.nimbusds.jose.util.Base64URL, com.nimbusds.jose.util.Base64URL, com.nimbusds.jose.util.Base64URL) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_2
       1: ifnonnull     14
       4: new           #27                 // class com/nimbusds/jose/JOSEException
       7: dup
       8: ldc           #99                 // String Missing JWE encrypted key
      10: invokespecial #45                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_3
      15: ifnonnull     28
      18: new           #27                 // class com/nimbusds/jose/JOSEException
      21: dup
      22: ldc           #101                // String Missing JWE initialization vector (IV)
      24: invokespecial #45                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload         5
      30: ifnonnull     43
      33: new           #27                 // class com/nimbusds/jose/JOSEException
      36: dup
      37: ldc           #103                // String Missing JWE authentication tag
      39: invokespecial #45                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: getfield      #35                 // Field critPolicy:Lcom/nimbusds/jose/crypto/CriticalHeaderParamsDeferral;
      47: aload_1
      48: invokevirtual #105                // Method com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral.ensureHeaderPasses:(Lcom/nimbusds/jose/JWEHeader;)V
      51: aload_1
      52: invokevirtual #109                // Method com/nimbusds/jose/JWEHeader.getAlgorithm:()Lcom/nimbusds/jose/JWEAlgorithm;
      55: astore        6
      57: aload         6
      59: getstatic     #114                // Field com/nimbusds/jose/JWEAlgorithm.RSA1_5:Lcom/nimbusds/jose/JWEAlgorithm;
      62: invokevirtual #120                // Method com/nimbusds/jose/JWEAlgorithm.equals:(Ljava/lang/Object;)Z
      65: ifeq          147
      68: aload_1
      69: invokevirtual #124                // Method com/nimbusds/jose/JWEHeader.getEncryptionMethod:()Lcom/nimbusds/jose/EncryptionMethod;
      72: invokevirtual #128                // Method com/nimbusds/jose/EncryptionMethod.cekBitLength:()I
      75: istore        8
      77: aload_1
      78: invokevirtual #124                // Method com/nimbusds/jose/JWEHeader.getEncryptionMethod:()Lcom/nimbusds/jose/EncryptionMethod;
      81: aload_0
      82: invokevirtual #134                // Method getJCAContext:()Lcom/nimbusds/jose/jca/JWEJCAContext;
      85: invokevirtual #138                // Method com/nimbusds/jose/jca/JWEJCAContext.getSecureRandom:()Ljava/security/SecureRandom;
      88: invokestatic  #144                // Method com/nimbusds/jose/crypto/ContentCryptoProvider.generateCEK:(Lcom/nimbusds/jose/EncryptionMethod;Ljava/security/SecureRandom;)Ljavax/crypto/SecretKey;
      91: astore        9
      93: aload_0
      94: getfield      #52                 // Field privateKey:Ljava/security/PrivateKey;
      97: aload_2
      98: invokevirtual #150                // Method com/nimbusds/jose/util/Base64URL.decode:()[B
     101: iload         8
     103: aload_0
     104: invokevirtual #134                // Method getJCAContext:()Lcom/nimbusds/jose/jca/JWEJCAContext;
     107: invokevirtual #156                // Method com/nimbusds/jose/jca/JWEJCAContext.getKeyEncryptionProvider:()Ljava/security/Provider;
     110: invokestatic  #160                // Method com/nimbusds/jose/crypto/RSA1_5.decryptCEK:(Ljava/security/PrivateKey;[BILjava/security/Provider;)Ljavax/crypto/SecretKey;
     113: astore        7
     115: aload         7
     117: ifnonnull     139
     120: aload         9
     122: astore        7
     124: goto          139
     127: astore        10
     129: aload_0
     130: aload         10
     132: putfield      #166                // Field cekDecryptionException:Ljava/lang/Exception;
     135: aload         9
     137: astore        7
     139: aload_0
     140: aconst_null
     141: putfield      #166                // Field cekDecryptionException:Ljava/lang/Exception;
     144: goto          231
     147: aload         6
     149: getstatic     #168                // Field com/nimbusds/jose/JWEAlgorithm.RSA_OAEP:Lcom/nimbusds/jose/JWEAlgorithm;
     152: invokevirtual #120                // Method com/nimbusds/jose/JWEAlgorithm.equals:(Ljava/lang/Object;)Z
     155: ifeq          181
     158: aload_0
     159: getfield      #52                 // Field privateKey:Ljava/security/PrivateKey;
     162: aload_2
     163: invokevirtual #150                // Method com/nimbusds/jose/util/Base64URL.decode:()[B
     166: aload_0
     167: invokevirtual #134                // Method getJCAContext:()Lcom/nimbusds/jose/jca/JWEJCAContext;
     170: invokevirtual #156                // Method com/nimbusds/jose/jca/JWEJCAContext.getKeyEncryptionProvider:()Ljava/security/Provider;
     173: invokestatic  #171                // Method com/nimbusds/jose/crypto/RSA_OAEP.decryptCEK:(Ljava/security/PrivateKey;[BLjava/security/Provider;)Ljavax/crypto/SecretKey;
     176: astore        7
     178: goto          231
     181: aload         6
     183: getstatic     #176                // Field com/nimbusds/jose/JWEAlgorithm.RSA_OAEP_256:Lcom/nimbusds/jose/JWEAlgorithm;
     186: invokevirtual #120                // Method com/nimbusds/jose/JWEAlgorithm.equals:(Ljava/lang/Object;)Z
     189: ifeq          215
     192: aload_0
     193: getfield      #52                 // Field privateKey:Ljava/security/PrivateKey;
     196: aload_2
     197: invokevirtual #150                // Method com/nimbusds/jose/util/Base64URL.decode:()[B
     200: aload_0
     201: invokevirtual #134                // Method getJCAContext:()Lcom/nimbusds/jose/jca/JWEJCAContext;
     204: invokevirtual #156                // Method com/nimbusds/jose/jca/JWEJCAContext.getKeyEncryptionProvider:()Ljava/security/Provider;
     207: invokestatic  #179                // Method com/nimbusds/jose/crypto/RSA_OAEP_256.decryptCEK:(Ljava/security/PrivateKey;[BLjava/security/Provider;)Ljavax/crypto/SecretKey;
     210: astore        7
     212: goto          231
     215: new           #27                 // class com/nimbusds/jose/JOSEException
     218: dup
     219: aload         6
     221: getstatic     #182                // Field SUPPORTED_ALGORITHMS:Ljava/util/Set;
     224: invokestatic  #185                // Method com/nimbusds/jose/crypto/AlgorithmSupportMessage.unsupportedJWEAlgorithm:(Lcom/nimbusds/jose/JWEAlgorithm;Ljava/util/Collection;)Ljava/lang/String;
     227: invokespecial #45                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
     230: athrow
     231: aload_1
     232: aload_2
     233: aload_3
     234: aload         4
     236: aload         5
     238: aload         7
     240: aload_0
     241: invokevirtual #134                // Method getJCAContext:()Lcom/nimbusds/jose/jca/JWEJCAContext;
     244: invokestatic  #191                // Method com/nimbusds/jose/crypto/ContentCryptoProvider.decrypt:(Lcom/nimbusds/jose/JWEHeader;Lcom/nimbusds/jose/util/Base64URL;Lcom/nimbusds/jose/util/Base64URL;Lcom/nimbusds/jose/util/Base64URL;Lcom/nimbusds/jose/util/Base64URL;Ljavax/crypto/SecretKey;Lcom/nimbusds/jose/jca/JWEJCAContext;)[B
     247: areturn
    Exception table:
       from    to  target type
          93   124   127   Class java/lang/Exception

  public java.lang.Exception getCEKDecryptionException();
    Code:
       0: aload_0
       1: getfield      #166                // Field cekDecryptionException:Ljava/lang/Exception;
       4: areturn

  public java.util.Set supportedEncryptionMethods();
    Code:
       0: aload_0
       1: invokespecial #215                // Method com/nimbusds/jose/crypto/RSACryptoProvider.supportedEncryptionMethods:()Ljava/util/Set;
       4: areturn

  public com.nimbusds.jose.jca.JWEJCAContext getJCAContext();
    Code:
       0: aload_0
       1: invokespecial #217                // Method com/nimbusds/jose/crypto/RSACryptoProvider.getJCAContext:()Lcom/nimbusds/jose/jca/JWEJCAContext;
       4: areturn

  public java.util.Set supportedJWEAlgorithms();
    Code:
       0: aload_0
       1: invokespecial #219                // Method com/nimbusds/jose/crypto/RSACryptoProvider.supportedJWEAlgorithms:()Ljava/util/Set;
       4: areturn
}
