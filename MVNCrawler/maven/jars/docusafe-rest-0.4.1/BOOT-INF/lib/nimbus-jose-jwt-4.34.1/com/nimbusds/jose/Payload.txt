Compiled from "Payload.java"
public final class com.nimbusds.jose.Payload implements java.io.Serializable {
  private static final long serialVersionUID;

  private final com.nimbusds.jose.Payload$Origin origin;

  private final net.minidev.json.JSONObject jsonObject;

  private final java.lang.String string;

  private final byte[] bytes;

  private final com.nimbusds.jose.util.Base64URL base64URL;

  private final com.nimbusds.jose.JWSObject jwsObject;

  private final com.nimbusds.jwt.SignedJWT signedJWT;

  private static java.lang.String byteArrayToString(byte[]);
    Code:
       0: aload_0
       1: ifnull        18
       4: new           #29                 // class java/lang/String
       7: dup
       8: aload_0
       9: getstatic     #31                 // Field com/nimbusds/jose/util/StandardCharset.UTF_8:Ljava/nio/charset/Charset;
      12: invokespecial #37                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      15: goto          19
      18: aconst_null
      19: areturn

  private static byte[] stringToByteArray(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        14
       4: aload_0
       5: getstatic     #31                 // Field com/nimbusds/jose/util/StandardCharset.UTF_8:Ljava/nio/charset/Charset;
       8: invokevirtual #46                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      11: goto          15
      14: aconst_null
      15: areturn

  public com.nimbusds.jose.Payload(net.minidev.json.JSONObject);
    Code:
       0: aload_0
       1: invokespecial #52                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #55                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #57                 // String The JSON object must not be null
      14: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #62                 // Field jsonObject:Lnet/minidev/json/JSONObject;
      23: aload_0
      24: aconst_null
      25: putfield      #64                 // Field string:Ljava/lang/String;
      28: aload_0
      29: aconst_null
      30: putfield      #66                 // Field bytes:[B
      33: aload_0
      34: aconst_null
      35: putfield      #68                 // Field base64URL:Lcom/nimbusds/jose/util/Base64URL;
      38: aload_0
      39: aconst_null
      40: putfield      #70                 // Field jwsObject:Lcom/nimbusds/jose/JWSObject;
      43: aload_0
      44: aconst_null
      45: putfield      #72                 // Field signedJWT:Lcom/nimbusds/jwt/SignedJWT;
      48: aload_0
      49: getstatic     #74                 // Field com/nimbusds/jose/Payload$Origin.JSON:Lcom/nimbusds/jose/Payload$Origin;
      52: putfield      #79                 // Field origin:Lcom/nimbusds/jose/Payload$Origin;
      55: return

  public com.nimbusds.jose.Payload(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #52                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #55                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #85                 // String The string must not be null
      14: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aconst_null
      20: putfield      #62                 // Field jsonObject:Lnet/minidev/json/JSONObject;
      23: aload_0
      24: aload_1
      25: putfield      #64                 // Field string:Ljava/lang/String;
      28: aload_0
      29: aconst_null
      30: putfield      #66                 // Field bytes:[B
      33: aload_0
      34: aconst_null
      35: putfield      #68                 // Field base64URL:Lcom/nimbusds/jose/util/Base64URL;
      38: aload_0
      39: aconst_null
      40: putfield      #70                 // Field jwsObject:Lcom/nimbusds/jose/JWSObject;
      43: aload_0
      44: aconst_null
      45: putfield      #72                 // Field signedJWT:Lcom/nimbusds/jwt/SignedJWT;
      48: aload_0
      49: getstatic     #87                 // Field com/nimbusds/jose/Payload$Origin.STRING:Lcom/nimbusds/jose/Payload$Origin;
      52: putfield      #79                 // Field origin:Lcom/nimbusds/jose/Payload$Origin;
      55: return

  public com.nimbusds.jose.Payload(byte[]);
    Code:
       0: aload_0
       1: invokespecial #52                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #55                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #91                 // String The byte array must not be null
      14: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aconst_null
      20: putfield      #62                 // Field jsonObject:Lnet/minidev/json/JSONObject;
      23: aload_0
      24: aconst_null
      25: putfield      #64                 // Field string:Ljava/lang/String;
      28: aload_0
      29: aload_1
      30: putfield      #66                 // Field bytes:[B
      33: aload_0
      34: aconst_null
      35: putfield      #68                 // Field base64URL:Lcom/nimbusds/jose/util/Base64URL;
      38: aload_0
      39: aconst_null
      40: putfield      #70                 // Field jwsObject:Lcom/nimbusds/jose/JWSObject;
      43: aload_0
      44: aconst_null
      45: putfield      #72                 // Field signedJWT:Lcom/nimbusds/jwt/SignedJWT;
      48: aload_0
      49: getstatic     #93                 // Field com/nimbusds/jose/Payload$Origin.BYTE_ARRAY:Lcom/nimbusds/jose/Payload$Origin;
      52: putfield      #79                 // Field origin:Lcom/nimbusds/jose/Payload$Origin;
      55: return

  public com.nimbusds.jose.Payload(com.nimbusds.jose.util.Base64URL);
    Code:
       0: aload_0
       1: invokespecial #52                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #55                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #97                 // String The Base64URL-encoded object must not be null
      14: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aconst_null
      20: putfield      #62                 // Field jsonObject:Lnet/minidev/json/JSONObject;
      23: aload_0
      24: aconst_null
      25: putfield      #64                 // Field string:Ljava/lang/String;
      28: aload_0
      29: aconst_null
      30: putfield      #66                 // Field bytes:[B
      33: aload_0
      34: aload_1
      35: putfield      #68                 // Field base64URL:Lcom/nimbusds/jose/util/Base64URL;
      38: aload_0
      39: aconst_null
      40: putfield      #70                 // Field jwsObject:Lcom/nimbusds/jose/JWSObject;
      43: aload_0
      44: aconst_null
      45: putfield      #72                 // Field signedJWT:Lcom/nimbusds/jwt/SignedJWT;
      48: aload_0
      49: getstatic     #99                 // Field com/nimbusds/jose/Payload$Origin.BASE64URL:Lcom/nimbusds/jose/Payload$Origin;
      52: putfield      #79                 // Field origin:Lcom/nimbusds/jose/Payload$Origin;
      55: return

  public com.nimbusds.jose.Payload(com.nimbusds.jose.JWSObject);
    Code:
       0: aload_0
       1: invokespecial #52                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #55                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #105                // String The JWS object must not be null
      14: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_1
      19: invokevirtual #107                // Method com/nimbusds/jose/JWSObject.getState:()Lcom/nimbusds/jose/JWSObject$State;
      22: getstatic     #113                // Field com/nimbusds/jose/JWSObject$State.UNSIGNED:Lcom/nimbusds/jose/JWSObject$State;
      25: if_acmpne     38
      28: new           #55                 // class java/lang/IllegalArgumentException
      31: dup
      32: ldc           #119                // String The JWS object must be signed
      34: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: aconst_null
      40: putfield      #62                 // Field jsonObject:Lnet/minidev/json/JSONObject;
      43: aload_0
      44: aconst_null
      45: putfield      #64                 // Field string:Ljava/lang/String;
      48: aload_0
      49: aconst_null
      50: putfield      #66                 // Field bytes:[B
      53: aload_0
      54: aconst_null
      55: putfield      #68                 // Field base64URL:Lcom/nimbusds/jose/util/Base64URL;
      58: aload_0
      59: aload_1
      60: putfield      #70                 // Field jwsObject:Lcom/nimbusds/jose/JWSObject;
      63: aload_0
      64: aconst_null
      65: putfield      #72                 // Field signedJWT:Lcom/nimbusds/jwt/SignedJWT;
      68: aload_0
      69: getstatic     #121                // Field com/nimbusds/jose/Payload$Origin.JWS_OBJECT:Lcom/nimbusds/jose/Payload$Origin;
      72: putfield      #79                 // Field origin:Lcom/nimbusds/jose/Payload$Origin;
      75: return

  public com.nimbusds.jose.Payload(com.nimbusds.jwt.SignedJWT);
    Code:
       0: aload_0
       1: invokespecial #52                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #55                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #125                // String The signed JWT must not be null
      14: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_1
      19: invokevirtual #127                // Method com/nimbusds/jwt/SignedJWT.getState:()Lcom/nimbusds/jose/JWSObject$State;
      22: getstatic     #113                // Field com/nimbusds/jose/JWSObject$State.UNSIGNED:Lcom/nimbusds/jose/JWSObject$State;
      25: if_acmpne     38
      28: new           #55                 // class java/lang/IllegalArgumentException
      31: dup
      32: ldc           #130                // String The JWT must be signed
      34: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: aconst_null
      40: putfield      #62                 // Field jsonObject:Lnet/minidev/json/JSONObject;
      43: aload_0
      44: aconst_null
      45: putfield      #64                 // Field string:Ljava/lang/String;
      48: aload_0
      49: aconst_null
      50: putfield      #66                 // Field bytes:[B
      53: aload_0
      54: aconst_null
      55: putfield      #68                 // Field base64URL:Lcom/nimbusds/jose/util/Base64URL;
      58: aload_0
      59: aload_1
      60: putfield      #72                 // Field signedJWT:Lcom/nimbusds/jwt/SignedJWT;
      63: aload_0
      64: aload_1
      65: putfield      #70                 // Field jwsObject:Lcom/nimbusds/jose/JWSObject;
      68: aload_0
      69: getstatic     #132                // Field com/nimbusds/jose/Payload$Origin.SIGNED_JWT:Lcom/nimbusds/jose/Payload$Origin;
      72: putfield      #79                 // Field origin:Lcom/nimbusds/jose/Payload$Origin;
      75: return

  public com.nimbusds.jose.Payload$Origin getOrigin();
    Code:
       0: aload_0
       1: getfield      #79                 // Field origin:Lcom/nimbusds/jose/Payload$Origin;
       4: areturn

  public net.minidev.json.JSONObject toJSONObject();
    Code:
       0: aload_0
       1: getfield      #62                 // Field jsonObject:Lnet/minidev/json/JSONObject;
       4: ifnull        12
       7: aload_0
       8: getfield      #62                 // Field jsonObject:Lnet/minidev/json/JSONObject;
      11: areturn
      12: aload_0
      13: invokevirtual #139                // Method toString:()Ljava/lang/String;
      16: astore_1
      17: aload_1
      18: ifnonnull     23
      21: aconst_null
      22: areturn
      23: aload_1
      24: invokestatic  #143                // Method com/nimbusds/jose/util/JSONObjectUtils.parse:(Ljava/lang/String;)Lnet/minidev/json/JSONObject;
      27: areturn
      28: pop
      29: aconst_null
      30: areturn
    Exception table:
       from    to  target type
          23    27    28   Class java/text/ParseException

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #64                 // Field string:Ljava/lang/String;
       4: ifnull        12
       7: aload_0
       8: getfield      #64                 // Field string:Ljava/lang/String;
      11: areturn
      12: aload_0
      13: getfield      #70                 // Field jwsObject:Lcom/nimbusds/jose/JWSObject;
      16: ifnull        45
      19: aload_0
      20: getfield      #70                 // Field jwsObject:Lcom/nimbusds/jose/JWSObject;
      23: invokevirtual #152                // Method com/nimbusds/jose/JWSObject.getParsedString:()Ljava/lang/String;
      26: ifnull        37
      29: aload_0
      30: getfield      #70                 // Field jwsObject:Lcom/nimbusds/jose/JWSObject;
      33: invokevirtual #152                // Method com/nimbusds/jose/JWSObject.getParsedString:()Ljava/lang/String;
      36: areturn
      37: aload_0
      38: getfield      #70                 // Field jwsObject:Lcom/nimbusds/jose/JWSObject;
      41: invokevirtual #155                // Method com/nimbusds/jose/JWSObject.serialize:()Ljava/lang/String;
      44: areturn
      45: aload_0
      46: getfield      #62                 // Field jsonObject:Lnet/minidev/json/JSONObject;
      49: ifnull        60
      52: aload_0
      53: getfield      #62                 // Field jsonObject:Lnet/minidev/json/JSONObject;
      56: invokevirtual #158                // Method net/minidev/json/JSONObject.toString:()Ljava/lang/String;
      59: areturn
      60: aload_0
      61: getfield      #66                 // Field bytes:[B
      64: ifnull        75
      67: aload_0
      68: getfield      #66                 // Field bytes:[B
      71: invokestatic  #159                // Method byteArrayToString:([B)Ljava/lang/String;
      74: areturn
      75: aload_0
      76: getfield      #68                 // Field base64URL:Lcom/nimbusds/jose/util/Base64URL;
      79: ifnull        90
      82: aload_0
      83: getfield      #68                 // Field base64URL:Lcom/nimbusds/jose/util/Base64URL;
      86: invokevirtual #161                // Method com/nimbusds/jose/util/Base64URL.decodeToString:()Ljava/lang/String;
      89: areturn
      90: aconst_null
      91: areturn

  public byte[] toBytes();
    Code:
       0: aload_0
       1: getfield      #66                 // Field bytes:[B
       4: ifnull        12
       7: aload_0
       8: getfield      #66                 // Field bytes:[B
      11: areturn
      12: aload_0
      13: getfield      #68                 // Field base64URL:Lcom/nimbusds/jose/util/Base64URL;
      16: ifnull        27
      19: aload_0
      20: getfield      #68                 // Field base64URL:Lcom/nimbusds/jose/util/Base64URL;
      23: invokevirtual #166                // Method com/nimbusds/jose/util/Base64URL.decode:()[B
      26: areturn
      27: aload_0
      28: invokevirtual #139                // Method toString:()Ljava/lang/String;
      31: invokestatic  #169                // Method stringToByteArray:(Ljava/lang/String;)[B
      34: areturn

  public com.nimbusds.jose.util.Base64URL toBase64URL();
    Code:
       0: aload_0
       1: getfield      #68                 // Field base64URL:Lcom/nimbusds/jose/util/Base64URL;
       4: ifnull        12
       7: aload_0
       8: getfield      #68                 // Field base64URL:Lcom/nimbusds/jose/util/Base64URL;
      11: areturn
      12: aload_0
      13: invokevirtual #173                // Method toBytes:()[B
      16: invokestatic  #175                // Method com/nimbusds/jose/util/Base64URL.encode:([B)Lcom/nimbusds/jose/util/Base64URL;
      19: areturn

  public com.nimbusds.jose.JWSObject toJWSObject();
    Code:
       0: aload_0
       1: getfield      #70                 // Field jwsObject:Lcom/nimbusds/jose/JWSObject;
       4: ifnull        12
       7: aload_0
       8: getfield      #70                 // Field jwsObject:Lcom/nimbusds/jose/JWSObject;
      11: areturn
      12: aload_0
      13: invokevirtual #139                // Method toString:()Ljava/lang/String;
      16: invokestatic  #181                // Method com/nimbusds/jose/JWSObject.parse:(Ljava/lang/String;)Lcom/nimbusds/jose/JWSObject;
      19: areturn
      20: pop
      21: aconst_null
      22: areturn
    Exception table:
       from    to  target type
          12    19    20   Class java/text/ParseException

  public com.nimbusds.jwt.SignedJWT toSignedJWT();
    Code:
       0: aload_0
       1: getfield      #72                 // Field signedJWT:Lcom/nimbusds/jwt/SignedJWT;
       4: ifnull        12
       7: aload_0
       8: getfield      #72                 // Field signedJWT:Lcom/nimbusds/jwt/SignedJWT;
      11: areturn
      12: aload_0
      13: invokevirtual #139                // Method toString:()Ljava/lang/String;
      16: invokestatic  #186                // Method com/nimbusds/jwt/SignedJWT.parse:(Ljava/lang/String;)Lcom/nimbusds/jwt/SignedJWT;
      19: areturn
      20: pop
      21: aconst_null
      22: areturn
    Exception table:
       from    to  target type
          12    19    20   Class java/text/ParseException

  public <T> T toType(com.nimbusds.jose.PayloadTransformer<T>);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #193,  2          // InterfaceMethod com/nimbusds/jose/PayloadTransformer.transform:(Lcom/nimbusds/jose/Payload;)Ljava/lang/Object;
       7: areturn
}
