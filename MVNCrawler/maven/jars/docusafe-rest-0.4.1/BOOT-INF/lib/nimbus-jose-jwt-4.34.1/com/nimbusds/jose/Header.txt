Compiled from "Header.java"
public abstract class com.nimbusds.jose.Header implements java.io.Serializable {
  private static final long serialVersionUID;

  private final com.nimbusds.jose.Algorithm alg;

  private final com.nimbusds.jose.JOSEObjectType typ;

  private final java.lang.String cty;

  private final java.util.Set<java.lang.String> crit;

  private final java.util.Map<java.lang.String, java.lang.Object> customParams;

  private static final java.util.Map<java.lang.String, java.lang.Object> EMPTY_CUSTOM_PARAMS;

  private final com.nimbusds.jose.util.Base64URL parsedBase64URL;

  static {};
    Code:
       0: new           #31                 // class java/util/HashMap
       3: dup
       4: invokespecial #33                 // Method java/util/HashMap."<init>":()V
       7: invokestatic  #36                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      10: putstatic     #42                 // Field EMPTY_CUSTOM_PARAMS:Ljava/util/Map;
      13: return

  protected com.nimbusds.jose.Header(com.nimbusds.jose.Algorithm, com.nimbusds.jose.JOSEObjectType, java.lang.String, java.util.Set<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>, com.nimbusds.jose.util.Base64URL);
    Code:
       0: aload_0
       1: invokespecial #48                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #49                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #51                 // String The algorithm \"alg\" header parameter must not be null
      14: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #56                 // Field alg:Lcom/nimbusds/jose/Algorithm;
      23: aload_0
      24: aload_2
      25: putfield      #58                 // Field typ:Lcom/nimbusds/jose/JOSEObjectType;
      28: aload_0
      29: aload_3
      30: putfield      #60                 // Field cty:Ljava/lang/String;
      33: aload         4
      35: ifnull        57
      38: aload_0
      39: new           #62                 // class java/util/HashSet
      42: dup
      43: aload         4
      45: invokespecial #64                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      48: invokestatic  #67                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      51: putfield      #71                 // Field crit:Ljava/util/Set;
      54: goto          62
      57: aload_0
      58: aconst_null
      59: putfield      #71                 // Field crit:Ljava/util/Set;
      62: aload         5
      64: ifnull        86
      67: aload_0
      68: new           #31                 // class java/util/HashMap
      71: dup
      72: aload         5
      74: invokespecial #73                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      77: invokestatic  #36                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      80: putfield      #76                 // Field customParams:Ljava/util/Map;
      83: goto          93
      86: aload_0
      87: getstatic     #42                 // Field EMPTY_CUSTOM_PARAMS:Ljava/util/Map;
      90: putfield      #76                 // Field customParams:Ljava/util/Map;
      93: aload_0
      94: aload         6
      96: putfield      #78                 // Field parsedBase64URL:Lcom/nimbusds/jose/util/Base64URL;
      99: return

  protected com.nimbusds.jose.Header(com.nimbusds.jose.Header);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #97                 // Method getAlgorithm:()Lcom/nimbusds/jose/Algorithm;
       5: aload_1
       6: invokevirtual #101                // Method getType:()Lcom/nimbusds/jose/JOSEObjectType;
       9: aload_1
      10: invokevirtual #105                // Method getContentType:()Ljava/lang/String;
      13: aload_1
      14: invokevirtual #109                // Method getCriticalParams:()Ljava/util/Set;
      17: aload_1
      18: invokevirtual #113                // Method getCustomParams:()Ljava/util/Map;
      21: aload_1
      22: invokevirtual #117                // Method getParsedBase64URL:()Lcom/nimbusds/jose/util/Base64URL;
      25: invokespecial #121                // Method "<init>":(Lcom/nimbusds/jose/Algorithm;Lcom/nimbusds/jose/JOSEObjectType;Ljava/lang/String;Ljava/util/Set;Ljava/util/Map;Lcom/nimbusds/jose/util/Base64URL;)V
      28: return

  public com.nimbusds.jose.Algorithm getAlgorithm();
    Code:
       0: aload_0
       1: getfield      #56                 // Field alg:Lcom/nimbusds/jose/Algorithm;
       4: areturn

  public com.nimbusds.jose.JOSEObjectType getType();
    Code:
       0: aload_0
       1: getfield      #58                 // Field typ:Lcom/nimbusds/jose/JOSEObjectType;
       4: areturn

  public java.lang.String getContentType();
    Code:
       0: aload_0
       1: getfield      #60                 // Field cty:Ljava/lang/String;
       4: areturn

  public java.util.Set<java.lang.String> getCriticalParams();
    Code:
       0: aload_0
       1: getfield      #71                 // Field crit:Ljava/util/Set;
       4: areturn

  public java.lang.Object getCustomParam(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #76                 // Field customParams:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #127,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getCustomParams();
    Code:
       0: aload_0
       1: getfield      #76                 // Field customParams:Ljava/util/Map;
       4: areturn

  public com.nimbusds.jose.util.Base64URL getParsedBase64URL();
    Code:
       0: aload_0
       1: getfield      #78                 // Field parsedBase64URL:Lcom/nimbusds/jose/util/Base64URL;
       4: areturn

  public java.util.Set<java.lang.String> getIncludedParams();
    Code:
       0: new           #62                 // class java/util/HashSet
       3: dup
       4: aload_0
       5: invokevirtual #113                // Method getCustomParams:()Ljava/util/Map;
       8: invokeinterface #134,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      13: invokespecial #64                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      16: astore_1
      17: aload_1
      18: ldc           #137                // String alg
      20: invokeinterface #138,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      25: pop
      26: aload_0
      27: invokevirtual #101                // Method getType:()Lcom/nimbusds/jose/JOSEObjectType;
      30: ifnull        42
      33: aload_1
      34: ldc           #142                // String typ
      36: invokeinterface #138,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      41: pop
      42: aload_0
      43: invokevirtual #105                // Method getContentType:()Ljava/lang/String;
      46: ifnull        58
      49: aload_1
      50: ldc           #143                // String cty
      52: invokeinterface #138,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      57: pop
      58: aload_0
      59: invokevirtual #109                // Method getCriticalParams:()Ljava/util/Set;
      62: ifnull        86
      65: aload_0
      66: invokevirtual #109                // Method getCriticalParams:()Ljava/util/Set;
      69: invokeinterface #144,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
      74: ifne          86
      77: aload_1
      78: ldc           #148                // String crit
      80: invokeinterface #138,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      85: pop
      86: aload_1
      87: areturn

  public net.minidev.json.JSONObject toJSONObject();
    Code:
       0: new           #152                // class net/minidev/json/JSONObject
       3: dup
       4: aload_0
       5: getfield      #76                 // Field customParams:Ljava/util/Map;
       8: invokespecial #154                // Method net/minidev/json/JSONObject."<init>":(Ljava/util/Map;)V
      11: astore_1
      12: aload_1
      13: ldc           #137                // String alg
      15: aload_0
      16: getfield      #56                 // Field alg:Lcom/nimbusds/jose/Algorithm;
      19: invokevirtual #155                // Method com/nimbusds/jose/Algorithm.toString:()Ljava/lang/String;
      22: invokevirtual #158                // Method net/minidev/json/JSONObject.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      25: pop
      26: aload_0
      27: getfield      #58                 // Field typ:Lcom/nimbusds/jose/JOSEObjectType;
      30: ifnull        47
      33: aload_1
      34: ldc           #142                // String typ
      36: aload_0
      37: getfield      #58                 // Field typ:Lcom/nimbusds/jose/JOSEObjectType;
      40: invokevirtual #162                // Method com/nimbusds/jose/JOSEObjectType.toString:()Ljava/lang/String;
      43: invokevirtual #158                // Method net/minidev/json/JSONObject.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: aload_0
      48: getfield      #60                 // Field cty:Ljava/lang/String;
      51: ifnull        65
      54: aload_1
      55: ldc           #143                // String cty
      57: aload_0
      58: getfield      #60                 // Field cty:Ljava/lang/String;
      61: invokevirtual #158                // Method net/minidev/json/JSONObject.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      64: pop
      65: aload_0
      66: getfield      #71                 // Field crit:Ljava/util/Set;
      69: ifnull        102
      72: aload_0
      73: getfield      #71                 // Field crit:Ljava/util/Set;
      76: invokeinterface #144,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
      81: ifne          102
      84: aload_1
      85: ldc           #148                // String crit
      87: new           #163                // class java/util/ArrayList
      90: dup
      91: aload_0
      92: getfield      #71                 // Field crit:Ljava/util/Set;
      95: invokespecial #165                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      98: invokevirtual #158                // Method net/minidev/json/JSONObject.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     101: pop
     102: aload_1
     103: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #168                // Method toJSONObject:()Lnet/minidev/json/JSONObject;
       4: invokevirtual #170                // Method net/minidev/json/JSONObject.toString:()Ljava/lang/String;
       7: areturn

  public com.nimbusds.jose.util.Base64URL toBase64URL();
    Code:
       0: aload_0
       1: getfield      #78                 // Field parsedBase64URL:Lcom/nimbusds/jose/util/Base64URL;
       4: ifnonnull     15
       7: aload_0
       8: invokevirtual #172                // Method toString:()Ljava/lang/String;
      11: invokestatic  #173                // Method com/nimbusds/jose/util/Base64URL.encode:(Ljava/lang/String;)Lcom/nimbusds/jose/util/Base64URL;
      14: areturn
      15: aload_0
      16: getfield      #78                 // Field parsedBase64URL:Lcom/nimbusds/jose/util/Base64URL;
      19: areturn

  public static com.nimbusds.jose.Algorithm parseAlgorithm(net.minidev.json.JSONObject) throws java.text.ParseException;
    Code:
       0: aload_0
       1: ldc           #137                // String alg
       3: invokestatic  #182                // Method com/nimbusds/jose/util/JSONObjectUtils.getString:(Lnet/minidev/json/JSONObject;Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: getstatic     #188                // Field com/nimbusds/jose/Algorithm.NONE:Lcom/nimbusds/jose/Algorithm;
      11: invokevirtual #191                // Method com/nimbusds/jose/Algorithm.getName:()Ljava/lang/String;
      14: invokevirtual #194                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      17: ifeq          24
      20: getstatic     #188                // Field com/nimbusds/jose/Algorithm.NONE:Lcom/nimbusds/jose/Algorithm;
      23: areturn
      24: aload_0
      25: ldc           #197                // String enc
      27: invokevirtual #199                // Method net/minidev/json/JSONObject.containsKey:(Ljava/lang/Object;)Z
      30: ifeq          38
      33: aload_1
      34: invokestatic  #202                // Method com/nimbusds/jose/JWEAlgorithm.parse:(Ljava/lang/String;)Lcom/nimbusds/jose/JWEAlgorithm;
      37: areturn
      38: aload_1
      39: invokestatic  #208                // Method com/nimbusds/jose/JWSAlgorithm.parse:(Ljava/lang/String;)Lcom/nimbusds/jose/JWSAlgorithm;
      42: areturn

  public static com.nimbusds.jose.Header parse(net.minidev.json.JSONObject) throws java.text.ParseException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #216                // Method parse:(Lnet/minidev/json/JSONObject;Lcom/nimbusds/jose/util/Base64URL;)Lcom/nimbusds/jose/Header;
       5: areturn

  public static com.nimbusds.jose.Header parse(net.minidev.json.JSONObject, com.nimbusds.jose.util.Base64URL) throws java.text.ParseException;
    Code:
       0: aload_0
       1: invokestatic  #220                // Method parseAlgorithm:(Lnet/minidev/json/JSONObject;)Lcom/nimbusds/jose/Algorithm;
       4: astore_2
       5: aload_2
       6: getstatic     #188                // Field com/nimbusds/jose/Algorithm.NONE:Lcom/nimbusds/jose/Algorithm;
       9: invokevirtual #222                // Method com/nimbusds/jose/Algorithm.equals:(Ljava/lang/Object;)Z
      12: ifeq          21
      15: aload_0
      16: aload_1
      17: invokestatic  #223                // Method com/nimbusds/jose/PlainHeader.parse:(Lnet/minidev/json/JSONObject;Lcom/nimbusds/jose/util/Base64URL;)Lcom/nimbusds/jose/PlainHeader;
      20: areturn
      21: aload_2
      22: instanceof    #209                // class com/nimbusds/jose/JWSAlgorithm
      25: ifeq          34
      28: aload_0
      29: aload_1
      30: invokestatic  #228                // Method com/nimbusds/jose/JWSHeader.parse:(Lnet/minidev/json/JSONObject;Lcom/nimbusds/jose/util/Base64URL;)Lcom/nimbusds/jose/JWSHeader;
      33: areturn
      34: aload_2
      35: instanceof    #203                // class com/nimbusds/jose/JWEAlgorithm
      38: ifeq          47
      41: aload_0
      42: aload_1
      43: invokestatic  #233                // Method com/nimbusds/jose/JWEHeader.parse:(Lnet/minidev/json/JSONObject;Lcom/nimbusds/jose/util/Base64URL;)Lcom/nimbusds/jose/JWEHeader;
      46: areturn
      47: new           #238                // class java/lang/AssertionError
      50: dup
      51: new           #240                // class java/lang/StringBuilder
      54: dup
      55: ldc           #242                // String Unexpected algorithm type:
      57: invokespecial #244                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      60: aload_2
      61: invokevirtual #245                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      64: invokevirtual #249                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokespecial #250                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      70: athrow

  public static com.nimbusds.jose.Header parse(java.lang.String) throws java.text.ParseException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #254                // Method parse:(Ljava/lang/String;Lcom/nimbusds/jose/util/Base64URL;)Lcom/nimbusds/jose/Header;
       5: areturn

  public static com.nimbusds.jose.Header parse(java.lang.String, com.nimbusds.jose.util.Base64URL) throws java.text.ParseException;
    Code:
       0: aload_0
       1: invokestatic  #258                // Method com/nimbusds/jose/util/JSONObjectUtils.parse:(Ljava/lang/String;)Lnet/minidev/json/JSONObject;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokestatic  #216                // Method parse:(Lnet/minidev/json/JSONObject;Lcom/nimbusds/jose/util/Base64URL;)Lcom/nimbusds/jose/Header;
      10: areturn

  public static com.nimbusds.jose.Header parse(com.nimbusds.jose.util.Base64URL) throws java.text.ParseException;
    Code:
       0: aload_0
       1: invokevirtual #262                // Method com/nimbusds/jose/util/Base64URL.decodeToString:()Ljava/lang/String;
       4: aload_0
       5: invokestatic  #254                // Method parse:(Ljava/lang/String;Lcom/nimbusds/jose/util/Base64URL;)Lcom/nimbusds/jose/Header;
       8: areturn
}
