Compiled from "MACProvider.java"
abstract class com.nimbusds.jose.crypto.MACProvider extends com.nimbusds.jose.crypto.BaseJWSProvider {
  public static final java.util.Set<com.nimbusds.jose.JWSAlgorithm> SUPPORTED_ALGORITHMS;

  private final byte[] secret;

  static {};
    Code:
       0: new           #14                 // class java/util/LinkedHashSet
       3: dup
       4: invokespecial #16                 // Method java/util/LinkedHashSet."<init>":()V
       7: astore_0
       8: aload_0
       9: getstatic     #19                 // Field com/nimbusds/jose/JWSAlgorithm.HS256:Lcom/nimbusds/jose/JWSAlgorithm;
      12: invokeinterface #25,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      17: pop
      18: aload_0
      19: getstatic     #31                 // Field com/nimbusds/jose/JWSAlgorithm.HS384:Lcom/nimbusds/jose/JWSAlgorithm;
      22: invokeinterface #25,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      27: pop
      28: aload_0
      29: getstatic     #34                 // Field com/nimbusds/jose/JWSAlgorithm.HS512:Lcom/nimbusds/jose/JWSAlgorithm;
      32: invokeinterface #25,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      37: pop
      38: aload_0
      39: invokestatic  #37                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      42: putstatic     #43                 // Field SUPPORTED_ALGORITHMS:Ljava/util/Set;
      45: return

  protected static java.lang.String getJCAAlgorithmName(com.nimbusds.jose.JWSAlgorithm) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_0
       1: getstatic     #19                 // Field com/nimbusds/jose/JWSAlgorithm.HS256:Lcom/nimbusds/jose/JWSAlgorithm;
       4: invokevirtual #54                 // Method com/nimbusds/jose/JWSAlgorithm.equals:(Ljava/lang/Object;)Z
       7: ifeq          13
      10: ldc           #57                 // String HMACSHA256
      12: areturn
      13: aload_0
      14: getstatic     #31                 // Field com/nimbusds/jose/JWSAlgorithm.HS384:Lcom/nimbusds/jose/JWSAlgorithm;
      17: invokevirtual #54                 // Method com/nimbusds/jose/JWSAlgorithm.equals:(Ljava/lang/Object;)Z
      20: ifeq          26
      23: ldc           #59                 // String HMACSHA384
      25: areturn
      26: aload_0
      27: getstatic     #34                 // Field com/nimbusds/jose/JWSAlgorithm.HS512:Lcom/nimbusds/jose/JWSAlgorithm;
      30: invokevirtual #54                 // Method com/nimbusds/jose/JWSAlgorithm.equals:(Ljava/lang/Object;)Z
      33: ifeq          39
      36: ldc           #61                 // String HMACSHA512
      38: areturn
      39: new           #52                 // class com/nimbusds/jose/JOSEException
      42: dup
      43: aload_0
      44: getstatic     #43                 // Field SUPPORTED_ALGORITHMS:Ljava/util/Set;
      47: invokestatic  #63                 // Method com/nimbusds/jose/crypto/AlgorithmSupportMessage.unsupportedJWSAlgorithm:(Lcom/nimbusds/jose/JWSAlgorithm;Ljava/util/Collection;)Ljava/lang/String;
      50: invokespecial #69                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
      53: athrow

  protected com.nimbusds.jose.crypto.MACProvider(byte[], java.util.Set<com.nimbusds.jose.JWSAlgorithm>) throws com.nimbusds.jose.KeyLengthException;
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #78                 // Method com/nimbusds/jose/crypto/BaseJWSProvider."<init>":(Ljava/util/Set;)V
       5: aload_1
       6: arraylength
       7: bipush        32
       9: if_icmpge     22
      12: new           #75                 // class com/nimbusds/jose/KeyLengthException
      15: dup
      16: ldc           #81                 // String The secret length must be at least 256 bits
      18: invokespecial #83                 // Method com/nimbusds/jose/KeyLengthException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: aload_1
      24: putfield      #84                 // Field secret:[B
      27: return

  public javax.crypto.SecretKey getSecretKey();
    Code:
       0: new           #92                 // class javax/crypto/spec/SecretKeySpec
       3: dup
       4: aload_0
       5: getfield      #84                 // Field secret:[B
       8: ldc           #94                 // String MAC
      10: invokespecial #96                 // Method javax/crypto/spec/SecretKeySpec."<init>":([BLjava/lang/String;)V
      13: areturn

  public byte[] getSecret();
    Code:
       0: aload_0
       1: getfield      #84                 // Field secret:[B
       4: areturn

  public java.lang.String getSecretString();
    Code:
       0: new           #103                // class java/lang/String
       3: dup
       4: aload_0
       5: getfield      #84                 // Field secret:[B
       8: getstatic     #105                // Field com/nimbusds/jose/util/StandardCharset.UTF_8:Ljava/nio/charset/Charset;
      11: invokespecial #111                // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      14: areturn
}
