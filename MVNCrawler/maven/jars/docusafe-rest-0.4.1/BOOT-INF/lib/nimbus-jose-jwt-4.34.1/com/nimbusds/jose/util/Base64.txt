Compiled from "Base64.java"
public class com.nimbusds.jose.util.Base64 implements net.minidev.json.JSONAware,java.io.Serializable {
  private static final long serialVersionUID;

  public static final java.nio.charset.Charset CHARSET;

  private final java.lang.String value;

  static {};
    Code:
       0: ldc           #21                 // String UTF-8
       2: invokestatic  #23                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       5: putstatic     #29                 // Field CHARSET:Ljava/nio/charset/Charset;
       8: return

  public com.nimbusds.jose.util.Base64(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #35                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #37                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #39                 // String The Base64 value must not be null
      14: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #43                 // Field value:Ljava/lang/String;
      23: return

  public byte[] decode();
    Code:
       0: aload_0
       1: getfield      #43                 // Field value:Ljava/lang/String;
       4: invokestatic  #53                 // Method com/nimbusds/jose/util/Base64Codec.decode:(Ljava/lang/String;)[B
       7: areturn

  public java.math.BigInteger decodeToBigInteger();
    Code:
       0: new           #60                 // class java/math/BigInteger
       3: dup
       4: iconst_1
       5: aload_0
       6: invokevirtual #62                 // Method decode:()[B
       9: invokespecial #64                 // Method java/math/BigInteger."<init>":(I[B)V
      12: areturn

  public java.lang.String decodeToString();
    Code:
       0: new           #49                 // class java/lang/String
       3: dup
       4: aload_0
       5: invokevirtual #62                 // Method decode:()[B
       8: getstatic     #29                 // Field CHARSET:Ljava/nio/charset/Charset;
      11: invokespecial #69                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      14: areturn

  public java.lang.String toJSONString();
    Code:
       0: new           #73                 // class java/lang/StringBuilder
       3: dup
       4: ldc           #75                 // String \"
       6: invokespecial #77                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: aload_0
      10: getfield      #43                 // Field value:Ljava/lang/String;
      13: invokestatic  #78                 // Method net/minidev/json/JSONValue.escape:(Ljava/lang/String;)Ljava/lang/String;
      16: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #75                 // String \"
      21: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #88                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #43                 // Field value:Ljava/lang/String;
       4: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #43                 // Field value:Ljava/lang/String;
       4: invokevirtual #93                 // Method java/lang/String.hashCode:()I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        27
       4: aload_1
       5: instanceof    #1                  // class com/nimbusds/jose/util/Base64
       8: ifeq          27
      11: aload_0
      12: invokevirtual #97                 // Method toString:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #98                 // Method java/lang/Object.toString:()Ljava/lang/String;
      19: invokevirtual #99                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      22: ifeq          27
      25: iconst_1
      26: ireturn
      27: iconst_0
      28: ireturn

  public static com.nimbusds.jose.util.Base64 encode(byte[]);
    Code:
       0: new           #1                  // class com/nimbusds/jose/util/Base64
       3: dup
       4: aload_0
       5: iconst_0
       6: invokestatic  #105                // Method com/nimbusds/jose/util/Base64Codec.encodeToString:([BZ)Ljava/lang/String;
       9: invokespecial #109                // Method "<init>":(Ljava/lang/String;)V
      12: areturn

  public static com.nimbusds.jose.util.Base64 encode(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokestatic  #113                // Method com/nimbusds/jose/util/BigIntegerUtils.toBytesUnsigned:(Ljava/math/BigInteger;)[B
       4: invokestatic  #119                // Method encode:([B)Lcom/nimbusds/jose/util/Base64;
       7: areturn

  public static com.nimbusds.jose.util.Base64 encode(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #29                 // Field CHARSET:Ljava/nio/charset/Charset;
       4: invokevirtual #124                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       7: invokestatic  #119                // Method encode:([B)Lcom/nimbusds/jose/util/Base64;
      10: areturn
}
