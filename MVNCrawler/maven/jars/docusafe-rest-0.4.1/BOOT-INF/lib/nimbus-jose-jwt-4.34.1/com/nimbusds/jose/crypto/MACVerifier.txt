Compiled from "MACVerifier.java"
public class com.nimbusds.jose.crypto.MACVerifier extends com.nimbusds.jose.crypto.MACProvider implements com.nimbusds.jose.JWSVerifier,com.nimbusds.jose.CriticalHeaderParamsAware {
  private final com.nimbusds.jose.crypto.CriticalHeaderParamsDeferral critPolicy;

  public com.nimbusds.jose.crypto.MACVerifier(byte[]) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #17                 // Method "<init>":([BLjava/util/Set;)V
       6: return

  public com.nimbusds.jose.crypto.MACVerifier(java.lang.String) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #27                 // Field com/nimbusds/jose/util/StandardCharset.UTF_8:Ljava/nio/charset/Charset;
       5: invokevirtual #33                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       8: invokespecial #39                 // Method "<init>":([B)V
      11: return

  public com.nimbusds.jose.crypto.MACVerifier(javax.crypto.SecretKey) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #44,  1           // InterfaceMethod javax/crypto/SecretKey.getEncoded:()[B
       7: invokespecial #39                 // Method "<init>":([B)V
      10: return

  public com.nimbusds.jose.crypto.MACVerifier(com.nimbusds.jose.jwk.OctetSequenceKey) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #53                 // Method com/nimbusds/jose/jwk/OctetSequenceKey.toByteArray:()[B
       5: invokespecial #39                 // Method "<init>":([B)V
       8: return

  public com.nimbusds.jose.crypto.MACVerifier(byte[], java.util.Set<java.lang.String>) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #62                 // Field SUPPORTED_ALGORITHMS:Ljava/util/Set;
       5: invokespecial #66                 // Method com/nimbusds/jose/crypto/MACProvider."<init>":([BLjava/util/Set;)V
       8: aload_0
       9: new           #67                 // class com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral
      12: dup
      13: invokespecial #69                 // Method com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral."<init>":()V
      16: putfield      #72                 // Field critPolicy:Lcom/nimbusds/jose/crypto/CriticalHeaderParamsDeferral;
      19: aload_0
      20: getfield      #72                 // Field critPolicy:Lcom/nimbusds/jose/crypto/CriticalHeaderParamsDeferral;
      23: aload_2
      24: invokevirtual #74                 // Method com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral.setDeferredCriticalHeaderParams:(Ljava/util/Set;)V
      27: return

  public java.util.Set<java.lang.String> getProcessedCriticalHeaderParams();
    Code:
       0: aload_0
       1: getfield      #72                 // Field critPolicy:Lcom/nimbusds/jose/crypto/CriticalHeaderParamsDeferral;
       4: invokevirtual #84                 // Method com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral.getProcessedCriticalHeaderParams:()Ljava/util/Set;
       7: areturn

  public java.util.Set<java.lang.String> getDeferredCriticalHeaderParams();
    Code:
       0: aload_0
       1: getfield      #72                 // Field critPolicy:Lcom/nimbusds/jose/crypto/CriticalHeaderParamsDeferral;
       4: invokevirtual #84                 // Method com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral.getProcessedCriticalHeaderParams:()Ljava/util/Set;
       7: areturn

  public boolean verify(com.nimbusds.jose.JWSHeader, byte[], com.nimbusds.jose.util.Base64URL) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_0
       1: getfield      #72                 // Field critPolicy:Lcom/nimbusds/jose/crypto/CriticalHeaderParamsDeferral;
       4: aload_1
       5: invokevirtual #89                 // Method com/nimbusds/jose/crypto/CriticalHeaderParamsDeferral.headerPasses:(Lcom/nimbusds/jose/Header;)Z
       8: ifne          13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: invokevirtual #93                 // Method com/nimbusds/jose/JWSHeader.getAlgorithm:()Lcom/nimbusds/jose/JWSAlgorithm;
      17: invokestatic  #99                 // Method getJCAAlgorithmName:(Lcom/nimbusds/jose/JWSAlgorithm;)Ljava/lang/String;
      20: astore        4
      22: aload         4
      24: aload_0
      25: invokevirtual #103                // Method getSecret:()[B
      28: aload_2
      29: aload_0
      30: invokevirtual #106                // Method getJCAContext:()Lcom/nimbusds/jose/jca/JCAContext;
      33: invokevirtual #110                // Method com/nimbusds/jose/jca/JCAContext.getProvider:()Ljava/security/Provider;
      36: invokestatic  #116                // Method com/nimbusds/jose/crypto/HMAC.compute:(Ljava/lang/String;[B[BLjava/security/Provider;)[B
      39: astore        5
      41: aload         5
      43: aload_3
      44: invokevirtual #122                // Method com/nimbusds/jose/util/Base64URL.decode:()[B
      47: invokestatic  #127                // Method com/nimbusds/jose/crypto/ConstantTimeUtils.areEqual:([B[B)Z
      50: ireturn

  public com.nimbusds.jose.jca.JCAContext getJCAContext();
    Code:
       0: aload_0
       1: invokespecial #141                // Method com/nimbusds/jose/crypto/MACProvider.getJCAContext:()Lcom/nimbusds/jose/jca/JCAContext;
       4: areturn

  public javax.crypto.SecretKey getSecretKey();
    Code:
       0: aload_0
       1: invokespecial #144                // Method com/nimbusds/jose/crypto/MACProvider.getSecretKey:()Ljavax/crypto/SecretKey;
       4: areturn

  public java.lang.String getSecretString();
    Code:
       0: aload_0
       1: invokespecial #148                // Method com/nimbusds/jose/crypto/MACProvider.getSecretString:()Ljava/lang/String;
       4: areturn

  public java.util.Set supportedJWSAlgorithms();
    Code:
       0: aload_0
       1: invokespecial #151                // Method com/nimbusds/jose/crypto/MACProvider.supportedJWSAlgorithms:()Ljava/util/Set;
       4: areturn

  public byte[] getSecret();
    Code:
       0: aload_0
       1: invokespecial #153                // Method com/nimbusds/jose/crypto/MACProvider.getSecret:()[B
       4: areturn
}
