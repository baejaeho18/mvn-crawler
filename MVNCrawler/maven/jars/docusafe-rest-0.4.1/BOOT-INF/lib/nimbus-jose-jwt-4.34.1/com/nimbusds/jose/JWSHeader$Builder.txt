Compiled from "JWSHeader.java"
public class com.nimbusds.jose.JWSHeader$Builder {
  private final com.nimbusds.jose.JWSAlgorithm alg;

  private com.nimbusds.jose.JOSEObjectType typ;

  private java.lang.String cty;

  private java.util.Set<java.lang.String> crit;

  private java.net.URI jku;

  private com.nimbusds.jose.jwk.JWK jwk;

  private java.net.URI x5u;

  private com.nimbusds.jose.util.Base64URL x5t;

  private com.nimbusds.jose.util.Base64URL x5t256;

  private java.util.List<com.nimbusds.jose.util.Base64> x5c;

  private java.lang.String kid;

  private java.util.Map<java.lang.String, java.lang.Object> customParams;

  private com.nimbusds.jose.util.Base64URL parsedBase64URL;

  public com.nimbusds.jose.JWSHeader$Builder(com.nimbusds.jose.JWSAlgorithm);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokevirtual #37                 // Method com/nimbusds/jose/JWSAlgorithm.getName:()Ljava/lang/String;
       8: getstatic     #43                 // Field com/nimbusds/jose/Algorithm.NONE:Lcom/nimbusds/jose/Algorithm;
      11: invokevirtual #49                 // Method com/nimbusds/jose/Algorithm.getName:()Ljava/lang/String;
      14: invokevirtual #50                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      17: ifeq          30
      20: new           #56                 // class java/lang/IllegalArgumentException
      23: dup
      24: ldc           #58                 // String The JWS algorithm \"alg\" cannot be \"none\"
      26: invokespecial #60                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: aload_0
      31: aload_1
      32: putfield      #63                 // Field alg:Lcom/nimbusds/jose/JWSAlgorithm;
      35: return

  public com.nimbusds.jose.JWSHeader$Builder(com.nimbusds.jose.JWSHeader);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #71                 // Method com/nimbusds/jose/JWSHeader.getAlgorithm:()Lcom/nimbusds/jose/JWSAlgorithm;
       5: invokespecial #77                 // Method "<init>":(Lcom/nimbusds/jose/JWSAlgorithm;)V
       8: aload_0
       9: aload_1
      10: invokevirtual #79                 // Method com/nimbusds/jose/JWSHeader.getType:()Lcom/nimbusds/jose/JOSEObjectType;
      13: putfield      #83                 // Field typ:Lcom/nimbusds/jose/JOSEObjectType;
      16: aload_0
      17: aload_1
      18: invokevirtual #85                 // Method com/nimbusds/jose/JWSHeader.getContentType:()Ljava/lang/String;
      21: putfield      #88                 // Field cty:Ljava/lang/String;
      24: aload_0
      25: aload_1
      26: invokevirtual #90                 // Method com/nimbusds/jose/JWSHeader.getCriticalParams:()Ljava/util/Set;
      29: putfield      #94                 // Field crit:Ljava/util/Set;
      32: aload_0
      33: aload_1
      34: invokevirtual #96                 // Method com/nimbusds/jose/JWSHeader.getJWKURL:()Ljava/net/URI;
      37: putfield      #100                // Field jku:Ljava/net/URI;
      40: aload_0
      41: aload_1
      42: invokevirtual #102                // Method com/nimbusds/jose/JWSHeader.getJWK:()Lcom/nimbusds/jose/jwk/JWK;
      45: putfield      #106                // Field jwk:Lcom/nimbusds/jose/jwk/JWK;
      48: aload_0
      49: aload_1
      50: invokevirtual #108                // Method com/nimbusds/jose/JWSHeader.getX509CertURL:()Ljava/net/URI;
      53: putfield      #111                // Field x5u:Ljava/net/URI;
      56: aload_0
      57: aload_1
      58: invokevirtual #113                // Method com/nimbusds/jose/JWSHeader.getX509CertThumbprint:()Lcom/nimbusds/jose/util/Base64URL;
      61: putfield      #117                // Field x5t:Lcom/nimbusds/jose/util/Base64URL;
      64: aload_0
      65: aload_1
      66: invokevirtual #119                // Method com/nimbusds/jose/JWSHeader.getX509CertSHA256Thumbprint:()Lcom/nimbusds/jose/util/Base64URL;
      69: putfield      #122                // Field x5t256:Lcom/nimbusds/jose/util/Base64URL;
      72: aload_0
      73: aload_1
      74: invokevirtual #124                // Method com/nimbusds/jose/JWSHeader.getX509CertChain:()Ljava/util/List;
      77: putfield      #128                // Field x5c:Ljava/util/List;
      80: aload_0
      81: aload_1
      82: invokevirtual #130                // Method com/nimbusds/jose/JWSHeader.getKeyID:()Ljava/lang/String;
      85: putfield      #133                // Field kid:Ljava/lang/String;
      88: aload_0
      89: aload_1
      90: invokevirtual #135                // Method com/nimbusds/jose/JWSHeader.getCustomParams:()Ljava/util/Map;
      93: putfield      #139                // Field customParams:Ljava/util/Map;
      96: return

  public com.nimbusds.jose.JWSHeader$Builder type(com.nimbusds.jose.JOSEObjectType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #83                 // Field typ:Lcom/nimbusds/jose/JOSEObjectType;
       5: aload_0
       6: areturn

  public com.nimbusds.jose.JWSHeader$Builder contentType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #88                 // Field cty:Ljava/lang/String;
       5: aload_0
       6: areturn

  public com.nimbusds.jose.JWSHeader$Builder criticalParams(java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #94                 // Field crit:Ljava/util/Set;
       5: aload_0
       6: areturn

  public com.nimbusds.jose.JWSHeader$Builder jwkURL(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #100                // Field jku:Ljava/net/URI;
       5: aload_0
       6: areturn

  public com.nimbusds.jose.JWSHeader$Builder jwk(com.nimbusds.jose.jwk.JWK);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #106                // Field jwk:Lcom/nimbusds/jose/jwk/JWK;
       5: aload_0
       6: areturn

  public com.nimbusds.jose.JWSHeader$Builder x509CertURL(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #111                // Field x5u:Ljava/net/URI;
       5: aload_0
       6: areturn

  public com.nimbusds.jose.JWSHeader$Builder x509CertThumbprint(com.nimbusds.jose.util.Base64URL);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #117                // Field x5t:Lcom/nimbusds/jose/util/Base64URL;
       5: aload_0
       6: areturn

  public com.nimbusds.jose.JWSHeader$Builder x509CertSHA256Thumbprint(com.nimbusds.jose.util.Base64URL);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #122                // Field x5t256:Lcom/nimbusds/jose/util/Base64URL;
       5: aload_0
       6: areturn

  public com.nimbusds.jose.JWSHeader$Builder x509CertChain(java.util.List<com.nimbusds.jose.util.Base64>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #128                // Field x5c:Ljava/util/List;
       5: aload_0
       6: areturn

  public com.nimbusds.jose.JWSHeader$Builder keyID(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #133                // Field kid:Ljava/lang/String;
       5: aload_0
       6: areturn

  public com.nimbusds.jose.JWSHeader$Builder customParam(java.lang.String, java.lang.Object);
    Code:
       0: invokestatic  #164                // Method com/nimbusds/jose/JWSHeader.getRegisteredParameterNames:()Ljava/util/Set;
       3: aload_1
       4: invokeinterface #167,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
       9: ifeq          41
      12: new           #56                 // class java/lang/IllegalArgumentException
      15: dup
      16: new           #172                // class java/lang/StringBuilder
      19: dup
      20: ldc           #174                // String The parameter name \"
      22: invokespecial #176                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      25: aload_1
      26: invokevirtual #177                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #181                // String \" matches a registered name
      31: invokevirtual #177                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #183                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokespecial #60                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_0
      42: getfield      #139                // Field customParams:Ljava/util/Map;
      45: ifnonnull     59
      48: aload_0
      49: new           #186                // class java/util/HashMap
      52: dup
      53: invokespecial #188                // Method java/util/HashMap."<init>":()V
      56: putfield      #139                // Field customParams:Ljava/util/Map;
      59: aload_0
      60: getfield      #139                // Field customParams:Ljava/util/Map;
      63: aload_1
      64: aload_2
      65: invokeinterface #189,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      70: pop
      71: aload_0
      72: areturn

  public com.nimbusds.jose.JWSHeader$Builder customParams(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #139                // Field customParams:Ljava/util/Map;
       5: aload_0
       6: areturn

  public com.nimbusds.jose.JWSHeader$Builder parsedBase64URL(com.nimbusds.jose.util.Base64URL);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #201                // Field parsedBase64URL:Lcom/nimbusds/jose/util/Base64URL;
       5: aload_0
       6: areturn

  public com.nimbusds.jose.JWSHeader build();
    Code:
       0: new           #72                 // class com/nimbusds/jose/JWSHeader
       3: dup
       4: aload_0
       5: getfield      #63                 // Field alg:Lcom/nimbusds/jose/JWSAlgorithm;
       8: aload_0
       9: getfield      #83                 // Field typ:Lcom/nimbusds/jose/JOSEObjectType;
      12: aload_0
      13: getfield      #88                 // Field cty:Ljava/lang/String;
      16: aload_0
      17: getfield      #94                 // Field crit:Ljava/util/Set;
      20: aload_0
      21: getfield      #100                // Field jku:Ljava/net/URI;
      24: aload_0
      25: getfield      #106                // Field jwk:Lcom/nimbusds/jose/jwk/JWK;
      28: aload_0
      29: getfield      #111                // Field x5u:Ljava/net/URI;
      32: aload_0
      33: getfield      #117                // Field x5t:Lcom/nimbusds/jose/util/Base64URL;
      36: aload_0
      37: getfield      #122                // Field x5t256:Lcom/nimbusds/jose/util/Base64URL;
      40: aload_0
      41: getfield      #128                // Field x5c:Ljava/util/List;
      44: aload_0
      45: getfield      #133                // Field kid:Ljava/lang/String;
      48: aload_0
      49: getfield      #139                // Field customParams:Ljava/util/Map;
      52: aload_0
      53: getfield      #201                // Field parsedBase64URL:Lcom/nimbusds/jose/util/Base64URL;
      56: invokespecial #206                // Method com/nimbusds/jose/JWSHeader."<init>":(Lcom/nimbusds/jose/JWSAlgorithm;Lcom/nimbusds/jose/JOSEObjectType;Ljava/lang/String;Ljava/util/Set;Ljava/net/URI;Lcom/nimbusds/jose/jwk/JWK;Ljava/net/URI;Lcom/nimbusds/jose/util/Base64URL;Lcom/nimbusds/jose/util/Base64URL;Ljava/util/List;Ljava/lang/String;Ljava/util/Map;Lcom/nimbusds/jose/util/Base64URL;)V
      59: areturn
}
