Compiled from "MACSigner.java"
public class com.nimbusds.jose.crypto.MACSigner extends com.nimbusds.jose.crypto.MACProvider implements com.nimbusds.jose.JWSSigner {
  public static int getMinRequiredSecretLength(com.nimbusds.jose.JWSAlgorithm) throws com.nimbusds.jose.JOSEException;
    Code:
       0: getstatic     #13                 // Field com/nimbusds/jose/JWSAlgorithm.HS256:Lcom/nimbusds/jose/JWSAlgorithm;
       3: aload_0
       4: invokevirtual #19                 // Method com/nimbusds/jose/JWSAlgorithm.equals:(Ljava/lang/Object;)Z
       7: ifeq          14
      10: sipush        256
      13: ireturn
      14: getstatic     #23                 // Field com/nimbusds/jose/JWSAlgorithm.HS384:Lcom/nimbusds/jose/JWSAlgorithm;
      17: aload_0
      18: invokevirtual #19                 // Method com/nimbusds/jose/JWSAlgorithm.equals:(Ljava/lang/Object;)Z
      21: ifeq          28
      24: sipush        384
      27: ireturn
      28: getstatic     #26                 // Field com/nimbusds/jose/JWSAlgorithm.HS512:Lcom/nimbusds/jose/JWSAlgorithm;
      31: aload_0
      32: invokevirtual #19                 // Method com/nimbusds/jose/JWSAlgorithm.equals:(Ljava/lang/Object;)Z
      35: ifeq          42
      38: sipush        512
      41: ireturn
      42: new           #10                 // class com/nimbusds/jose/JOSEException
      45: dup
      46: aload_0
      47: getstatic     #29                 // Field SUPPORTED_ALGORITHMS:Ljava/util/Set;
      50: invokestatic  #33                 // Method com/nimbusds/jose/crypto/AlgorithmSupportMessage.unsupportedJWSAlgorithm:(Lcom/nimbusds/jose/JWSAlgorithm;Ljava/util/Collection;)Ljava/lang/String;
      53: invokespecial #39                 // Method com/nimbusds/jose/JOSEException."<init>":(Ljava/lang/String;)V
      56: athrow

  public static java.util.Set<com.nimbusds.jose.JWSAlgorithm> getCompatibleAlgorithms(int);
    Code:
       0: new           #51                 // class java/util/LinkedHashSet
       3: dup
       4: invokespecial #53                 // Method java/util/LinkedHashSet."<init>":()V
       7: astore_1
       8: iload_0
       9: sipush        256
      12: if_icmplt     25
      15: aload_1
      16: getstatic     #13                 // Field com/nimbusds/jose/JWSAlgorithm.HS256:Lcom/nimbusds/jose/JWSAlgorithm;
      19: invokeinterface #56,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      24: pop
      25: iload_0
      26: sipush        384
      29: if_icmplt     42
      32: aload_1
      33: getstatic     #23                 // Field com/nimbusds/jose/JWSAlgorithm.HS384:Lcom/nimbusds/jose/JWSAlgorithm;
      36: invokeinterface #56,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      41: pop
      42: iload_0
      43: sipush        512
      46: if_icmplt     59
      49: aload_1
      50: getstatic     #26                 // Field com/nimbusds/jose/JWSAlgorithm.HS512:Lcom/nimbusds/jose/JWSAlgorithm;
      53: invokeinterface #56,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      58: pop
      59: aload_1
      60: invokestatic  #61                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      63: areturn

  public com.nimbusds.jose.crypto.MACSigner(byte[]) throws com.nimbusds.jose.KeyLengthException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: arraylength
       4: invokestatic  #75                 // Method com/nimbusds/jose/util/ByteUtils.bitLength:(I)I
       7: invokestatic  #81                 // Method getCompatibleAlgorithms:(I)Ljava/util/Set;
      10: invokespecial #83                 // Method com/nimbusds/jose/crypto/MACProvider."<init>":([BLjava/util/Set;)V
      13: return

  public com.nimbusds.jose.crypto.MACSigner(java.lang.String) throws com.nimbusds.jose.KeyLengthException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #90                 // Field com/nimbusds/jose/util/StandardCharset.UTF_8:Ljava/nio/charset/Charset;
       5: invokevirtual #96                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       8: invokespecial #102                // Method "<init>":([B)V
      11: return

  public com.nimbusds.jose.crypto.MACSigner(javax.crypto.SecretKey) throws com.nimbusds.jose.KeyLengthException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #107,  1          // InterfaceMethod javax/crypto/SecretKey.getEncoded:()[B
       7: invokespecial #102                // Method "<init>":([B)V
      10: return

  public com.nimbusds.jose.crypto.MACSigner(com.nimbusds.jose.jwk.OctetSequenceKey) throws com.nimbusds.jose.KeyLengthException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #116                // Method com/nimbusds/jose/jwk/OctetSequenceKey.toByteArray:()[B
       5: invokespecial #102                // Method "<init>":([B)V
       8: return

  public com.nimbusds.jose.util.Base64URL sign(com.nimbusds.jose.JWSHeader, byte[]) throws com.nimbusds.jose.JOSEException;
    Code:
       0: aload_1
       1: invokevirtual #125                // Method com/nimbusds/jose/JWSHeader.getAlgorithm:()Lcom/nimbusds/jose/JWSAlgorithm;
       4: invokestatic  #131                // Method getMinRequiredSecretLength:(Lcom/nimbusds/jose/JWSAlgorithm;)I
       7: istore_3
       8: aload_0
       9: invokevirtual #133                // Method getSecret:()[B
      12: arraylength
      13: iload_3
      14: invokestatic  #136                // Method com/nimbusds/jose/util/ByteUtils.byteLength:(I)I
      17: if_icmpge     61
      20: new           #73                 // class com/nimbusds/jose/KeyLengthException
      23: dup
      24: new           #139                // class java/lang/StringBuilder
      27: dup
      28: ldc           #141                // String The secret length for
      30: invokespecial #143                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      33: aload_1
      34: invokevirtual #125                // Method com/nimbusds/jose/JWSHeader.getAlgorithm:()Lcom/nimbusds/jose/JWSAlgorithm;
      37: invokevirtual #144                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      40: ldc           #148                // String  must be at least
      42: invokevirtual #150                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: iload_3
      46: invokevirtual #153                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      49: ldc           #156                // String  bits
      51: invokevirtual #150                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #158                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokespecial #162                // Method com/nimbusds/jose/KeyLengthException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: aload_1
      62: invokevirtual #125                // Method com/nimbusds/jose/JWSHeader.getAlgorithm:()Lcom/nimbusds/jose/JWSAlgorithm;
      65: invokestatic  #163                // Method getJCAAlgorithmName:(Lcom/nimbusds/jose/JWSAlgorithm;)Ljava/lang/String;
      68: astore        4
      70: aload         4
      72: aload_0
      73: invokevirtual #133                // Method getSecret:()[B
      76: aload_2
      77: aload_0
      78: invokevirtual #167                // Method getJCAContext:()Lcom/nimbusds/jose/jca/JCAContext;
      81: invokevirtual #171                // Method com/nimbusds/jose/jca/JCAContext.getProvider:()Ljava/security/Provider;
      84: invokestatic  #177                // Method com/nimbusds/jose/crypto/HMAC.compute:(Ljava/lang/String;[B[BLjava/security/Provider;)[B
      87: astore        5
      89: aload         5
      91: invokestatic  #183                // Method com/nimbusds/jose/util/Base64URL.encode:([B)Lcom/nimbusds/jose/util/Base64URL;
      94: areturn

  public com.nimbusds.jose.jca.JCAContext getJCAContext();
    Code:
       0: aload_0
       1: invokespecial #195                // Method com/nimbusds/jose/crypto/MACProvider.getJCAContext:()Lcom/nimbusds/jose/jca/JCAContext;
       4: areturn

  public javax.crypto.SecretKey getSecretKey();
    Code:
       0: aload_0
       1: invokespecial #198                // Method com/nimbusds/jose/crypto/MACProvider.getSecretKey:()Ljavax/crypto/SecretKey;
       4: areturn

  public java.lang.String getSecretString();
    Code:
       0: aload_0
       1: invokespecial #201                // Method com/nimbusds/jose/crypto/MACProvider.getSecretString:()Ljava/lang/String;
       4: areturn

  public java.util.Set supportedJWSAlgorithms();
    Code:
       0: aload_0
       1: invokespecial #205                // Method com/nimbusds/jose/crypto/MACProvider.supportedJWSAlgorithms:()Ljava/util/Set;
       4: areturn

  public byte[] getSecret();
    Code:
       0: aload_0
       1: invokespecial #207                // Method com/nimbusds/jose/crypto/MACProvider.getSecret:()[B
       4: areturn
}
