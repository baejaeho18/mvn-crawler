Compiled from "DefaultSingleOutputWriter.java"
class org.sejda.core.support.io.DefaultSingleOutputWriter implements org.sejda.core.support.io.SingleOutputWriter {
  private static final org.slf4j.Logger LOG;

  private java.io.File taskOutput;

  private final org.sejda.model.output.ExistingOutputPolicy existingOutputPolicy;

  private final org.sejda.model.task.TaskExecutionContext executionContext;

  org.sejda.core.support.io.DefaultSingleOutputWriter(org.sejda.model.output.ExistingOutputPolicy, org.sejda.model.task.TaskExecutionContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
       9: invokedynamic #3,  0              // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      14: invokevirtual #4                  // Method java/util/Optional.filter:(Ljava/util/function/Predicate;)Ljava/util/Optional;
      17: invokedynamic #5,  0              // InvokeDynamic #1:get:()Ljava/util/function/Supplier;
      22: invokevirtual #6                  // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      25: checkcast     #7                  // class org/sejda/model/output/ExistingOutputPolicy
      28: putfield      #8                  // Field existingOutputPolicy:Lorg/sejda/model/output/ExistingOutputPolicy;
      31: aload_0
      32: aload_2
      33: putfield      #9                  // Field executionContext:Lorg/sejda/model/task/TaskExecutionContext;
      36: return

  public void taskOutput(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field taskOutput:Ljava/io/File;
       5: return

  public void dispatch(org.sejda.model.output.FileTaskOutput) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field taskOutput:Ljava/io/File;
       4: invokestatic  #11                 // Method java/util/Objects.isNull:(Ljava/lang/Object;)Z
       7: ifeq          20
      10: new           #12                 // class java/io/IOException
      13: dup
      14: ldc           #13                 // String No task output set
      16: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #10                 // Field taskOutput:Ljava/io/File;
      24: aload_1
      25: invokevirtual #15                 // Method org/sejda/model/output/FileTaskOutput.getDestination:()Ljava/io/File;
      28: aload_0
      29: getfield      #8                  // Field existingOutputPolicy:Lorg/sejda/model/output/ExistingOutputPolicy;
      32: aload_0
      33: getfield      #9                  // Field executionContext:Lorg/sejda/model/task/TaskExecutionContext;
      36: invokestatic  #16                 // Method org/sejda/core/support/io/OutputWriterHelper.moveFile:(Ljava/io/File;Ljava/io/File;Lorg/sejda/model/output/ExistingOutputPolicy;Lorg/sejda/model/task/TaskExecutionContext;)V
      39: return

  public void dispatch(org.sejda.model.output.DirectoryTaskOutput) throws java.io.IOException;
    Code:
       0: new           #12                 // class java/io/IOException
       3: dup
       4: ldc           #17                 // String Unsupported DirectoryTaskOutput, expected a FileTaskOutput
       6: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void dispatch(org.sejda.model.output.FileOrDirectoryTaskOutput) throws java.io.IOException;
    Code:
       0: new           #12                 // class java/io/IOException
       3: dup
       4: ldc           #18                 // String Unsupported FileOrDirectoryTaskOutput, expected a FileTaskOutput
       6: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       9: athrow

  private static org.sejda.model.output.ExistingOutputPolicy lambda$new$1();
    Code:
       0: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #20                 // String Cannot use {} output policy for single output, replaced with {}
       5: getstatic     #21                 // Field org/sejda/model/output/ExistingOutputPolicy.SKIP:Lorg/sejda/model/output/ExistingOutputPolicy;
       8: getstatic     #22                 // Field org/sejda/model/output/ExistingOutputPolicy.FAIL:Lorg/sejda/model/output/ExistingOutputPolicy;
      11: invokeinterface #23,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      16: getstatic     #22                 // Field org/sejda/model/output/ExistingOutputPolicy.FAIL:Lorg/sejda/model/output/ExistingOutputPolicy;
      19: areturn

  private static boolean lambda$new$0(org.sejda.model.output.ExistingOutputPolicy);
    Code:
       0: aload_0
       1: getstatic     #21                 // Field org/sejda/model/output/ExistingOutputPolicy.SKIP:Lorg/sejda/model/output/ExistingOutputPolicy;
       4: if_acmpeq     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  static {};
    Code:
       0: ldc           #24                 // class org/sejda/core/support/io/DefaultSingleOutputWriter
       2: invokestatic  #25                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
