Compiled from "AspspAccountAccessType.java"
public final class de.adorsys.psd2.aspsp.mock.api.consent.AspspAccountAccessType extends java.lang.Enum<de.adorsys.psd2.aspsp.mock.api.consent.AspspAccountAccessType> {
  public static final de.adorsys.psd2.aspsp.mock.api.consent.AspspAccountAccessType ALL_ACCOUNTS;

  public static final de.adorsys.psd2.aspsp.mock.api.consent.AspspAccountAccessType ALL_ACCOUNTS_WITH_BALANCES;

  private java.lang.String description;

  private static final de.adorsys.psd2.aspsp.mock.api.consent.AspspAccountAccessType[] $VALUES;

  public static de.adorsys.psd2.aspsp.mock.api.consent.AspspAccountAccessType[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lde/adorsys/psd2/aspsp/mock/api/consent/AspspAccountAccessType;
       3: invokevirtual #2                  // Method "[Lde/adorsys/psd2/aspsp/mock/api/consent/AspspAccountAccessType;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lde/adorsys/psd2/aspsp/mock/api/consent/AspspAccountAccessType;"
       9: areturn

  public static de.adorsys.psd2.aspsp.mock.api.consent.AspspAccountAccessType valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class de/adorsys/psd2/aspsp/mock/api/consent/AspspAccountAccessType
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class de/adorsys/psd2/aspsp/mock/api/consent/AspspAccountAccessType
       9: areturn

  private de.adorsys.psd2.aspsp.mock.api.consent.AspspAccountAccessType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: aload_3
       8: putfield      #7                  // Field description:Ljava/lang/String;
      11: return

  public java.lang.String getDescription();
    Code:
       0: aload_0
       1: getfield      #7                  // Field description:Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: new           #4                  // class de/adorsys/psd2/aspsp/mock/api/consent/AspspAccountAccessType
       3: dup
       4: ldc           #8                  // String ALL_ACCOUNTS
       6: iconst_0
       7: ldc           #9                  // String allAccounts
       9: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      12: putstatic     #11                 // Field ALL_ACCOUNTS:Lde/adorsys/psd2/aspsp/mock/api/consent/AspspAccountAccessType;
      15: new           #4                  // class de/adorsys/psd2/aspsp/mock/api/consent/AspspAccountAccessType
      18: dup
      19: ldc           #12                 // String ALL_ACCOUNTS_WITH_BALANCES
      21: iconst_1
      22: ldc           #13                 // String allAccountsWithBalances
      24: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      27: putstatic     #14                 // Field ALL_ACCOUNTS_WITH_BALANCES:Lde/adorsys/psd2/aspsp/mock/api/consent/AspspAccountAccessType;
      30: iconst_2
      31: anewarray     #4                  // class de/adorsys/psd2/aspsp/mock/api/consent/AspspAccountAccessType
      34: dup
      35: iconst_0
      36: getstatic     #11                 // Field ALL_ACCOUNTS:Lde/adorsys/psd2/aspsp/mock/api/consent/AspspAccountAccessType;
      39: aastore
      40: dup
      41: iconst_1
      42: getstatic     #14                 // Field ALL_ACCOUNTS_WITH_BALANCES:Lde/adorsys/psd2/aspsp/mock/api/consent/AspspAccountAccessType;
      45: aastore
      46: putstatic     #1                  // Field $VALUES:[Lde/adorsys/psd2/aspsp/mock/api/consent/AspspAccountAccessType;
      49: return
}
