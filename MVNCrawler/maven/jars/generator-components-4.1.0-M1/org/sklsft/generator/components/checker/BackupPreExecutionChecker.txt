Compiled from "BackupPreExecutionChecker.java"
public class org.sklsft.generator.components.checker.BackupPreExecutionChecker {
  private static final org.slf4j.Logger logger;

  private org.sklsft.generator.persistence.backup.file.impl.BackupFileLocator backupLocator;

  public org.sklsft.generator.components.checker.BackupPreExecutionChecker();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.util.List<org.sklsft.generator.model.backup.check.BackupPlanPreExecutionWarning> checkPlan(org.sklsft.generator.persistence.backup.datasource.interfaces.InputDataSourceProvider, org.sklsft.generator.model.domain.Project, java.util.Set<java.lang.String>, java.lang.String) throws java.io.IOException;
    Code:
       0: new           #2                  // class java/util/ArrayList
       3: dup
       4: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
       7: astore        5
       9: aload         4
      11: invokestatic  #4                  // Method org/sklsft/generator/model/util/folder/FolderUtil.resolveMaxStep:(Ljava/lang/String;)I
      14: istore        6
      16: aload_2
      17: getfield      #5                  // Field org/sklsft/generator/model/domain/Project.model:Lorg/sklsft/generator/model/domain/Model;
      20: getfield      #6                  // Field org/sklsft/generator/model/domain/Model.packages:Ljava/util/List;
      23: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      28: astore        7
      30: aload         7
      32: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          229
      40: aload         7
      42: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #10                 // class org/sklsft/generator/model/domain/Package
      50: astore        8
      52: aload         8
      54: getfield      #11                 // Field org/sklsft/generator/model/domain/Package.tables:Ljava/util/List;
      57: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      62: astore        9
      64: aload         9
      66: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      71: ifeq          226
      74: aload         9
      76: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      81: checkcast     #12                 // class org/sklsft/generator/model/domain/database/Table
      84: astore        10
      86: aload_3
      87: ifnull        104
      90: aload_3
      91: aload         10
      93: getfield      #13                 // Field org/sklsft/generator/model/domain/database/Table.originalName:Ljava/lang/String;
      96: invokeinterface #14,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     101: ifeq          187
     104: getstatic     #15                 // Field logger:Lorg/slf4j/Logger;
     107: new           #16                 // class java/lang/StringBuilder
     110: dup
     111: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     114: ldc           #18                 // String start pre checking table :
     116: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: aload         10
     121: getfield      #20                 // Field org/sklsft/generator/model/domain/database/Table.name:Ljava/lang/String;
     124: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     130: invokeinterface #22,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     135: aload_0
     136: aload         4
     138: iload         6
     140: aload         10
     142: invokespecial #23                 // Method checkTableHasPlan:(Ljava/lang/String;ILorg/sklsft/generator/model/domain/database/Table;)Lorg/sklsft/generator/model/backup/check/BackupPlanPreExecutionWarning;
     145: astore        11
     147: aload         11
     149: ifnull        165
     152: aload         5
     154: aload         11
     156: invokeinterface #24,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     161: pop
     162: goto          184
     165: aload         5
     167: aload_0
     168: aload         4
     170: iload         6
     172: aload         10
     174: aload_1
     175: invokespecial #25                 // Method checkHardCodedBackup:(Ljava/lang/String;ILorg/sklsft/generator/model/domain/database/Table;Lorg/sklsft/generator/persistence/backup/datasource/interfaces/InputDataSourceProvider;)Ljava/util/List;
     178: invokeinterface #26,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     183: pop
     184: goto          223
     187: getstatic     #15                 // Field logger:Lorg/slf4j/Logger;
     190: new           #16                 // class java/lang/StringBuilder
     193: dup
     194: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     197: ldc           #27                 // String table :
     199: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     202: aload         10
     204: getfield      #20                 // Field org/sklsft/generator/model/domain/database/Table.name:Ljava/lang/String;
     207: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     210: ldc           #28                 // String  skipped
     212: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     215: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     218: invokeinterface #22,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     223: goto          64
     226: goto          30
     229: aload         5
     231: areturn

  private org.sklsft.generator.model.backup.check.BackupPlanPreExecutionWarning checkTableHasPlan(java.lang.String, int, org.sklsft.generator.model.domain.database.Table);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: invokespecial #29                 // Method tableHasPlan:(Ljava/lang/String;ILorg/sklsft/generator/model/domain/database/Table;)Z
       7: ifne          23
      10: new           #30                 // class org/sklsft/generator/model/backup/check/BackupPlanPreExecutionWarning
      13: dup
      14: getstatic     #31                 // Field org/sklsft/generator/model/backup/check/BackupPlanWarningType.NO_PLAN:Lorg/sklsft/generator/model/backup/check/BackupPlanWarningType;
      17: iconst_m1
      18: aload_3
      19: invokespecial #32                 // Method org/sklsft/generator/model/backup/check/BackupPlanPreExecutionWarning."<init>":(Lorg/sklsft/generator/model/backup/check/BackupPlanWarningType;ILorg/sklsft/generator/model/domain/database/Table;)V
      22: areturn
      23: aconst_null
      24: areturn

  private boolean tableHasPlan(java.lang.String, int, org.sklsft.generator.model.domain.database.Table);
    Code:
       0: aload_0
       1: getfield      #33                 // Field backupLocator:Lorg/sklsft/generator/persistence/backup/file/impl/BackupFileLocator;
       4: aload_1
       5: iload_2
       6: aload_3
       7: invokevirtual #34                 // Method org/sklsft/generator/persistence/backup/file/impl/BackupFileLocator.existsFileForTable:(Ljava/lang/String;ILorg/sklsft/generator/model/domain/database/Table;)Z
      10: ireturn

  private java.util.List<org.sklsft.generator.model.backup.check.BackupPlanPreExecutionWarning> checkHardCodedBackup(java.lang.String, int, org.sklsft.generator.model.domain.database.Table, org.sklsft.generator.persistence.backup.datasource.interfaces.InputDataSourceProvider) throws java.io.IOException;
    Code:
       0: new           #35                 // class java/util/LinkedList
       3: dup
       4: invokespecial #36                 // Method java/util/LinkedList."<init>":()V
       7: astore        5
       9: iconst_1
      10: istore        6
      12: iload         6
      14: iload_2
      15: if_icmpgt     42
      18: aload         5
      20: aload_0
      21: aload_1
      22: iload         6
      24: aload_3
      25: aload         4
      27: invokespecial #37                 // Method checkHardCodedBackupForStep:(Ljava/lang/String;ILorg/sklsft/generator/model/domain/database/Table;Lorg/sklsft/generator/persistence/backup/datasource/interfaces/InputDataSourceProvider;)Ljava/util/List;
      30: invokeinterface #26,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      35: pop
      36: iinc          6, 1
      39: goto          12
      42: aload         5
      44: areturn

  private java.util.List<org.sklsft.generator.model.backup.check.BackupPlanPreExecutionWarning> checkHardCodedBackupForStep(java.lang.String, int, org.sklsft.generator.model.domain.database.Table, org.sklsft.generator.persistence.backup.datasource.interfaces.InputDataSourceProvider) throws java.io.IOException;
    Code:
       0: new           #35                 // class java/util/LinkedList
       3: dup
       4: invokespecial #36                 // Method java/util/LinkedList."<init>":()V
       7: astore        5
       9: aload_0
      10: getfield      #33                 // Field backupLocator:Lorg/sklsft/generator/persistence/backup/file/impl/BackupFileLocator;
      13: aload_1
      14: iload_2
      15: aload_3
      16: invokevirtual #38                 // Method org/sklsft/generator/persistence/backup/file/impl/BackupFileLocator.resolvePersistenceModeOrNull:(Ljava/lang/String;ILorg/sklsft/generator/model/domain/database/Table;)Lorg/sklsft/generator/model/metadata/PersistenceMode;
      19: astore        6
      21: aload         6
      23: ifnull        75
      26: getstatic     #39                 // Field org/sklsft/generator/components/checker/BackupPreExecutionChecker$1.$SwitchMap$org$sklsft$generator$model$metadata$PersistenceMode:[I
      29: aload         6
      31: invokevirtual #40                 // Method org/sklsft/generator/model/metadata/PersistenceMode.ordinal:()I
      34: iaload
      35: lookupswitch  { // 1
                     1: 52
               default: 75
          }
      52: aload         5
      54: new           #30                 // class org/sklsft/generator/model/backup/check/BackupPlanPreExecutionWarning
      57: dup
      58: getstatic     #41                 // Field org/sklsft/generator/model/backup/check/BackupPlanWarningType.HARDCODED_VALUES:Lorg/sklsft/generator/model/backup/check/BackupPlanWarningType;
      61: iload_2
      62: aload_3
      63: invokespecial #32                 // Method org/sklsft/generator/model/backup/check/BackupPlanPreExecutionWarning."<init>":(Lorg/sklsft/generator/model/backup/check/BackupPlanWarningType;ILorg/sklsft/generator/model/domain/database/Table;)V
      66: invokeinterface #24,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      71: pop
      72: goto          75
      75: aload         5
      77: areturn

  static {};
    Code:
       0: ldc           #42                 // class org/sklsft/generator/components/checker/BackupPreExecutionChecker
       2: invokestatic  #43                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #15                 // Field logger:Lorg/slf4j/Logger;
       8: return
}
