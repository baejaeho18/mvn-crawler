Compiled from "GDI32.java"
public interface com.sun.jna.platform.win32.GDI32 extends com.sun.jna.win32.StdCallLibrary {
  public static final com.sun.jna.platform.win32.GDI32 INSTANCE;

  public static final int SRCCOPY;

  public abstract com.sun.jna.platform.win32.WinDef$HRGN ExtCreateRegion(com.sun.jna.Pointer, int, com.sun.jna.platform.win32.WinGDI$RGNDATA);

  public abstract int CombineRgn(com.sun.jna.platform.win32.WinDef$HRGN, com.sun.jna.platform.win32.WinDef$HRGN, com.sun.jna.platform.win32.WinDef$HRGN, int);

  public abstract com.sun.jna.platform.win32.WinDef$HRGN CreateRectRgn(int, int, int, int);

  public abstract com.sun.jna.platform.win32.WinDef$HRGN CreateRoundRectRgn(int, int, int, int, int, int);

  public abstract com.sun.jna.platform.win32.WinDef$HRGN CreatePolyPolygonRgn(com.sun.jna.platform.win32.WinDef$POINT[], int[], int, int);

  public abstract boolean SetRectRgn(com.sun.jna.platform.win32.WinDef$HRGN, int, int, int, int);

  public abstract int SetPixel(com.sun.jna.platform.win32.WinDef$HDC, int, int, int);

  public abstract com.sun.jna.platform.win32.WinDef$HDC CreateCompatibleDC(com.sun.jna.platform.win32.WinDef$HDC);

  public abstract boolean DeleteDC(com.sun.jna.platform.win32.WinDef$HDC);

  public abstract com.sun.jna.platform.win32.WinDef$HBITMAP CreateDIBitmap(com.sun.jna.platform.win32.WinDef$HDC, com.sun.jna.platform.win32.WinGDI$BITMAPINFOHEADER, int, com.sun.jna.Pointer, com.sun.jna.platform.win32.WinGDI$BITMAPINFO, int);

  public abstract com.sun.jna.platform.win32.WinDef$HBITMAP CreateDIBSection(com.sun.jna.platform.win32.WinDef$HDC, com.sun.jna.platform.win32.WinGDI$BITMAPINFO, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, int);

  public abstract com.sun.jna.platform.win32.WinDef$HBITMAP CreateCompatibleBitmap(com.sun.jna.platform.win32.WinDef$HDC, int, int);

  public abstract com.sun.jna.platform.win32.WinNT$HANDLE SelectObject(com.sun.jna.platform.win32.WinDef$HDC, com.sun.jna.platform.win32.WinNT$HANDLE);

  public abstract boolean DeleteObject(com.sun.jna.platform.win32.WinNT$HANDLE);

  public abstract int GetDeviceCaps(com.sun.jna.platform.win32.WinDef$HDC, int);

  public abstract int GetDIBits(com.sun.jna.platform.win32.WinDef$HDC, com.sun.jna.platform.win32.WinDef$HBITMAP, int, int, com.sun.jna.Pointer, com.sun.jna.platform.win32.WinGDI$BITMAPINFO, int);

  public abstract int ChoosePixelFormat(com.sun.jna.platform.win32.WinDef$HDC, com.sun.jna.platform.win32.WinGDI$PIXELFORMATDESCRIPTOR$ByReference);

  public abstract boolean SetPixelFormat(com.sun.jna.platform.win32.WinDef$HDC, int, com.sun.jna.platform.win32.WinGDI$PIXELFORMATDESCRIPTOR$ByReference);

  public abstract int GetObject(com.sun.jna.platform.win32.WinNT$HANDLE, int, com.sun.jna.Pointer);

  public abstract boolean BitBlt(com.sun.jna.platform.win32.WinDef$HDC, int, int, int, int, com.sun.jna.platform.win32.WinDef$HDC, int, int, int);

  static {};
    Code:
       0: ldc           #1                  // String gdi32
       2: ldc           #2                  // class com/sun/jna/platform/win32/GDI32
       4: getstatic     #3                  // Field com/sun/jna/win32/W32APIOptions.DEFAULT_OPTIONS:Ljava/util/Map;
       7: invokestatic  #4                  // Method com/sun/jna/Native.load:(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Map;)Lcom/sun/jna/Library;
      10: checkcast     #2                  // class com/sun/jna/platform/win32/GDI32
      13: putstatic     #5                  // Field INSTANCE:Lcom/sun/jna/platform/win32/GDI32;
      16: return
}
