Compiled from "XAttr.java"
public interface com.sun.jna.platform.linux.XAttr extends com.sun.jna.Library {
  public static final com.sun.jna.platform.linux.XAttr INSTANCE;

  public static final int XATTR_CREATE;

  public static final int XATTR_REPLACE;

  public static final int EPERM;

  public static final int E2BIG;

  public static final int EEXIST;

  public static final int ENOSPC;

  public static final int ERANGE;

  public static final int ENODATA;

  public static final int ENOATTR;

  public static final int ENOTSUP;

  public static final int EDQUOT;

  public abstract int setxattr(java.lang.String, java.lang.String, com.sun.jna.Pointer, com.sun.jna.platform.linux.XAttr$size_t, int);

  public abstract int setxattr(java.lang.String, java.lang.String, byte[], com.sun.jna.platform.linux.XAttr$size_t, int);

  public abstract int lsetxattr(java.lang.String, java.lang.String, com.sun.jna.Pointer, com.sun.jna.platform.linux.XAttr$size_t, int);

  public abstract int lsetxattr(java.lang.String, java.lang.String, byte[], com.sun.jna.platform.linux.XAttr$size_t, int);

  public abstract int fsetxattr(int, java.lang.String, com.sun.jna.Pointer, com.sun.jna.platform.linux.XAttr$size_t, int);

  public abstract int fsetxattr(int, java.lang.String, byte[], com.sun.jna.platform.linux.XAttr$size_t, int);

  public abstract com.sun.jna.platform.linux.XAttr$ssize_t getxattr(java.lang.String, java.lang.String, com.sun.jna.Pointer, com.sun.jna.platform.linux.XAttr$size_t);

  public abstract com.sun.jna.platform.linux.XAttr$ssize_t getxattr(java.lang.String, java.lang.String, byte[], com.sun.jna.platform.linux.XAttr$size_t);

  public abstract com.sun.jna.platform.linux.XAttr$ssize_t lgetxattr(java.lang.String, java.lang.String, com.sun.jna.Pointer, com.sun.jna.platform.linux.XAttr$size_t);

  public abstract com.sun.jna.platform.linux.XAttr$ssize_t lgetxattr(java.lang.String, java.lang.String, byte[], com.sun.jna.platform.linux.XAttr$size_t);

  public abstract com.sun.jna.platform.linux.XAttr$ssize_t fgetxattr(int, java.lang.String, com.sun.jna.Pointer, com.sun.jna.platform.linux.XAttr$size_t);

  public abstract com.sun.jna.platform.linux.XAttr$ssize_t fgetxattr(int, java.lang.String, byte[], com.sun.jna.platform.linux.XAttr$size_t);

  public abstract com.sun.jna.platform.linux.XAttr$ssize_t listxattr(java.lang.String, com.sun.jna.Pointer, com.sun.jna.platform.linux.XAttr$size_t);

  public abstract com.sun.jna.platform.linux.XAttr$ssize_t listxattr(java.lang.String, byte[], com.sun.jna.platform.linux.XAttr$size_t);

  public abstract com.sun.jna.platform.linux.XAttr$ssize_t llistxattr(java.lang.String, com.sun.jna.Pointer, com.sun.jna.platform.linux.XAttr$size_t);

  public abstract com.sun.jna.platform.linux.XAttr$ssize_t llistxattr(java.lang.String, byte[], com.sun.jna.platform.linux.XAttr$size_t);

  public abstract com.sun.jna.platform.linux.XAttr$ssize_t flistxattr(int, com.sun.jna.Pointer, com.sun.jna.platform.linux.XAttr$size_t);

  public abstract com.sun.jna.platform.linux.XAttr$ssize_t flistxattr(int, byte[], com.sun.jna.platform.linux.XAttr$size_t);

  public abstract int removexattr(java.lang.String, java.lang.String);

  public abstract int lremovexattr(java.lang.String, java.lang.String);

  public abstract int fremovexattr(int, java.lang.String);

  static {};
    Code:
       0: ldc           #1                  // class com/sun/jna/platform/linux/XAttr
       2: invokestatic  #2                  // Method com/sun/jna/Native.load:(Ljava/lang/Class;)Lcom/sun/jna/Library;
       5: checkcast     #1                  // class com/sun/jna/platform/linux/XAttr
       8: putstatic     #3                  // Field INSTANCE:Lcom/sun/jna/platform/linux/XAttr;
      11: return
}
