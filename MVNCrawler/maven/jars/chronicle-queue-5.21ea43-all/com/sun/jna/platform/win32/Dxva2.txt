Compiled from "Dxva2.java"
public interface com.sun.jna.platform.win32.Dxva2 extends com.sun.jna.win32.StdCallLibrary,com.sun.jna.platform.win32.PhysicalMonitorEnumerationAPI,com.sun.jna.platform.win32.HighLevelMonitorConfigurationAPI,com.sun.jna.platform.win32.LowLevelMonitorConfigurationAPI {
  public static final java.util.Map<java.lang.String, java.lang.Object> DXVA_OPTIONS;

  public static final com.sun.jna.platform.win32.Dxva2 INSTANCE;

  public abstract com.sun.jna.platform.win32.WinDef$BOOL GetMonitorCapabilities(com.sun.jna.platform.win32.WinNT$HANDLE, com.sun.jna.platform.win32.WinDef$DWORDByReference, com.sun.jna.platform.win32.WinDef$DWORDByReference);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL SaveCurrentMonitorSettings(com.sun.jna.platform.win32.WinNT$HANDLE);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL GetMonitorTechnologyType(com.sun.jna.platform.win32.WinNT$HANDLE, com.sun.jna.platform.win32.HighLevelMonitorConfigurationAPI$MC_DISPLAY_TECHNOLOGY_TYPE$ByReference);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL GetMonitorBrightness(com.sun.jna.platform.win32.WinNT$HANDLE, com.sun.jna.platform.win32.WinDef$DWORDByReference, com.sun.jna.platform.win32.WinDef$DWORDByReference, com.sun.jna.platform.win32.WinDef$DWORDByReference);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL GetMonitorContrast(com.sun.jna.platform.win32.WinNT$HANDLE, com.sun.jna.platform.win32.WinDef$DWORDByReference, com.sun.jna.platform.win32.WinDef$DWORDByReference, com.sun.jna.platform.win32.WinDef$DWORDByReference);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL GetMonitorColorTemperature(com.sun.jna.platform.win32.WinNT$HANDLE, com.sun.jna.platform.win32.HighLevelMonitorConfigurationAPI$MC_COLOR_TEMPERATURE$ByReference);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL GetMonitorRedGreenOrBlueDrive(com.sun.jna.platform.win32.WinNT$HANDLE, com.sun.jna.platform.win32.HighLevelMonitorConfigurationAPI$MC_DRIVE_TYPE, com.sun.jna.platform.win32.WinDef$DWORDByReference, com.sun.jna.platform.win32.WinDef$DWORDByReference, com.sun.jna.platform.win32.WinDef$DWORDByReference);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL GetMonitorRedGreenOrBlueGain(com.sun.jna.platform.win32.WinNT$HANDLE, com.sun.jna.platform.win32.HighLevelMonitorConfigurationAPI$MC_GAIN_TYPE, com.sun.jna.platform.win32.WinDef$DWORDByReference, com.sun.jna.platform.win32.WinDef$DWORDByReference, com.sun.jna.platform.win32.WinDef$DWORDByReference);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL SetMonitorBrightness(com.sun.jna.platform.win32.WinNT$HANDLE, int);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL SetMonitorContrast(com.sun.jna.platform.win32.WinNT$HANDLE, int);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL SetMonitorColorTemperature(com.sun.jna.platform.win32.WinNT$HANDLE, com.sun.jna.platform.win32.HighLevelMonitorConfigurationAPI$MC_COLOR_TEMPERATURE);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL SetMonitorRedGreenOrBlueDrive(com.sun.jna.platform.win32.WinNT$HANDLE, com.sun.jna.platform.win32.HighLevelMonitorConfigurationAPI$MC_DRIVE_TYPE, int);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL SetMonitorRedGreenOrBlueGain(com.sun.jna.platform.win32.WinNT$HANDLE, com.sun.jna.platform.win32.HighLevelMonitorConfigurationAPI$MC_GAIN_TYPE, int);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL DegaussMonitor(com.sun.jna.platform.win32.WinNT$HANDLE);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL GetMonitorDisplayAreaSize(com.sun.jna.platform.win32.WinNT$HANDLE, com.sun.jna.platform.win32.HighLevelMonitorConfigurationAPI$MC_SIZE_TYPE, com.sun.jna.platform.win32.WinDef$DWORDByReference, com.sun.jna.platform.win32.WinDef$DWORDByReference, com.sun.jna.platform.win32.WinDef$DWORDByReference);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL GetMonitorDisplayAreaPosition(com.sun.jna.platform.win32.WinNT$HANDLE, com.sun.jna.platform.win32.HighLevelMonitorConfigurationAPI$MC_POSITION_TYPE, com.sun.jna.platform.win32.WinDef$DWORDByReference, com.sun.jna.platform.win32.WinDef$DWORDByReference, com.sun.jna.platform.win32.WinDef$DWORDByReference);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL SetMonitorDisplayAreaSize(com.sun.jna.platform.win32.WinNT$HANDLE, com.sun.jna.platform.win32.HighLevelMonitorConfigurationAPI$MC_SIZE_TYPE, int);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL SetMonitorDisplayAreaPosition(com.sun.jna.platform.win32.WinNT$HANDLE, com.sun.jna.platform.win32.HighLevelMonitorConfigurationAPI$MC_POSITION_TYPE, int);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL RestoreMonitorFactoryColorDefaults(com.sun.jna.platform.win32.WinNT$HANDLE);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL RestoreMonitorFactoryDefaults(com.sun.jna.platform.win32.WinNT$HANDLE);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL GetVCPFeatureAndVCPFeatureReply(com.sun.jna.platform.win32.WinNT$HANDLE, com.sun.jna.platform.win32.WinDef$BYTE, com.sun.jna.platform.win32.LowLevelMonitorConfigurationAPI$MC_VCP_CODE_TYPE$ByReference, com.sun.jna.platform.win32.WinDef$DWORDByReference, com.sun.jna.platform.win32.WinDef$DWORDByReference);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL SetVCPFeature(com.sun.jna.platform.win32.WinNT$HANDLE, com.sun.jna.platform.win32.WinDef$BYTE, com.sun.jna.platform.win32.WinDef$DWORD);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL SaveCurrentSettings(com.sun.jna.platform.win32.WinNT$HANDLE);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL GetCapabilitiesStringLength(com.sun.jna.platform.win32.WinNT$HANDLE, com.sun.jna.platform.win32.WinDef$DWORDByReference);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL CapabilitiesRequestAndCapabilitiesReply(com.sun.jna.platform.win32.WinNT$HANDLE, com.sun.jna.platform.win32.WTypes$LPSTR, com.sun.jna.platform.win32.WinDef$DWORD);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL GetTimingReport(com.sun.jna.platform.win32.WinNT$HANDLE, com.sun.jna.platform.win32.LowLevelMonitorConfigurationAPI$MC_TIMING_REPORT);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL GetNumberOfPhysicalMonitorsFromHMONITOR(com.sun.jna.platform.win32.WinUser$HMONITOR, com.sun.jna.platform.win32.WinDef$DWORDByReference);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL GetPhysicalMonitorsFromHMONITOR(com.sun.jna.platform.win32.WinUser$HMONITOR, int, com.sun.jna.platform.win32.PhysicalMonitorEnumerationAPI$PHYSICAL_MONITOR[]);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL DestroyPhysicalMonitor(com.sun.jna.platform.win32.WinNT$HANDLE);

  public abstract com.sun.jna.platform.win32.WinDef$BOOL DestroyPhysicalMonitors(int, com.sun.jna.platform.win32.PhysicalMonitorEnumerationAPI$PHYSICAL_MONITOR[]);

  static {};
    Code:
       0: new           #1                  // class com/sun/jna/platform/win32/Dxva2$1
       3: dup
       4: invokespecial #2                  // Method com/sun/jna/platform/win32/Dxva2$1."<init>":()V
       7: invokestatic  #3                  // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      10: putstatic     #4                  // Field DXVA_OPTIONS:Ljava/util/Map;
      13: ldc           #5                  // String Dxva2
      15: ldc           #6                  // class com/sun/jna/platform/win32/Dxva2
      17: getstatic     #4                  // Field DXVA_OPTIONS:Ljava/util/Map;
      20: invokestatic  #7                  // Method com/sun/jna/Native.load:(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Map;)Lcom/sun/jna/Library;
      23: checkcast     #6                  // class com/sun/jna/platform/win32/Dxva2
      26: putstatic     #8                  // Field INSTANCE:Lcom/sun/jna/platform/win32/Dxva2;
      29: return
}
