Compiled from "WindowUtils.java"
public class com.sun.jna.platform.WindowUtils {
  private static final java.util.logging.Logger LOG;

  private static final java.lang.String TRANSPARENT_OLD_BG;

  private static final java.lang.String TRANSPARENT_OLD_OPAQUE;

  private static final java.lang.String TRANSPARENT_ALPHA;

  public static final java.awt.Shape MASK_NONE;

  public com.sun.jna.platform.WindowUtils();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  private static com.sun.jna.platform.WindowUtils$NativeWindowUtils getInstance();
    Code:
       0: getstatic     #3                  // Field com/sun/jna/platform/WindowUtils$Holder.INSTANCE:Lcom/sun/jna/platform/WindowUtils$NativeWindowUtils;
       3: areturn

  public static void setWindowMask(java.awt.Window, java.awt.Shape);
    Code:
       0: invokestatic  #4                  // Method getInstance:()Lcom/sun/jna/platform/WindowUtils$NativeWindowUtils;
       3: aload_0
       4: aload_1
       5: invokevirtual #5                  // Method com/sun/jna/platform/WindowUtils$NativeWindowUtils.setWindowMask:(Ljava/awt/Component;Ljava/awt/Shape;)V
       8: return

  public static void setComponentMask(java.awt.Component, java.awt.Shape);
    Code:
       0: invokestatic  #4                  // Method getInstance:()Lcom/sun/jna/platform/WindowUtils$NativeWindowUtils;
       3: aload_0
       4: aload_1
       5: invokevirtual #5                  // Method com/sun/jna/platform/WindowUtils$NativeWindowUtils.setWindowMask:(Ljava/awt/Component;Ljava/awt/Shape;)V
       8: return

  public static void setWindowMask(java.awt.Window, javax.swing.Icon);
    Code:
       0: invokestatic  #4                  // Method getInstance:()Lcom/sun/jna/platform/WindowUtils$NativeWindowUtils;
       3: aload_0
       4: aload_1
       5: invokevirtual #6                  // Method com/sun/jna/platform/WindowUtils$NativeWindowUtils.setWindowMask:(Ljava/awt/Component;Ljavax/swing/Icon;)V
       8: return

  public static boolean isWindowAlphaSupported();
    Code:
       0: invokestatic  #4                  // Method getInstance:()Lcom/sun/jna/platform/WindowUtils$NativeWindowUtils;
       3: invokevirtual #7                  // Method com/sun/jna/platform/WindowUtils$NativeWindowUtils.isWindowAlphaSupported:()Z
       6: ireturn

  public static java.awt.GraphicsConfiguration getAlphaCompatibleGraphicsConfiguration();
    Code:
       0: invokestatic  #4                  // Method getInstance:()Lcom/sun/jna/platform/WindowUtils$NativeWindowUtils;
       3: invokevirtual #8                  // Method com/sun/jna/platform/WindowUtils$NativeWindowUtils.getAlphaCompatibleGraphicsConfiguration:()Ljava/awt/GraphicsConfiguration;
       6: areturn

  public static void setWindowAlpha(java.awt.Window, float);
    Code:
       0: invokestatic  #4                  // Method getInstance:()Lcom/sun/jna/platform/WindowUtils$NativeWindowUtils;
       3: aload_0
       4: fconst_0
       5: fload_1
       6: fconst_1
       7: invokestatic  #9                  // Method java/lang/Math.min:(FF)F
      10: invokestatic  #10                 // Method java/lang/Math.max:(FF)F
      13: invokevirtual #11                 // Method com/sun/jna/platform/WindowUtils$NativeWindowUtils.setWindowAlpha:(Ljava/awt/Window;F)V
      16: return

  public static void setWindowTransparent(java.awt.Window, boolean);
    Code:
       0: invokestatic  #4                  // Method getInstance:()Lcom/sun/jna/platform/WindowUtils$NativeWindowUtils;
       3: aload_0
       4: iload_1
       5: invokevirtual #12                 // Method com/sun/jna/platform/WindowUtils$NativeWindowUtils.setWindowTransparent:(Ljava/awt/Window;Z)V
       8: return

  public static java.awt.image.BufferedImage getWindowIcon(com.sun.jna.platform.win32.WinDef$HWND);
    Code:
       0: invokestatic  #4                  // Method getInstance:()Lcom/sun/jna/platform/WindowUtils$NativeWindowUtils;
       3: aload_0
       4: invokevirtual #13                 // Method com/sun/jna/platform/WindowUtils$NativeWindowUtils.getWindowIcon:(Lcom/sun/jna/platform/win32/WinDef$HWND;)Ljava/awt/image/BufferedImage;
       7: areturn

  public static java.awt.Dimension getIconSize(com.sun.jna.platform.win32.WinDef$HICON);
    Code:
       0: invokestatic  #4                  // Method getInstance:()Lcom/sun/jna/platform/WindowUtils$NativeWindowUtils;
       3: aload_0
       4: invokevirtual #14                 // Method com/sun/jna/platform/WindowUtils$NativeWindowUtils.getIconSize:(Lcom/sun/jna/platform/win32/WinDef$HICON;)Ljava/awt/Dimension;
       7: areturn

  public static java.util.List<com.sun.jna.platform.DesktopWindow> getAllWindows(boolean);
    Code:
       0: invokestatic  #4                  // Method getInstance:()Lcom/sun/jna/platform/WindowUtils$NativeWindowUtils;
       3: iload_0
       4: invokevirtual #15                 // Method com/sun/jna/platform/WindowUtils$NativeWindowUtils.getAllWindows:(Z)Ljava/util/List;
       7: areturn

  public static java.lang.String getWindowTitle(com.sun.jna.platform.win32.WinDef$HWND);
    Code:
       0: invokestatic  #4                  // Method getInstance:()Lcom/sun/jna/platform/WindowUtils$NativeWindowUtils;
       3: aload_0
       4: invokevirtual #16                 // Method com/sun/jna/platform/WindowUtils$NativeWindowUtils.getWindowTitle:(Lcom/sun/jna/platform/win32/WinDef$HWND;)Ljava/lang/String;
       7: areturn

  public static java.lang.String getProcessFilePath(com.sun.jna.platform.win32.WinDef$HWND);
    Code:
       0: invokestatic  #4                  // Method getInstance:()Lcom/sun/jna/platform/WindowUtils$NativeWindowUtils;
       3: aload_0
       4: invokevirtual #17                 // Method com/sun/jna/platform/WindowUtils$NativeWindowUtils.getProcessFilePath:(Lcom/sun/jna/platform/win32/WinDef$HWND;)Ljava/lang/String;
       7: areturn

  public static java.awt.Rectangle getWindowLocationAndSize(com.sun.jna.platform.win32.WinDef$HWND);
    Code:
       0: invokestatic  #4                  // Method getInstance:()Lcom/sun/jna/platform/WindowUtils$NativeWindowUtils;
       3: aload_0
       4: invokevirtual #18                 // Method com/sun/jna/platform/WindowUtils$NativeWindowUtils.getWindowLocationAndSize:(Lcom/sun/jna/platform/win32/WinDef$HWND;)Ljava/awt/Rectangle;
       7: areturn

  static java.util.logging.Logger access$800();
    Code:
       0: getstatic     #1                  // Field LOG:Ljava/util/logging/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #19                 // class com/sun/jna/platform/WindowUtils
       2: invokevirtual #20                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #21                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #1                  // Field LOG:Ljava/util/logging/Logger;
      11: aconst_null
      12: putstatic     #22                 // Field MASK_NONE:Ljava/awt/Shape;
      15: return
}
