Compiled from "WindowUtils.java"
class com.sun.jna.platform.WindowUtils$MacWindowUtils extends com.sun.jna.platform.WindowUtils$NativeWindowUtils {
  private static final java.lang.String WDRAG;

  private com.sun.jna.platform.WindowUtils$MacWindowUtils();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method com/sun/jna/platform/WindowUtils$NativeWindowUtils."<init>":()V
       4: return

  public boolean isWindowAlphaSupported();
    Code:
       0: iconst_1
       1: ireturn

  private com.sun.jna.platform.WindowUtils$MacWindowUtils$OSXMaskingContentPane installMaskingPane(java.awt.Window);
    Code:
       0: aload_1
       1: instanceof    #4                  // class javax/swing/RootPaneContainer
       4: ifeq          57
       7: aload_1
       8: checkcast     #4                  // class javax/swing/RootPaneContainer
      11: astore_3
      12: aload_3
      13: invokeinterface #5,  1            // InterfaceMethod javax/swing/RootPaneContainer.getContentPane:()Ljava/awt/Container;
      18: astore        4
      20: aload         4
      22: instanceof    #6                  // class com/sun/jna/platform/WindowUtils$MacWindowUtils$OSXMaskingContentPane
      25: ifeq          37
      28: aload         4
      30: checkcast     #6                  // class com/sun/jna/platform/WindowUtils$MacWindowUtils$OSXMaskingContentPane
      33: astore_2
      34: goto          54
      37: new           #6                  // class com/sun/jna/platform/WindowUtils$MacWindowUtils$OSXMaskingContentPane
      40: dup
      41: aload         4
      43: invokespecial #7                  // Method com/sun/jna/platform/WindowUtils$MacWindowUtils$OSXMaskingContentPane."<init>":(Ljava/awt/Component;)V
      46: astore_2
      47: aload_3
      48: aload_2
      49: invokeinterface #8,  2            // InterfaceMethod javax/swing/RootPaneContainer.setContentPane:(Ljava/awt/Container;)V
      54: goto          104
      57: aload_1
      58: invokevirtual #9                  // Method java/awt/Window.getComponentCount:()I
      61: ifle          72
      64: aload_1
      65: iconst_0
      66: invokevirtual #10                 // Method java/awt/Window.getComponent:(I)Ljava/awt/Component;
      69: goto          73
      72: aconst_null
      73: astore_3
      74: aload_3
      75: instanceof    #6                  // class com/sun/jna/platform/WindowUtils$MacWindowUtils$OSXMaskingContentPane
      78: ifeq          89
      81: aload_3
      82: checkcast     #6                  // class com/sun/jna/platform/WindowUtils$MacWindowUtils$OSXMaskingContentPane
      85: astore_2
      86: goto          104
      89: new           #6                  // class com/sun/jna/platform/WindowUtils$MacWindowUtils$OSXMaskingContentPane
      92: dup
      93: aload_3
      94: invokespecial #7                  // Method com/sun/jna/platform/WindowUtils$MacWindowUtils$OSXMaskingContentPane."<init>":(Ljava/awt/Component;)V
      97: astore_2
      98: aload_1
      99: aload_2
     100: invokevirtual #11                 // Method java/awt/Window.add:(Ljava/awt/Component;)Ljava/awt/Component;
     103: pop
     104: aload_2
     105: areturn

  public void setWindowTransparent(java.awt.Window, boolean);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method java/awt/Window.getBackground:()Ljava/awt/Color;
       4: ifnull        21
       7: aload_1
       8: invokevirtual #12                 // Method java/awt/Window.getBackground:()Ljava/awt/Color;
      11: invokevirtual #13                 // Method java/awt/Color.getAlpha:()I
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: istore_3
      23: iload_2
      24: iload_3
      25: if_icmpeq     36
      28: aload_0
      29: aload_1
      30: iload_2
      31: ldc           #14                 // String setWindowTransparent
      33: invokespecial #15                 // Method setBackgroundTransparent:(Ljava/awt/Window;ZLjava/lang/String;)V
      36: return

  private void fixWindowDragging(java.awt.Window, java.lang.String);
    Code:
       0: aload_1
       1: instanceof    #4                  // class javax/swing/RootPaneContainer
       4: ifeq          76
       7: aload_1
       8: checkcast     #4                  // class javax/swing/RootPaneContainer
      11: invokeinterface #16,  1           // InterfaceMethod javax/swing/RootPaneContainer.getRootPane:()Ljavax/swing/JRootPane;
      16: astore_3
      17: aload_3
      18: ldc           #18                 // String apple.awt.draggableWindowBackground
      20: invokevirtual #19                 // Method javax/swing/JRootPane.getClientProperty:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #20                 // class java/lang/Boolean
      26: astore        4
      28: aload         4
      30: ifnonnull     76
      33: aload_3
      34: ldc           #18                 // String apple.awt.draggableWindowBackground
      36: getstatic     #21                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      39: invokevirtual #22                 // Method javax/swing/JRootPane.putClientProperty:(Ljava/lang/Object;Ljava/lang/Object;)V
      42: aload_1
      43: invokevirtual #23                 // Method java/awt/Window.isDisplayable:()Z
      46: ifeq          76
      49: invokestatic  #24                 // Method com/sun/jna/platform/WindowUtils.access$800:()Ljava/util/logging/Logger;
      52: getstatic     #25                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      55: ldc           #26                 // String {0}(): To avoid content dragging, {1}() must be called before the window is realized, or apple.awt.draggableWindowBackground must be set to Boolean.FALSE before the window is realized.  If you really want content dragging, set apple.awt.draggableWindowBackground on the window\'\'s root pane to Boolean.TRUE before calling {2}() to hide this message.
      57: iconst_3
      58: anewarray     #27                 // class java/lang/Object
      61: dup
      62: iconst_0
      63: aload_2
      64: aastore
      65: dup
      66: iconst_1
      67: aload_2
      68: aastore
      69: dup
      70: iconst_2
      71: aload_2
      72: aastore
      73: invokevirtual #28                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V
      76: return

  public void setWindowAlpha(java.awt.Window, float);
    Code:
       0: aload_1
       1: instanceof    #4                  // class javax/swing/RootPaneContainer
       4: ifeq          34
       7: aload_1
       8: checkcast     #4                  // class javax/swing/RootPaneContainer
      11: invokeinterface #16,  1           // InterfaceMethod javax/swing/RootPaneContainer.getRootPane:()Ljavax/swing/JRootPane;
      16: astore_3
      17: aload_3
      18: ldc           #29                 // String Window.alpha
      20: fload_2
      21: invokestatic  #30                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      24: invokevirtual #22                 // Method javax/swing/JRootPane.putClientProperty:(Ljava/lang/Object;Ljava/lang/Object;)V
      27: aload_0
      28: aload_1
      29: ldc           #31                 // String setWindowAlpha
      31: invokespecial #32                 // Method fixWindowDragging:(Ljava/awt/Window;Ljava/lang/String;)V
      34: aload_0
      35: aload_1
      36: new           #33                 // class com/sun/jna/platform/WindowUtils$MacWindowUtils$1
      39: dup
      40: aload_0
      41: aload_1
      42: fload_2
      43: invokespecial #34                 // Method com/sun/jna/platform/WindowUtils$MacWindowUtils$1."<init>":(Lcom/sun/jna/platform/WindowUtils$MacWindowUtils;Ljava/awt/Window;F)V
      46: invokevirtual #35                 // Method whenDisplayable:(Ljava/awt/Component;Ljava/lang/Runnable;)V
      49: return

  protected void setWindowMask(java.awt.Component, java.awt.image.Raster);
    Code:
       0: aload_2
       1: ifnull        17
       4: aload_0
       5: aload_1
       6: aload_0
       7: aload_2
       8: invokevirtual #36                 // Method toShape:(Ljava/awt/image/Raster;)Ljava/awt/Shape;
      11: invokevirtual #37                 // Method setWindowMask:(Ljava/awt/Component;Ljava/awt/Shape;)V
      14: goto          39
      17: aload_0
      18: aload_1
      19: new           #38                 // class java/awt/Rectangle
      22: dup
      23: iconst_0
      24: iconst_0
      25: aload_1
      26: invokevirtual #39                 // Method java/awt/Component.getWidth:()I
      29: aload_1
      30: invokevirtual #40                 // Method java/awt/Component.getHeight:()I
      33: invokespecial #41                 // Method java/awt/Rectangle."<init>":(IIII)V
      36: invokevirtual #37                 // Method setWindowMask:(Ljava/awt/Component;Ljava/awt/Shape;)V
      39: return

  public void setWindowMask(java.awt.Component, java.awt.Shape);
    Code:
       0: aload_1
       1: instanceof    #42                 // class java/awt/Window
       4: ifeq          44
       7: aload_1
       8: checkcast     #42                 // class java/awt/Window
      11: astore_3
      12: aload_0
      13: aload_3
      14: invokespecial #43                 // Method installMaskingPane:(Ljava/awt/Window;)Lcom/sun/jna/platform/WindowUtils$MacWindowUtils$OSXMaskingContentPane;
      17: astore        4
      19: aload         4
      21: aload_2
      22: invokevirtual #44                 // Method com/sun/jna/platform/WindowUtils$MacWindowUtils$OSXMaskingContentPane.setMask:(Ljava/awt/Shape;)V
      25: aload_0
      26: aload_3
      27: aload_2
      28: getstatic     #45                 // Field com/sun/jna/platform/WindowUtils.MASK_NONE:Ljava/awt/Shape;
      31: if_acmpeq     38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ldc           #46                 // String setWindowMask
      41: invokespecial #15                 // Method setBackgroundTransparent:(Ljava/awt/Window;ZLjava/lang/String;)V
      44: return

  private void setBackgroundTransparent(java.awt.Window, boolean, java.lang.String);
    Code:
       0: aload_1
       1: instanceof    #4                  // class javax/swing/RootPaneContainer
       4: ifeq          19
       7: aload_1
       8: checkcast     #4                  // class javax/swing/RootPaneContainer
      11: invokeinterface #16,  1           // InterfaceMethod javax/swing/RootPaneContainer.getRootPane:()Ljavax/swing/JRootPane;
      16: goto          20
      19: aconst_null
      20: astore        4
      22: iload_2
      23: ifeq          60
      26: aload         4
      28: ifnull        42
      31: aload         4
      33: ldc           #47                 // String transparent-old-bg
      35: aload_1
      36: invokevirtual #12                 // Method java/awt/Window.getBackground:()Ljava/awt/Color;
      39: invokevirtual #22                 // Method javax/swing/JRootPane.putClientProperty:(Ljava/lang/Object;Ljava/lang/Object;)V
      42: aload_1
      43: new           #48                 // class java/awt/Color
      46: dup
      47: iconst_0
      48: iconst_0
      49: iconst_0
      50: iconst_0
      51: invokespecial #49                 // Method java/awt/Color."<init>":(IIII)V
      54: invokevirtual #50                 // Method java/awt/Window.setBackground:(Ljava/awt/Color;)V
      57: goto          133
      60: aload         4
      62: ifnull        128
      65: aload         4
      67: ldc           #47                 // String transparent-old-bg
      69: invokevirtual #19                 // Method javax/swing/JRootPane.getClientProperty:(Ljava/lang/Object;)Ljava/lang/Object;
      72: checkcast     #48                 // class java/awt/Color
      75: astore        5
      77: aload         5
      79: ifnull        111
      82: new           #48                 // class java/awt/Color
      85: dup
      86: aload         5
      88: invokevirtual #51                 // Method java/awt/Color.getRed:()I
      91: aload         5
      93: invokevirtual #52                 // Method java/awt/Color.getGreen:()I
      96: aload         5
      98: invokevirtual #53                 // Method java/awt/Color.getBlue:()I
     101: aload         5
     103: invokevirtual #13                 // Method java/awt/Color.getAlpha:()I
     106: invokespecial #49                 // Method java/awt/Color."<init>":(IIII)V
     109: astore        5
     111: aload_1
     112: aload         5
     114: invokevirtual #50                 // Method java/awt/Window.setBackground:(Ljava/awt/Color;)V
     117: aload         4
     119: ldc           #47                 // String transparent-old-bg
     121: aconst_null
     122: invokevirtual #22                 // Method javax/swing/JRootPane.putClientProperty:(Ljava/lang/Object;Ljava/lang/Object;)V
     125: goto          133
     128: aload_1
     129: aconst_null
     130: invokevirtual #50                 // Method java/awt/Window.setBackground:(Ljava/awt/Color;)V
     133: aload_0
     134: aload_1
     135: aload_3
     136: invokespecial #32                 // Method fixWindowDragging:(Ljava/awt/Window;Ljava/lang/String;)V
     139: return

  com.sun.jna.platform.WindowUtils$MacWindowUtils(com.sun.jna.platform.WindowUtils$1);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method "<init>":()V
       4: return
}
