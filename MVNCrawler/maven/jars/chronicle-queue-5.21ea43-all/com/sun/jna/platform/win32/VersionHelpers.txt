Compiled from "VersionHelpers.java"
public class com.sun.jna.platform.win32.VersionHelpers {
  public com.sun.jna.platform.win32.VersionHelpers();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean IsWindowsVersionOrGreater(int, int, int);
    Code:
       0: new           #2                  // class com/sun/jna/platform/win32/WinNT$OSVERSIONINFOEX
       3: dup
       4: invokespecial #3                  // Method com/sun/jna/platform/win32/WinNT$OSVERSIONINFOEX."<init>":()V
       7: astore_3
       8: aload_3
       9: new           #4                  // class com/sun/jna/platform/win32/WinDef$DWORD
      12: dup
      13: aload_3
      14: invokevirtual #5                  // Method com/sun/jna/platform/win32/WinNT$OSVERSIONINFOEX.size:()I
      17: i2l
      18: invokespecial #6                  // Method com/sun/jna/platform/win32/WinDef$DWORD."<init>":(J)V
      21: putfield      #7                  // Field com/sun/jna/platform/win32/WinNT$OSVERSIONINFOEX.dwOSVersionInfoSize:Lcom/sun/jna/platform/win32/WinDef$DWORD;
      24: aload_3
      25: new           #4                  // class com/sun/jna/platform/win32/WinDef$DWORD
      28: dup
      29: iload_0
      30: i2l
      31: invokespecial #6                  // Method com/sun/jna/platform/win32/WinDef$DWORD."<init>":(J)V
      34: putfield      #8                  // Field com/sun/jna/platform/win32/WinNT$OSVERSIONINFOEX.dwMajorVersion:Lcom/sun/jna/platform/win32/WinDef$DWORD;
      37: aload_3
      38: new           #4                  // class com/sun/jna/platform/win32/WinDef$DWORD
      41: dup
      42: iload_1
      43: i2l
      44: invokespecial #6                  // Method com/sun/jna/platform/win32/WinDef$DWORD."<init>":(J)V
      47: putfield      #9                  // Field com/sun/jna/platform/win32/WinNT$OSVERSIONINFOEX.dwMinorVersion:Lcom/sun/jna/platform/win32/WinDef$DWORD;
      50: aload_3
      51: new           #10                 // class com/sun/jna/platform/win32/WinDef$WORD
      54: dup
      55: iload_2
      56: i2l
      57: invokespecial #11                 // Method com/sun/jna/platform/win32/WinDef$WORD."<init>":(J)V
      60: putfield      #12                 // Field com/sun/jna/platform/win32/WinNT$OSVERSIONINFOEX.wServicePackMajor:Lcom/sun/jna/platform/win32/WinDef$WORD;
      63: lconst_0
      64: lstore        4
      66: getstatic     #13                 // Field com/sun/jna/platform/win32/Kernel32.INSTANCE:Lcom/sun/jna/platform/win32/Kernel32;
      69: lload         4
      71: iconst_2
      72: iconst_3
      73: invokeinterface #15,  5           // InterfaceMethod com/sun/jna/platform/win32/Kernel32.VerSetConditionMask:(JIB)J
      78: lstore        4
      80: getstatic     #13                 // Field com/sun/jna/platform/win32/Kernel32.INSTANCE:Lcom/sun/jna/platform/win32/Kernel32;
      83: lload         4
      85: iconst_1
      86: iconst_3
      87: invokeinterface #15,  5           // InterfaceMethod com/sun/jna/platform/win32/Kernel32.VerSetConditionMask:(JIB)J
      92: lstore        4
      94: getstatic     #13                 // Field com/sun/jna/platform/win32/Kernel32.INSTANCE:Lcom/sun/jna/platform/win32/Kernel32;
      97: lload         4
      99: bipush        32
     101: iconst_3
     102: invokeinterface #15,  5           // InterfaceMethod com/sun/jna/platform/win32/Kernel32.VerSetConditionMask:(JIB)J
     107: lstore        4
     109: getstatic     #13                 // Field com/sun/jna/platform/win32/Kernel32.INSTANCE:Lcom/sun/jna/platform/win32/Kernel32;
     112: aload_3
     113: bipush        35
     115: lload         4
     117: invokeinterface #16,  5           // InterfaceMethod com/sun/jna/platform/win32/Kernel32.VerifyVersionInfoW:(Lcom/sun/jna/platform/win32/WinNT$OSVERSIONINFOEX;IJ)Z
     122: ireturn

  public static boolean IsWindowsXPOrGreater();
    Code:
       0: iconst_5
       1: iconst_1
       2: iconst_0
       3: invokestatic  #18                 // Method IsWindowsVersionOrGreater:(III)Z
       6: ireturn

  public static boolean IsWindowsXPSP1OrGreater();
    Code:
       0: iconst_5
       1: iconst_1
       2: iconst_1
       3: invokestatic  #18                 // Method IsWindowsVersionOrGreater:(III)Z
       6: ireturn

  public static boolean IsWindowsXPSP2OrGreater();
    Code:
       0: iconst_5
       1: iconst_1
       2: iconst_2
       3: invokestatic  #18                 // Method IsWindowsVersionOrGreater:(III)Z
       6: ireturn

  public static boolean IsWindowsXPSP3OrGreater();
    Code:
       0: iconst_5
       1: iconst_1
       2: iconst_3
       3: invokestatic  #18                 // Method IsWindowsVersionOrGreater:(III)Z
       6: ireturn

  public static boolean IsWindowsVistaOrGreater();
    Code:
       0: bipush        6
       2: iconst_0
       3: iconst_0
       4: invokestatic  #18                 // Method IsWindowsVersionOrGreater:(III)Z
       7: ireturn

  public static boolean IsWindowsVistaSP1OrGreater();
    Code:
       0: bipush        6
       2: iconst_0
       3: iconst_1
       4: invokestatic  #18                 // Method IsWindowsVersionOrGreater:(III)Z
       7: ireturn

  public static boolean IsWindowsVistaSP2OrGreater();
    Code:
       0: bipush        6
       2: iconst_0
       3: iconst_2
       4: invokestatic  #18                 // Method IsWindowsVersionOrGreater:(III)Z
       7: ireturn

  public static boolean IsWindows7OrGreater();
    Code:
       0: bipush        6
       2: iconst_1
       3: iconst_0
       4: invokestatic  #18                 // Method IsWindowsVersionOrGreater:(III)Z
       7: ireturn

  public static boolean IsWindows7SP1OrGreater();
    Code:
       0: bipush        6
       2: iconst_1
       3: iconst_1
       4: invokestatic  #18                 // Method IsWindowsVersionOrGreater:(III)Z
       7: ireturn

  public static boolean IsWindows8OrGreater();
    Code:
       0: bipush        6
       2: iconst_2
       3: iconst_0
       4: invokestatic  #18                 // Method IsWindowsVersionOrGreater:(III)Z
       7: ireturn

  public static boolean IsWindows8Point1OrGreater();
    Code:
       0: bipush        6
       2: iconst_3
       3: iconst_0
       4: invokestatic  #18                 // Method IsWindowsVersionOrGreater:(III)Z
       7: ireturn

  public static boolean IsWindows10OrGreater();
    Code:
       0: bipush        10
       2: iconst_0
       3: iconst_0
       4: invokestatic  #18                 // Method IsWindowsVersionOrGreater:(III)Z
       7: ireturn

  public static boolean IsWindowsServer();
    Code:
       0: new           #2                  // class com/sun/jna/platform/win32/WinNT$OSVERSIONINFOEX
       3: dup
       4: invokespecial #3                  // Method com/sun/jna/platform/win32/WinNT$OSVERSIONINFOEX."<init>":()V
       7: astore_0
       8: aload_0
       9: new           #4                  // class com/sun/jna/platform/win32/WinDef$DWORD
      12: dup
      13: aload_0
      14: invokevirtual #5                  // Method com/sun/jna/platform/win32/WinNT$OSVERSIONINFOEX.size:()I
      17: i2l
      18: invokespecial #6                  // Method com/sun/jna/platform/win32/WinDef$DWORD."<init>":(J)V
      21: putfield      #7                  // Field com/sun/jna/platform/win32/WinNT$OSVERSIONINFOEX.dwOSVersionInfoSize:Lcom/sun/jna/platform/win32/WinDef$DWORD;
      24: aload_0
      25: iconst_1
      26: putfield      #19                 // Field com/sun/jna/platform/win32/WinNT$OSVERSIONINFOEX.wProductType:B
      29: getstatic     #13                 // Field com/sun/jna/platform/win32/Kernel32.INSTANCE:Lcom/sun/jna/platform/win32/Kernel32;
      32: lconst_0
      33: sipush        128
      36: iconst_1
      37: invokeinterface #15,  5           // InterfaceMethod com/sun/jna/platform/win32/Kernel32.VerSetConditionMask:(JIB)J
      42: lstore_1
      43: getstatic     #13                 // Field com/sun/jna/platform/win32/Kernel32.INSTANCE:Lcom/sun/jna/platform/win32/Kernel32;
      46: aload_0
      47: sipush        128
      50: lload_1
      51: invokeinterface #16,  5           // InterfaceMethod com/sun/jna/platform/win32/Kernel32.VerifyVersionInfoW:(Lcom/sun/jna/platform/win32/WinNT$OSVERSIONINFOEX;IJ)Z
      56: ifne          63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: ireturn
}
