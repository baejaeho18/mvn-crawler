Compiled from "WinNT.java"
public abstract class com.sun.jna.platform.win32.WinNT$ACCESS_ACEStructure extends com.sun.jna.platform.win32.WinNT$ACE_HEADER {
  public int Mask;

  public byte[] SidStart;

  com.sun.jna.platform.win32.WinNT$PSID psid;

  static final boolean $assertionsDisabled;

  public com.sun.jna.platform.win32.WinNT$ACCESS_ACEStructure();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/sun/jna/platform/win32/WinNT$ACE_HEADER."<init>":()V
       4: aload_0
       5: iconst_4
       6: newarray       byte
       8: putfield      #2                  // Field SidStart:[B
      11: return

  public com.sun.jna.platform.win32.WinNT$ACCESS_ACEStructure(int, byte, byte, com.sun.jna.platform.win32.WinNT$PSID);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/sun/jna/platform/win32/WinNT$ACE_HEADER."<init>":()V
       4: aload_0
       5: iconst_4
       6: newarray       byte
       8: putfield      #2                  // Field SidStart:[B
      11: aload_0
      12: iconst_1
      13: invokevirtual #3                  // Method calculateSize:(Z)I
      16: pop
      17: aload_0
      18: iload_2
      19: putfield      #4                  // Field AceType:B
      22: aload_0
      23: iload_3
      24: putfield      #5                  // Field AceFlags:B
      27: aload_0
      28: aload_0
      29: ldc           #6                  // String SidStart
      31: invokespecial #7                  // Method com/sun/jna/platform/win32/WinNT$ACE_HEADER.fieldOffset:(Ljava/lang/String;)I
      34: aload         4
      36: invokevirtual #8                  // Method com/sun/jna/platform/win32/WinNT$PSID.getBytes:()[B
      39: arraylength
      40: iadd
      41: i2s
      42: putfield      #9                  // Field AceSize:S
      45: aload_0
      46: aload         4
      48: putfield      #10                 // Field psid:Lcom/sun/jna/platform/win32/WinNT$PSID;
      51: aload_0
      52: iload_1
      53: putfield      #11                 // Field Mask:I
      56: aload_0
      57: aload         4
      59: invokevirtual #12                 // Method com/sun/jna/platform/win32/WinNT$PSID.getPointer:()Lcom/sun/jna/Pointer;
      62: lconst_0
      63: aload_0
      64: getfield      #2                  // Field SidStart:[B
      67: arraylength
      68: invokevirtual #13                 // Method com/sun/jna/Pointer.getByteArray:(JI)[B
      71: putfield      #2                  // Field SidStart:[B
      74: aload_0
      75: aload_0
      76: getfield      #9                  // Field AceSize:S
      79: invokevirtual #14                 // Method allocateMemory:(I)V
      82: aload_0
      83: invokevirtual #15                 // Method write:()V
      86: return

  public com.sun.jna.platform.win32.WinNT$ACCESS_ACEStructure(com.sun.jna.Pointer);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method com/sun/jna/platform/win32/WinNT$ACE_HEADER."<init>":(Lcom/sun/jna/Pointer;)V
       5: aload_0
       6: iconst_4
       7: newarray       byte
       9: putfield      #2                  // Field SidStart:[B
      12: aload_0
      13: invokevirtual #17                 // Method read:()V
      16: return

  public java.lang.String getSidString();
    Code:
       0: aload_0
       1: getfield      #10                 // Field psid:Lcom/sun/jna/platform/win32/WinNT$PSID;
       4: invokestatic  #18                 // Method com/sun/jna/platform/win32/Advapi32Util.convertSidToStringSid:(Lcom/sun/jna/platform/win32/WinNT$PSID;)Ljava/lang/String;
       7: areturn

  public com.sun.jna.platform.win32.WinNT$PSID getSID();
    Code:
       0: aload_0
       1: getfield      #10                 // Field psid:Lcom/sun/jna/platform/win32/WinNT$PSID;
       4: areturn

  public void write();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method com/sun/jna/platform/win32/WinNT$ACE_HEADER.write:()V
       4: aload_0
       5: ldc           #6                  // String SidStart
       7: invokespecial #7                  // Method com/sun/jna/platform/win32/WinNT$ACE_HEADER.fieldOffset:(Ljava/lang/String;)I
      10: istore_1
      11: aload_0
      12: getfield      #20                 // Field com/sun/jna/platform/win32/WinNT$ACE_HEADER.AceSize:S
      15: aload_0
      16: ldc           #6                  // String SidStart
      18: invokespecial #7                  // Method com/sun/jna/platform/win32/WinNT$ACE_HEADER.fieldOffset:(Ljava/lang/String;)I
      21: isub
      22: istore_2
      23: aload_0
      24: getfield      #10                 // Field psid:Lcom/sun/jna/platform/win32/WinNT$PSID;
      27: ifnull        70
      30: aload_0
      31: getfield      #10                 // Field psid:Lcom/sun/jna/platform/win32/WinNT$PSID;
      34: invokevirtual #8                  // Method com/sun/jna/platform/win32/WinNT$PSID.getBytes:()[B
      37: astore_3
      38: getstatic     #21                 // Field $assertionsDisabled:Z
      41: ifne          58
      44: aload_3
      45: arraylength
      46: iload_2
      47: if_icmple     58
      50: new           #22                 // class java/lang/AssertionError
      53: dup
      54: invokespecial #23                 // Method java/lang/AssertionError."<init>":()V
      57: athrow
      58: aload_0
      59: invokevirtual #24                 // Method getPointer:()Lcom/sun/jna/Pointer;
      62: iload_1
      63: i2l
      64: aload_3
      65: iconst_0
      66: iload_2
      67: invokevirtual #25                 // Method com/sun/jna/Pointer.write:(J[BII)V
      70: return

  public void read();
    Code:
       0: aload_0
       1: getfield      #2                  // Field SidStart:[B
       4: ifnonnull     14
       7: aload_0
       8: iconst_4
       9: newarray       byte
      11: putfield      #2                  // Field SidStart:[B
      14: aload_0
      15: invokespecial #26                 // Method com/sun/jna/platform/win32/WinNT$ACE_HEADER.read:()V
      18: aload_0
      19: ldc           #6                  // String SidStart
      21: invokespecial #7                  // Method com/sun/jna/platform/win32/WinNT$ACE_HEADER.fieldOffset:(Ljava/lang/String;)I
      24: istore_1
      25: aload_0
      26: getfield      #20                 // Field com/sun/jna/platform/win32/WinNT$ACE_HEADER.AceSize:S
      29: aload_0
      30: ldc           #6                  // String SidStart
      32: invokespecial #7                  // Method com/sun/jna/platform/win32/WinNT$ACE_HEADER.fieldOffset:(Ljava/lang/String;)I
      35: isub
      36: istore_2
      37: iload_2
      38: ifle          65
      41: aload_0
      42: new           #27                 // class com/sun/jna/platform/win32/WinNT$PSID
      45: dup
      46: aload_0
      47: invokevirtual #24                 // Method getPointer:()Lcom/sun/jna/Pointer;
      50: iload_1
      51: i2l
      52: iload_2
      53: invokevirtual #13                 // Method com/sun/jna/Pointer.getByteArray:(JI)[B
      56: invokespecial #28                 // Method com/sun/jna/platform/win32/WinNT$PSID."<init>":([B)V
      59: putfield      #10                 // Field psid:Lcom/sun/jna/platform/win32/WinNT$PSID;
      62: goto          76
      65: aload_0
      66: new           #27                 // class com/sun/jna/platform/win32/WinNT$PSID
      69: dup
      70: invokespecial #29                 // Method com/sun/jna/platform/win32/WinNT$PSID."<init>":()V
      73: putfield      #10                 // Field psid:Lcom/sun/jna/platform/win32/WinNT$PSID;
      76: return

  static {};
    Code:
       0: ldc           #30                 // class com/sun/jna/platform/win32/WinNT
       2: invokevirtual #31                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #21                 // Field $assertionsDisabled:Z
      16: return
}
