Compiled from "WinPerf.java"
public interface com.sun.jna.platform.win32.WinPerf {
  public static final int PERF_NO_INSTANCES;

  public static final int PERF_SIZE_DWORD;

  public static final int PERF_SIZE_LARGE;

  public static final int PERF_SIZE_ZERO;

  public static final int PERF_SIZE_VARIABLE_LEN;

  public static final int PERF_TYPE_NUMBER;

  public static final int PERF_TYPE_COUNTER;

  public static final int PERF_TYPE_TEXT;

  public static final int PERF_TYPE_ZERO;

  public static final int PERF_NUMBER_HEX;

  public static final int PERF_NUMBER_DECIMAL;

  public static final int PERF_NUMBER_DEC_1000;

  public static final int PERF_COUNTER_VALUE;

  public static final int PERF_COUNTER_RATE;

  public static final int PERF_COUNTER_FRACTION;

  public static final int PERF_COUNTER_BASE;

  public static final int PERF_COUNTER_ELAPSED;

  public static final int PERF_COUNTER_QUEUELEN;

  public static final int PERF_COUNTER_HISTOGRAM;

  public static final int PERF_COUNTER_PRECISION;

  public static final int PERF_TEXT_UNICODE;

  public static final int PERF_TEXT_ASCII;

  public static final int PERF_TIMER_TICK;

  public static final int PERF_TIMER_100NS;

  public static final int PERF_OBJECT_TIMER;

  public static final int PERF_DELTA_COUNTER;

  public static final int PERF_DELTA_BASE;

  public static final int PERF_INVERSE_COUNTER;

  public static final int PERF_MULTI_COUNTER;

  public static final int PERF_DISPLAY_NO_SUFFIX;

  public static final int PERF_DISPLAY_PER_SEC;

  public static final int PERF_DISPLAY_PERCENT;

  public static final int PERF_DISPLAY_SECONDS;

  public static final int PERF_DISPLAY_NOSHOW;

  public static final int PERF_COUNTER_COUNTER;

  public static final int PERF_COUNTER_TIMER;

  public static final int PERF_COUNTER_QUEUELEN_TYPE;

  public static final int PERF_COUNTER_LARGE_QUEUELEN_TYPE;

  public static final int PERF_COUNTER_100NS_QUEUELEN_TYPE;

  public static final int PERF_COUNTER_OBJ_TIME_QUEUELEN_TYPE;

  public static final int PERF_COUNTER_BULK_COUNT;

  public static final int PERF_COUNTER_TEXT;

  public static final int PERF_COUNTER_RAWCOUNT;

  public static final int PERF_COUNTER_LARGE_RAWCOUNT;

  public static final int PERF_COUNTER_RAWCOUNT_HEX;

  public static final int PERF_COUNTER_LARGE_RAWCOUNT_HEX;

  public static final int PERF_SAMPLE_FRACTION;

  public static final int PERF_SAMPLE_COUNTER;

  public static final int PERF_COUNTER_NODATA;

  public static final int PERF_COUNTER_TIMER_INV;

  public static final int PERF_SAMPLE_BASE;

  public static final int PERF_AVERAGE_TIMER;

  public static final int PERF_AVERAGE_BASE;

  public static final int PERF_AVERAGE_BULK;

  public static final int PERF_OBJ_TIME_TIMER;

  public static final int PERF_100NSEC_TIMER;

  public static final int PERF_100NSEC_TIMER_INV;

  public static final int PERF_COUNTER_MULTI_TIMER;

  public static final int PERF_COUNTER_MULTI_TIMER_INV;

  public static final int PERF_COUNTER_MULTI_BASE;

  public static final int PERF_100NSEC_MULTI_TIMER;

  public static final int PERF_100NSEC_MULTI_TIMER_INV;

  public static final int PERF_RAW_FRACTION;

  public static final int PERF_LARGE_RAW_FRACTION;

  public static final int PERF_RAW_BASE;

  public static final int PERF_LARGE_RAW_BASE;

  public static final int PERF_ELAPSED_TIME;

  public static final int PERF_COUNTER_HISTOGRAM_TYPE;

  public static final int PERF_COUNTER_DELTA;

  public static final int PERF_COUNTER_LARGE_DELTA;

  public static final int PERF_PRECISION_SYSTEM_TIMER;

  public static final int PERF_PRECISION_100NS_TIMER;

  public static final int PERF_PRECISION_OBJECT_TIMER;

  public static final int PERF_PRECISION_TIMESTAMP;

  public static final int PERF_DETAIL_NOVICE;

  public static final int PERF_DETAIL_ADVANCED;

  public static final int PERF_DETAIL_EXPERT;

  public static final int PERF_DETAIL_WIZARD;

  public static final int PERF_NO_UNIQUE_ID;

  public static final int PERF_QUERY_OBJECTS;

  public static final int PERF_QUERY_GLOBAL;

  public static final int PERF_QUERY_COSTLY;

}
