Compiled from "OleAuto.java"
public interface com.sun.jna.platform.win32.OleAuto extends com.sun.jna.win32.StdCallLibrary {
  public static final com.sun.jna.platform.win32.OleAuto INSTANCE;

  public static final int DISPATCH_METHOD;

  public static final int DISPATCH_PROPERTYGET;

  public static final int DISPATCH_PROPERTYPUT;

  public static final int DISPATCH_PROPERTYPUTREF;

  public static final int FADF_AUTO;

  public static final int FADF_STATIC;

  public static final int FADF_EMBEDDED;

  public static final int FADF_FIXEDSIZE;

  public static final int FADF_RECORD;

  public static final int FADF_HAVEIID;

  public static final int FADF_HAVEVARTYPE;

  public static final int FADF_BSTR;

  public static final int FADF_UNKNOWN;

  public static final int FADF_DISPATCH;

  public static final int FADF_VARIANT;

  public static final int FADF_RESERVED;

  public static final short VARIANT_NOVALUEPROP;

  public static final short VARIANT_ALPHABOOL;

  public static final short VARIANT_NOUSEROVERRIDE;

  public static final short VARIANT_CALENDAR_HIJRI;

  public static final short VARIANT_LOCALBOOL;

  public static final short VARIANT_CALENDAR_THAI;

  public static final short VARIANT_CALENDAR_GREGORIAN;

  public static final short VARIANT_USE_NLS;

  public abstract com.sun.jna.platform.win32.WTypes$BSTR SysAllocString(java.lang.String);

  public abstract void SysFreeString(com.sun.jna.platform.win32.WTypes$BSTR);

  public abstract int SysStringByteLen(com.sun.jna.platform.win32.WTypes$BSTR);

  public abstract int SysStringLen(com.sun.jna.platform.win32.WTypes$BSTR);

  public abstract void VariantInit(com.sun.jna.platform.win32.Variant$VARIANT$ByReference);

  public abstract void VariantInit(com.sun.jna.platform.win32.Variant$VARIANT);

  public abstract com.sun.jna.platform.win32.WinNT$HRESULT VariantCopy(com.sun.jna.Pointer, com.sun.jna.platform.win32.Variant$VARIANT);

  public abstract com.sun.jna.platform.win32.WinNT$HRESULT VariantClear(com.sun.jna.platform.win32.Variant$VARIANT);

  public abstract com.sun.jna.platform.win32.WinNT$HRESULT VariantChangeType(com.sun.jna.platform.win32.Variant$VARIANT, com.sun.jna.platform.win32.Variant$VARIANT, short, com.sun.jna.platform.win32.WTypes$VARTYPE);

  public abstract com.sun.jna.platform.win32.WinNT$HRESULT VariantChangeType(com.sun.jna.platform.win32.Variant$VARIANT$ByReference, com.sun.jna.platform.win32.Variant$VARIANT$ByReference, short, com.sun.jna.platform.win32.WTypes$VARTYPE);

  public abstract com.sun.jna.platform.win32.OaIdl$SAFEARRAY$ByReference SafeArrayCreate(com.sun.jna.platform.win32.WTypes$VARTYPE, com.sun.jna.platform.win32.WinDef$UINT, com.sun.jna.platform.win32.OaIdl$SAFEARRAYBOUND[]);

  public abstract com.sun.jna.platform.win32.WinNT$HRESULT SafeArrayPutElement(com.sun.jna.platform.win32.OaIdl$SAFEARRAY, com.sun.jna.platform.win32.WinDef$LONG[], com.sun.jna.Pointer);

  public abstract com.sun.jna.platform.win32.WinNT$HRESULT SafeArrayGetUBound(com.sun.jna.platform.win32.OaIdl$SAFEARRAY, com.sun.jna.platform.win32.WinDef$UINT, com.sun.jna.platform.win32.WinDef$LONGByReference);

  public abstract com.sun.jna.platform.win32.WinNT$HRESULT SafeArrayGetLBound(com.sun.jna.platform.win32.OaIdl$SAFEARRAY, com.sun.jna.platform.win32.WinDef$UINT, com.sun.jna.platform.win32.WinDef$LONGByReference);

  public abstract com.sun.jna.platform.win32.WinNT$HRESULT SafeArrayGetElement(com.sun.jna.platform.win32.OaIdl$SAFEARRAY, com.sun.jna.platform.win32.WinDef$LONG[], com.sun.jna.Pointer);

  public abstract com.sun.jna.platform.win32.WinNT$HRESULT SafeArrayPtrOfIndex(com.sun.jna.platform.win32.OaIdl$SAFEARRAY, com.sun.jna.platform.win32.WinDef$LONG[], com.sun.jna.ptr.PointerByReference);

  public abstract com.sun.jna.platform.win32.WinNT$HRESULT SafeArrayLock(com.sun.jna.platform.win32.OaIdl$SAFEARRAY);

  public abstract com.sun.jna.platform.win32.WinNT$HRESULT SafeArrayUnlock(com.sun.jna.platform.win32.OaIdl$SAFEARRAY);

  public abstract com.sun.jna.platform.win32.WinNT$HRESULT SafeArrayDestroy(com.sun.jna.platform.win32.OaIdl$SAFEARRAY);

  public abstract com.sun.jna.platform.win32.WinNT$HRESULT SafeArrayRedim(com.sun.jna.platform.win32.OaIdl$SAFEARRAY, com.sun.jna.platform.win32.OaIdl$SAFEARRAYBOUND);

  public abstract com.sun.jna.platform.win32.WinNT$HRESULT SafeArrayGetVartype(com.sun.jna.platform.win32.OaIdl$SAFEARRAY, com.sun.jna.platform.win32.WTypes$VARTYPEByReference);

  public abstract com.sun.jna.platform.win32.WinDef$UINT SafeArrayGetDim(com.sun.jna.platform.win32.OaIdl$SAFEARRAY);

  public abstract com.sun.jna.platform.win32.WinNT$HRESULT SafeArrayAccessData(com.sun.jna.platform.win32.OaIdl$SAFEARRAY, com.sun.jna.ptr.PointerByReference);

  public abstract com.sun.jna.platform.win32.WinNT$HRESULT SafeArrayUnaccessData(com.sun.jna.platform.win32.OaIdl$SAFEARRAY);

  public abstract com.sun.jna.platform.win32.WinDef$UINT SafeArrayGetElemsize(com.sun.jna.platform.win32.OaIdl$SAFEARRAY);

  public abstract com.sun.jna.platform.win32.WinNT$HRESULT GetActiveObject(com.sun.jna.platform.win32.Guid$GUID, com.sun.jna.platform.win32.WinDef$PVOID, com.sun.jna.ptr.PointerByReference);

  public abstract com.sun.jna.platform.win32.WinNT$HRESULT LoadRegTypeLib(com.sun.jna.platform.win32.Guid$GUID, int, int, com.sun.jna.platform.win32.WinDef$LCID, com.sun.jna.ptr.PointerByReference);

  public abstract com.sun.jna.platform.win32.WinNT$HRESULT LoadTypeLib(java.lang.String, com.sun.jna.ptr.PointerByReference);

  public abstract int SystemTimeToVariantTime(com.sun.jna.platform.win32.WinBase$SYSTEMTIME, com.sun.jna.ptr.DoubleByReference);

  static {};
    Code:
       0: ldc           #1                  // String OleAut32
       2: ldc           #2                  // class com/sun/jna/platform/win32/OleAuto
       4: getstatic     #3                  // Field com/sun/jna/win32/W32APIOptions.DEFAULT_OPTIONS:Ljava/util/Map;
       7: invokestatic  #4                  // Method com/sun/jna/Native.load:(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Map;)Lcom/sun/jna/Library;
      10: checkcast     #2                  // class com/sun/jna/platform/win32/OleAuto
      13: putstatic     #5                  // Field INSTANCE:Lcom/sun/jna/platform/win32/OleAuto;
      16: return
}
