Compiled from "LockCheck.java"
final class net.openhft.affinity.LockCheck extends java.lang.Enum<net.openhft.affinity.LockCheck> {
  private static final org.slf4j.Logger LOGGER;

  private static final java.lang.String OS;

  static final boolean IS_LINUX;

  private static final int EMPTY_PID;

  private static final net.openhft.affinity.lockchecker.LockChecker lockChecker;

  private static final net.openhft.affinity.LockCheck[] $VALUES;

  public static net.openhft.affinity.LockCheck[] values();
    Code:
       0: getstatic     #2                  // Field $VALUES:[Lnet/openhft/affinity/LockCheck;
       3: invokevirtual #3                  // Method "[Lnet/openhft/affinity/LockCheck;".clone:()Ljava/lang/Object;
       6: checkcast     #4                  // class "[Lnet/openhft/affinity/LockCheck;"
       9: areturn

  public static net.openhft.affinity.LockCheck valueOf(java.lang.String);
    Code:
       0: ldc           #5                  // class net/openhft/affinity/LockCheck
       2: aload_0
       3: invokestatic  #6                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #5                  // class net/openhft/affinity/LockCheck
       9: areturn

  private net.openhft.affinity.LockCheck();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #7                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  static long getPID();
    Code:
       0: invokestatic  #8                  // Method java/lang/management/ManagementFactory.getRuntimeMXBean:()Ljava/lang/management/RuntimeMXBean;
       3: invokeinterface #9,  1            // InterfaceMethod java/lang/management/RuntimeMXBean.getName:()Ljava/lang/String;
       8: astore_0
       9: aload_0
      10: ldc           #10                 // String @
      12: invokevirtual #11                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      15: iconst_0
      16: aaload
      17: invokestatic  #12                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      20: lreturn

  static boolean canOSSupportOperation();
    Code:
       0: getstatic     #13                 // Field IS_LINUX:Z
       3: ireturn

  public static boolean isCpuFree(int);
    Code:
       0: invokestatic  #14                 // Method canOSSupportOperation:()Z
       3: ifne          8
       6: iconst_1
       7: ireturn
       8: iload_0
       9: invokestatic  #15                 // Method isLockFree:(I)Z
      12: ifeq          17
      15: iconst_1
      16: ireturn
      17: iconst_0
      18: istore_1
      19: iload_0
      20: invokestatic  #16                 // Method getProcessForCpu:(I)I
      23: istore_1
      24: goto          62
      27: astore_2
      28: getstatic     #19                 // Field LOGGER:Lorg/slf4j/Logger;
      31: new           #20                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #22                 // String Failed to determine process on cpu
      40: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: iload_0
      44: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      47: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: aload_2
      51: invokeinterface #26,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      56: aload_2
      57: invokevirtual #27                 // Method java/lang/Exception.printStackTrace:()V
      60: iconst_1
      61: ireturn
      62: iload_1
      63: i2l
      64: invokestatic  #28                 // Method isProcessRunning:(J)Z
      67: ifne          82
      70: getstatic     #29                 // Field lockChecker:Lnet/openhft/affinity/lockchecker/LockChecker;
      73: iload_0
      74: invokeinterface #30,  2           // InterfaceMethod net/openhft/affinity/lockchecker/LockChecker.releaseLock:(I)Z
      79: pop
      80: iconst_1
      81: ireturn
      82: iconst_0
      83: ireturn
    Exception table:
       from    to  target type
          19    24    27   Class java/lang/RuntimeException
          19    24    27   Class java/io/IOException

  static void replacePid(int, long) throws java.io.IOException;
    Code:
       0: lload_1
       1: iload_0
       2: invokestatic  #31                 // Method storePid:(JI)V
       5: return

  static boolean isProcessRunning(long);
    Code:
       0: invokestatic  #14                 // Method canOSSupportOperation:()Z
       3: ifeq          36
       6: new           #32                 // class java/io/File
       9: dup
      10: new           #20                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #33                 // String /proc/
      19: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: lload_0
      23: invokevirtual #34                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      26: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #35                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      32: invokevirtual #36                 // Method java/io/File.exists:()Z
      35: ireturn
      36: new           #37                 // class java/lang/UnsupportedOperationException
      39: dup
      40: ldc           #38                 // String this is only supported on LINUX
      42: invokespecial #39                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      45: athrow

  private static synchronized void storePid(long, int) throws java.io.IOException;
    Code:
       0: getstatic     #29                 // Field lockChecker:Lnet/openhft/affinity/lockchecker/LockChecker;
       3: iload_2
       4: lload_0
       5: invokestatic  #40                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
       8: invokeinterface #41,  3           // InterfaceMethod net/openhft/affinity/lockchecker/LockChecker.obtainLock:(ILjava/lang/String;)Z
      13: ifne          40
      16: new           #18                 // class java/io/IOException
      19: dup
      20: ldc           #42                 // String Cannot obtain file lock for cpu %d
      22: iconst_1
      23: anewarray     #43                 // class java/lang/Object
      26: dup
      27: iconst_0
      28: iload_2
      29: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: aastore
      33: invokestatic  #45                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      36: invokespecial #46                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: return

  private static synchronized boolean isLockFree(int);
    Code:
       0: getstatic     #29                 // Field lockChecker:Lnet/openhft/affinity/lockchecker/LockChecker;
       3: iload_0
       4: invokeinterface #47,  2           // InterfaceMethod net/openhft/affinity/lockchecker/LockChecker.isLockFree:(I)Z
       9: ireturn

  static int getProcessForCpu(int) throws java.io.IOException;
    Code:
       0: getstatic     #29                 // Field lockChecker:Lnet/openhft/affinity/lockchecker/LockChecker;
       3: iload_0
       4: invokeinterface #48,  2           // InterfaceMethod net/openhft/affinity/lockchecker/LockChecker.getMetaInfo:(I)Ljava/lang/String;
       9: astore_1
      10: aload_1
      11: ifnull        27
      14: aload_1
      15: invokevirtual #49                 // Method java/lang/String.isEmpty:()Z
      18: ifne          27
      21: aload_1
      22: invokestatic  #50                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      25: ireturn
      26: astore_2
      27: ldc           #52                 // int -2147483648
      29: ireturn
    Exception table:
       from    to  target type
          21    25    26   Class java/lang/NumberFormatException

  static void updateCpu(int);
    Code:
       0: invokestatic  #14                 // Method canOSSupportOperation:()Z
       3: ifne          7
       6: return
       7: iload_0
       8: invokestatic  #53                 // Method getPID:()J
      11: invokestatic  #54                 // Method replacePid:(IJ)V
      14: goto          50
      17: astore_1
      18: getstatic     #19                 // Field LOGGER:Lorg/slf4j/Logger;
      21: new           #20                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #55                 // String Failed to update lock file for cpu
      30: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: iload_0
      34: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      37: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: aload_1
      41: invokeinterface #26,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      46: aload_1
      47: invokevirtual #56                 // Method java/io/IOException.printStackTrace:()V
      50: return
    Exception table:
       from    to  target type
           7    14    17   Class java/io/IOException

  public static void releaseLock(int);
    Code:
       0: getstatic     #29                 // Field lockChecker:Lnet/openhft/affinity/lockchecker/LockChecker;
       3: iload_0
       4: invokeinterface #30,  2           // InterfaceMethod net/openhft/affinity/lockchecker/LockChecker.releaseLock:(I)Z
       9: pop
      10: return

  static {};
    Code:
       0: iconst_0
       1: anewarray     #5                  // class net/openhft/affinity/LockCheck
       4: putstatic     #2                  // Field $VALUES:[Lnet/openhft/affinity/LockCheck;
       7: ldc           #5                  // class net/openhft/affinity/LockCheck
       9: invokestatic  #57                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      12: putstatic     #19                 // Field LOGGER:Lorg/slf4j/Logger;
      15: ldc           #58                 // String os.name
      17: invokestatic  #59                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      20: invokevirtual #60                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      23: putstatic     #61                 // Field OS:Ljava/lang/String;
      26: getstatic     #61                 // Field OS:Ljava/lang/String;
      29: ldc           #62                 // String linux
      31: invokevirtual #63                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      34: putstatic     #13                 // Field IS_LINUX:Z
      37: invokestatic  #64                 // Method net/openhft/affinity/lockchecker/FileLockBasedLockChecker.getInstance:()Lnet/openhft/affinity/lockchecker/LockChecker;
      40: putstatic     #29                 // Field lockChecker:Lnet/openhft/affinity/lockchecker/LockChecker;
      43: return
}
