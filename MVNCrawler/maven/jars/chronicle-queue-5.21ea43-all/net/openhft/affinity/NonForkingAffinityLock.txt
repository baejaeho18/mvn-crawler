Compiled from "NonForkingAffinityLock.java"
public class net.openhft.affinity.NonForkingAffinityLock extends net.openhft.affinity.AffinityLock implements java.lang.ThreadLifecycleListener {
  private static final java.lang.reflect.Field GROUP_FIELD;

  private static final java.lang.reflect.Field TARGET_FIELD;

  private static final net.openhft.affinity.LockInventory LOCK_INVENTORY;

  net.openhft.affinity.NonForkingAffinityLock(int, boolean, boolean, net.openhft.affinity.LockInventory);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: invokespecial #1                  // Method net/openhft/affinity/AffinityLock."<init>":(IZZLnet/openhft/affinity/LockInventory;)V
       9: return

  public static net.openhft.affinity.AffinityLock acquireLock();
    Code:
       0: iconst_1
       1: invokestatic  #2                  // Method acquireLock:(Z)Lnet/openhft/affinity/AffinityLock;
       4: areturn

  public static net.openhft.affinity.AffinityLock acquireCore();
    Code:
       0: iconst_1
       1: invokestatic  #3                  // Method acquireCore:(Z)Lnet/openhft/affinity/AffinityLock;
       4: areturn

  public static net.openhft.affinity.AffinityLock acquireLock(boolean);
    Code:
       0: iload_0
       1: iconst_m1
       2: iconst_1
       3: anewarray     #5                  // class net/openhft/affinity/AffinityStrategy
       6: dup
       7: iconst_0
       8: getstatic     #6                  // Field net/openhft/affinity/AffinityStrategies.ANY:Lnet/openhft/affinity/AffinityStrategies;
      11: aastore
      12: invokestatic  #7                  // Method acquireLock:(ZI[Lnet/openhft/affinity/AffinityStrategy;)Lnet/openhft/affinity/AffinityLock;
      15: areturn

  public static net.openhft.affinity.AffinityLock acquireCore(boolean);
    Code:
       0: iload_0
       1: iconst_m1
       2: iconst_1
       3: anewarray     #8                  // class net/openhft/affinity/AffinityStrategy
       6: dup
       7: iconst_0
       8: getstatic     #6                  // Field net/openhft/affinity/AffinityStrategies.ANY:Lnet/openhft/affinity/AffinityStrategies;
      11: aastore
      12: invokestatic  #9                  // Method acquireCore:(ZI[Lnet/openhft/affinity/AffinityStrategy;)Lnet/openhft/affinity/AffinityLock;
      15: areturn

  private static net.openhft.affinity.AffinityLock acquireLock(boolean, int, net.openhft.affinity.AffinityStrategy...);
    Code:
       0: getstatic     #10                 // Field LOCK_INVENTORY:Lnet/openhft/affinity/LockInventory;
       3: iload_0
       4: iload_1
       5: aload_2
       6: invokevirtual #11                 // Method net/openhft/affinity/LockInventory.acquireLock:(ZI[Lnet/openhft/affinity/AffinityStrategy;)Lnet/openhft/affinity/AffinityLock;
       9: areturn

  private static net.openhft.affinity.AffinityLock acquireCore(boolean, int, net.openhft.affinity.AffinityStrategy...);
    Code:
       0: getstatic     #10                 // Field LOCK_INVENTORY:Lnet/openhft/affinity/LockInventory;
       3: iload_0
       4: iload_1
       5: aload_2
       6: invokevirtual #12                 // Method net/openhft/affinity/LockInventory.acquireCore:(ZI[Lnet/openhft/affinity/AffinityStrategy;)Lnet/openhft/affinity/AffinityLock;
       9: areturn

  public static void cpuLayout(net.openhft.affinity.CpuLayout);
    Code:
       0: getstatic     #10                 // Field LOCK_INVENTORY:Lnet/openhft/affinity/LockInventory;
       3: aload_0
       4: invokevirtual #13                 // Method net/openhft/affinity/LockInventory.set:(Lnet/openhft/affinity/CpuLayout;)V
       7: return

  public static net.openhft.affinity.CpuLayout cpuLayout();
    Code:
       0: getstatic     #10                 // Field LOCK_INVENTORY:Lnet/openhft/affinity/LockInventory;
       3: invokevirtual #14                 // Method net/openhft/affinity/LockInventory.getCpuLayout:()Lnet/openhft/affinity/CpuLayout;
       6: areturn

  public static java.lang.String dumpLocks();
    Code:
       0: getstatic     #10                 // Field LOCK_INVENTORY:Lnet/openhft/affinity/LockInventory;
       3: invokevirtual #15                 // Method net/openhft/affinity/LockInventory.dumpLocks:()Ljava/lang/String;
       6: areturn

  private static java.lang.reflect.Field makeThreadFieldModifiable(java.lang.String);
    Code:
       0: ldc           #16                 // class java/lang/Thread
       2: aload_0
       3: invokevirtual #17                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
       6: astore_1
       7: aload_1
       8: iconst_1
       9: invokevirtual #18                 // Method java/lang/reflect/Field.setAccessible:(Z)V
      12: aload_1
      13: areturn
      14: astore_1
      15: new           #20                 // class java/lang/RuntimeException
      18: dup
      19: new           #21                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #16                 // class java/lang/Thread
      28: invokevirtual #23                 // Method java/lang/Class.getName:()Ljava/lang/String;
      31: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #25                 // String  class doesn\'t have a
      36: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc           #26                 // String  field! Quite unexpected!
      45: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #28                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      54: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/NoSuchFieldException

  private static void changeGroupOfThread(java.lang.Thread, java.lang.ThreadGroup);
    Code:
       0: getstatic     #29                 // Field GROUP_FIELD:Ljava/lang/reflect/Field;
       3: aload_0
       4: aload_1
       5: invokevirtual #30                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
       8: goto          69
      11: astore_2
      12: new           #20                 // class java/lang/RuntimeException
      15: dup
      16: new           #21                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #32                 // String Failed changing
      25: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #16                 // class java/lang/Thread
      30: invokevirtual #23                 // Method java/lang/Class.getName:()Ljava/lang/String;
      33: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #33                 // String \'s the \'
      38: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: getstatic     #29                 // Field GROUP_FIELD:Ljava/lang/reflect/Field;
      44: invokevirtual #34                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
      47: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: ldc           #35                 // String \' field! Reason:
      52: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_2
      56: invokevirtual #36                 // Method java/lang/IllegalAccessException.getMessage:()Ljava/lang/String;
      59: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokespecial #28                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: return
    Exception table:
       from    to  target type
           0     8    11   Class java/lang/IllegalAccessException

  private static void wrapRunnableOfThread(java.lang.Thread, net.openhft.affinity.AffinityLock);
    Code:
       0: getstatic     #37                 // Field TARGET_FIELD:Ljava/lang/reflect/Field;
       3: aload_0
       4: invokevirtual #38                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #39                 // class java/lang/Runnable
      10: astore_2
      11: getstatic     #37                 // Field TARGET_FIELD:Ljava/lang/reflect/Field;
      14: aload_0
      15: new           #40                 // class net/openhft/affinity/NonForkingAffinityLock$2
      18: dup
      19: aload_1
      20: aload_2
      21: invokespecial #41                 // Method net/openhft/affinity/NonForkingAffinityLock$2."<init>":(Lnet/openhft/affinity/AffinityLock;Ljava/lang/Runnable;)V
      24: invokevirtual #30                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      27: goto          88
      30: astore_2
      31: new           #20                 // class java/lang/RuntimeException
      34: dup
      35: new           #21                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      42: ldc           #42                 // String Failed wrapping
      44: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: ldc           #16                 // class java/lang/Thread
      49: invokevirtual #23                 // Method java/lang/Class.getName:()Ljava/lang/String;
      52: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #43                 // String \'s \'
      57: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: getstatic     #37                 // Field TARGET_FIELD:Ljava/lang/reflect/Field;
      63: invokevirtual #34                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
      66: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: ldc           #35                 // String \' field! Reason:
      71: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_2
      75: invokevirtual #36                 // Method java/lang/IllegalAccessException.getMessage:()Ljava/lang/String;
      78: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokespecial #28                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      87: athrow
      88: return
    Exception table:
       from    to  target type
           0    27    30   Class java/lang/IllegalAccessException

  public void bind(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #44                 // Method net/openhft/affinity/AffinityLock.bind:(Z)V
       5: invokestatic  #45                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       8: astore_2
       9: aload_2
      10: new           #46                 // class java/lang/ThreadTrackingGroup
      13: dup
      14: aload_2
      15: invokevirtual #47                 // Method java/lang/Thread.getThreadGroup:()Ljava/lang/ThreadGroup;
      18: aload_0
      19: invokespecial #48                 // Method java/lang/ThreadTrackingGroup."<init>":(Ljava/lang/ThreadGroup;Ljava/lang/ThreadLifecycleListener;)V
      22: invokestatic  #49                 // Method changeGroupOfThread:(Ljava/lang/Thread;Ljava/lang/ThreadGroup;)V
      25: return

  public void release();
    Code:
       0: invokestatic  #45                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: astore_1
       4: aload_1
       5: aload_1
       6: invokevirtual #47                 // Method java/lang/Thread.getThreadGroup:()Ljava/lang/ThreadGroup;
       9: invokevirtual #50                 // Method java/lang/ThreadGroup.getParent:()Ljava/lang/ThreadGroup;
      12: invokestatic  #49                 // Method changeGroupOfThread:(Ljava/lang/Thread;Ljava/lang/ThreadGroup;)V
      15: aload_0
      16: invokespecial #51                 // Method net/openhft/affinity/AffinityLock.release:()V
      19: return

  public void started(java.lang.Thread);
    Code:
       0: aload_1
       1: aload_0
       2: invokestatic  #52                 // Method wrapRunnableOfThread:(Ljava/lang/Thread;Lnet/openhft/affinity/AffinityLock;)V
       5: return

  public void startFailed(java.lang.Thread);
    Code:
       0: return

  public void terminated(java.lang.Thread);
    Code:
       0: return

  static {};
    Code:
       0: ldc           #53                 // String group
       2: invokestatic  #54                 // Method makeThreadFieldModifiable:(Ljava/lang/String;)Ljava/lang/reflect/Field;
       5: putstatic     #29                 // Field GROUP_FIELD:Ljava/lang/reflect/Field;
       8: ldc           #55                 // String target
      10: invokestatic  #54                 // Method makeThreadFieldModifiable:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      13: putstatic     #37                 // Field TARGET_FIELD:Ljava/lang/reflect/Field;
      16: new           #56                 // class net/openhft/affinity/NonForkingAffinityLock$1
      19: dup
      20: new           #57                 // class net/openhft/affinity/impl/NoCpuLayout
      23: dup
      24: getstatic     #58                 // Field PROCESSORS:I
      27: invokespecial #59                 // Method net/openhft/affinity/impl/NoCpuLayout."<init>":(I)V
      30: invokespecial #60                 // Method net/openhft/affinity/NonForkingAffinityLock$1."<init>":(Lnet/openhft/affinity/CpuLayout;)V
      33: putstatic     #10                 // Field LOCK_INVENTORY:Lnet/openhft/affinity/LockInventory;
      36: return
}
