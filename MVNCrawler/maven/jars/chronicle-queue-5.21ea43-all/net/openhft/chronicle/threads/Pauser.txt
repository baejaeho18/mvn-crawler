Compiled from "Pauser.java"
public interface net.openhft.chronicle.threads.Pauser {
  public static final int MIN_PROCESSORS;

  public static final boolean BALANCED;

  public static final boolean SLEEPY;

  public static boolean getBalanced();
    Code:
       0: invokestatic  #1                  // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
       3: invokevirtual #2                  // Method java/lang/Runtime.availableProcessors:()I
       6: istore_0
       7: iload_0
       8: getstatic     #3                  // Field MIN_PROCESSORS:I
      11: iconst_2
      12: imul
      13: if_icmpge     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public static boolean getSleepy();
    Code:
       0: invokestatic  #1                  // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
       3: invokevirtual #2                  // Method java/lang/Runtime.availableProcessors:()I
       6: istore_0
       7: iload_0
       8: getstatic     #3                  // Field MIN_PROCESSORS:I
      11: if_icmpge     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public static net.openhft.chronicle.threads.Pauser yielding(int);
    Code:
       0: invokestatic  #4                  // Method net/openhft/chronicle/threads/Pauser$SleepyWarning.warnSleepy:()V
       3: getstatic     #5                  // Field SLEEPY:Z
       6: ifeq          15
       9: invokestatic  #6                  // InterfaceMethod sleepy:()Lnet/openhft/chronicle/threads/TimingPauser;
      12: goto          35
      15: getstatic     #7                  // Field BALANCED:Z
      18: ifeq          27
      21: invokestatic  #8                  // InterfaceMethod balanced:()Lnet/openhft/chronicle/threads/TimingPauser;
      24: goto          35
      27: new           #9                  // class net/openhft/chronicle/threads/YieldingPauser
      30: dup
      31: iload_0
      32: invokespecial #10                 // Method net/openhft/chronicle/threads/YieldingPauser."<init>":(I)V
      35: areturn

  public static net.openhft.chronicle.threads.TimingPauser sleepy();
    Code:
       0: new           #11                 // class net/openhft/chronicle/threads/LongPauser
       3: dup
       4: iconst_0
       5: bipush        100
       7: ldc2_w        #12                 // long 500l
      10: ldc2_w        #14                 // long 20000l
      13: getstatic     #16                 // Field java/util/concurrent/TimeUnit.MICROSECONDS:Ljava/util/concurrent/TimeUnit;
      16: invokespecial #17                 // Method net/openhft/chronicle/threads/LongPauser."<init>":(IIJJLjava/util/concurrent/TimeUnit;)V
      19: areturn

  public static net.openhft.chronicle.threads.TimingPauser balanced();
    Code:
       0: bipush        20
       2: invokestatic  #18                 // InterfaceMethod balancedUpToMillis:(I)Lnet/openhft/chronicle/threads/TimingPauser;
       5: areturn

  public static net.openhft.chronicle.threads.TimingPauser balancedUpToMillis(int);
    Code:
       0: getstatic     #5                  // Field SLEEPY:Z
       3: ifeq          12
       6: invokestatic  #6                  // InterfaceMethod sleepy:()Lnet/openhft/chronicle/threads/TimingPauser;
       9: goto          50
      12: new           #11                 // class net/openhft/chronicle/threads/LongPauser
      15: dup
      16: sipush        20000
      19: sipush        250
      22: ldc2_w        #19                 // long 50l
      25: invokestatic  #21                 // Method net/openhft/chronicle/core/Jvm.isDebug:()Z
      28: ifeq          36
      31: ldc           #22                 // int 200000
      33: goto          37
      36: iconst_0
      37: iload_0
      38: sipush        1000
      41: imul
      42: iadd
      43: i2l
      44: getstatic     #16                 // Field java/util/concurrent/TimeUnit.MICROSECONDS:Ljava/util/concurrent/TimeUnit;
      47: invokespecial #17                 // Method net/openhft/chronicle/threads/LongPauser."<init>":(IIJJLjava/util/concurrent/TimeUnit;)V
      50: areturn

  public static net.openhft.chronicle.threads.MilliPauser millis(int);
    Code:
       0: new           #23                 // class net/openhft/chronicle/threads/MilliPauser
       3: dup
       4: iload_0
       5: i2l
       6: invokespecial #24                 // Method net/openhft/chronicle/threads/MilliPauser."<init>":(J)V
       9: areturn

  public static net.openhft.chronicle.threads.Pauser millis(int, int);
    Code:
       0: new           #11                 // class net/openhft/chronicle/threads/LongPauser
       3: dup
       4: iconst_0
       5: iconst_0
       6: iload_0
       7: i2l
       8: iload_1
       9: i2l
      10: getstatic     #25                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      13: invokespecial #17                 // Method net/openhft/chronicle/threads/LongPauser."<init>":(IIJJLjava/util/concurrent/TimeUnit;)V
      16: areturn

  public static net.openhft.chronicle.threads.Pauser yielding();
    Code:
       0: iconst_2
       1: invokestatic  #26                 // InterfaceMethod yielding:(I)Lnet/openhft/chronicle/threads/Pauser;
       4: areturn

  public static net.openhft.chronicle.threads.Pauser busy();
    Code:
       0: invokestatic  #4                  // Method net/openhft/chronicle/threads/Pauser$SleepyWarning.warnSleepy:()V
       3: getstatic     #5                  // Field SLEEPY:Z
       6: ifeq          15
       9: invokestatic  #6                  // InterfaceMethod sleepy:()Lnet/openhft/chronicle/threads/TimingPauser;
      12: goto          30
      15: getstatic     #7                  // Field BALANCED:Z
      18: ifeq          27
      21: invokestatic  #8                  // InterfaceMethod balanced:()Lnet/openhft/chronicle/threads/TimingPauser;
      24: goto          30
      27: getstatic     #27                 // Field net/openhft/chronicle/threads/BusyPauser.INSTANCE:Lnet/openhft/chronicle/threads/BusyPauser;
      30: areturn

  public static net.openhft.chronicle.threads.TimingPauser timedBusy();
    Code:
       0: getstatic     #5                  // Field SLEEPY:Z
       3: ifeq          12
       6: invokestatic  #6                  // InterfaceMethod sleepy:()Lnet/openhft/chronicle/threads/TimingPauser;
       9: goto          31
      12: getstatic     #7                  // Field BALANCED:Z
      15: ifeq          24
      18: invokestatic  #8                  // InterfaceMethod balanced:()Lnet/openhft/chronicle/threads/TimingPauser;
      21: goto          31
      24: new           #28                 // class net/openhft/chronicle/threads/BusyTimedPauser
      27: dup
      28: invokespecial #29                 // Method net/openhft/chronicle/threads/BusyTimedPauser."<init>":()V
      31: areturn

  public abstract void pause();

  public default void asyncPause();
    Code:
       0: return

  public default boolean asyncPausing();
    Code:
       0: iconst_0
       1: ireturn

  public abstract void reset();

  public default void pause(long, java.util.concurrent.TimeUnit) throws java.util.concurrent.TimeoutException;
    Code:
       0: new           #30                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #31                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      15: ldc           #34                 // String  is not stateful, use a TimingPauser
      17: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: invokespecial #37                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      26: athrow

  public abstract void unpause();

  public abstract long timePaused();

  public abstract long countPaused();

  static {};
    Code:
       0: ldc           #38                 // String pauser.minProcessors
       2: bipush        6
       4: invokestatic  #39                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
       7: invokevirtual #40                 // Method java/lang/Integer.intValue:()I
      10: putstatic     #3                  // Field MIN_PROCESSORS:I
      13: invokestatic  #41                 // InterfaceMethod getBalanced:()Z
      16: putstatic     #7                  // Field BALANCED:Z
      19: invokestatic  #42                 // InterfaceMethod getSleepy:()Z
      22: putstatic     #5                  // Field SLEEPY:Z
      25: return
}
