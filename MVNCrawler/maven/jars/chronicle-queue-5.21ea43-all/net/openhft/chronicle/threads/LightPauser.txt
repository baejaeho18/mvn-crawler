Compiled from "LightPauser.java"
public class net.openhft.chronicle.threads.LightPauser implements net.openhft.chronicle.threads.Pauser {
  public static final long NO_BUSY_PERIOD;

  private final java.util.concurrent.atomic.AtomicBoolean pausing;

  private final long busyPeriodNS;

  private final long parkPeriodNS;

  private int count;

  private long timePaused;

  private long countPaused;

  private long pauseStart;

  private volatile java.lang.Thread thread;

  public net.openhft.chronicle.threads.LightPauser(long, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      12: putfield      #4                  // Field pausing:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: aload_0
      16: lconst_0
      17: putfield      #5                  // Field timePaused:J
      20: aload_0
      21: lconst_0
      22: putfield      #6                  // Field countPaused:J
      25: aload_0
      26: lconst_0
      27: putfield      #7                  // Field pauseStart:J
      30: aload_0
      31: lload_1
      32: putfield      #8                  // Field busyPeriodNS:J
      35: aload_0
      36: lload_3
      37: putfield      #9                  // Field parkPeriodNS:J
      40: return

  public void reset();
    Code:
       0: aload_0
       1: aload_0
       2: iconst_0
       3: dup_x1
       4: putfield      #10                 // Field count:I
       7: i2l
       8: putfield      #7                  // Field pauseStart:J
      11: return

  public void pause();
    Code:
       0: aload_0
       1: getfield      #9                  // Field parkPeriodNS:J
       4: lstore_1
       5: aload_0
       6: getfield      #8                  // Field busyPeriodNS:J
       9: lconst_0
      10: lcmp
      11: ifle          69
      14: aload_0
      15: dup
      16: getfield      #10                 // Field count:I
      19: dup_x1
      20: iconst_1
      21: iadd
      22: putfield      #10                 // Field count:I
      25: sipush        1000
      28: if_icmpge     35
      31: invokestatic  #11                 // Method net/openhft/chronicle/core/Jvm.safepoint:()V
      34: return
      35: aload_0
      36: getfield      #7                  // Field pauseStart:J
      39: lconst_0
      40: lcmp
      41: ifne          52
      44: aload_0
      45: invokestatic  #12                 // Method java/lang/System.nanoTime:()J
      48: putfield      #7                  // Field pauseStart:J
      51: return
      52: invokestatic  #12                 // Method java/lang/System.nanoTime:()J
      55: aload_0
      56: getfield      #7                  // Field pauseStart:J
      59: aload_0
      60: getfield      #8                  // Field busyPeriodNS:J
      63: ladd
      64: lcmp
      65: ifge          69
      68: return
      69: lload_1
      70: ldc2_w        #13                 // long 10000l
      73: lcmp
      74: ifge          78
      77: return
      78: aload_0
      79: invokestatic  #15                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      82: putfield      #16                 // Field thread:Ljava/lang/Thread;
      85: aload_0
      86: getfield      #4                  // Field pausing:Ljava/util/concurrent/atomic/AtomicBoolean;
      89: iconst_1
      90: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      93: invokestatic  #18                 // Method java/lang/System.currentTimeMillis:()J
      96: lstore_3
      97: aload_0
      98: lload_1
      99: invokevirtual #19                 // Method doPause:(J)V
     102: invokestatic  #18                 // Method java/lang/System.currentTimeMillis:()J
     105: lload_3
     106: lsub
     107: lstore        5
     109: aload_0
     110: dup
     111: getfield      #5                  // Field timePaused:J
     114: lload         5
     116: ladd
     117: putfield      #5                  // Field timePaused:J
     120: aload_0
     121: dup
     122: getfield      #6                  // Field countPaused:J
     125: lconst_1
     126: ladd
     127: putfield      #6                  // Field countPaused:J
     130: aload_0
     131: getfield      #4                  // Field pausing:Ljava/util/concurrent/atomic/AtomicBoolean;
     134: iconst_0
     135: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     138: return

  public void asyncPause();
    Code:
       0: aload_0
       1: getfield      #9                  // Field parkPeriodNS:J
       4: lstore_1
       5: aload_0
       6: getfield      #8                  // Field busyPeriodNS:J
       9: lconst_0
      10: lcmp
      11: ifle          48
      14: aload_0
      15: dup
      16: getfield      #10                 // Field count:I
      19: dup_x1
      20: iconst_1
      21: iadd
      22: putfield      #10                 // Field count:I
      25: sipush        1000
      28: if_icmpge     32
      31: return
      32: aload_0
      33: getfield      #7                  // Field pauseStart:J
      36: lconst_0
      37: lcmp
      38: ifne          48
      41: aload_0
      42: invokestatic  #12                 // Method java/lang/System.nanoTime:()J
      45: putfield      #7                  // Field pauseStart:J
      48: return

  public boolean asyncPausing();
    Code:
       0: aload_0
       1: getfield      #7                  // Field pauseStart:J
       4: aload_0
       5: getfield      #9                  // Field parkPeriodNS:J
       8: ladd
       9: invokestatic  #12                 // Method java/lang/System.nanoTime:()J
      12: lcmp
      13: ifle          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  protected void doPause(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #9                  // Field parkPeriodNS:J
       5: invokestatic  #20                 // Method java/lang/Math.max:(JJ)J
       8: invokestatic  #21                 // Method net/openhft/chronicle/core/util/Time.parkNanos:(J)V
      11: return

  public void unpause();
    Code:
       0: aload_0
       1: getfield      #4                  // Field pausing:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          17
      10: aload_0
      11: getfield      #16                 // Field thread:Ljava/lang/Thread;
      14: invokestatic  #23                 // Method java/util/concurrent/locks/LockSupport.unpark:(Ljava/lang/Thread;)V
      17: return

  public long timePaused();
    Code:
       0: aload_0
       1: getfield      #5                  // Field timePaused:J
       4: lreturn

  public long countPaused();
    Code:
       0: aload_0
       1: getfield      #6                  // Field countPaused:J
       4: lreturn
}
