Compiled from "ThreadMonitors.java"
public final class net.openhft.chronicle.threads.ThreadMonitors extends java.lang.Enum<net.openhft.chronicle.threads.ThreadMonitors> {
  private static final net.openhft.chronicle.threads.ThreadMonitors[] $VALUES;

  public static net.openhft.chronicle.threads.ThreadMonitors[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lnet/openhft/chronicle/threads/ThreadMonitors;
       3: invokevirtual #2                  // Method "[Lnet/openhft/chronicle/threads/ThreadMonitors;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lnet/openhft/chronicle/threads/ThreadMonitors;"
       9: areturn

  public static net.openhft.chronicle.threads.ThreadMonitors valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class net/openhft/chronicle/threads/ThreadMonitors
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class net/openhft/chronicle/threads/ThreadMonitors
       9: areturn

  private net.openhft.chronicle.threads.ThreadMonitors();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public static net.openhft.chronicle.threads.ThreadMonitor forThread(java.lang.String, long, java.util.function.LongSupplier, java.util.function.Supplier<java.lang.Thread>);
    Code:
       0: new           #7                  // class net/openhft/chronicle/threads/internal/ThreadMonitorHarness
       3: dup
       4: new           #8                  // class net/openhft/chronicle/threads/internal/ThreadsThreadHolder
       7: dup
       8: aload_0
       9: lload_1
      10: aload_3
      11: aload         4
      13: invokedynamic #9,  0              // InvokeDynamic #0:getAsBoolean:()Ljava/util/function/BooleanSupplier;
      18: invokestatic  #10                 // Method perfOn:()Ljava/util/function/Consumer;
      21: invokespecial #11                 // Method net/openhft/chronicle/threads/internal/ThreadsThreadHolder."<init>":(Ljava/lang/String;JLjava/util/function/LongSupplier;Ljava/util/function/Supplier;Ljava/util/function/BooleanSupplier;Ljava/util/function/Consumer;)V
      24: invokespecial #12                 // Method net/openhft/chronicle/threads/internal/ThreadMonitorHarness."<init>":(Lnet/openhft/chronicle/threads/ThreadHolder;)V
      27: areturn

  private static java.util.function.Consumer<java.lang.String> perfOn();
    Code:
       0: invokedynamic #13,  0             // InvokeDynamic #1:accept:()Ljava/util/function/Consumer;
       5: areturn

  public static net.openhft.chronicle.threads.ThreadMonitor forThread(java.lang.String, long, java.util.function.LongSupplier, java.util.function.Supplier<java.lang.Thread>, java.util.function.BooleanSupplier, java.util.function.Consumer<java.lang.String>);
    Code:
       0: new           #7                  // class net/openhft/chronicle/threads/internal/ThreadMonitorHarness
       3: dup
       4: new           #8                  // class net/openhft/chronicle/threads/internal/ThreadsThreadHolder
       7: dup
       8: aload_0
       9: lload_1
      10: aload_3
      11: aload         4
      13: aload         5
      15: aload         6
      17: invokespecial #11                 // Method net/openhft/chronicle/threads/internal/ThreadsThreadHolder."<init>":(Ljava/lang/String;JLjava/util/function/LongSupplier;Ljava/util/function/Supplier;Ljava/util/function/BooleanSupplier;Ljava/util/function/Consumer;)V
      20: invokespecial #12                 // Method net/openhft/chronicle/threads/internal/ThreadMonitorHarness."<init>":(Lnet/openhft/chronicle/threads/ThreadHolder;)V
      23: areturn

  public static net.openhft.chronicle.threads.ThreadMonitor forServices(java.lang.String, long, java.util.function.LongSupplier, java.util.function.Supplier<java.lang.Thread>);
    Code:
       0: new           #7                  // class net/openhft/chronicle/threads/internal/ThreadMonitorHarness
       3: dup
       4: new           #14                 // class net/openhft/chronicle/threads/internal/ServicesThreadHolder
       7: dup
       8: aload_0
       9: lload_1
      10: aload_3
      11: aload         4
      13: invokedynamic #15,  0             // InvokeDynamic #2:getAsBoolean:()Ljava/util/function/BooleanSupplier;
      18: invokestatic  #10                 // Method perfOn:()Ljava/util/function/Consumer;
      21: invokespecial #16                 // Method net/openhft/chronicle/threads/internal/ServicesThreadHolder."<init>":(Ljava/lang/String;JLjava/util/function/LongSupplier;Ljava/util/function/Supplier;Ljava/util/function/BooleanSupplier;Ljava/util/function/Consumer;)V
      24: invokespecial #12                 // Method net/openhft/chronicle/threads/internal/ThreadMonitorHarness."<init>":(Lnet/openhft/chronicle/threads/ThreadHolder;)V
      27: areturn

  public static net.openhft.chronicle.threads.ThreadMonitor forServices(java.lang.String, long, java.util.function.LongSupplier, java.util.function.Supplier<java.lang.Thread>, java.util.function.BooleanSupplier, java.util.function.Consumer<java.lang.String>);
    Code:
       0: new           #7                  // class net/openhft/chronicle/threads/internal/ThreadMonitorHarness
       3: dup
       4: new           #14                 // class net/openhft/chronicle/threads/internal/ServicesThreadHolder
       7: dup
       8: aload_0
       9: lload_1
      10: aload_3
      11: aload         4
      13: aload         5
      15: aload         6
      17: invokespecial #16                 // Method net/openhft/chronicle/threads/internal/ServicesThreadHolder."<init>":(Ljava/lang/String;JLjava/util/function/LongSupplier;Ljava/util/function/Supplier;Ljava/util/function/BooleanSupplier;Ljava/util/function/Consumer;)V
      20: invokespecial #12                 // Method net/openhft/chronicle/threads/internal/ThreadMonitorHarness."<init>":(Lnet/openhft/chronicle/threads/ThreadHolder;)V
      23: areturn

  private static boolean lambda$forServices$2();
    Code:
       0: iconst_1
       1: ireturn

  private static void lambda$perfOn$1(java.lang.String);
    Code:
       0: invokestatic  #17                 // Method net/openhft/chronicle/core/Jvm.perf:()Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
       3: ldc           #18                 // class net/openhft/chronicle/threads/ThreadMonitor
       5: aload_0
       6: invokeinterface #19,  3           // InterfaceMethod net/openhft/chronicle/core/onoes/ExceptionHandler.on:(Ljava/lang/Class;Ljava/lang/String;)V
      11: return

  private static boolean lambda$forThread$0();
    Code:
       0: iconst_1
       1: ireturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #4                  // class net/openhft/chronicle/threads/ThreadMonitors
       4: putstatic     #1                  // Field $VALUES:[Lnet/openhft/chronicle/threads/ThreadMonitors;
       7: return
}
