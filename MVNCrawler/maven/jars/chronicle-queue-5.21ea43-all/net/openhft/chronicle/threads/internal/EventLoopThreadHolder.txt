Compiled from "EventLoopThreadHolder.java"
public class net.openhft.chronicle.threads.internal.EventLoopThreadHolder implements net.openhft.chronicle.threads.ThreadHolder {
  private final net.openhft.chronicle.threads.CoreEventLoop eventLoop;

  private final long monitorIntervalNS;

  private long intervalToAddNS;

  private long printBlockTimeNS;

  public net.openhft.chronicle.threads.internal.EventLoopThreadHolder(long, net.openhft.chronicle.threads.CoreEventLoop);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: aload_0
       7: lload_1
       8: dup2_x1
       9: putfield      #2                  // Field printBlockTimeNS:J
      12: dup2_x1
      13: putfield      #3                  // Field intervalToAddNS:J
      16: putfield      #4                  // Field monitorIntervalNS:J
      19: aload_0
      20: aload_3
      21: putfield      #5                  // Field eventLoop:Lnet/openhft/chronicle/threads/CoreEventLoop;
      24: return

  public boolean isAlive();
    Code:
       0: aload_0
       1: getfield      #5                  // Field eventLoop:Lnet/openhft/chronicle/threads/CoreEventLoop;
       4: invokeinterface #6,  1            // InterfaceMethod net/openhft/chronicle/threads/CoreEventLoop.isAlive:()Z
       9: ireturn

  public void reportFinished();
    Code:
       0: invokestatic  #7                  // Method net/openhft/chronicle/core/Jvm.warn:()Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
       3: aload_0
       4: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       7: new           #9                  // class java/lang/StringBuilder
      10: dup
      11: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      14: ldc           #11                 // String Monitoring a task which has finished
      16: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #5                  // Field eventLoop:Lnet/openhft/chronicle/threads/CoreEventLoop;
      23: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      26: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokeinterface #15,  3           // InterfaceMethod net/openhft/chronicle/core/onoes/ExceptionHandler.on:(Ljava/lang/Class;Ljava/lang/String;)V
      34: return

  public long startedNS();
    Code:
       0: aload_0
       1: getfield      #5                  // Field eventLoop:Lnet/openhft/chronicle/threads/CoreEventLoop;
       4: invokeinterface #16,  1           // InterfaceMethod net/openhft/chronicle/threads/CoreEventLoop.loopStartNS:()J
       9: lreturn

  public void resetTimers();
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #4                  // Field monitorIntervalNS:J
       6: dup2_x1
       7: putfield      #2                  // Field printBlockTimeNS:J
      10: putfield      #3                  // Field intervalToAddNS:J
      13: return

  public boolean shouldLog(long);
    Code:
       0: lload_1
       1: aload_0
       2: invokevirtual #17                 // Method startedNS:()J
       5: lsub
       6: lstore_3
       7: lload_3
       8: aload_0
       9: getfield      #2                  // Field printBlockTimeNS:J
      12: lcmp
      13: iflt          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public void dumpThread(long, long);
    Code:
       0: lload_3
       1: lload_1
       2: lsub
       3: lstore        5
       5: aload_0
       6: getfield      #5                  // Field eventLoop:Lnet/openhft/chronicle/threads/CoreEventLoop;
       9: new           #9                  // class java/lang/StringBuilder
      12: dup
      13: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      16: aload_0
      17: getfield      #5                  // Field eventLoop:Lnet/openhft/chronicle/threads/CoreEventLoop;
      20: invokeinterface #18,  1           // InterfaceMethod net/openhft/chronicle/threads/CoreEventLoop.name:()Ljava/lang/String;
      25: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #19                 // String  thread has blocked for
      30: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: lload         5
      35: ldc2_w        #20                 // long 100000l
      38: ldiv
      39: l2d
      40: ldc2_w        #22                 // double 10.0d
      43: ddiv
      44: invokevirtual #24                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      47: ldc           #25                 // String  ms.
      49: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: aload_0
      56: lload_1
      57: invokedynamic #26,  0             // InvokeDynamic #0:getAsBoolean:(Lnet/openhft/chronicle/threads/internal/EventLoopThreadHolder;J)Ljava/util/function/BooleanSupplier;
      62: invokeinterface #27,  3           // InterfaceMethod net/openhft/chronicle/threads/CoreEventLoop.dumpRunningState:(Ljava/lang/String;Ljava/util/function/BooleanSupplier;)V
      67: aload_0
      68: dup
      69: getfield      #2                  // Field printBlockTimeNS:J
      72: aload_0
      73: getfield      #3                  // Field intervalToAddNS:J
      76: ladd
      77: putfield      #2                  // Field printBlockTimeNS:J
      80: aload_0
      81: ldc2_w        #28                 // double 1.41d
      84: aload_0
      85: getfield      #3                  // Field intervalToAddNS:J
      88: l2d
      89: dmul
      90: ldc2_w        #30                 // long 20l
      93: aload_0
      94: getfield      #4                  // Field monitorIntervalNS:J
      97: lmul
      98: l2d
      99: invokestatic  #32                 // Method java/lang/Math.min:(DD)D
     102: d2l
     103: putfield      #3                  // Field intervalToAddNS:J
     106: return

  public long timingTolerance();
    Code:
       0: aload_0
       1: getfield      #4                  // Field monitorIntervalNS:J
       4: aload_0
       5: invokevirtual #33                 // Method timingError:()J
       8: ladd
       9: lreturn

  protected long timingError();
    Code:
       0: getstatic     #34                 // Field TIMING_ERROR:I
       3: i2l
       4: lreturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field eventLoop:Lnet/openhft/chronicle/threads/CoreEventLoop;
       4: invokeinterface #18,  1           // InterfaceMethod net/openhft/chronicle/threads/CoreEventLoop.name:()Ljava/lang/String;
       9: areturn

  public void monitorThreadDelayed(long);
    Code:
       0: return

  private boolean lambda$dumpThread$0(long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field eventLoop:Lnet/openhft/chronicle/threads/CoreEventLoop;
       4: invokeinterface #16,  1           // InterfaceMethod net/openhft/chronicle/threads/CoreEventLoop.loopStartNS:()J
       9: lload_1
      10: lcmp
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn
}
