Compiled from "YieldingPauser.java"
public class net.openhft.chronicle.threads.YieldingPauser implements net.openhft.chronicle.threads.Pauser {
  private final int minBusy;

  private int count;

  private long timePaused;

  private long countPaused;

  private long yieldStart;

  public net.openhft.chronicle.threads.YieldingPauser(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field count:I
       9: aload_0
      10: lconst_0
      11: putfield      #3                  // Field timePaused:J
      14: aload_0
      15: lconst_0
      16: putfield      #4                  // Field countPaused:J
      19: aload_0
      20: lconst_0
      21: putfield      #5                  // Field yieldStart:J
      24: aload_0
      25: iload_1
      26: putfield      #6                  // Field minBusy:I
      29: return

  public void reset();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method checkYieldTime:()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field count:I
       9: return

  public void pause();
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field count:I
       5: iconst_1
       6: iadd
       7: putfield      #2                  // Field count:I
      10: aload_0
      11: getfield      #2                  // Field count:I
      14: aload_0
      15: getfield      #6                  // Field minBusy:I
      18: if_icmpge     25
      21: invokestatic  #8                  // Method net/openhft/chronicle/core/Jvm.safepoint:()V
      24: return
      25: aload_0
      26: invokespecial #9                  // Method yield:()V
      29: return

  private void checkYieldTime();
    Code:
       0: aload_0
       1: getfield      #5                  // Field yieldStart:J
       4: lconst_0
       5: lcmp
       6: ifle          43
       9: invokestatic  #10                 // Method java/lang/System.nanoTime:()J
      12: aload_0
      13: getfield      #5                  // Field yieldStart:J
      16: lsub
      17: lstore_1
      18: aload_0
      19: dup
      20: getfield      #3                  // Field timePaused:J
      23: lload_1
      24: ladd
      25: putfield      #3                  // Field timePaused:J
      28: aload_0
      29: dup
      30: getfield      #4                  // Field countPaused:J
      33: lconst_1
      34: ladd
      35: putfield      #4                  // Field countPaused:J
      38: aload_0
      39: lconst_0
      40: putfield      #5                  // Field yieldStart:J
      43: return

  private void yield();
    Code:
       0: aload_0
       1: getfield      #5                  // Field yieldStart:J
       4: lconst_0
       5: lcmp
       6: ifne          16
       9: aload_0
      10: invokestatic  #10                 // Method java/lang/System.nanoTime:()J
      13: putfield      #5                  // Field yieldStart:J
      16: invokestatic  #11                 // Method java/lang/Thread.yield:()V
      19: return

  public void unpause();
    Code:
       0: return

  public long timePaused();
    Code:
       0: aload_0
       1: getfield      #3                  // Field timePaused:J
       4: ldc2_w        #12                 // long 1000000l
       7: ldiv
       8: lreturn

  public long countPaused();
    Code:
       0: aload_0
       1: getfield      #4                  // Field countPaused:J
       4: lreturn
}
