Compiled from "Pauser.java"
public final class net.openhft.chronicle.threads.Pauser$SleepyWarning extends java.lang.Enum<net.openhft.chronicle.threads.Pauser$SleepyWarning> {
  private static final net.openhft.chronicle.threads.Pauser$SleepyWarning[] $VALUES;

  public static net.openhft.chronicle.threads.Pauser$SleepyWarning[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lnet/openhft/chronicle/threads/Pauser$SleepyWarning;
       3: invokevirtual #2                  // Method "[Lnet/openhft/chronicle/threads/Pauser$SleepyWarning;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lnet/openhft/chronicle/threads/Pauser$SleepyWarning;"
       9: areturn

  public static net.openhft.chronicle.threads.Pauser$SleepyWarning valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class net/openhft/chronicle/threads/Pauser$SleepyWarning
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class net/openhft/chronicle/threads/Pauser$SleepyWarning
       9: areturn

  private net.openhft.chronicle.threads.Pauser$SleepyWarning();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  static void warnSleepy();
    Code:
       0: return

  static {};
    Code:
       0: iconst_0
       1: anewarray     #4                  // class net/openhft/chronicle/threads/Pauser$SleepyWarning
       4: putstatic     #1                  // Field $VALUES:[Lnet/openhft/chronicle/threads/Pauser$SleepyWarning;
       7: getstatic     #7                  // Field net/openhft/chronicle/threads/Pauser.SLEEPY:Z
      10: ifeq          68
      13: invokestatic  #8                  // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      16: invokevirtual #9                  // Method java/lang/Runtime.availableProcessors:()I
      19: istore_0
      20: invokestatic  #10                 // Method net/openhft/chronicle/core/Jvm.perf:()Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
      23: ldc           #11                 // class net/openhft/chronicle/threads/Pauser
      25: new           #12                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #14                 // String Using Pauser.sleepy() as not enough processors, have
      34: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: iload_0
      38: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      41: ldc           #17                 // String , needs
      43: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: getstatic     #18                 // Field net/openhft/chronicle/threads/Pauser.MIN_PROCESSORS:I
      49: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      52: ldc           #19                 // String +
      54: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokeinterface #21,  3           // InterfaceMethod net/openhft/chronicle/core/onoes/ExceptionHandler.on:(Ljava/lang/Class;Ljava/lang/String;)V
      65: goto          128
      68: getstatic     #22                 // Field net/openhft/chronicle/threads/Pauser.BALANCED:Z
      71: ifeq          128
      74: invokestatic  #8                  // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      77: invokevirtual #9                  // Method java/lang/Runtime.availableProcessors:()I
      80: istore_0
      81: invokestatic  #10                 // Method net/openhft/chronicle/core/Jvm.perf:()Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
      84: ldc           #11                 // class net/openhft/chronicle/threads/Pauser
      86: new           #12                 // class java/lang/StringBuilder
      89: dup
      90: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      93: ldc           #23                 // String Using Pauser.balanced() as not enough processors, have
      95: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: iload_0
      99: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     102: ldc           #17                 // String , needs
     104: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: getstatic     #18                 // Field net/openhft/chronicle/threads/Pauser.MIN_PROCESSORS:I
     110: iconst_2
     111: imul
     112: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     115: ldc           #19                 // String +
     117: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: invokeinterface #21,  3           // InterfaceMethod net/openhft/chronicle/core/onoes/ExceptionHandler.on:(Ljava/lang/Class;Ljava/lang/String;)V
     128: return
}
