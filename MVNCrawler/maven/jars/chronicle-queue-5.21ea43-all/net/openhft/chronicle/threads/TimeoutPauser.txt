Compiled from "TimeoutPauser.java"
public class net.openhft.chronicle.threads.TimeoutPauser implements net.openhft.chronicle.threads.Pauser,net.openhft.chronicle.threads.TimingPauser {
  private final int minBusy;

  private int count;

  private long timePaused;

  private long countPaused;

  private long yieldStart;

  private long timeOutStart;

  public net.openhft.chronicle.threads.TimeoutPauser(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field count:I
       9: aload_0
      10: lconst_0
      11: putfield      #3                  // Field timePaused:J
      14: aload_0
      15: lconst_0
      16: putfield      #4                  // Field countPaused:J
      19: aload_0
      20: lconst_0
      21: putfield      #5                  // Field yieldStart:J
      24: aload_0
      25: ldc2_w        #7                  // long 9223372036854775807l
      28: putfield      #9                  // Field timeOutStart:J
      31: aload_0
      32: iload_1
      33: putfield      #10                 // Field minBusy:I
      36: return

  public void reset();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method checkYieldTime:()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field count:I
       9: aload_0
      10: ldc2_w        #7                  // long 9223372036854775807l
      13: putfield      #9                  // Field timeOutStart:J
      16: return

  public void pause();
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field count:I
       5: iconst_1
       6: iadd
       7: putfield      #2                  // Field count:I
      10: aload_0
      11: getfield      #2                  // Field count:I
      14: aload_0
      15: getfield      #10                 // Field minBusy:I
      18: if_icmpge     22
      21: return
      22: aload_0
      23: invokespecial #12                 // Method yield:()V
      26: aload_0
      27: invokespecial #11                 // Method checkYieldTime:()V
      30: return

  public void pause(long, java.util.concurrent.TimeUnit) throws java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field count:I
       5: iconst_1
       6: iadd
       7: putfield      #2                  // Field count:I
      10: aload_0
      11: getfield      #2                  // Field count:I
      14: aload_0
      15: getfield      #10                 // Field minBusy:I
      18: if_icmpge     22
      21: return
      22: aload_0
      23: invokespecial #12                 // Method yield:()V
      26: aload_0
      27: getfield      #9                  // Field timeOutStart:J
      30: ldc2_w        #7                  // long 9223372036854775807l
      33: lcmp
      34: ifne          47
      37: aload_0
      38: invokestatic  #13                 // Method java/lang/System.nanoTime:()J
      41: putfield      #9                  // Field timeOutStart:J
      44: goto          74
      47: aload_0
      48: getfield      #9                  // Field timeOutStart:J
      51: aload_3
      52: lload_1
      53: invokevirtual #14                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      56: ladd
      57: invokestatic  #13                 // Method java/lang/System.nanoTime:()J
      60: lsub
      61: lconst_0
      62: lcmp
      63: ifge          74
      66: new           #15                 // class java/util/concurrent/TimeoutException
      69: dup
      70: invokespecial #16                 // Method java/util/concurrent/TimeoutException."<init>":()V
      73: athrow
      74: aload_0
      75: invokespecial #11                 // Method checkYieldTime:()V
      78: return

  private void checkYieldTime();
    Code:
       0: aload_0
       1: getfield      #5                  // Field yieldStart:J
       4: lconst_0
       5: lcmp
       6: ifle          43
       9: invokestatic  #13                 // Method java/lang/System.nanoTime:()J
      12: aload_0
      13: getfield      #5                  // Field yieldStart:J
      16: lsub
      17: lstore_1
      18: aload_0
      19: dup
      20: getfield      #3                  // Field timePaused:J
      23: lload_1
      24: ladd
      25: putfield      #3                  // Field timePaused:J
      28: aload_0
      29: dup
      30: getfield      #4                  // Field countPaused:J
      33: lconst_1
      34: ladd
      35: putfield      #4                  // Field countPaused:J
      38: aload_0
      39: lconst_0
      40: putfield      #5                  // Field yieldStart:J
      43: return

  private void yield();
    Code:
       0: aload_0
       1: getfield      #5                  // Field yieldStart:J
       4: lconst_0
       5: lcmp
       6: ifne          16
       9: aload_0
      10: invokestatic  #13                 // Method java/lang/System.nanoTime:()J
      13: putfield      #5                  // Field yieldStart:J
      16: invokestatic  #17                 // Method java/lang/Thread.yield:()V
      19: return

  public void unpause();
    Code:
       0: return

  public long timePaused();
    Code:
       0: aload_0
       1: getfield      #3                  // Field timePaused:J
       4: ldc2_w        #18                 // long 1000000l
       7: ldiv
       8: lreturn

  public long countPaused();
    Code:
       0: aload_0
       1: getfield      #4                  // Field countPaused:J
       4: lreturn
}
