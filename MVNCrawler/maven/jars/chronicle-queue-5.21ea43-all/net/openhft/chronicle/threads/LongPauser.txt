Compiled from "LongPauser.java"
public class net.openhft.chronicle.threads.LongPauser implements net.openhft.chronicle.threads.Pauser,net.openhft.chronicle.threads.TimingPauser {
  private static final java.lang.String SHOW_PAUSES;

  private final long minPauseTimeNS;

  private final long maxPauseTimeNS;

  private final java.util.concurrent.atomic.AtomicBoolean pausing;

  private final int minBusy;

  private final int minCount;

  private int count;

  private long pauseTimeNS;

  private long timePaused;

  private long countPaused;

  private volatile java.lang.Thread thread;

  private long yieldStart;

  private long timeOutStart;

  private long pauseUntilNS;

  public net.openhft.chronicle.threads.LongPauser(int, int, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      12: putfield      #4                  // Field pausing:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field count:I
      20: aload_0
      21: lconst_0
      22: putfield      #6                  // Field timePaused:J
      25: aload_0
      26: lconst_0
      27: putfield      #7                  // Field countPaused:J
      30: aload_0
      31: aconst_null
      32: putfield      #8                  // Field thread:Ljava/lang/Thread;
      35: aload_0
      36: lconst_0
      37: putfield      #9                  // Field yieldStart:J
      40: aload_0
      41: ldc2_w        #11                 // long 9223372036854775807l
      44: putfield      #13                 // Field timeOutStart:J
      47: aload_0
      48: lconst_0
      49: putfield      #14                 // Field pauseUntilNS:J
      52: aload_0
      53: iload_1
      54: putfield      #15                 // Field minBusy:I
      57: aload_0
      58: iload_2
      59: putfield      #16                 // Field minCount:I
      62: aload_0
      63: aload         7
      65: lload_3
      66: invokevirtual #17                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      69: putfield      #18                 // Field minPauseTimeNS:J
      72: aload_0
      73: aload         7
      75: lload         5
      77: invokevirtual #17                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      80: putfield      #19                 // Field maxPauseTimeNS:J
      83: aload_0
      84: aload_0
      85: getfield      #18                 // Field minPauseTimeNS:J
      88: putfield      #20                 // Field pauseTimeNS:J
      91: return

  public void reset();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method checkYieldTime:()V
       4: aload_0
       5: aload_0
       6: getfield      #18                 // Field minPauseTimeNS:J
       9: putfield      #20                 // Field pauseTimeNS:J
      12: aload_0
      13: iconst_0
      14: putfield      #5                  // Field count:I
      17: aload_0
      18: ldc2_w        #11                 // long 9223372036854775807l
      21: putfield      #13                 // Field timeOutStart:J
      24: return

  public void pause();
    Code:
       0: aload_0
       1: dup
       2: getfield      #5                  // Field count:I
       5: iconst_1
       6: iadd
       7: putfield      #5                  // Field count:I
      10: aload_0
      11: getfield      #5                  // Field count:I
      14: aload_0
      15: getfield      #15                 // Field minBusy:I
      18: if_icmpge     25
      21: invokestatic  #22                 // Method net/openhft/chronicle/core/Jvm.nanoPause:()V
      24: return
      25: aload_0
      26: invokespecial #21                 // Method checkYieldTime:()V
      29: aload_0
      30: getfield      #5                  // Field count:I
      33: aload_0
      34: getfield      #15                 // Field minBusy:I
      37: aload_0
      38: getfield      #16                 // Field minCount:I
      41: iadd
      42: if_icmpgt     50
      45: aload_0
      46: invokespecial #23                 // Method yield:()V
      49: return
      50: getstatic     #24                 // Field SHOW_PAUSES:Ljava/lang/String;
      53: ifnull        60
      56: aload_0
      57: invokespecial #25                 // Method showPauses:()V
      60: aload_0
      61: aload_0
      62: getfield      #20                 // Field pauseTimeNS:J
      65: invokevirtual #26                 // Method doPause:(J)V
      68: aload_0
      69: aload_0
      70: getfield      #19                 // Field maxPauseTimeNS:J
      73: aload_0
      74: getfield      #20                 // Field pauseTimeNS:J
      77: aload_0
      78: getfield      #20                 // Field pauseTimeNS:J
      81: bipush        6
      83: lshr
      84: ladd
      85: ldc2_w        #27                 // long 20000l
      88: ladd
      89: invokestatic  #29                 // Method java/lang/Math.min:(JJ)J
      92: putfield      #20                 // Field pauseTimeNS:J
      95: return

  public void asyncPause();
    Code:
       0: aload_0
       1: lconst_0
       2: putfield      #14                 // Field pauseUntilNS:J
       5: aload_0
       6: dup
       7: getfield      #5                  // Field count:I
      10: iconst_1
      11: iadd
      12: putfield      #5                  // Field count:I
      15: aload_0
      16: getfield      #5                  // Field count:I
      19: aload_0
      20: getfield      #15                 // Field minBusy:I
      23: if_icmpge     27
      26: return
      27: aload_0
      28: invokespecial #21                 // Method checkYieldTime:()V
      31: aload_0
      32: getfield      #5                  // Field count:I
      35: aload_0
      36: getfield      #15                 // Field minBusy:I
      39: aload_0
      40: getfield      #16                 // Field minCount:I
      43: iadd
      44: if_icmpgt     48
      47: return
      48: aload_0
      49: invokestatic  #30                 // Method java/lang/System.nanoTime:()J
      52: aload_0
      53: getfield      #20                 // Field pauseTimeNS:J
      56: ladd
      57: putfield      #14                 // Field pauseUntilNS:J
      60: aload_0
      61: aload_0
      62: getfield      #19                 // Field maxPauseTimeNS:J
      65: aload_0
      66: getfield      #20                 // Field pauseTimeNS:J
      69: aload_0
      70: getfield      #20                 // Field pauseTimeNS:J
      73: bipush        6
      75: lshr
      76: ladd
      77: ldc2_w        #27                 // long 20000l
      80: ladd
      81: invokestatic  #29                 // Method java/lang/Math.min:(JJ)J
      84: putfield      #20                 // Field pauseTimeNS:J
      87: return

  public boolean asyncPausing();
    Code:
       0: aload_0
       1: getfield      #14                 // Field pauseUntilNS:J
       4: invokestatic  #30                 // Method java/lang/System.nanoTime:()J
       7: lcmp
       8: ifle          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  private void showPauses();
    Code:
       0: invokestatic  #31                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: invokevirtual #32                 // Method java/lang/Thread.getName:()Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: getstatic     #24                 // Field SHOW_PAUSES:Ljava/lang/String;
      11: invokevirtual #33                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      14: ifeq          60
      17: invokestatic  #34                 // Method net/openhft/chronicle/core/Jvm.perf:()Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
      20: aload_0
      21: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      24: new           #36                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #38                 // String  paused for
      33: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #20                 // Field pauseTimeNS:J
      40: ldc2_w        #40                 // long 1000l
      43: ldiv
      44: invokevirtual #42                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      47: ldc           #43                 // String  us.
      49: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokeinterface #45,  3           // InterfaceMethod net/openhft/chronicle/core/onoes/ExceptionHandler.on:(Ljava/lang/Class;Ljava/lang/String;)V
      60: return

  public void pause(long, java.util.concurrent.TimeUnit) throws java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #5                  // Field count:I
       5: iconst_1
       6: iadd
       7: putfield      #5                  // Field count:I
      10: aload_0
      11: getfield      #5                  // Field count:I
      14: aload_0
      15: getfield      #15                 // Field minBusy:I
      18: if_icmpge     22
      21: return
      22: aload_0
      23: getfield      #5                  // Field count:I
      26: aload_0
      27: getfield      #15                 // Field minBusy:I
      30: aload_0
      31: getfield      #16                 // Field minCount:I
      34: iadd
      35: if_icmpgt     43
      38: aload_0
      39: invokespecial #23                 // Method yield:()V
      42: return
      43: aload_0
      44: getfield      #13                 // Field timeOutStart:J
      47: ldc2_w        #11                 // long 9223372036854775807l
      50: lcmp
      51: ifne          64
      54: aload_0
      55: invokestatic  #30                 // Method java/lang/System.nanoTime:()J
      58: putfield      #13                 // Field timeOutStart:J
      61: goto          91
      64: aload_0
      65: getfield      #13                 // Field timeOutStart:J
      68: aload_3
      69: lload_1
      70: invokevirtual #17                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      73: ladd
      74: invokestatic  #30                 // Method java/lang/System.nanoTime:()J
      77: lsub
      78: lconst_0
      79: lcmp
      80: ifge          91
      83: new           #46                 // class java/util/concurrent/TimeoutException
      86: dup
      87: invokespecial #47                 // Method java/util/concurrent/TimeoutException."<init>":()V
      90: athrow
      91: aload_0
      92: invokespecial #21                 // Method checkYieldTime:()V
      95: aload_0
      96: aload_0
      97: getfield      #20                 // Field pauseTimeNS:J
     100: invokevirtual #26                 // Method doPause:(J)V
     103: aload_0
     104: aload_0
     105: getfield      #19                 // Field maxPauseTimeNS:J
     108: aload_0
     109: getfield      #20                 // Field pauseTimeNS:J
     112: aload_0
     113: getfield      #20                 // Field pauseTimeNS:J
     116: bipush        7
     118: lshr
     119: ladd
     120: ldc2_w        #48                 // long 10000l
     123: ladd
     124: invokestatic  #29                 // Method java/lang/Math.min:(JJ)J
     127: putfield      #20                 // Field pauseTimeNS:J
     130: return

  private void checkYieldTime();
    Code:
       0: aload_0
       1: getfield      #9                  // Field yieldStart:J
       4: lconst_0
       5: lcmp
       6: ifle          43
       9: invokestatic  #30                 // Method java/lang/System.nanoTime:()J
      12: aload_0
      13: getfield      #9                  // Field yieldStart:J
      16: lsub
      17: lstore_1
      18: aload_0
      19: dup
      20: getfield      #6                  // Field timePaused:J
      23: lload_1
      24: ladd
      25: putfield      #6                  // Field timePaused:J
      28: aload_0
      29: dup
      30: getfield      #7                  // Field countPaused:J
      33: lconst_1
      34: ladd
      35: putfield      #7                  // Field countPaused:J
      38: aload_0
      39: lconst_0
      40: putfield      #9                  // Field yieldStart:J
      43: return

  private void yield();
    Code:
       0: aload_0
       1: getfield      #9                  // Field yieldStart:J
       4: lconst_0
       5: lcmp
       6: ifne          16
       9: aload_0
      10: invokestatic  #30                 // Method java/lang/System.nanoTime:()J
      13: putfield      #9                  // Field yieldStart:J
      16: invokestatic  #50                 // Method java/lang/Thread.yield:()V
      19: return

  void doPause(long);
    Code:
       0: invokestatic  #30                 // Method java/lang/System.nanoTime:()J
       3: lstore_3
       4: aload_0
       5: invokestatic  #31                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       8: putfield      #8                  // Field thread:Ljava/lang/Thread;
      11: aload_0
      12: getfield      #4                  // Field pausing:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: iconst_1
      16: invokevirtual #51                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      19: invokestatic  #31                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      22: invokevirtual #52                 // Method java/lang/Thread.isInterrupted:()Z
      25: ifne          51
      28: lload_1
      29: ldc2_w        #53                 // long 1000000l
      32: lcmp
      33: iflt          47
      36: lload_1
      37: ldc2_w        #53                 // long 1000000l
      40: ldiv
      41: invokestatic  #55                 // Method net/openhft/chronicle/core/Jvm.pause:(J)V
      44: goto          51
      47: lload_1
      48: invokestatic  #56                 // Method java/util/concurrent/locks/LockSupport.parkNanos:(J)V
      51: aload_0
      52: getfield      #4                  // Field pausing:Ljava/util/concurrent/atomic/AtomicBoolean;
      55: iconst_0
      56: invokevirtual #51                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      59: invokestatic  #30                 // Method java/lang/System.nanoTime:()J
      62: lload_3
      63: lsub
      64: lstore        5
      66: aload_0
      67: dup
      68: getfield      #6                  // Field timePaused:J
      71: lload         5
      73: ladd
      74: putfield      #6                  // Field timePaused:J
      77: aload_0
      78: dup
      79: getfield      #7                  // Field countPaused:J
      82: lconst_1
      83: ladd
      84: putfield      #7                  // Field countPaused:J
      87: return

  public void unpause();
    Code:
       0: aload_0
       1: getfield      #8                  // Field thread:Ljava/lang/Thread;
       4: astore_1
       5: aload_1
       6: ifnull        23
       9: aload_0
      10: getfield      #4                  // Field pausing:Ljava/util/concurrent/atomic/AtomicBoolean;
      13: invokevirtual #57                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      16: ifeq          23
      19: aload_1
      20: invokestatic  #58                 // Method java/util/concurrent/locks/LockSupport.unpark:(Ljava/lang/Thread;)V
      23: return

  public long timePaused();
    Code:
       0: aload_0
       1: getfield      #6                  // Field timePaused:J
       4: ldc2_w        #53                 // long 1000000l
       7: ldiv
       8: lreturn

  public long countPaused();
    Code:
       0: aload_0
       1: getfield      #7                  // Field countPaused:J
       4: lreturn

  static {};
    Code:
       0: ldc           #59                 // String pauses.show
       2: invokestatic  #60                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: putstatic     #24                 // Field SHOW_PAUSES:Ljava/lang/String;
       8: return
}
