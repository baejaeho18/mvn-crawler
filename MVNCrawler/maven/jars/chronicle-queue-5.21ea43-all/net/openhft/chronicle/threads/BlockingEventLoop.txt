Compiled from "BlockingEventLoop.java"
public class net.openhft.chronicle.threads.BlockingEventLoop extends net.openhft.chronicle.core.io.SimpleCloseable implements net.openhft.chronicle.core.threads.EventLoop {
  private static final org.slf4j.Logger LOG;

  private final net.openhft.chronicle.core.threads.EventLoop parent;

  private final java.util.concurrent.ExecutorService service;

  private final java.lang.String name;

  private final java.util.concurrent.atomic.AtomicBoolean started;

  private final java.util.List<net.openhft.chronicle.core.threads.EventHandler> handlers;

  private final net.openhft.chronicle.threads.NamedThreadFactory threadFactory;

  private final net.openhft.chronicle.threads.Pauser pauser;

  public net.openhft.chronicle.threads.BlockingEventLoop(net.openhft.chronicle.core.threads.EventLoop, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method net/openhft/chronicle/core/io/SimpleCloseable."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      12: putfield      #9                  // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: aload_0
      16: new           #10                 // class java/util/ArrayList
      19: dup
      20: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      23: putfield      #1                  // Field handlers:Ljava/util/List;
      26: aload_0
      27: invokestatic  #12                 // InterfaceMethod net/openhft/chronicle/threads/Pauser.balanced:()Lnet/openhft/chronicle/threads/TimingPauser;
      30: putfield      #4                  // Field pauser:Lnet/openhft/chronicle/threads/Pauser;
      33: aload_0
      34: aload_2
      35: putfield      #13                 // Field name:Ljava/lang/String;
      38: aload_0
      39: aload_1
      40: putfield      #5                  // Field parent:Lnet/openhft/chronicle/core/threads/EventLoop;
      43: aload_0
      44: new           #14                 // class net/openhft/chronicle/threads/NamedThreadFactory
      47: dup
      48: aload_2
      49: invokespecial #15                 // Method net/openhft/chronicle/threads/NamedThreadFactory."<init>":(Ljava/lang/String;)V
      52: putfield      #16                 // Field threadFactory:Lnet/openhft/chronicle/threads/NamedThreadFactory;
      55: aload_0
      56: aload_0
      57: getfield      #16                 // Field threadFactory:Lnet/openhft/chronicle/threads/NamedThreadFactory;
      60: invokestatic  #17                 // Method java/util/concurrent/Executors.newCachedThreadPool:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;
      63: putfield      #18                 // Field service:Ljava/util/concurrent/ExecutorService;
      66: return

  public net.openhft.chronicle.threads.BlockingEventLoop(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method net/openhft/chronicle/core/io/SimpleCloseable."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      12: putfield      #9                  // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: aload_0
      16: new           #10                 // class java/util/ArrayList
      19: dup
      20: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      23: putfield      #1                  // Field handlers:Ljava/util/List;
      26: aload_0
      27: invokestatic  #12                 // InterfaceMethod net/openhft/chronicle/threads/Pauser.balanced:()Lnet/openhft/chronicle/threads/TimingPauser;
      30: putfield      #4                  // Field pauser:Lnet/openhft/chronicle/threads/Pauser;
      33: aload_0
      34: aload_1
      35: putfield      #13                 // Field name:Ljava/lang/String;
      38: aload_0
      39: aload_0
      40: putfield      #5                  // Field parent:Lnet/openhft/chronicle/core/threads/EventLoop;
      43: aload_0
      44: new           #14                 // class net/openhft/chronicle/threads/NamedThreadFactory
      47: dup
      48: aload_1
      49: invokespecial #15                 // Method net/openhft/chronicle/threads/NamedThreadFactory."<init>":(Ljava/lang/String;)V
      52: putfield      #16                 // Field threadFactory:Lnet/openhft/chronicle/threads/NamedThreadFactory;
      55: aload_0
      56: aload_0
      57: getfield      #16                 // Field threadFactory:Lnet/openhft/chronicle/threads/NamedThreadFactory;
      60: invokestatic  #17                 // Method java/util/concurrent/Executors.newCachedThreadPool:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;
      63: putfield      #18                 // Field service:Ljava/util/concurrent/ExecutorService;
      66: return

  public void awaitTermination();
    Code:
       0: aload_0
       1: getfield      #18                 // Field service:Ljava/util/concurrent/ExecutorService;
       4: ldc2_w        #20                 // long 9223372036854775807l
       7: getstatic     #22                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      10: invokeinterface #23,  4           // InterfaceMethod java/util/concurrent/ExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      15: pop
      16: goto          26
      19: astore_1
      20: invokestatic  #25                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      23: invokevirtual #26                 // Method java/lang/Thread.interrupt:()V
      26: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/InterruptedException

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #13                 // Field name:Ljava/lang/String;
       4: areturn

  public synchronized void addHandler(net.openhft.chronicle.core.threads.EventHandler);
    Code:
       0: getstatic     #27                 // Field DEBUG_ADDING_HANDLERS:Z
       3: ifeq          57
       6: getstatic     #28                 // Field java/lang/System.out:Ljava/io/PrintStream;
       9: new           #29                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #31                 // String Adding
      18: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_1
      22: invokeinterface #33,  1           // InterfaceMethod net/openhft/chronicle/core/threads/EventHandler.priority:()Lnet/openhft/chronicle/core/threads/HandlerPriority;
      27: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: ldc           #35                 // String
      32: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_1
      36: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: ldc           #36                 // String  to
      41: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: getfield      #13                 // Field name:Ljava/lang/String;
      48: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokevirtual #38                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      57: aload_0
      58: invokevirtual #39                 // Method isClosed:()Z
      61: ifeq          74
      64: new           #40                 // class java/lang/IllegalStateException
      67: dup
      68: ldc           #41                 // String Event Group has been closed
      70: invokespecial #42                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: aload_0
      75: getfield      #1                  // Field handlers:Ljava/util/List;
      78: aload_1
      79: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      84: pop
      85: aload_0
      86: getfield      #9                  // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      89: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      92: ifeq          100
      95: aload_0
      96: aload_1
      97: invokespecial #45                 // Method startHandler:(Lnet/openhft/chronicle/core/threads/EventHandler;)V
     100: return

  private java.lang.String asString(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #46                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
       4: invokestatic  #47                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
       7: areturn

  public synchronized void start();
    Code:
       0: aload_0
       1: getfield      #9                  // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #48                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: aload_0
       9: getfield      #1                  // Field handlers:Ljava/util/List;
      12: aload_0
      13: invokedynamic #49,  0             // InvokeDynamic #0:accept:(Lnet/openhft/chronicle/threads/BlockingEventLoop;)Ljava/util/function/Consumer;
      18: invokeinterface #50,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      23: return

  private void startHandler(net.openhft.chronicle.core.threads.EventHandler);
    Code:
       0: aload_0
       1: getfield      #18                 // Field service:Ljava/util/concurrent/ExecutorService;
       4: new           #51                 // class net/openhft/chronicle/threads/BlockingEventLoop$Runner
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #52                 // Method net/openhft/chronicle/threads/BlockingEventLoop$Runner."<init>":(Lnet/openhft/chronicle/threads/BlockingEventLoop;Lnet/openhft/chronicle/core/threads/EventHandler;)V
      13: invokeinterface #53,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
      18: pop
      19: goto          48
      22: astore_2
      23: aload_0
      24: getfield      #18                 // Field service:Ljava/util/concurrent/ExecutorService;
      27: invokeinterface #55,  1           // InterfaceMethod java/util/concurrent/ExecutorService.isShutdown:()Z
      32: ifne          48
      35: invokestatic  #56                 // Method net/openhft/chronicle/core/Jvm.warn:()Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
      38: aload_0
      39: invokevirtual #57                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      42: aload_2
      43: invokeinterface #58,  3           // InterfaceMethod net/openhft/chronicle/core/onoes/ExceptionHandler.on:(Ljava/lang/Class;Ljava/lang/Throwable;)V
      48: return
    Exception table:
       from    to  target type
           0    19    22   Class java/util/concurrent/RejectedExecutionException

  public void unpause();
    Code:
       0: aload_0
       1: getfield      #18                 // Field service:Ljava/util/concurrent/ExecutorService;
       4: invokestatic  #59                 // Method net/openhft/chronicle/threads/Threads.unpark:(Ljava/util/concurrent/ExecutorService;)V
       7: return

  public void stop();
    Code:
       0: aload_0
       1: getfield      #18                 // Field service:Ljava/util/concurrent/ExecutorService;
       4: invokeinterface #60,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdownNow:()Ljava/util/List;
       9: pop
      10: aload_0
      11: invokevirtual #61                 // Method unpause:()V
      14: return

  public boolean isAlive();
    Code:
       0: aload_0
       1: getfield      #18                 // Field service:Ljava/util/concurrent/ExecutorService;
       4: invokeinterface #55,  1           // InterfaceMethod java/util/concurrent/ExecutorService.isShutdown:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  protected void performClose();
    Code:
       0: aload_0
       1: invokespecial #62                 // Method net/openhft/chronicle/core/io/SimpleCloseable.performClose:()V
       4: aload_0
       5: getfield      #16                 // Field threadFactory:Lnet/openhft/chronicle/threads/NamedThreadFactory;
       8: invokevirtual #63                 // Method net/openhft/chronicle/threads/NamedThreadFactory.interruptAll:()V
      11: aload_0
      12: getfield      #18                 // Field service:Ljava/util/concurrent/ExecutorService;
      15: invokestatic  #64                 // Method net/openhft/chronicle/threads/Threads.shutdown:(Ljava/util/concurrent/ExecutorService;)V
      18: aload_0
      19: getfield      #9                  // Field started:Ljava/util/concurrent/atomic/AtomicBoolean;
      22: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      25: ifne          42
      28: aload_0
      29: getfield      #1                  // Field handlers:Ljava/util/List;
      32: invokedynamic #65,  0             // InvokeDynamic #1:accept:()Ljava/util/function/Consumer;
      37: invokeinterface #50,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      42: aload_0
      43: getfield      #1                  // Field handlers:Ljava/util/List;
      46: invokestatic  #66                 // InterfaceMethod net/openhft/chronicle/core/io/Closeable.closeQuietly:(Ljava/lang/Object;)V
      49: return

  public java.lang.String toString();
    Code:
       0: new           #29                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #67                 // String BlockingEventLoop{name=
       9: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #13                 // Field name:Ljava/lang/String;
      16: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: bipush        125
      21: invokevirtual #68                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  static net.openhft.chronicle.core.threads.EventLoop access$000(net.openhft.chronicle.threads.BlockingEventLoop);
    Code:
       0: aload_0
       1: getfield      #5                  // Field parent:Lnet/openhft/chronicle/core/threads/EventLoop;
       4: areturn

  static net.openhft.chronicle.threads.Pauser access$100(net.openhft.chronicle.threads.BlockingEventLoop);
    Code:
       0: aload_0
       1: getfield      #4                  // Field pauser:Lnet/openhft/chronicle/threads/Pauser;
       4: areturn

  static java.lang.String access$200(net.openhft.chronicle.threads.BlockingEventLoop, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method asString:(Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  static org.slf4j.Logger access$300();
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static java.util.List access$400(net.openhft.chronicle.threads.BlockingEventLoop);
    Code:
       0: aload_0
       1: getfield      #1                  // Field handlers:Ljava/util/List;
       4: areturn

  static {};
    Code:
       0: ldc           #69                 // class net/openhft/chronicle/threads/BlockingEventLoop
       2: invokestatic  #70                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
