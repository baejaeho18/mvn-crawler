Compiled from "QueueOffsetSpec.java"
public final class net.openhft.chronicle.queue.QueueOffsetSpec {
  private static final java.lang.String TOKEN_DELIMITER;

  private final net.openhft.chronicle.queue.QueueOffsetSpec$Type type;

  private final java.lang.String[] spec;

  private net.openhft.chronicle.queue.QueueOffsetSpec(net.openhft.chronicle.queue.QueueOffsetSpec$Type, java.lang.String[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field type:Lnet/openhft/chronicle/queue/QueueOffsetSpec$Type;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field spec:[Ljava/lang/String;
      14: return

  public static net.openhft.chronicle.queue.QueueOffsetSpec ofEpoch(long);
    Code:
       0: new           #4                  // class net/openhft/chronicle/queue/QueueOffsetSpec
       3: dup
       4: getstatic     #5                  // Field net/openhft/chronicle/queue/QueueOffsetSpec$Type.EPOCH:Lnet/openhft/chronicle/queue/QueueOffsetSpec$Type;
       7: iconst_1
       8: anewarray     #6                  // class java/lang/String
      11: dup
      12: iconst_0
      13: lload_0
      14: invokestatic  #7                  // Method java/lang/Long.toString:(J)Ljava/lang/String;
      17: aastore
      18: invokespecial #8                  // Method "<init>":(Lnet/openhft/chronicle/queue/QueueOffsetSpec$Type;[Ljava/lang/String;)V
      21: areturn

  public static net.openhft.chronicle.queue.QueueOffsetSpec ofRollTime(java.time.LocalTime, java.time.ZoneId);
    Code:
       0: new           #4                  // class net/openhft/chronicle/queue/QueueOffsetSpec
       3: dup
       4: getstatic     #9                  // Field net/openhft/chronicle/queue/QueueOffsetSpec$Type.ROLL_TIME:Lnet/openhft/chronicle/queue/QueueOffsetSpec$Type;
       7: iconst_2
       8: anewarray     #6                  // class java/lang/String
      11: dup
      12: iconst_0
      13: aload_0
      14: invokevirtual #10                 // Method java/time/LocalTime.toString:()Ljava/lang/String;
      17: aastore
      18: dup
      19: iconst_1
      20: aload_1
      21: invokevirtual #11                 // Method java/time/ZoneId.toString:()Ljava/lang/String;
      24: aastore
      25: invokespecial #8                  // Method "<init>":(Lnet/openhft/chronicle/queue/QueueOffsetSpec$Type;[Ljava/lang/String;)V
      28: areturn

  public static net.openhft.chronicle.queue.QueueOffsetSpec ofNone();
    Code:
       0: new           #4                  // class net/openhft/chronicle/queue/QueueOffsetSpec
       3: dup
       4: getstatic     #12                 // Field net/openhft/chronicle/queue/QueueOffsetSpec$Type.NONE:Lnet/openhft/chronicle/queue/QueueOffsetSpec$Type;
       7: iconst_0
       8: anewarray     #6                  // class java/lang/String
      11: invokespecial #8                  // Method "<init>":(Lnet/openhft/chronicle/queue/QueueOffsetSpec$Type;[Ljava/lang/String;)V
      14: areturn

  public static net.openhft.chronicle.queue.QueueOffsetSpec parse(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #13                 // String ;
       3: invokevirtual #14                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: iconst_0
       9: aaload
      10: invokestatic  #15                 // Method net/openhft/chronicle/queue/QueueOffsetSpec$Type.valueOf:(Ljava/lang/String;)Lnet/openhft/chronicle/queue/QueueOffsetSpec$Type;
      13: astore_2
      14: getstatic     #16                 // Field net/openhft/chronicle/queue/QueueOffsetSpec$1.$SwitchMap$net$openhft$chronicle$queue$QueueOffsetSpec$Type:[I
      17: aload_2
      18: invokevirtual #17                 // Method net/openhft/chronicle/queue/QueueOffsetSpec$Type.ordinal:()I
      21: iaload
      22: tableswitch   { // 1 to 3
                     1: 48
                     2: 72
                     3: 102
               default: 120
          }
      48: aload_1
      49: iconst_2
      50: invokestatic  #18                 // Method expectArgs:([Ljava/lang/String;I)V
      53: new           #4                  // class net/openhft/chronicle/queue/QueueOffsetSpec
      56: dup
      57: aload_2
      58: iconst_1
      59: anewarray     #6                  // class java/lang/String
      62: dup
      63: iconst_0
      64: aload_1
      65: iconst_1
      66: aaload
      67: aastore
      68: invokespecial #8                  // Method "<init>":(Lnet/openhft/chronicle/queue/QueueOffsetSpec$Type;[Ljava/lang/String;)V
      71: areturn
      72: aload_1
      73: iconst_3
      74: invokestatic  #18                 // Method expectArgs:([Ljava/lang/String;I)V
      77: new           #4                  // class net/openhft/chronicle/queue/QueueOffsetSpec
      80: dup
      81: aload_2
      82: iconst_2
      83: anewarray     #6                  // class java/lang/String
      86: dup
      87: iconst_0
      88: aload_1
      89: iconst_1
      90: aaload
      91: aastore
      92: dup
      93: iconst_1
      94: aload_1
      95: iconst_2
      96: aaload
      97: aastore
      98: invokespecial #8                  // Method "<init>":(Lnet/openhft/chronicle/queue/QueueOffsetSpec$Type;[Ljava/lang/String;)V
     101: areturn
     102: aload_1
     103: iconst_1
     104: invokestatic  #18                 // Method expectArgs:([Ljava/lang/String;I)V
     107: new           #4                  // class net/openhft/chronicle/queue/QueueOffsetSpec
     110: dup
     111: aload_2
     112: iconst_0
     113: anewarray     #6                  // class java/lang/String
     116: invokespecial #8                  // Method "<init>":(Lnet/openhft/chronicle/queue/QueueOffsetSpec$Type;[Ljava/lang/String;)V
     119: areturn
     120: new           #19                 // class java/lang/IllegalArgumentException
     123: dup
     124: new           #20                 // class java/lang/StringBuilder
     127: dup
     128: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
     131: ldc           #22                 // String Unknown type:
     133: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: aload_2
     137: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     140: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     143: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     146: athrow

  public static java.lang.String formatEpochOffset(long);
    Code:
       0: ldc           #27                 // String %s;%s
       2: iconst_2
       3: anewarray     #28                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: getstatic     #5                  // Field net/openhft/chronicle/queue/QueueOffsetSpec$Type.EPOCH:Lnet/openhft/chronicle/queue/QueueOffsetSpec$Type;
      11: invokevirtual #29                 // Method net/openhft/chronicle/queue/QueueOffsetSpec$Type.name:()Ljava/lang/String;
      14: aastore
      15: dup
      16: iconst_1
      17: lload_0
      18: invokestatic  #7                  // Method java/lang/Long.toString:(J)Ljava/lang/String;
      21: aastore
      22: invokestatic  #30                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      25: areturn

  public static java.lang.String formatRollTime(java.time.LocalTime, java.time.ZoneId);
    Code:
       0: ldc           #31                 // String %s;%s;%s
       2: iconst_3
       3: anewarray     #28                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: getstatic     #9                  // Field net/openhft/chronicle/queue/QueueOffsetSpec$Type.ROLL_TIME:Lnet/openhft/chronicle/queue/QueueOffsetSpec$Type;
      11: invokevirtual #29                 // Method net/openhft/chronicle/queue/QueueOffsetSpec$Type.name:()Ljava/lang/String;
      14: aastore
      15: dup
      16: iconst_1
      17: aload_0
      18: invokevirtual #10                 // Method java/time/LocalTime.toString:()Ljava/lang/String;
      21: aastore
      22: dup
      23: iconst_2
      24: aload_1
      25: invokevirtual #11                 // Method java/time/ZoneId.toString:()Ljava/lang/String;
      28: aastore
      29: invokestatic  #30                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      32: areturn

  public static java.lang.String formatNone();
    Code:
       0: getstatic     #12                 // Field net/openhft/chronicle/queue/QueueOffsetSpec$Type.NONE:Lnet/openhft/chronicle/queue/QueueOffsetSpec$Type;
       3: invokevirtual #29                 // Method net/openhft/chronicle/queue/QueueOffsetSpec$Type.name:()Ljava/lang/String;
       6: areturn

  private static java.time.ZoneId toZoneId(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #32                 // Method java/time/ZoneId.of:(Ljava/lang/String;)Ljava/time/ZoneId;
       4: areturn

  private static java.time.LocalTime toLocalTime(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #33                 // Method java/time/LocalTime.parse:(Ljava/lang/CharSequence;)Ljava/time/LocalTime;
       4: areturn

  private static void expectArgs(java.lang.String[], int);
    Code:
       0: aload_0
       1: arraylength
       2: iload_1
       3: if_icmpeq     45
       6: new           #19                 // class java/lang/IllegalArgumentException
       9: dup
      10: new           #20                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #34                 // String Expected
      19: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: iload_1
      23: invokevirtual #35                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      26: ldc           #36                 // String  tokens in
      28: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: invokestatic  #37                 // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
      35: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: return

  public void apply(net.openhft.chronicle.queue.impl.single.SingleChronicleQueueBuilder);
    Code:
       0: getstatic     #16                 // Field net/openhft/chronicle/queue/QueueOffsetSpec$1.$SwitchMap$net$openhft$chronicle$queue$QueueOffsetSpec$Type:[I
       3: aload_0
       4: getfield      #2                  // Field type:Lnet/openhft/chronicle/queue/QueueOffsetSpec$Type;
       7: invokevirtual #17                 // Method net/openhft/chronicle/queue/QueueOffsetSpec$Type.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 3
                     1: 36
                     2: 53
                     3: 79
               default: 82
          }
      36: aload_1
      37: aload_0
      38: getfield      #3                  // Field spec:[Ljava/lang/String;
      41: iconst_0
      42: aaload
      43: invokestatic  #38                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      46: invokevirtual #39                 // Method net/openhft/chronicle/queue/impl/single/SingleChronicleQueueBuilder.epoch:(J)Lnet/openhft/chronicle/queue/impl/single/SingleChronicleQueueBuilder;
      49: pop
      50: goto          112
      53: aload_1
      54: aload_0
      55: getfield      #3                  // Field spec:[Ljava/lang/String;
      58: iconst_0
      59: aaload
      60: invokestatic  #40                 // Method toLocalTime:(Ljava/lang/String;)Ljava/time/LocalTime;
      63: aload_0
      64: getfield      #3                  // Field spec:[Ljava/lang/String;
      67: iconst_1
      68: aaload
      69: invokestatic  #41                 // Method toZoneId:(Ljava/lang/String;)Ljava/time/ZoneId;
      72: invokevirtual #42                 // Method net/openhft/chronicle/queue/impl/single/SingleChronicleQueueBuilder.rollTime:(Ljava/time/LocalTime;Ljava/time/ZoneId;)Lnet/openhft/chronicle/queue/impl/single/SingleChronicleQueueBuilder;
      75: pop
      76: goto          112
      79: goto          112
      82: new           #19                 // class java/lang/IllegalArgumentException
      85: dup
      86: new           #20                 // class java/lang/StringBuilder
      89: dup
      90: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      93: ldc           #22                 // String Unknown type:
      95: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_0
      99: getfield      #2                  // Field type:Lnet/openhft/chronicle/queue/QueueOffsetSpec$Type;
     102: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     105: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     108: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     111: athrow
     112: return

  public java.lang.String format();
    Code:
       0: new           #20                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #2                  // Field type:Lnet/openhft/chronicle/queue/QueueOffsetSpec$Type;
      11: invokevirtual #29                 // Method net/openhft/chronicle/queue/QueueOffsetSpec$Type.name:()Ljava/lang/String;
      14: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #13                 // String ;
      19: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #2                  // Field type:Lnet/openhft/chronicle/queue/QueueOffsetSpec$Type;
      26: invokestatic  #43                 // Method net/openhft/chronicle/queue/QueueOffsetSpec$Type.access$000:(Lnet/openhft/chronicle/queue/QueueOffsetSpec$Type;)Ljava/util/function/Function;
      29: aload_0
      30: getfield      #3                  // Field spec:[Ljava/lang/String;
      33: invokeinterface #44,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #6                  // class java/lang/String
      41: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: areturn

  public void validate();
    Code:
       0: getstatic     #16                 // Field net/openhft/chronicle/queue/QueueOffsetSpec$1.$SwitchMap$net$openhft$chronicle$queue$QueueOffsetSpec$Type:[I
       3: aload_0
       4: getfield      #2                  // Field type:Lnet/openhft/chronicle/queue/QueueOffsetSpec$Type;
       7: invokevirtual #17                 // Method net/openhft/chronicle/queue/QueueOffsetSpec$Type.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 3
                     1: 36
                     2: 49
                     3: 72
               default: 75
          }
      36: aload_0
      37: getfield      #3                  // Field spec:[Ljava/lang/String;
      40: iconst_0
      41: aaload
      42: invokestatic  #38                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      45: pop2
      46: goto          105
      49: aload_0
      50: getfield      #3                  // Field spec:[Ljava/lang/String;
      53: iconst_0
      54: aaload
      55: invokestatic  #40                 // Method toLocalTime:(Ljava/lang/String;)Ljava/time/LocalTime;
      58: pop
      59: aload_0
      60: getfield      #3                  // Field spec:[Ljava/lang/String;
      63: iconst_1
      64: aaload
      65: invokestatic  #41                 // Method toZoneId:(Ljava/lang/String;)Ljava/time/ZoneId;
      68: pop
      69: goto          105
      72: goto          105
      75: new           #19                 // class java/lang/IllegalArgumentException
      78: dup
      79: new           #20                 // class java/lang/StringBuilder
      82: dup
      83: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      86: ldc           #22                 // String Unknown type:
      88: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload_0
      92: getfield      #2                  // Field type:Lnet/openhft/chronicle/queue/QueueOffsetSpec$Type;
      95: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      98: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: return
}
