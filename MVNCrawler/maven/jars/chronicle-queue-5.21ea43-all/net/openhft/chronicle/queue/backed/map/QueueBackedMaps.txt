Compiled from "QueueBackedMaps.java"
public class net.openhft.chronicle.queue.backed.map.QueueBackedMaps implements net.openhft.chronicle.queue.backed.map.QueueEvents {
  final java.util.Map<java.lang.String, net.openhft.chronicle.queue.backed.map.QueueEvents> maps;

  public net.openhft.chronicle.queue.backed.map.QueueBackedMaps();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field maps:Ljava/util/Map;
      15: return

  public void addMap(java.lang.String, net.openhft.chronicle.queue.backed.map.QueueEvents);
    Code:
       0: aload_0
       1: getfield      #4                  // Field maps:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #5,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public void $put(java.lang.String, java.lang.Object, java.lang.Object, long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field maps:Ljava/util/Map;
       4: aload_1
       5: aload_1
       6: aload_2
       7: aload_3
       8: lload         4
      10: invokedynamic #6,  0              // InvokeDynamic #0:apply:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;J)Ljava/util/function/BiFunction;
      15: invokeinterface #7,  3            // InterfaceMethod java/util/Map.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      20: pop
      21: return

  public void $remove(java.lang.String, java.lang.Object, long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field maps:Ljava/util/Map;
       4: aload_1
       5: aload_1
       6: aload_2
       7: lload_3
       8: invokedynamic #8,  0              // InvokeDynamic #1:apply:(Ljava/lang/String;Ljava/lang/Object;J)Ljava/util/function/BiFunction;
      13: invokeinterface #7,  3            // InterfaceMethod java/util/Map.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      18: pop
      19: return

  public void $clear(java.lang.String, long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field maps:Ljava/util/Map;
       4: aload_1
       5: aload_1
       6: lload_2
       7: invokedynamic #9,  0              // InvokeDynamic #2:apply:(Ljava/lang/String;J)Ljava/util/function/BiFunction;
      12: invokeinterface #7,  3            // InterfaceMethod java/util/Map.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      17: pop
      18: return

  public void $checkPoint(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field maps:Ljava/util/Map;
       4: aload_1
       5: aload_1
       6: iload_2
       7: invokedynamic #10,  0             // InvokeDynamic #3:apply:(Ljava/lang/String;I)Ljava/util/function/BiFunction;
      12: invokeinterface #7,  3            // InterfaceMethod java/util/Map.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      17: pop
      18: return

  private static net.openhft.chronicle.queue.backed.map.QueueEvents lambda$$checkPoint$3(java.lang.String, int, java.lang.String, net.openhft.chronicle.queue.backed.map.QueueEvents);
    Code:
       0: aload_3
       1: aload_0
       2: iload_1
       3: invokeinterface #11,  3           // InterfaceMethod net/openhft/chronicle/queue/backed/map/QueueEvents.$checkPoint:(Ljava/lang/String;I)V
       8: aload_3
       9: areturn

  private static net.openhft.chronicle.queue.backed.map.QueueEvents lambda$$clear$2(java.lang.String, long, java.lang.String, net.openhft.chronicle.queue.backed.map.QueueEvents);
    Code:
       0: aload         4
       2: aload_0
       3: lload_1
       4: invokeinterface #12,  4           // InterfaceMethod net/openhft/chronicle/queue/backed/map/QueueEvents.$clear:(Ljava/lang/String;J)V
       9: aload         4
      11: areturn

  private static net.openhft.chronicle.queue.backed.map.QueueEvents lambda$$remove$1(java.lang.String, java.lang.Object, long, java.lang.String, net.openhft.chronicle.queue.backed.map.QueueEvents);
    Code:
       0: aload         5
       2: aload_0
       3: aload_1
       4: lload_2
       5: invokeinterface #13,  5           // InterfaceMethod net/openhft/chronicle/queue/backed/map/QueueEvents.$remove:(Ljava/lang/String;Ljava/lang/Object;J)V
      10: aload         5
      12: areturn

  private static net.openhft.chronicle.queue.backed.map.QueueEvents lambda$$put$0(java.lang.String, java.lang.Object, java.lang.Object, long, java.lang.String, net.openhft.chronicle.queue.backed.map.QueueEvents);
    Code:
       0: aload         6
       2: aload_0
       3: aload_1
       4: aload_2
       5: lload_3
       6: invokeinterface #14,  6           // InterfaceMethod net/openhft/chronicle/queue/backed/map/QueueEvents.$put:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;J)V
      11: aload         6
      13: areturn
}
