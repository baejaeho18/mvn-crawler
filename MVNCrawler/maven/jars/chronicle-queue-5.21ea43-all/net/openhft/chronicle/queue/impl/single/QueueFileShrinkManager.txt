Compiled from "QueueFileShrinkManager.java"
public final class net.openhft.chronicle.queue.impl.single.QueueFileShrinkManager extends java.lang.Enum<net.openhft.chronicle.queue.impl.single.QueueFileShrinkManager> {
  public static final java.lang.String THREAD_NAME;

  public static final boolean RUN_SYNCHRONOUSLY;

  public static final boolean DISABLE_QUEUE_FILE_SHRINKING;

  private static final org.slf4j.Logger LOG;

  private static final java.util.concurrent.ScheduledExecutorService EXECUTOR;

  private static final long DELAY_S;

  private static final net.openhft.chronicle.queue.impl.single.QueueFileShrinkManager[] $VALUES;

  public static net.openhft.chronicle.queue.impl.single.QueueFileShrinkManager[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lnet/openhft/chronicle/queue/impl/single/QueueFileShrinkManager;
       3: invokevirtual #2                  // Method "[Lnet/openhft/chronicle/queue/impl/single/QueueFileShrinkManager;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lnet/openhft/chronicle/queue/impl/single/QueueFileShrinkManager;"
       9: areturn

  public static net.openhft.chronicle.queue.impl.single.QueueFileShrinkManager valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class net/openhft/chronicle/queue/impl/single/QueueFileShrinkManager
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class net/openhft/chronicle/queue/impl/single/QueueFileShrinkManager
       9: areturn

  private net.openhft.chronicle.queue.impl.single.QueueFileShrinkManager();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public static void scheduleShrinking(java.io.File, long);
    Code:
       0: getstatic     #7                  // Field DISABLE_QUEUE_FILE_SHRINKING:Z
       3: ifeq          7
       6: return
       7: getstatic     #8                  // Field RUN_SYNCHRONOUSLY:Z
      10: ifeq          21
      13: aload_0
      14: lload_1
      15: invokestatic  #9                  // Method task:(Ljava/io/File;J)V
      18: goto          43
      21: getstatic     #10                 // Field EXECUTOR:Ljava/util/concurrent/ScheduledExecutorService;
      24: aload_0
      25: lload_1
      26: invokedynamic #11,  0             // InvokeDynamic #0:run:(Ljava/io/File;J)Ljava/lang/Runnable;
      31: ldc2_w        #12                 // long 10l
      34: getstatic     #14                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      37: invokeinterface #15,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      42: pop
      43: return

  private static void task(java.io.File, long);
    Code:
       0: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
       3: invokeinterface #17,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       8: ifeq          26
      11: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
      14: ldc           #18                 // String Shrinking {} to {}
      16: aload_0
      17: lload_1
      18: invokestatic  #19                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      21: invokeinterface #20,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      26: bipush        50
      28: istore_3
      29: invokestatic  #21                 // Method net/openhft/chronicle/core/OS.isWindows:()Z
      32: ifeq          39
      35: iconst_1
      36: goto          40
      39: iconst_3
      40: istore        4
      42: iload         4
      44: iflt          298
      47: aload_0
      48: invokevirtual #22                 // Method java/io/File.exists:()Z
      51: ifne          82
      54: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
      57: new           #23                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      64: ldc           #25                 // String Failed to shrink file as it exists no longer, file=
      66: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_0
      70: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      73: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: invokeinterface #29,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      81: return
      82: new           #30                 // class java/io/RandomAccessFile
      85: dup
      86: aload_0
      87: ldc           #31                 // String rw
      89: invokespecial #32                 // Method java/io/RandomAccessFile."<init>":(Ljava/io/File;Ljava/lang/String;)V
      92: astore        5
      94: aconst_null
      95: astore        6
      97: aload         5
      99: lload_1
     100: invokevirtual #33                 // Method java/io/RandomAccessFile.setLength:(J)V
     103: aload         5
     105: ifnull        190
     108: aload         6
     110: ifnull        133
     113: aload         5
     115: invokevirtual #34                 // Method java/io/RandomAccessFile.close:()V
     118: goto          190
     121: astore        7
     123: aload         6
     125: aload         7
     127: invokevirtual #36                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     130: goto          190
     133: aload         5
     135: invokevirtual #34                 // Method java/io/RandomAccessFile.close:()V
     138: goto          190
     141: astore        7
     143: aload         7
     145: astore        6
     147: aload         7
     149: athrow
     150: astore        8
     152: aload         5
     154: ifnull        187
     157: aload         6
     159: ifnull        182
     162: aload         5
     164: invokevirtual #34                 // Method java/io/RandomAccessFile.close:()V
     167: goto          187
     170: astore        9
     172: aload         6
     174: aload         9
     176: invokevirtual #36                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     179: goto          187
     182: aload         5
     184: invokevirtual #34                 // Method java/io/RandomAccessFile.close:()V
     187: aload         8
     189: athrow
     190: goto          298
     193: astore        5
     195: aload         5
     197: invokevirtual #38                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
     200: ldc           #39                 // String The requested operation cannot be performed on a file with a user-mapped section open
     202: invokevirtual #40                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     205: ifeq          260
     208: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
     211: ldc           #41                 // String Failed to shrinking {} to {}, {}
     213: iconst_3
     214: anewarray     #42                 // class java/lang/Object
     217: dup
     218: iconst_0
     219: aload_0
     220: aastore
     221: dup
     222: iconst_1
     223: lload_1
     224: invokestatic  #19                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     227: aastore
     228: dup
     229: iconst_2
     230: iload         4
     232: ifne          240
     235: ldc           #43                 // String giving up
     237: goto          242
     240: ldc           #44                 // String retrying
     242: aastore
     243: invokeinterface #45,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     248: iload_3
     249: i2l
     250: invokestatic  #46                 // Method net/openhft/chronicle/core/Jvm.pause:(J)V
     253: iload_3
     254: iconst_2
     255: imul
     256: istore_3
     257: goto          292
     260: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
     263: new           #23                 // class java/lang/StringBuilder
     266: dup
     267: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     270: ldc           #47                 // String Failed to shrink file
     272: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     275: aload_0
     276: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     279: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     282: aload         5
     284: invokeinterface #48,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     289: goto          298
     292: iinc          4, -1
     295: goto          42
     298: return
    Exception table:
       from    to  target type
         113   118   121   Class java/lang/Throwable
          97   103   141   Class java/lang/Throwable
          97   103   150   any
         162   167   170   Class java/lang/Throwable
         141   152   150   any
          82   190   193   Class java/io/IOException

  private static void lambda$scheduleShrinking$0(java.io.File, long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #9                  // Method task:(Ljava/io/File;J)V
       5: return

  static {};
    Code:
       0: iconst_0
       1: anewarray     #4                  // class net/openhft/chronicle/queue/impl/single/QueueFileShrinkManager
       4: putstatic     #1                  // Field $VALUES:[Lnet/openhft/chronicle/queue/impl/single/QueueFileShrinkManager;
       7: ldc           #49                 // String chronicle.queue.synchronousFileShrinking
       9: invokestatic  #50                 // Method net/openhft/chronicle/core/Jvm.getBoolean:(Ljava/lang/String;)Z
      12: putstatic     #8                  // Field RUN_SYNCHRONOUSLY:Z
      15: invokestatic  #21                 // Method net/openhft/chronicle/core/OS.isWindows:()Z
      18: ifne          29
      21: ldc           #51                 // String chronicle.queue.disableFileShrinking
      23: invokestatic  #50                 // Method net/openhft/chronicle/core/Jvm.getBoolean:(Ljava/lang/String;)Z
      26: ifeq          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: putstatic     #7                  // Field DISABLE_QUEUE_FILE_SHRINKING:Z
      37: ldc           #4                  // class net/openhft/chronicle/queue/impl/single/QueueFileShrinkManager
      39: invokestatic  #52                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      42: putstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
      45: ldc           #53                 // String queue~file~shrink~daemon
      47: iconst_1
      48: invokestatic  #54                 // Method net/openhft/chronicle/threads/Threads.acquireScheduledExecutorService:(Ljava/lang/String;Z)Ljava/util/concurrent/ScheduledExecutorService;
      51: putstatic     #10                 // Field EXECUTOR:Ljava/util/concurrent/ScheduledExecutorService;
      54: return
}
