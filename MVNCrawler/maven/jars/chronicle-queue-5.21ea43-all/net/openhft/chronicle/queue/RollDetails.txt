Compiled from "RollDetails.java"
public class net.openhft.chronicle.queue.RollDetails extends net.openhft.chronicle.wire.BytesInBinaryMarshallable {
  final int cycle;

  final long epoch;

  public net.openhft.chronicle.queue.RollDetails(int, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method net/openhft/chronicle/wire/BytesInBinaryMarshallable."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field cycle:I
       9: aload_0
      10: lload_2
      11: putfield      #3                  // Field epoch:J
      14: return

  public int cycle();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cycle:I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #5                  // class net/openhft/chronicle/queue/RollDetails
      28: astore_2
      29: aload_0
      30: getfield      #2                  // Field cycle:I
      33: aload_2
      34: getfield      #2                  // Field cycle:I
      37: if_icmpne     56
      40: aload_0
      41: getfield      #3                  // Field epoch:J
      44: aload_2
      45: getfield      #3                  // Field epoch:J
      48: lcmp
      49: ifne          56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field epoch:J
       4: aload_0
       5: getfield      #3                  // Field epoch:J
       8: bipush        32
      10: lushr
      11: lxor
      12: l2i
      13: istore_1
      14: aload_0
      15: getfield      #2                  // Field cycle:I
      18: sipush        1019
      21: imul
      22: iload_1
      23: bipush        37
      25: imul
      26: iadd
      27: ireturn
}
