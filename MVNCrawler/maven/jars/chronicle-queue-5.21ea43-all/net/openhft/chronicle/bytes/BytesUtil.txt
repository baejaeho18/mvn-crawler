Compiled from "BytesUtil.java"
public final class net.openhft.chronicle.bytes.BytesUtil extends java.lang.Enum<net.openhft.chronicle.bytes.BytesUtil> {
  private static final int[] NO_INTS;

  private static final net.openhft.chronicle.core.ClassLocal<int[]> TRIVIALLY_COPYABLE;

  private static final net.openhft.chronicle.bytes.BytesUtil[] $VALUES;

  public static net.openhft.chronicle.bytes.BytesUtil[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lnet/openhft/chronicle/bytes/BytesUtil;
       3: invokevirtual #2                  // Method "[Lnet/openhft/chronicle/bytes/BytesUtil;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lnet/openhft/chronicle/bytes/BytesUtil;"
       9: areturn

  public static net.openhft.chronicle.bytes.BytesUtil valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class net/openhft/chronicle/bytes/BytesUtil
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class net/openhft/chronicle/bytes/BytesUtil
       9: areturn

  private net.openhft.chronicle.bytes.BytesUtil();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public static boolean isTriviallyCopyable(java.lang.Class);
    Code:
       0: getstatic     #7                  // Field TRIVIALLY_COPYABLE:Lnet/openhft/chronicle/core/ClassLocal;
       3: aload_0
       4: invokevirtual #8                  // Method net/openhft/chronicle/core/ClassLocal.get:(Ljava/lang/Class;)Ljava/lang/Object;
       7: checkcast     #9                  // class "[I"
      10: astore_1
      11: aload_1
      12: iconst_1
      13: iaload
      14: ifle          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  static int[] isTriviallyCopyable0(java.lang.Class);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method java/lang/Class.isArray:()Z
       4: ifeq          37
       7: aload_0
       8: invokevirtual #11                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      11: astore_1
      12: aload_1
      13: invokevirtual #12                 // Method java/lang/Class.isPrimitive:()Z
      16: ifeq          33
      19: iconst_1
      20: newarray       int
      22: dup
      23: iconst_0
      24: getstatic     #13                 // Field net/openhft/chronicle/core/UnsafeMemory.UNSAFE:Lsun/misc/Unsafe;
      27: aload_0
      28: invokevirtual #14                 // Method sun/misc/Unsafe.arrayBaseOffset:(Ljava/lang/Class;)I
      31: iastore
      32: areturn
      33: getstatic     #15                 // Field NO_INTS:[I
      36: areturn
      37: aload_0
      38: invokestatic  #16                 // Method net/openhft/chronicle/bytes/internal/BytesFieldInfo.fields:(Ljava/lang/Class;)Ljava/util/List;
      41: astore_1
      42: iconst_0
      43: istore_2
      44: iconst_0
      45: istore_3
      46: aload_1
      47: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      52: astore        4
      54: aload         4
      56: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      61: ifeq          182
      64: aload         4
      66: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      71: checkcast     #20                 // class java/lang/reflect/Field
      74: astore        5
      76: aload         5
      78: ldc           #21                 // class net/openhft/chronicle/bytes/FieldGroup
      80: invokevirtual #22                 // Method java/lang/reflect/Field.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      83: checkcast     #21                 // class net/openhft/chronicle/bytes/FieldGroup
      86: astore        6
      88: aload         6
      90: ifnull        111
      93: ldc           #23                 // String header
      95: aload         6
      97: invokeinterface #24,  1           // InterfaceMethod net/openhft/chronicle/bytes/FieldGroup.value:()Ljava/lang/String;
     102: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     105: ifeq          111
     108: goto          54
     111: getstatic     #13                 // Field net/openhft/chronicle/core/UnsafeMemory.UNSAFE:Lsun/misc/Unsafe;
     114: aload         5
     116: invokevirtual #26                 // Method sun/misc/Unsafe.objectFieldOffset:(Ljava/lang/reflect/Field;)J
     119: l2i
     120: istore        7
     122: aload         5
     124: invokevirtual #27                 // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
     127: invokestatic  #28                 // Method sizeOf:(Ljava/lang/Class;)I
     130: istore        8
     132: iload         7
     134: iload         8
     136: iadd
     137: istore        9
     139: aload         5
     141: invokevirtual #27                 // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
     144: invokevirtual #12                 // Method java/lang/Class.isPrimitive:()Z
     147: ifne          154
     150: iconst_1
     151: goto          155
     154: iconst_0
     155: istore        10
     157: iload         10
     159: ifeq          169
     162: iload_3
     163: ifle          179
     166: goto          182
     169: iload_2
     170: ifne          176
     173: iload         7
     175: istore_2
     176: iload         9
     178: istore_3
     179: goto          54
     182: iconst_2
     183: newarray       int
     185: dup
     186: iconst_0
     187: iload_2
     188: iastore
     189: dup
     190: iconst_1
     191: iload_3
     192: iastore
     193: areturn

  public static boolean isTriviallyCopyable(java.lang.Class, int, int);
    Code:
       0: getstatic     #7                  // Field TRIVIALLY_COPYABLE:Lnet/openhft/chronicle/core/ClassLocal;
       3: aload_0
       4: invokevirtual #8                  // Method net/openhft/chronicle/core/ClassLocal.get:(Ljava/lang/Class;)Ljava/lang/Object;
       7: checkcast     #9                  // class "[I"
      10: astore_3
      11: aload_3
      12: arraylength
      13: ifne          18
      16: iconst_0
      17: ireturn
      18: iload_1
      19: aload_3
      20: iconst_0
      21: iaload
      22: if_icmplt     44
      25: aload_3
      26: arraylength
      27: iconst_1
      28: if_icmpeq     40
      31: iload_1
      32: iload_2
      33: iadd
      34: aload_3
      35: iconst_1
      36: iaload
      37: if_icmpgt     44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn

  public static int[] triviallyCopyableRange(java.lang.Class);
    Code:
       0: getstatic     #7                  // Field TRIVIALLY_COPYABLE:Lnet/openhft/chronicle/core/ClassLocal;
       3: aload_0
       4: invokevirtual #8                  // Method net/openhft/chronicle/core/ClassLocal.get:(Ljava/lang/Class;)Ljava/lang/Object;
       7: checkcast     #9                  // class "[I"
      10: areturn

  private static int sizeOf(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getstatic     #29                 // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
       4: if_acmpeq     14
       7: aload_0
       8: getstatic     #30                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      11: if_acmpne     18
      14: iconst_1
      15: goto          76
      18: aload_0
      19: getstatic     #31                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      22: if_acmpeq     32
      25: aload_0
      26: getstatic     #32                 // Field java/lang/Character.TYPE:Ljava/lang/Class;
      29: if_acmpne     36
      32: iconst_2
      33: goto          76
      36: aload_0
      37: getstatic     #33                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      40: if_acmpeq     50
      43: aload_0
      44: getstatic     #34                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
      47: if_acmpne     54
      50: iconst_4
      51: goto          76
      54: aload_0
      55: getstatic     #35                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
      58: if_acmpeq     68
      61: aload_0
      62: getstatic     #36                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
      65: if_acmpne     73
      68: bipush        8
      70: goto          76
      73: getstatic     #37                 // Field sun/misc/Unsafe.ARRAY_OBJECT_INDEX_SCALE:I
      76: ireturn

  public static java.lang.String findFile(java.lang.String) throws java.io.FileNotFoundException;
    Code:
       0: new           #38                 // class java/io/File
       3: dup
       4: aload_0
       5: invokespecial #39                 // Method java/io/File."<init>":(Ljava/lang/String;)V
       8: astore_1
       9: aconst_null
      10: astore_2
      11: aload_1
      12: invokevirtual #40                 // Method java/io/File.exists:()Z
      15: ifne          44
      18: aload_0
      19: invokestatic  #41                 // Method net/openhft/chronicle/core/io/IOTools.urlFor:(Ljava/lang/String;)Ljava/net/URL;
      22: astore_2
      23: aload_2
      24: invokevirtual #42                 // Method java/net/URL.getFile:()Ljava/lang/String;
      27: ldc           #43                 // String target/test-classes
      29: ldc           #44                 // String src/test/resources
      31: invokevirtual #45                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      34: astore_3
      35: new           #38                 // class java/io/File
      38: dup
      39: aload_3
      40: invokespecial #39                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      43: astore_1
      44: aload_1
      45: invokevirtual #40                 // Method java/io/File.exists:()Z
      48: ifne          60
      51: new           #46                 // class java/io/FileNotFoundException
      54: dup
      55: aload_0
      56: invokespecial #47                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      59: athrow
      60: aload_1
      61: invokevirtual #48                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      64: areturn

  public static net.openhft.chronicle.bytes.Bytes readFile(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #49                 // String =
       3: invokevirtual #50                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifeq          18
       9: aload_0
      10: iconst_1
      11: invokevirtual #51                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      14: invokestatic  #52                 // InterfaceMethod net/openhft/chronicle/bytes/Bytes.from:(Ljava/lang/String;)Lnet/openhft/chronicle/bytes/Bytes;
      17: areturn
      18: new           #38                 // class java/io/File
      21: dup
      22: aload_0
      23: invokespecial #39                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      26: astore_1
      27: aconst_null
      28: astore_2
      29: aload_1
      30: invokevirtual #40                 // Method java/io/File.exists:()Z
      33: ifne          53
      36: aload_0
      37: invokestatic  #41                 // Method net/openhft/chronicle/core/io/IOTools.urlFor:(Ljava/lang/String;)Ljava/net/URL;
      40: astore_2
      41: new           #38                 // class java/io/File
      44: dup
      45: aload_2
      46: invokevirtual #42                 // Method java/net/URL.getFile:()Ljava/lang/String;
      49: invokespecial #39                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      52: astore_1
      53: aload_2
      54: ifnonnull     68
      57: new           #53                 // class java/io/FileInputStream
      60: dup
      61: aload_1
      62: invokespecial #54                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      65: goto          72
      68: aload_2
      69: invokestatic  #55                 // Method net/openhft/chronicle/core/io/IOTools.open:(Ljava/net/URL;)Ljava/io/InputStream;
      72: invokestatic  #56                 // Method net/openhft/chronicle/core/io/IOTools.readAsBytes:(Ljava/io/InputStream;)[B
      75: invokestatic  #57                 // InterfaceMethod net/openhft/chronicle/bytes/Bytes.wrapForRead:([B)Lnet/openhft/chronicle/bytes/Bytes;
      78: areturn

  public static void writeFile(java.lang.String, net.openhft.chronicle.bytes.Bytes<byte[]>) throws java.io.IOException;
    Code:
       0: new           #58                 // class java/io/FileOutputStream
       3: dup
       4: aload_0
       5: invokespecial #59                 // Method java/io/FileOutputStream."<init>":(Ljava/lang/String;)V
       8: astore_2
       9: aconst_null
      10: astore_3
      11: aload_2
      12: aload_1
      13: invokeinterface #60,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.underlyingObject:()Ljava/lang/Object;
      18: checkcast     #61                 // class "[B"
      21: invokevirtual #62                 // Method java/io/OutputStream.write:([B)V
      24: aload_2
      25: ifnull        100
      28: aload_3
      29: ifnull        50
      32: aload_2
      33: invokevirtual #63                 // Method java/io/OutputStream.close:()V
      36: goto          100
      39: astore        4
      41: aload_3
      42: aload         4
      44: invokevirtual #65                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      47: goto          100
      50: aload_2
      51: invokevirtual #63                 // Method java/io/OutputStream.close:()V
      54: goto          100
      57: astore        4
      59: aload         4
      61: astore_3
      62: aload         4
      64: athrow
      65: astore        5
      67: aload_2
      68: ifnull        97
      71: aload_3
      72: ifnull        93
      75: aload_2
      76: invokevirtual #63                 // Method java/io/OutputStream.close:()V
      79: goto          97
      82: astore        6
      84: aload_3
      85: aload         6
      87: invokevirtual #65                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      90: goto          97
      93: aload_2
      94: invokevirtual #63                 // Method java/io/OutputStream.close:()V
      97: aload         5
      99: athrow
     100: return
    Exception table:
       from    to  target type
          32    36    39   Class java/lang/Throwable
          11    24    57   Class java/lang/Throwable
          11    24    65   any
          75    79    82   Class java/lang/Throwable
          57    67    65   any

  public static boolean bytesEqual(net.openhft.chronicle.bytes.RandomDataInput, long, net.openhft.chronicle.bytes.RandomDataInput, long, long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: lconst_0
       1: lstore        8
       3: lload         6
       5: lload         8
       7: lsub
       8: ldc2_w        #66                 // long 8l
      11: lcmp
      12: iflt          53
      15: aload_0
      16: lload_1
      17: lload         8
      19: ladd
      20: invokeinterface #68,  3           // InterfaceMethod net/openhft/chronicle/bytes/RandomDataInput.readLong:(J)J
      25: aload_3
      26: lload         4
      28: lload         8
      30: ladd
      31: invokeinterface #68,  3           // InterfaceMethod net/openhft/chronicle/bytes/RandomDataInput.readLong:(J)J
      36: lcmp
      37: ifeq          42
      40: iconst_0
      41: ireturn
      42: lload         8
      44: ldc2_w        #66                 // long 8l
      47: ladd
      48: lstore        8
      50: goto          3
      53: lload         6
      55: lload         8
      57: lsub
      58: ldc2_w        #69                 // long 4l
      61: lcmp
      62: iflt          99
      65: aload_0
      66: lload_1
      67: lload         8
      69: ladd
      70: invokeinterface #71,  3           // InterfaceMethod net/openhft/chronicle/bytes/RandomDataInput.readInt:(J)I
      75: aload_3
      76: lload         4
      78: lload         8
      80: ladd
      81: invokeinterface #71,  3           // InterfaceMethod net/openhft/chronicle/bytes/RandomDataInput.readInt:(J)I
      86: if_icmpeq     91
      89: iconst_0
      90: ireturn
      91: lload         8
      93: ldc2_w        #69                 // long 4l
      96: ladd
      97: lstore        8
      99: lload         6
     101: lload         8
     103: lsub
     104: ldc2_w        #72                 // long 2l
     107: lcmp
     108: iflt          145
     111: aload_0
     112: lload_1
     113: lload         8
     115: ladd
     116: invokeinterface #74,  3           // InterfaceMethod net/openhft/chronicle/bytes/RandomDataInput.readShort:(J)S
     121: aload_3
     122: lload         4
     124: lload         8
     126: ladd
     127: invokeinterface #74,  3           // InterfaceMethod net/openhft/chronicle/bytes/RandomDataInput.readShort:(J)S
     132: if_icmpeq     137
     135: iconst_0
     136: ireturn
     137: lload         8
     139: ldc2_w        #72                 // long 2l
     142: ladd
     143: lstore        8
     145: lload         8
     147: lload         6
     149: lcmp
     150: ifge          183
     153: aload_0
     154: lload_1
     155: lload         8
     157: ladd
     158: invokeinterface #75,  3           // InterfaceMethod net/openhft/chronicle/bytes/RandomDataInput.readByte:(J)B
     163: aload_3
     164: lload         4
     166: lload         8
     168: ladd
     169: invokeinterface #75,  3           // InterfaceMethod net/openhft/chronicle/bytes/RandomDataInput.readByte:(J)B
     174: if_icmpne     181
     177: iconst_1
     178: goto          182
     181: iconst_0
     182: ireturn
     183: iconst_1
     184: ireturn

  public static boolean bytesEqual(java.lang.CharSequence, net.openhft.chronicle.bytes.RandomDataInput, long, int) throws java.lang.IllegalStateException, java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: ifnull        15
       4: aload_0
       5: invokeinterface #76,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      10: iload         4
      12: if_icmpeq     17
      15: iconst_0
      16: ireturn
      17: iconst_0
      18: istore        5
      20: iload         5
      22: iload         4
      24: if_icmpge     57
      27: aload_0
      28: iload         5
      30: invokeinterface #77,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      35: aload_1
      36: lload_2
      37: iload         5
      39: i2l
      40: ladd
      41: invokeinterface #78,  3           // InterfaceMethod net/openhft/chronicle/bytes/RandomDataInput.readUnsignedByte:(J)I
      46: if_icmpeq     51
      49: iconst_0
      50: ireturn
      51: iinc          5, 1
      54: goto          20
      57: iconst_1
      58: ireturn

  public static boolean equals(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_0
       8: instanceof    #79                 // class java/lang/CharSequence
      11: ifeq          33
      14: aload_1
      15: instanceof    #79                 // class java/lang/CharSequence
      18: ifeq          33
      21: aload_0
      22: checkcast     #79                 // class java/lang/CharSequence
      25: aload_1
      26: checkcast     #79                 // class java/lang/CharSequence
      29: invokestatic  #80                 // Method net/openhft/chronicle/core/util/StringUtils.isEqual:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z
      32: ireturn
      33: aload_0
      34: ifnull        49
      37: aload_0
      38: aload_1
      39: invokevirtual #81                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      42: ifeq          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ireturn

  public static int asInt(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #82                 // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
       4: invokevirtual #83                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       7: invokestatic  #84                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      10: invokestatic  #85                 // Method java/nio/ByteOrder.nativeOrder:()Ljava/nio/ByteOrder;
      13: invokevirtual #86                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      16: astore_1
      17: aload_1
      18: invokevirtual #87                 // Method java/nio/ByteBuffer.getInt:()I
      21: ireturn

  public static int stopBitLength(long);
    Code:
       0: lload_0
       1: ldc2_w        #88                 // long -128l
       4: land
       5: lconst_0
       6: lcmp
       7: ifne          12
      10: iconst_1
      11: ireturn
      12: lload_0
      13: ldc2_w        #90                 // long -16384l
      16: land
      17: lconst_0
      18: lcmp
      19: ifne          24
      22: iconst_2
      23: ireturn
      24: lload_0
      25: invokestatic  #92                 // Method net/openhft/chronicle/bytes/BytesInternal.stopBitLength0:(J)I
      28: ireturn

  public static char[] toCharArray(net.openhft.chronicle.bytes.Bytes) throws java.lang.ArithmeticException, java.lang.IllegalStateException, java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: invokeinterface #93,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readRemaining:()J
       6: invokestatic  #94                 // Method net/openhft/chronicle/core/Maths.toUInt31:(J)I
       9: newarray       char
      11: astore_1
      12: iconst_0
      13: istore_2
      14: iload_2
      15: i2l
      16: aload_0
      17: invokeinterface #93,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readRemaining:()J
      22: lcmp
      23: ifge          51
      26: aload_1
      27: iload_2
      28: aload_0
      29: iload_2
      30: i2l
      31: aload_0
      32: invokeinterface #95,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readPosition:()J
      37: ladd
      38: invokeinterface #96,  3           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readUnsignedByte:(J)I
      43: i2c
      44: castore
      45: iinc          2, 1
      48: goto          14
      51: aload_1
      52: areturn

  public static char[] toCharArray(net.openhft.chronicle.bytes.Bytes, long, int) throws java.lang.IllegalStateException, java.nio.BufferUnderflowException;
    Code:
       0: iload_3
       1: newarray       char
       3: astore        4
       5: iconst_0
       6: istore        5
       8: iconst_0
       9: istore        6
      11: iload         6
      13: iload_3
      14: if_icmpge     43
      17: aload         4
      19: iload         5
      21: iinc          5, 1
      24: aload_0
      25: lload_1
      26: iload         6
      28: i2l
      29: ladd
      30: invokeinterface #96,  3           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readUnsignedByte:(J)I
      35: i2c
      36: castore
      37: iinc          6, 1
      40: goto          11
      43: aload         4
      45: areturn

  public static long readStopBit(net.openhft.chronicle.bytes.StreamingDataInput) throws net.openhft.chronicle.core.io.IORuntimeException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokestatic  #97                 // Method net/openhft/chronicle/bytes/BytesInternal.readStopBit:(Lnet/openhft/chronicle/bytes/StreamingDataInput;)J
       4: lreturn

  public static void writeStopBit(net.openhft.chronicle.bytes.StreamingDataOutput, long) throws java.lang.IllegalStateException, java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #98                 // Method net/openhft/chronicle/bytes/BytesInternal.writeStopBit:(Lnet/openhft/chronicle/bytes/StreamingDataOutput;J)V
       5: return

  public static long writeStopBit(net.openhft.chronicle.bytes.BytesStore, long, long) throws java.lang.IllegalStateException, java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokestatic  #99                 // Method net/openhft/chronicle/bytes/BytesInternal.writeStopBit:(Lnet/openhft/chronicle/bytes/RandomDataOutput;JJ)J
       6: lreturn

  public static long writeStopBit(long, long) throws java.lang.IllegalStateException, java.nio.BufferOverflowException;
    Code:
       0: lload_0
       1: lload_2
       2: invokestatic  #100                // Method net/openhft/chronicle/bytes/BytesInternal.writeStopBit:(JJ)J
       5: lreturn

  public static void parseUtf8(net.openhft.chronicle.bytes.StreamingDataInput, java.lang.Appendable, int) throws net.openhft.chronicle.bytes.UTFDataFormatRuntimeException, java.lang.IllegalStateException, java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: iload_2
       4: invokestatic  #101                // Method net/openhft/chronicle/bytes/BytesInternal.parseUtf8:(Lnet/openhft/chronicle/bytes/StreamingDataInput;Ljava/lang/Appendable;ZI)V
       7: return

  public static void appendUtf8(net.openhft.chronicle.bytes.StreamingDataOutput, java.lang.CharSequence) throws java.lang.IndexOutOfBoundsException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: invokeinterface #76,  1           // InterfaceMethod java/lang/CharSequence.length:()I
       9: invokestatic  #102                // Method net/openhft/chronicle/bytes/BytesInternal.appendUtf8:(Lnet/openhft/chronicle/bytes/StreamingDataOutput;Ljava/lang/CharSequence;II)V
      12: return

  public static void appendBytesFromStart(net.openhft.chronicle.bytes.Bytes, long, java.lang.StringBuilder) throws java.lang.IllegalStateException;
    Code:
       0: lload_1
       1: aload_0
       2: aload_3
       3: aload_0
       4: invokeinterface #95,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readPosition:()J
       9: lload_1
      10: lsub
      11: l2i
      12: invokestatic  #103                // Method net/openhft/chronicle/bytes/BytesInternal.parse8bit:(JLnet/openhft/chronicle/bytes/RandomDataInput;Ljava/lang/Appendable;I)V
      15: aload_3
      16: sipush        8214
      19: invokevirtual #104                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      22: pop
      23: aload_3
      24: aload_0
      25: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      28: pop
      29: goto          44
      32: astore        4
      34: new           #108                // class net/openhft/chronicle/core/io/IORuntimeException
      37: dup
      38: aload         4
      40: invokespecial #109                // Method net/openhft/chronicle/core/io/IORuntimeException."<init>":(Ljava/lang/Throwable;)V
      43: athrow
      44: return
    Exception table:
       from    to  target type
           0    29    32   Class java/io/IOException
           0    29    32   Class java/nio/BufferUnderflowException

  public static void readMarshallable(net.openhft.chronicle.bytes.ReadBytesMarshallable, net.openhft.chronicle.bytes.BytesIn);
    Code:
       0: getstatic     #110                // Field net/openhft/chronicle/bytes/BytesMarshaller.BYTES_MARSHALLER_CL:Lnet/openhft/chronicle/core/ClassLocal;
       3: aload_0
       4: invokevirtual #111                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       7: invokevirtual #8                  // Method net/openhft/chronicle/core/ClassLocal.get:(Ljava/lang/Class;)Ljava/lang/Object;
      10: checkcast     #112                // class net/openhft/chronicle/bytes/BytesMarshaller
      13: aload_0
      14: aload_1
      15: invokevirtual #113                // Method net/openhft/chronicle/bytes/BytesMarshaller.readMarshallable:(Lnet/openhft/chronicle/bytes/ReadBytesMarshallable;Lnet/openhft/chronicle/bytes/BytesIn;)V
      18: return

  public static void writeMarshallable(net.openhft.chronicle.bytes.WriteBytesMarshallable, net.openhft.chronicle.bytes.BytesOut) throws java.lang.IllegalStateException, java.nio.BufferOverflowException, java.lang.ArithmeticException, java.nio.BufferUnderflowException;
    Code:
       0: getstatic     #110                // Field net/openhft/chronicle/bytes/BytesMarshaller.BYTES_MARSHALLER_CL:Lnet/openhft/chronicle/core/ClassLocal;
       3: aload_0
       4: invokevirtual #111                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       7: invokevirtual #8                  // Method net/openhft/chronicle/core/ClassLocal.get:(Ljava/lang/Class;)Ljava/lang/Object;
      10: checkcast     #112                // class net/openhft/chronicle/bytes/BytesMarshaller
      13: aload_0
      14: aload_1
      15: invokevirtual #114                // Method net/openhft/chronicle/bytes/BytesMarshaller.writeMarshallable:(Lnet/openhft/chronicle/bytes/WriteBytesMarshallable;Lnet/openhft/chronicle/bytes/BytesOut;)V
      18: goto          31
      21: astore_2
      22: new           #116                // class java/lang/AssertionError
      25: dup
      26: aload_2
      27: invokespecial #117                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      30: athrow
      31: return
    Exception table:
       from    to  target type
           0    18    21   Class java/lang/IllegalArgumentException

  public static long utf8Length(java.lang.CharSequence) throws java.lang.IndexOutOfBoundsException;
    Code:
       0: aload_0
       1: invokestatic  #118                // Method net/openhft/chronicle/bytes/AppendableUtil.findUtf8Length:(Ljava/lang/CharSequence;)J
       4: lreturn

  static java.lang.String asString(java.lang.String, java.lang.Throwable);
    Code:
       0: new           #119                // class java/io/StringWriter
       3: dup
       4: invokespecial #120                // Method java/io/StringWriter."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: invokevirtual #121                // Method java/io/StringWriter.append:(Ljava/lang/CharSequence;)Ljava/io/StringWriter;
      13: ldc           #122                // String \n
      15: invokevirtual #121                // Method java/io/StringWriter.append:(Ljava/lang/CharSequence;)Ljava/io/StringWriter;
      18: pop
      19: aload_1
      20: new           #123                // class java/io/PrintWriter
      23: dup
      24: aload_2
      25: invokespecial #124                // Method java/io/PrintWriter."<init>":(Ljava/io/Writer;)V
      28: invokevirtual #125                // Method java/lang/Throwable.printStackTrace:(Ljava/io/PrintWriter;)V
      31: aload_2
      32: invokevirtual #126                // Method java/io/StringWriter.toString:()Ljava/lang/String;
      35: areturn

  public static void checkRegisteredBytes();
    Code:
       0: invokestatic  #127                // Method net/openhft/chronicle/core/io/AbstractReferenceCounted.assertReferencesReleased:()V
       3: return

  public static boolean byteToBoolean(byte);
    Code:
       0: iload_0
       1: ifeq          20
       4: iload_0
       5: bipush        78
       7: if_icmpeq     20
      10: iload_0
      11: bipush        110
      13: if_icmpeq     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public static long roundUpTo64ByteAlign(long);
    Code:
       0: lload_0
       1: ldc2_w        #128                // long 63l
       4: ladd
       5: ldc2_w        #130                // long -64l
       8: land
       9: lreturn

  public static long roundUpTo8ByteAlign(long);
    Code:
       0: lload_0
       1: ldc2_w        #132                // long 7l
       4: ladd
       5: ldc2_w        #134                // long -8l
       8: land
       9: lreturn

  public static void read8ByteAlignPadding(net.openhft.chronicle.bytes.Bytes<?>) throws java.lang.IllegalStateException, java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #95,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readPosition:()J
       7: invokestatic  #136                // Method roundUpTo8ByteAlign:(J)J
      10: invokeinterface #137,  3          // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readPosition:(J)Lnet/openhft/chronicle/bytes/StreamingDataInput;
      15: pop
      16: return

  public static void write8ByteAlignPadding(net.openhft.chronicle.bytes.Bytes<?>) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokeinterface #138,  1          // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writePosition:()J
       6: lstore_1
       7: lload_1
       8: invokestatic  #136                // Method roundUpTo8ByteAlign:(J)J
      11: lstore_3
      12: aload_0
      13: lload_3
      14: invokeinterface #139,  3          // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writePosition:(J)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      19: pop
      20: aload_0
      21: lload_1
      22: lload_3
      23: invokeinterface #140,  5          // InterfaceMethod net/openhft/chronicle/bytes/Bytes.zeroOut:(JJ)Lnet/openhft/chronicle/bytes/BytesStore;
      28: pop
      29: return

  public static java.lang.String toDebugString(net.openhft.chronicle.bytes.RandomDataInput, long, long) throws java.lang.IllegalStateException, java.nio.BufferUnderflowException, java.lang.ArithmeticException;
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokeinterface #141,  5          // InterfaceMethod net/openhft/chronicle/bytes/RandomDataInput.subBytes:(JJ)Lnet/openhft/chronicle/bytes/BytesStore;
       8: astore        5
      10: aload         5
      12: lload_3
      13: invokeinterface #142,  3          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.toDebugString:(J)Ljava/lang/String;
      18: areturn

  public static boolean unregister(net.openhft.chronicle.bytes.BytesStore);
    Code:
       0: aload_0
       1: invokestatic  #143                // Method net/openhft/chronicle/core/io/IOTools.unmonitor:(Ljava/lang/Object;)V
       4: iconst_1
       5: ireturn

  public static void copy8bit(net.openhft.chronicle.bytes.BytesStore, long, long);
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokestatic  #144                // Method net/openhft/chronicle/bytes/BytesInternal.copy8bit:(Lnet/openhft/chronicle/bytes/BytesStore;JJ)V
       6: return

  public static void reverse(net.openhft.chronicle.bytes.Bytes<?>, int);
    Code:
       0: aload_0
       1: invokeinterface #95,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readPosition:()J
       6: lstore_2
       7: aload_0
       8: invokeinterface #145,  1          // InterfaceMethod net/openhft/chronicle/bytes/Bytes.length:()I
      13: iconst_1
      14: isub
      15: istore        4
      17: iload_1
      18: iload         4
      20: iadd
      21: iconst_1
      22: iadd
      23: iconst_2
      24: idiv
      25: istore        5
      27: iconst_0
      28: istore        6
      30: iload         6
      32: iload         5
      34: iload_1
      35: isub
      36: if_icmpge     101
      39: aload_0
      40: iload_1
      41: iload         6
      43: iadd
      44: invokeinterface #146,  2          // InterfaceMethod net/openhft/chronicle/bytes/Bytes.charAt:(I)C
      49: istore        7
      51: aload_0
      52: lload_2
      53: iload_1
      54: i2l
      55: ladd
      56: iload         6
      58: i2l
      59: ladd
      60: aload_0
      61: iload         4
      63: iload         6
      65: isub
      66: invokeinterface #146,  2          // InterfaceMethod net/openhft/chronicle/bytes/Bytes.charAt:(I)C
      71: invokeinterface #147,  4          // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writeUnsignedByte:(JI)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      76: pop
      77: aload_0
      78: lload_2
      79: iload         4
      81: i2l
      82: ladd
      83: iload         6
      85: i2l
      86: lsub
      87: iload         7
      89: invokeinterface #147,  4          // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writeUnsignedByte:(JI)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      94: pop
      95: iinc          6, 1
      98: goto          30
     101: return

  public static long roundNup(double, long);
    Code:
       0: dload_0
       1: dconst_0
       2: dcmpg
       3: ifge          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: istore        4
      13: dload_0
      14: invokestatic  #148                // Method java/lang/Math.abs:(D)D
      17: dstore_0
      18: dload_0
      19: lload_2
      20: l2d
      21: dmul
      22: dstore        5
      24: dload         5
      26: d2l
      27: lstore        7
      29: dload         5
      31: lload         7
      33: l2d
      34: dsub
      35: dload_0
      36: invokestatic  #149                // Method java/lang/Math.ulp:(D)D
      39: lload_2
      40: l2d
      41: ldc2_w        #150                // double 0.983d
      44: dmul
      45: dmul
      46: dadd
      47: dstore        9
      49: dload         9
      51: ldc2_w        #152                // double 0.5d
      54: dcmpl
      55: iflt          64
      58: lload         7
      60: lconst_1
      61: ladd
      62: lstore        7
      64: iload         4
      66: ifeq          74
      69: lload         7
      71: lneg
      72: lstore        7
      74: lload         7
      76: lreturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #4                  // class net/openhft/chronicle/bytes/BytesUtil
       4: putstatic     #1                  // Field $VALUES:[Lnet/openhft/chronicle/bytes/BytesUtil;
       7: iconst_0
       8: newarray       int
      10: putstatic     #15                 // Field NO_INTS:[I
      13: invokedynamic #154,  0            // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      18: invokestatic  #155                // Method net/openhft/chronicle/core/ClassLocal.withInitial:(Ljava/util/function/Function;)Lnet/openhft/chronicle/core/ClassLocal;
      21: putstatic     #7                  // Field TRIVIALLY_COPYABLE:Lnet/openhft/chronicle/core/ClassLocal;
      24: return
}
