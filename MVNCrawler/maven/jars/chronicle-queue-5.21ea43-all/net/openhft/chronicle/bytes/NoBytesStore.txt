Compiled from "NoBytesStore.java"
public final class net.openhft.chronicle.bytes.NoBytesStore extends java.lang.Enum<net.openhft.chronicle.bytes.NoBytesStore> implements net.openhft.chronicle.bytes.BytesStore {
  public static final net.openhft.chronicle.bytes.NoBytesStore NO_BYTES_STORE;

  public static final long NO_PAGE;

  public static final net.openhft.chronicle.bytes.Bytes<java.lang.Void> NO_BYTES;

  private static final net.openhft.chronicle.bytes.NoBytesStore[] $VALUES;

  public static net.openhft.chronicle.bytes.NoBytesStore[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lnet/openhft/chronicle/bytes/NoBytesStore;
       3: invokevirtual #2                  // Method "[Lnet/openhft/chronicle/bytes/NoBytesStore;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lnet/openhft/chronicle/bytes/NoBytesStore;"
       9: areturn

  public static net.openhft.chronicle.bytes.NoBytesStore valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class net/openhft/chronicle/bytes/NoBytesStore
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class net/openhft/chronicle/bytes/NoBytesStore
       9: areturn

  private net.openhft.chronicle.bytes.NoBytesStore();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public static <T, B extends net.openhft.chronicle.bytes.BytesStore<B, T>> net.openhft.chronicle.bytes.BytesStore<B, T> noBytesStore();
    Code:
       0: getstatic     #7                  // Field NO_BYTES_STORE:Lnet/openhft/chronicle/bytes/NoBytesStore;
       3: areturn

  public void reserve(net.openhft.chronicle.core.io.ReferenceOwner) throws java.lang.IllegalStateException;
    Code:
       0: return

  public void release(net.openhft.chronicle.core.io.ReferenceOwner) throws java.lang.IllegalStateException;
    Code:
       0: return

  public void releaseLast(net.openhft.chronicle.core.io.ReferenceOwner) throws java.lang.IllegalStateException;
    Code:
       0: return

  public int refCount();
    Code:
       0: iconst_1
       1: ireturn

  public boolean tryReserve(net.openhft.chronicle.core.io.ReferenceOwner);
    Code:
       0: iconst_0
       1: ireturn

  public boolean reservedBy(net.openhft.chronicle.core.io.ReferenceOwner);
    Code:
       0: iconst_1
       1: ireturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeByte(long, byte);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public net.openhft.chronicle.bytes.RandomDataOutput writeShort(long, short);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public net.openhft.chronicle.bytes.RandomDataOutput writeInt(long, int);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public net.openhft.chronicle.bytes.RandomDataOutput writeOrderedInt(long, int);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public net.openhft.chronicle.bytes.RandomDataOutput writeLong(long, long);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public net.openhft.chronicle.bytes.RandomDataOutput writeOrderedLong(long, long);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public net.openhft.chronicle.bytes.RandomDataOutput writeFloat(long, float);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public net.openhft.chronicle.bytes.RandomDataOutput writeDouble(long, double);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public net.openhft.chronicle.bytes.RandomDataOutput writeVolatileByte(long, byte);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public net.openhft.chronicle.bytes.RandomDataOutput writeVolatileShort(long, short);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public net.openhft.chronicle.bytes.RandomDataOutput writeVolatileInt(long, int);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public net.openhft.chronicle.bytes.RandomDataOutput writeVolatileLong(long, long);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public net.openhft.chronicle.bytes.RandomDataOutput write(long, byte[], int, int);
    Code:
       0: iload         5
       2: ifeq          13
       5: new           #8                  // class java/lang/UnsupportedOperationException
       8: dup
       9: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
      12: athrow
      13: aload_0
      14: areturn

  public void write(long, java.nio.ByteBuffer, int, int);
    Code:
       0: iload         5
       2: ifeq          13
       5: new           #8                  // class java/lang/UnsupportedOperationException
       8: dup
       9: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
      12: athrow
      13: return

  public net.openhft.chronicle.bytes.RandomDataOutput write(long, net.openhft.chronicle.bytes.RandomDataInput, long, long);
    Code:
       0: lload         6
       2: lconst_0
       3: lcmp
       4: ifeq          15
       7: new           #8                  // class java/lang/UnsupportedOperationException
      10: dup
      11: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
      14: athrow
      15: aload_0
      16: areturn

  public byte readByte(long);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public int peekUnsignedByte(long);
    Code:
       0: iconst_m1
       1: ireturn

  public short readShort(long);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public int readInt(long);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public long readLong(long);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public float readFloat(long);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public double readDouble(long);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public byte readVolatileByte(long) throws java.nio.BufferUnderflowException;
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public short readVolatileShort(long) throws java.nio.BufferUnderflowException;
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public int readVolatileInt(long) throws java.nio.BufferUnderflowException;
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public long readVolatileLong(long) throws java.nio.BufferUnderflowException;
    Code:
       0: new           #10                 // class java/nio/BufferUnderflowException
       3: dup
       4: invokespecial #11                 // Method java/nio/BufferUnderflowException."<init>":()V
       7: athrow

  public boolean isDirectMemory();
    Code:
       0: iconst_0
       1: ireturn

  public net.openhft.chronicle.bytes.BytesStore copy();
    Code:
       0: aload_0
       1: areturn

  public long capacity();
    Code:
       0: lconst_0
       1: lreturn

  public java.lang.Void underlyingObject();
    Code:
       0: aconst_null
       1: areturn

  public boolean inside(long);
    Code:
       0: iconst_0
       1: ireturn

  public boolean inside(long, long);
    Code:
       0: iconst_0
       1: ireturn

  public long copyTo(net.openhft.chronicle.bytes.BytesStore);
    Code:
       0: lconst_0
       1: lreturn

  public void nativeWrite(long, long, long);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public long write8bit(long, net.openhft.chronicle.bytes.BytesStore);
    Code:
       0: new           #12                 // class java/nio/BufferOverflowException
       3: dup
       4: invokespecial #13                 // Method java/nio/BufferOverflowException."<init>":()V
       7: athrow

  public long write8bit(long, java.lang.String, int, int);
    Code:
       0: new           #12                 // class java/nio/BufferOverflowException
       3: dup
       4: invokespecial #13                 // Method java/nio/BufferOverflowException."<init>":()V
       7: athrow

  public void nativeRead(long, long, long);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean compareAndSwapInt(long, int, int);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void testAndSetInt(long, int, int);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean compareAndSwapLong(long, long, long);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean equalBytes(net.openhft.chronicle.bytes.BytesStore, long);
    Code:
       0: lload_2
       1: lconst_0
       2: lcmp
       3: ifne          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn

  public void move(long, long, long);
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public long addressForRead(long) throws java.nio.BufferUnderflowException;
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifeq          14
       6: new           #10                 // class java/nio/BufferUnderflowException
       9: dup
      10: invokespecial #11                 // Method java/nio/BufferUnderflowException."<init>":()V
      13: athrow
      14: getstatic     #14                 // Field NO_PAGE:J
      17: lreturn

  public long addressForWrite(long) throws java.nio.BufferOverflowException;
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifeq          14
       6: new           #12                 // class java/nio/BufferOverflowException
       9: dup
      10: invokespecial #13                 // Method java/nio/BufferOverflowException."<init>":()V
      13: athrow
      14: getstatic     #14                 // Field NO_PAGE:J
      17: lreturn

  public long addressForWritePosition() throws java.lang.UnsupportedOperationException, java.nio.BufferOverflowException;
    Code:
       0: getstatic     #14                 // Field NO_PAGE:J
       3: lreturn

  public net.openhft.chronicle.bytes.Bytes bytesForWrite();
    Code:
       0: new           #8                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #15                 // String todo
       6: invokespecial #16                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean sharedMemory();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.Object underlyingObject();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method underlyingObject:()Ljava/lang/Void;
       4: areturn

  static {};
    Code:
       0: new           #4                  // class net/openhft/chronicle/bytes/NoBytesStore
       3: dup
       4: ldc           #18                 // String NO_BYTES_STORE
       6: iconst_0
       7: invokespecial #19                 // Method "<init>":(Ljava/lang/String;I)V
      10: putstatic     #7                  // Field NO_BYTES_STORE:Lnet/openhft/chronicle/bytes/NoBytesStore;
      13: iconst_1
      14: anewarray     #4                  // class net/openhft/chronicle/bytes/NoBytesStore
      17: dup
      18: iconst_0
      19: getstatic     #7                  // Field NO_BYTES_STORE:Lnet/openhft/chronicle/bytes/NoBytesStore;
      22: aastore
      23: putstatic     #1                  // Field $VALUES:[Lnet/openhft/chronicle/bytes/NoBytesStore;
      26: invokestatic  #20                 // Method net/openhft/chronicle/core/OS.memory:()Lnet/openhft/chronicle/core/Memory;
      29: invokestatic  #21                 // Method net/openhft/chronicle/core/OS.pageSize:()I
      32: i2l
      33: invokeinterface #22,  3           // InterfaceMethod net/openhft/chronicle/core/Memory.allocate:(J)J
      38: putstatic     #14                 // Field NO_PAGE:J
      41: new           #23                 // class net/openhft/chronicle/bytes/NativeBytes
      44: dup
      45: invokestatic  #24                 // Method noBytesStore:()Lnet/openhft/chronicle/bytes/BytesStore;
      48: invokespecial #25                 // Method net/openhft/chronicle/bytes/NativeBytes."<init>":(Lnet/openhft/chronicle/bytes/BytesStore;)V
      51: putstatic     #26                 // Field NO_BYTES:Lnet/openhft/chronicle/bytes/Bytes;
      54: getstatic     #26                 // Field NO_BYTES:Lnet/openhft/chronicle/bytes/Bytes;
      57: invokestatic  #27                 // Method net/openhft/chronicle/core/io/IOTools.unmonitor:(Ljava/lang/Object;)V
      60: goto          73
      63: astore_0
      64: new           #30                 // class java/lang/AssertionError
      67: dup
      68: aload_0
      69: invokespecial #31                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      72: athrow
      73: return
    Exception table:
       from    to  target type
          26    60    63   Class java/lang/IllegalStateException
          26    60    63   Class java/lang/IllegalArgumentException
}
