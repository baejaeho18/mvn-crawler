Compiled from "MappedBytesStore.java"
public class net.openhft.chronicle.bytes.MappedBytesStore extends net.openhft.chronicle.bytes.NativeBytesStore<java.lang.Void> {
  private final net.openhft.chronicle.bytes.MappedFile mappedFile;

  private final long start;

  private final long safeLimit;

  static final boolean $assertionsDisabled;

  protected net.openhft.chronicle.bytes.MappedBytesStore(net.openhft.chronicle.core.io.ReferenceOwner, net.openhft.chronicle.bytes.MappedFile, long, long, long, long) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload         5
       3: lload_3
       4: lload         7
       6: ladd
       7: new           #1                  // class net/openhft/chronicle/core/OS$Unmapper
      10: dup
      11: lload         5
      13: lload         7
      15: invokespecial #2                  // Method net/openhft/chronicle/core/OS$Unmapper."<init>":(JJ)V
      18: iconst_0
      19: invokespecial #3                  // Method net/openhft/chronicle/bytes/NativeBytesStore."<init>":(JJLjava/lang/Runnable;Z)V
      22: aload_0
      23: aload_2
      24: putfield      #4                  // Field mappedFile:Lnet/openhft/chronicle/bytes/MappedFile;
      27: aload_0
      28: lload_3
      29: putfield      #5                  // Field start:J
      32: aload_0
      33: lload_3
      34: lload         9
      36: ladd
      37: putfield      #6                  // Field safeLimit:J
      40: aload_0
      41: getstatic     #7                  // Field INIT:Lnet/openhft/chronicle/core/io/ReferenceOwner;
      44: aload_1
      45: invokevirtual #8                  // Method reserveTransfer:(Lnet/openhft/chronicle/core/io/ReferenceOwner;Lnet/openhft/chronicle/core/io/ReferenceOwner;)V
      48: return

  public long underlyingCapacity();
    Code:
       0: aload_0
       1: getfield      #4                  // Field mappedFile:Lnet/openhft/chronicle/bytes/MappedFile;
       4: invokevirtual #9                  // Method net/openhft/chronicle/bytes/MappedFile.capacity:()J
       7: lreturn

  public net.openhft.chronicle.bytes.Bytes<java.lang.Void> bytesForRead() throws java.lang.IllegalStateException;
    Code:
       0: new           #10                 // class net/openhft/chronicle/bytes/NativeBytes
       3: dup
       4: aload_0
       5: invokespecial #11                 // Method net/openhft/chronicle/bytes/NativeBytes."<init>":(Lnet/openhft/chronicle/bytes/BytesStore;)V
       8: aload_0
       9: invokevirtual #12                 // Method writeLimit:()J
      12: invokevirtual #13                 // Method net/openhft/chronicle/bytes/NativeBytes.readLimit:(J)Lnet/openhft/chronicle/bytes/Bytes;
      15: aload_0
      16: invokevirtual #14                 // Method start:()J
      19: invokeinterface #15,  3           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readPosition:(J)Lnet/openhft/chronicle/bytes/StreamingDataInput;
      24: checkcast     #16                 // class net/openhft/chronicle/bytes/Bytes
      27: areturn
      28: astore_1
      29: new           #19                 // class java/lang/IllegalStateException
      32: dup
      33: aload_1
      34: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      37: athrow
    Exception table:
       from    to  target type
           0    27    28   Class java/nio/BufferUnderflowException
           0    27    28   Class java/lang/IllegalArgumentException

  public net.openhft.chronicle.bytes.VanillaBytes<java.lang.Void> bytesForWrite() throws java.lang.IllegalStateException;
    Code:
       0: new           #10                 // class net/openhft/chronicle/bytes/NativeBytes
       3: dup
       4: aload_0
       5: invokespecial #11                 // Method net/openhft/chronicle/bytes/NativeBytes."<init>":(Lnet/openhft/chronicle/bytes/BytesStore;)V
       8: areturn
       9: astore_1
      10: new           #21                 // class java/lang/AssertionError
      13: dup
      14: aload_1
      15: invokespecial #22                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      18: athrow
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/IllegalArgumentException

  public boolean inside(long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field start:J
       4: lload_1
       5: lcmp
       6: ifgt          22
       9: lload_1
      10: aload_0
      11: getfield      #6                  // Field safeLimit:J
      14: lcmp
      15: ifge          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public boolean inside(long, long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field start:J
       4: lload_1
       5: lcmp
       6: ifgt          24
       9: lload_1
      10: lload_3
      11: ladd
      12: aload_0
      13: getfield      #23                 // Field limit:J
      16: lcmp
      17: ifge          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public long safeLimit();
    Code:
       0: aload_0
       1: getfield      #6                  // Field safeLimit:J
       4: lreturn

  public byte readByte(long);
    Code:
       0: aload_0
       1: getfield      #24                 // Field memory:Lnet/openhft/chronicle/core/Memory;
       4: aload_0
       5: getfield      #25                 // Field address:J
       8: aload_0
       9: getfield      #5                  // Field start:J
      12: lsub
      13: lload_1
      14: ladd
      15: invokeinterface #26,  3           // InterfaceMethod net/openhft/chronicle/core/Memory.readByte:(J)B
      20: ireturn

  public net.openhft.chronicle.bytes.NativeBytesStore<java.lang.Void> writeOrderedInt(long, int) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field memory:Lnet/openhft/chronicle/core/Memory;
       4: aload_0
       5: getfield      #25                 // Field address:J
       8: aload_0
       9: getfield      #5                  // Field start:J
      12: lsub
      13: lload_1
      14: ladd
      15: iload_3
      16: invokeinterface #27,  4           // InterfaceMethod net/openhft/chronicle/core/Memory.writeOrderedInt:(JI)V
      21: aload_0
      22: areturn

  protected long translate(long);
    Code:
       0: getstatic     #28                 // Field $assertionsDisabled:Z
       3: ifne          23
       6: lload_1
       7: aload_0
       8: getfield      #5                  // Field start:J
      11: lcmp
      12: ifge          23
      15: new           #21                 // class java/lang/AssertionError
      18: dup
      19: invokespecial #29                 // Method java/lang/AssertionError."<init>":()V
      22: athrow
      23: getstatic     #28                 // Field $assertionsDisabled:Z
      26: ifne          46
      29: lload_1
      30: aload_0
      31: getfield      #23                 // Field limit:J
      34: lcmp
      35: iflt          46
      38: new           #21                 // class java/lang/AssertionError
      41: dup
      42: invokespecial #29                 // Method java/lang/AssertionError."<init>":()V
      45: athrow
      46: lload_1
      47: aload_0
      48: getfield      #5                  // Field start:J
      51: lsub
      52: lreturn

  public long start();
    Code:
       0: aload_0
       1: getfield      #5                  // Field start:J
       4: lreturn

  public long readPosition();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method start:()J
       4: lreturn

  public net.openhft.chronicle.bytes.Bytes bytesForWrite() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method bytesForWrite:()Lnet/openhft/chronicle/bytes/VanillaBytes;
       4: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeOrderedInt(long, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #31                 // Method writeOrderedInt:(JI)Lnet/openhft/chronicle/bytes/NativeBytesStore;
       6: areturn

  static {};
    Code:
       0: ldc           #32                 // class net/openhft/chronicle/bytes/MappedBytesStore
       2: invokevirtual #33                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #28                 // Field $assertionsDisabled:Z
      16: return
}
