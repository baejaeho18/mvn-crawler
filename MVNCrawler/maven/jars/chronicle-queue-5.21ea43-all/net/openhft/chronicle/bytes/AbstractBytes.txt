Compiled from "AbstractBytes.java"
public abstract class net.openhft.chronicle.bytes.AbstractBytes<Underlying> extends net.openhft.chronicle.core.io.AbstractReferenceCounted implements net.openhft.chronicle.bytes.Bytes<Underlying> {
  private static final boolean BYTES_BOUNDS_UNCHECKED;

  private final java.lang.String name;

  protected net.openhft.chronicle.bytes.BytesStore<net.openhft.chronicle.bytes.Bytes<Underlying>, Underlying> bytesStore;

  protected long readPosition;

  protected long writePosition;

  protected long writeLimit;

  protected boolean isPresent;

  private int lastDecimalPlaces;

  private boolean lenient;

  static final boolean $assertionsDisabled;

  net.openhft.chronicle.bytes.AbstractBytes(net.openhft.chronicle.bytes.BytesStore<net.openhft.chronicle.bytes.Bytes<Underlying>, Underlying>, long, long) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: lload         4
       5: ldc           #1                  // String
       7: invokespecial #2                  // Method "<init>":(Lnet/openhft/chronicle/bytes/BytesStore;JJLjava/lang/String;)V
      10: return

  net.openhft.chronicle.bytes.AbstractBytes(net.openhft.chronicle.bytes.BytesStore<net.openhft.chronicle.bytes.Bytes<Underlying>, Underlying>, long, long, java.lang.String) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #3,  1            // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.isDirectMemory:()Z
       7: invokespecial #4                  // Method net/openhft/chronicle/core/io/AbstractReferenceCounted."<init>":(Z)V
      10: aload_0
      11: iconst_0
      12: putfield      #5                  // Field lastDecimalPlaces:I
      15: aload_0
      16: iconst_0
      17: putfield      #6                  // Field lenient:Z
      20: aload_0
      21: aload_1
      22: invokevirtual #7                  // Method bytesStore:(Lnet/openhft/chronicle/bytes/BytesStore;)V
      25: aload_1
      26: aload_0
      27: invokeinterface #8,  2            // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.reserve:(Lnet/openhft/chronicle/core/io/ReferenceOwner;)V
      32: aload_0
      33: aload_1
      34: invokeinterface #9,  1            // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readPosition:()J
      39: putfield      #10                 // Field readPosition:J
      42: aload_0
      43: lload_2
      44: invokevirtual #11                 // Method uncheckedWritePosition:(J)V
      47: aload_0
      48: lload         4
      50: putfield      #12                 // Field writeLimit:J
      53: aload_0
      54: aload         6
      56: putfield      #13                 // Field name:Ljava/lang/String;
      59: return

  public boolean isDirectMemory();
    Code:
       0: aload_0
       1: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
       4: invokeinterface #3,  1            // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.isDirectMemory:()Z
       9: ireturn

  public boolean canReadDirect(long);
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method writePosition:()J
       4: aload_0
       5: getfield      #10                 // Field readPosition:J
       8: lsub
       9: lstore_3
      10: aload_0
      11: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      14: invokeinterface #3,  1            // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.isDirectMemory:()Z
      19: ifeq          32
      22: lload_3
      23: lload_1
      24: lcmp
      25: iflt          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public void move(long, long, long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException, java.lang.ArithmeticException;
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method start:()J
       4: lstore        7
       6: aload_0
       7: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      10: lload_1
      11: lload         7
      13: lsub
      14: lload_3
      15: lload         7
      17: lsub
      18: lload         5
      20: invokeinterface #17,  7           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.move:(JJJ)V
      25: return

  public net.openhft.chronicle.bytes.Bytes<Underlying> compact() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method start:()J
       4: lstore_1
       5: aload_0
       6: invokevirtual #18                 // Method readRemaining:()J
       9: lstore_3
      10: lload_3
      11: lconst_0
      12: lcmp
      13: ifle          55
      16: lload_1
      17: aload_0
      18: getfield      #10                 // Field readPosition:J
      21: lcmp
      22: ifge          55
      25: aload_0
      26: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      29: aload_0
      30: getfield      #10                 // Field readPosition:J
      33: lload_1
      34: lload_3
      35: invokeinterface #17,  7           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.move:(JJJ)V
      40: aload_0
      41: lload_1
      42: putfield      #10                 // Field readPosition:J
      45: aload_0
      46: aload_0
      47: getfield      #10                 // Field readPosition:J
      50: lload_3
      51: ladd
      52: invokevirtual #11                 // Method uncheckedWritePosition:(J)V
      55: aload_0
      56: areturn
      57: astore        5
      59: new           #21                 // class java/lang/AssertionError
      62: dup
      63: aload         5
      65: invokespecial #22                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      68: athrow
    Exception table:
       from    to  target type
          10    56    57   Class java/nio/BufferUnderflowException
          10    56    57   Class java/lang/ArithmeticException

  public net.openhft.chronicle.bytes.Bytes<Underlying> clear() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method start:()J
       4: lstore_1
       5: aload_0
       6: lload_1
       7: putfield      #10                 // Field readPosition:J
      10: aload_0
      11: lload_1
      12: invokevirtual #11                 // Method uncheckedWritePosition:(J)V
      15: aload_0
      16: aload_0
      17: invokevirtual #23                 // Method capacity:()J
      20: putfield      #12                 // Field writeLimit:J
      23: aload_0
      24: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> clearAndPad(long) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method start:()J
       4: lload_1
       5: ladd
       6: aload_0
       7: invokevirtual #23                 // Method capacity:()J
      10: lcmp
      11: ifle          30
      14: aload_0
      15: aload_0
      16: invokevirtual #16                 // Method start:()J
      19: lload_1
      20: ldc           #24                 // String clearAndPad failed. Start: %d + length: %d > capacity: %d
      22: aload_0
      23: invokevirtual #23                 // Method capacity:()J
      26: invokespecial #25                 // Method newBOERange:(JJLjava/lang/String;J)Lnet/openhft/chronicle/bytes/util/DecoratedBufferOverflowException;
      29: athrow
      30: aload_0
      31: invokevirtual #16                 // Method start:()J
      34: lload_1
      35: ladd
      36: lstore_3
      37: aload_0
      38: lload_3
      39: putfield      #10                 // Field readPosition:J
      42: aload_0
      43: lload_3
      44: invokevirtual #11                 // Method uncheckedWritePosition:(J)V
      47: aload_0
      48: aload_0
      49: invokevirtual #23                 // Method capacity:()J
      52: putfield      #12                 // Field writeLimit:J
      55: aload_0
      56: areturn

  public long readLimit();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method writePosition:()J
       4: lreturn

  public long writeLimit();
    Code:
       0: aload_0
       1: getfield      #12                 // Field writeLimit:J
       4: lreturn

  public long realCapacity();
    Code:
       0: aload_0
       1: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
       4: invokeinterface #26,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.capacity:()J
       9: lreturn

  public long realWriteRemaining();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method realCapacity:()J
       4: aload_0
       5: invokevirtual #28                 // Method writeLimit:()J
       8: invokestatic  #29                 // Method java/lang/Math.min:(JJ)J
      11: aload_0
      12: invokevirtual #15                 // Method writePosition:()J
      15: lsub
      16: lreturn

  public boolean canWriteDirect(long);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method isDirectMemory:()Z
       4: ifeq          37
       7: aload_0
       8: getfield      #12                 // Field writeLimit:J
      11: aload_0
      12: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      15: invokeinterface #31,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.realCapacity:()J
      20: invokestatic  #29                 // Method java/lang/Math.min:(JJ)J
      23: lload_1
      24: aload_0
      25: invokevirtual #15                 // Method writePosition:()J
      28: ladd
      29: lcmp
      30: iflt          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  public long capacity();
    Code:
       0: aload_0
       1: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
       4: invokeinterface #26,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.capacity:()J
       9: lreturn

  public Underlying underlyingObject();
    Code:
       0: aload_0
       1: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
       4: invokeinterface #32,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.underlyingObject:()Ljava/lang/Object;
       9: areturn

  public long start();
    Code:
       0: aload_0
       1: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
       4: invokeinterface #33,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.start:()J
       9: lreturn

  public long readPosition();
    Code:
       0: aload_0
       1: getfield      #10                 // Field readPosition:J
       4: lreturn

  public long writePosition();
    Code:
       0: aload_0
       1: getfield      #34                 // Field writePosition:J
       4: lreturn

  public boolean compareAndSwapInt(long, int, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #35                 // long 4l
       5: invokevirtual #37                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_1
      13: iload_3
      14: iload         4
      16: invokeinterface #38,  5           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.compareAndSwapInt:(JII)Z
      21: ireturn

  public void testAndSetInt(long, int, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #35                 // long 4l
       5: invokevirtual #37                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_1
      13: iload_3
      14: iload         4
      16: invokeinterface #39,  5           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.testAndSetInt:(JII)V
      21: return

  public boolean compareAndSwapLong(long, long, long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #40                 // long 8l
       5: invokevirtual #37                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_1
      13: lload_3
      14: lload         5
      16: invokeinterface #42,  7           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.compareAndSwapLong:(JJJ)Z
      21: ireturn

  public net.openhft.chronicle.bytes.AbstractBytes append(double) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #43                 // long 380l
       4: invokevirtual #45                 // Method canWriteDirect:(J)Z
       7: istore_3
       8: dload_1
       9: invokestatic  #46                 // Method java/lang/Math.abs:(D)D
      12: dstore        4
      14: dload         4
      16: ldc2_w        #47                 // double 1.0E-18d
      19: dcmpg
      20: ifge          34
      23: aload_0
      24: dload_1
      25: invokestatic  #49                 // Method java/lang/Double.toString:(D)Ljava/lang/String;
      28: invokevirtual #50                 // Method append:(Ljava/lang/CharSequence;)Lnet/openhft/chronicle/bytes/ByteStringAppender;
      31: pop
      32: aload_0
      33: areturn
      34: iload_3
      35: ifne          72
      38: ldc2_w        #51                 // double 1.0E-6d
      41: dload         4
      43: dcmpg
      44: ifgt          70
      47: dload         4
      49: ldc2_w        #53                 // double 1.0E20d
      52: dcmpg
      53: ifge          70
      56: aload_0
      57: ldc2_w        #55                 // long 24l
      60: invokevirtual #45                 // Method canWriteDirect:(J)Z
      63: ifeq          70
      66: iconst_1
      67: goto          71
      70: iconst_0
      71: istore_3
      72: iload_3
      73: ifeq          106
      76: aload_0
      77: aload_0
      78: invokevirtual #15                 // Method writePosition:()J
      81: invokevirtual #57                 // Method addressForWrite:(J)J
      84: lstore        6
      86: lload         6
      88: dload_1
      89: invokestatic  #58                 // Method net/openhft/chronicle/core/io/UnsafeText.appendDouble:(JD)J
      92: lstore        8
      94: aload_0
      95: lload         8
      97: lload         6
      99: lsub
     100: invokevirtual #59                 // Method writeSkip:(J)Lnet/openhft/chronicle/bytes/Bytes;
     103: pop
     104: aload_0
     105: areturn
     106: aload_0
     107: dload_1
     108: invokestatic  #60                 // Method net/openhft/chronicle/bytes/BytesInternal.append:(Lnet/openhft/chronicle/bytes/StreamingDataOutput;D)V
     111: aload_0
     112: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> readPosition(long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: lload_1
       1: aload_0
       2: invokevirtual #16                 // Method start:()J
       5: lcmp
       6: ifge          43
       9: new           #61                 // class net/openhft/chronicle/bytes/util/DecoratedBufferUnderflowException
      12: dup
      13: ldc           #62                 // String readPosition failed. Position: %d < start: %d
      15: iconst_2
      16: anewarray     #63                 // class java/lang/Object
      19: dup
      20: iconst_0
      21: lload_1
      22: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      25: aastore
      26: dup
      27: iconst_1
      28: aload_0
      29: invokevirtual #16                 // Method start:()J
      32: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      35: aastore
      36: invokestatic  #65                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      39: invokespecial #66                 // Method net/openhft/chronicle/bytes/util/DecoratedBufferUnderflowException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: lload_1
      44: aload_0
      45: invokevirtual #67                 // Method readLimit:()J
      48: lcmp
      49: ifle          86
      52: new           #61                 // class net/openhft/chronicle/bytes/util/DecoratedBufferUnderflowException
      55: dup
      56: ldc           #68                 // String readPosition failed. Position: %d > readLimit: %d
      58: iconst_2
      59: anewarray     #63                 // class java/lang/Object
      62: dup
      63: iconst_0
      64: lload_1
      65: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      68: aastore
      69: dup
      70: iconst_1
      71: aload_0
      72: invokevirtual #67                 // Method readLimit:()J
      75: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      78: aastore
      79: invokestatic  #65                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      82: invokespecial #66                 // Method net/openhft/chronicle/bytes/util/DecoratedBufferUnderflowException."<init>":(Ljava/lang/String;)V
      85: athrow
      86: aload_0
      87: lload_1
      88: putfield      #10                 // Field readPosition:J
      91: aload_0
      92: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> readLimit(long) throws java.nio.BufferUnderflowException;
    Code:
       0: lload_1
       1: aload_0
       2: invokevirtual #16                 // Method start:()J
       5: lcmp
       6: ifge          15
       9: aload_0
      10: lload_1
      11: invokespecial #69                 // Method limitLessThanStart:(J)Lnet/openhft/chronicle/bytes/util/DecoratedBufferUnderflowException;
      14: athrow
      15: lload_1
      16: aload_0
      17: invokevirtual #28                 // Method writeLimit:()J
      20: lcmp
      21: ifle          30
      24: aload_0
      25: lload_1
      26: invokespecial #70                 // Method limitGreaterThanWriteLimit:(J)Lnet/openhft/chronicle/bytes/util/DecoratedBufferUnderflowException;
      29: athrow
      30: aload_0
      31: lload_1
      32: invokevirtual #11                 // Method uncheckedWritePosition:(J)V
      35: aload_0
      36: areturn

  private net.openhft.chronicle.bytes.util.DecoratedBufferUnderflowException limitGreaterThanWriteLimit(long);
    Code:
       0: new           #61                 // class net/openhft/chronicle/bytes/util/DecoratedBufferUnderflowException
       3: dup
       4: ldc           #71                 // String readLimit failed. Limit: %d > writeLimit: %d
       6: iconst_2
       7: anewarray     #63                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: lload_1
      13: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      16: aastore
      17: dup
      18: iconst_1
      19: aload_0
      20: invokevirtual #28                 // Method writeLimit:()J
      23: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      26: aastore
      27: invokestatic  #65                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      30: invokespecial #66                 // Method net/openhft/chronicle/bytes/util/DecoratedBufferUnderflowException."<init>":(Ljava/lang/String;)V
      33: areturn

  private net.openhft.chronicle.bytes.util.DecoratedBufferUnderflowException limitLessThanStart(long);
    Code:
       0: new           #61                 // class net/openhft/chronicle/bytes/util/DecoratedBufferUnderflowException
       3: dup
       4: ldc           #72                 // String readLimit failed. Limit: %d < start: %d
       6: iconst_2
       7: anewarray     #63                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: lload_1
      13: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      16: aastore
      17: dup
      18: iconst_1
      19: aload_0
      20: invokevirtual #16                 // Method start:()J
      23: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      26: aastore
      27: invokestatic  #65                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      30: invokespecial #66                 // Method net/openhft/chronicle/bytes/util/DecoratedBufferUnderflowException."<init>":(Ljava/lang/String;)V
      33: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writePosition(long) throws java.nio.BufferOverflowException;
    Code:
       0: lload_1
       1: aload_0
       2: invokevirtual #28                 // Method writeLimit:()J
       5: lcmp
       6: ifle          15
       9: aload_0
      10: lload_1
      11: invokespecial #73                 // Method writePositionTooLarge:(J)Lnet/openhft/chronicle/bytes/util/DecoratedBufferOverflowException;
      14: athrow
      15: lload_1
      16: aload_0
      17: invokevirtual #16                 // Method start:()J
      20: lcmp
      21: ifge          30
      24: aload_0
      25: lload_1
      26: invokespecial #74                 // Method writePositionTooSmall:(J)Lnet/openhft/chronicle/bytes/util/DecoratedBufferOverflowException;
      29: athrow
      30: lload_1
      31: aload_0
      32: invokevirtual #75                 // Method readPosition:()J
      35: lcmp
      36: ifge          44
      39: aload_0
      40: lload_1
      41: putfield      #10                 // Field readPosition:J
      44: aload_0
      45: lload_1
      46: invokevirtual #11                 // Method uncheckedWritePosition:(J)V
      49: aload_0
      50: areturn

  private net.openhft.chronicle.bytes.util.DecoratedBufferOverflowException writePositionTooSmall(long);
    Code:
       0: new           #76                 // class net/openhft/chronicle/bytes/util/DecoratedBufferOverflowException
       3: dup
       4: ldc           #77                 // String writePosition failed. Position: %d < start: %d
       6: iconst_2
       7: anewarray     #63                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: lload_1
      13: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      16: aastore
      17: dup
      18: iconst_1
      19: aload_0
      20: invokevirtual #16                 // Method start:()J
      23: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      26: aastore
      27: invokestatic  #65                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      30: invokespecial #78                 // Method net/openhft/chronicle/bytes/util/DecoratedBufferOverflowException."<init>":(Ljava/lang/String;)V
      33: areturn

  private net.openhft.chronicle.bytes.util.DecoratedBufferOverflowException writePositionTooLarge(long);
    Code:
       0: new           #76                 // class net/openhft/chronicle/bytes/util/DecoratedBufferOverflowException
       3: dup
       4: ldc           #79                 // String writePosition failed. Position: %d > writeLimit: %d
       6: iconst_2
       7: anewarray     #63                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: lload_1
      13: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      16: aastore
      17: dup
      18: iconst_1
      19: aload_0
      20: invokevirtual #28                 // Method writeLimit:()J
      23: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      26: aastore
      27: invokestatic  #65                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      30: invokespecial #78                 // Method net/openhft/chronicle/bytes/util/DecoratedBufferOverflowException."<init>":(Ljava/lang/String;)V
      33: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> readSkip(long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field lenient:Z
       4: ifeq          16
       7: lload_1
       8: aload_0
       9: invokevirtual #18                 // Method readRemaining:()J
      12: invokestatic  #29                 // Method java/lang/Math.min:(JJ)J
      15: lstore_1
      16: aload_0
      17: lload_1
      18: invokevirtual #80                 // Method readOffsetPositionMoved:(J)J
      21: pop2
      22: aload_0
      23: areturn

  public void uncheckedReadSkipOne();
    Code:
       0: aload_0
       1: dup
       2: getfield      #10                 // Field readPosition:J
       5: lconst_1
       6: ladd
       7: putfield      #10                 // Field readPosition:J
      10: return

  public void uncheckedReadSkipBackOne();
    Code:
       0: aload_0
       1: dup
       2: getfield      #10                 // Field readPosition:J
       5: lconst_1
       6: lsub
       7: putfield      #10                 // Field readPosition:J
      10: return

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeSkip(long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method writePosition:()J
       4: lstore_3
       5: aload_0
       6: lload_3
       7: lload_1
       8: invokevirtual #37                 // Method writeCheckOffset:(JJ)V
      11: aload_0
      12: lload_3
      13: lload_1
      14: ladd
      15: invokevirtual #11                 // Method uncheckedWritePosition:(J)V
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeLimit(long) throws java.nio.BufferOverflowException;
    Code:
       0: lload_1
       1: aload_0
       2: invokevirtual #16                 // Method start:()J
       5: lcmp
       6: ifge          15
       9: aload_0
      10: lload_1
      11: invokespecial #81                 // Method writeLimitTooSmall:(J)Lnet/openhft/chronicle/bytes/util/DecoratedBufferOverflowException;
      14: athrow
      15: aload_0
      16: invokevirtual #23                 // Method capacity:()J
      19: lstore_3
      20: lload_1
      21: lload_3
      22: lcmp
      23: ifle          33
      26: aload_0
      27: lload_1
      28: lload_3
      29: invokespecial #82                 // Method writeLimitTooBig:(JJ)Lnet/openhft/chronicle/bytes/util/DecoratedBufferOverflowException;
      32: athrow
      33: aload_0
      34: lload_1
      35: putfield      #12                 // Field writeLimit:J
      38: aload_0
      39: areturn

  private net.openhft.chronicle.bytes.util.DecoratedBufferOverflowException writeLimitTooBig(long, long);
    Code:
       0: new           #76                 // class net/openhft/chronicle/bytes/util/DecoratedBufferOverflowException
       3: dup
       4: ldc           #83                 // String writeLimit failed. Limit: %d > capacity: %d
       6: iconst_2
       7: anewarray     #63                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: lload_1
      13: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      16: aastore
      17: dup
      18: iconst_1
      19: lload_3
      20: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      23: aastore
      24: invokestatic  #65                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      27: invokespecial #78                 // Method net/openhft/chronicle/bytes/util/DecoratedBufferOverflowException."<init>":(Ljava/lang/String;)V
      30: areturn

  private net.openhft.chronicle.bytes.util.DecoratedBufferOverflowException writeLimitTooSmall(long);
    Code:
       0: new           #76                 // class net/openhft/chronicle/bytes/util/DecoratedBufferOverflowException
       3: dup
       4: ldc           #84                 // String writeLimit failed. Limit: %d < start: %d
       6: iconst_2
       7: anewarray     #63                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: lload_1
      13: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      16: aastore
      17: dup
      18: iconst_1
      19: aload_0
      20: invokevirtual #16                 // Method start:()J
      23: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      26: aastore
      27: invokestatic  #65                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      30: invokespecial #78                 // Method net/openhft/chronicle/bytes/util/DecoratedBufferOverflowException."<init>":(Ljava/lang/String;)V
      33: areturn

  protected void performRelease();
    Code:
       0: aload_0
       1: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
       4: aload_0
       5: invokeinterface #85,  2           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.release:(Lnet/openhft/chronicle/core/io/ReferenceOwner;)V
      10: aload_0
      11: invokestatic  #86                 // Method net/openhft/chronicle/bytes/ReleasedBytesStore.releasedBytesStore:()Lnet/openhft/chronicle/bytes/BytesStore;
      14: invokevirtual #7                  // Method bytesStore:(Lnet/openhft/chronicle/bytes/BytesStore;)V
      17: goto          54
      20: astore_1
      21: invokestatic  #88                 // Method net/openhft/chronicle/core/Jvm.warn:()Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
      24: aload_0
      25: invokevirtual #89                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: aload_1
      29: invokeinterface #90,  3           // InterfaceMethod net/openhft/chronicle/core/onoes/ExceptionHandler.on:(Ljava/lang/Class;Ljava/lang/Throwable;)V
      34: aload_0
      35: invokestatic  #91                 // Method net/openhft/chronicle/bytes/ReleasedBytesStore.releasedBytesStore:()Lnet/openhft/chronicle/bytes/BytesStore;
      38: invokevirtual #7                  // Method bytesStore:(Lnet/openhft/chronicle/bytes/BytesStore;)V
      41: goto          54
      44: astore_2
      45: aload_0
      46: invokestatic  #92                 // Method net/openhft/chronicle/bytes/ReleasedBytesStore.releasedBytesStore:()Lnet/openhft/chronicle/bytes/BytesStore;
      49: invokevirtual #7                  // Method bytesStore:(Lnet/openhft/chronicle/bytes/BytesStore;)V
      52: aload_2
      53: athrow
      54: return
    Exception table:
       from    to  target type
           0    10    20   Class java/lang/IllegalStateException
           0    10    44   any
          20    34    44   any

  public int readUnsignedByte() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lconst_1
       2: invokevirtual #80                 // Method readOffsetPositionMoved:(J)J
       5: lstore_1
       6: aload_0
       7: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      10: lload_1
      11: invokeinterface #93,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readUnsignedByte:(J)I
      16: ireturn
      17: astore_1
      18: iconst_m1
      19: ireturn
    Exception table:
       from    to  target type
           0    16    17   Class java/nio/BufferUnderflowException

  public int readUnsignedByte(long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #94                 // Method readByte:(J)B
       5: sipush        255
       8: iand
       9: ireturn

  public int uncheckedReadUnsignedByte();
    Code:
       0: aload_0
       1: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
       4: aload_0
       5: getfield      #10                 // Field readPosition:J
       8: invokeinterface #93,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readUnsignedByte:(J)I
      13: istore_1
      14: aload_0
      15: dup
      16: getfield      #10                 // Field readPosition:J
      19: lconst_1
      20: ladd
      21: putfield      #10                 // Field readPosition:J
      24: iload_1
      25: ireturn
      26: astore_1
      27: iconst_m1
      28: ireturn
    Exception table:
       from    to  target type
           0    25    26   Class java/nio/BufferUnderflowException
           0    25    26   Class java/lang/IllegalStateException

  public byte readByte() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lconst_1
       2: invokevirtual #80                 // Method readOffsetPositionMoved:(J)J
       5: lstore_1
       6: aload_0
       7: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      10: lload_1
      11: invokeinterface #95,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readByte:(J)B
      16: ireturn
      17: astore_1
      18: iconst_0
      19: ireturn
    Exception table:
       from    to  target type
           0    16    17   Class java/nio/BufferUnderflowException

  public int peekUnsignedByte() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field readPosition:J
       4: aload_0
       5: invokevirtual #15                 // Method writePosition:()J
       8: lcmp
       9: iflt          16
      12: iconst_m1
      13: goto          29
      16: aload_0
      17: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      20: aload_0
      21: getfield      #10                 // Field readPosition:J
      24: invokeinterface #93,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readUnsignedByte:(J)I
      29: ireturn
      30: astore_1
      31: iconst_m1
      32: ireturn
    Exception table:
       from    to  target type
           0    29    30   Class java/nio/BufferUnderflowException

  public short readShort() throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #96                 // long 2l
       4: invokevirtual #80                 // Method readOffsetPositionMoved:(J)J
       7: lstore_1
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_1
      13: invokeinterface #98,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readShort:(J)S
      18: ireturn
      19: astore_1
      20: aload_0
      21: getfield      #6                  // Field lenient:Z
      24: ifeq          29
      27: iconst_0
      28: ireturn
      29: aload_1
      30: athrow
    Exception table:
       from    to  target type
           0    18    19   Class java/nio/BufferUnderflowException

  public int readInt() throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #35                 // long 4l
       4: invokevirtual #80                 // Method readOffsetPositionMoved:(J)J
       7: lstore_1
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_1
      13: invokeinterface #99,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readInt:(J)I
      18: ireturn
      19: astore_1
      20: aload_0
      21: getfield      #6                  // Field lenient:Z
      24: ifeq          29
      27: iconst_0
      28: ireturn
      29: aload_1
      30: athrow
    Exception table:
       from    to  target type
           0    18    19   Class java/nio/BufferUnderflowException

  public byte readVolatileByte(long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: lconst_1
       3: iconst_1
       4: invokevirtual #100                // Method readCheckOffset:(JJZ)V
       7: aload_0
       8: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      11: lload_1
      12: invokeinterface #101,  3          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readVolatileByte:(J)B
      17: ireturn

  public short readVolatileShort(long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #96                 // long 2l
       5: iconst_1
       6: invokevirtual #100                // Method readCheckOffset:(JJZ)V
       9: aload_0
      10: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      13: lload_1
      14: invokeinterface #102,  3          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readVolatileShort:(J)S
      19: ireturn

  public int readVolatileInt(long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #35                 // long 4l
       5: iconst_1
       6: invokevirtual #100                // Method readCheckOffset:(JJZ)V
       9: aload_0
      10: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      13: lload_1
      14: invokeinterface #103,  3          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readVolatileInt:(J)I
      19: ireturn

  public long readVolatileLong(long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #40                 // long 8l
       5: iconst_1
       6: invokevirtual #100                // Method readCheckOffset:(JJZ)V
       9: aload_0
      10: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      13: lload_1
      14: invokeinterface #104,  3          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readVolatileLong:(J)J
      19: lreturn

  public long readLong() throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #40                 // long 8l
       4: invokevirtual #80                 // Method readOffsetPositionMoved:(J)J
       7: lstore_1
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_1
      13: invokeinterface #105,  3          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readLong:(J)J
      18: lreturn
      19: astore_1
      20: aload_0
      21: getfield      #6                  // Field lenient:Z
      24: ifeq          29
      27: lconst_0
      28: lreturn
      29: aload_1
      30: athrow
    Exception table:
       from    to  target type
           0    18    19   Class java/nio/BufferUnderflowException

  public float readFloat() throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #35                 // long 4l
       4: invokevirtual #80                 // Method readOffsetPositionMoved:(J)J
       7: lstore_1
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_1
      13: invokeinterface #106,  3          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readFloat:(J)F
      18: freturn
      19: astore_1
      20: aload_0
      21: getfield      #6                  // Field lenient:Z
      24: ifeq          29
      27: fconst_0
      28: freturn
      29: aload_1
      30: athrow
    Exception table:
       from    to  target type
           0    18    19   Class java/nio/BufferUnderflowException

  public double readDouble() throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #40                 // long 8l
       4: invokevirtual #80                 // Method readOffsetPositionMoved:(J)J
       7: lstore_1
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_1
      13: invokeinterface #107,  3          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readDouble:(J)D
      18: dreturn
      19: astore_1
      20: aload_0
      21: getfield      #6                  // Field lenient:Z
      24: ifeq          29
      27: dconst_0
      28: dreturn
      29: aload_1
      30: athrow
    Exception table:
       from    to  target type
           0    18    19   Class java/nio/BufferUnderflowException

  public int readVolatileInt() throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #35                 // long 4l
       4: invokevirtual #80                 // Method readOffsetPositionMoved:(J)J
       7: lstore_1
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_1
      13: invokeinterface #103,  3          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readVolatileInt:(J)I
      18: ireturn
      19: astore_1
      20: aload_0
      21: getfield      #6                  // Field lenient:Z
      24: ifeq          29
      27: iconst_0
      28: ireturn
      29: aload_1
      30: athrow
    Exception table:
       from    to  target type
           0    18    19   Class java/nio/BufferUnderflowException

  public long readVolatileLong() throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #40                 // long 8l
       4: invokevirtual #80                 // Method readOffsetPositionMoved:(J)J
       7: lstore_1
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_1
      13: invokeinterface #104,  3          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readVolatileLong:(J)J
      18: lreturn
      19: astore_1
      20: aload_0
      21: getfield      #6                  // Field lenient:Z
      24: ifeq          29
      27: lconst_0
      28: lreturn
      29: aload_1
      30: athrow
    Exception table:
       from    to  target type
           0    18    19   Class java/nio/BufferUnderflowException

  protected long readOffsetPositionMoved(long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field readPosition:J
       4: lstore_3
       5: aload_0
       6: aload_0
       7: getfield      #10                 // Field readPosition:J
      10: lload_1
      11: invokestatic  #108                // Method java/lang/Math.toIntExact:(J)I
      14: i2l
      15: iconst_0
      16: invokevirtual #100                // Method readCheckOffset:(JJZ)V
      19: aload_0
      20: dup
      21: getfield      #10                 // Field readPosition:J
      24: lload_1
      25: ladd
      26: putfield      #10                 // Field readPosition:J
      29: getstatic     #109                // Field $assertionsDisabled:Z
      32: ifne          55
      35: aload_0
      36: getfield      #10                 // Field readPosition:J
      39: aload_0
      40: invokevirtual #67                 // Method readLimit:()J
      43: lcmp
      44: ifle          55
      47: new           #21                 // class java/lang/AssertionError
      50: dup
      51: invokespecial #110                // Method java/lang/AssertionError."<init>":()V
      54: athrow
      55: lload_3
      56: lreturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeByte(long, byte) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: lconst_1
       3: invokevirtual #37                 // Method writeCheckOffset:(JJ)V
       6: aload_0
       7: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      10: lload_1
      11: iload_3
      12: invokeinterface #111,  4          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeByte:(JB)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      17: pop
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeShort(long, short) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #96                 // long 2l
       5: invokevirtual #37                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_1
      13: iload_3
      14: invokeinterface #112,  4          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeShort:(JS)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      19: pop
      20: aload_0
      21: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeInt(long, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #35                 // long 4l
       5: invokevirtual #37                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_1
      13: iload_3
      14: invokeinterface #113,  4          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeInt:(JI)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      19: pop
      20: aload_0
      21: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeOrderedInt(long, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #35                 // long 4l
       5: invokevirtual #37                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_1
      13: iload_3
      14: invokeinterface #114,  4          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeOrderedInt:(JI)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      19: pop
      20: aload_0
      21: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeLong(long, long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #40                 // long 8l
       5: invokevirtual #37                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_1
      13: lload_3
      14: invokeinterface #115,  5          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeLong:(JJ)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      19: pop
      20: aload_0
      21: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeOrderedLong(long, long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #40                 // long 8l
       5: invokevirtual #37                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_1
      13: lload_3
      14: invokeinterface #116,  5          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeOrderedLong:(JJ)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      19: pop
      20: aload_0
      21: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeFloat(long, float) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #35                 // long 4l
       5: invokevirtual #37                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_1
      13: fload_3
      14: invokeinterface #117,  4          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeFloat:(JF)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      19: pop
      20: aload_0
      21: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeDouble(long, double) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #40                 // long 8l
       5: invokevirtual #37                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_1
      13: dload_3
      14: invokeinterface #118,  5          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeDouble:(JD)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      19: pop
      20: aload_0
      21: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeVolatileByte(long, byte) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: lconst_1
       3: invokevirtual #37                 // Method writeCheckOffset:(JJ)V
       6: aload_0
       7: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      10: lload_1
      11: iload_3
      12: invokeinterface #119,  4          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeVolatileByte:(JB)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      17: pop
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeVolatileShort(long, short) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #96                 // long 2l
       5: invokevirtual #37                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_1
      13: iload_3
      14: invokeinterface #120,  4          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeVolatileShort:(JS)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      19: pop
      20: aload_0
      21: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeVolatileInt(long, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #35                 // long 4l
       5: invokevirtual #37                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_1
      13: iload_3
      14: invokeinterface #121,  4          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeVolatileInt:(JI)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      19: pop
      20: aload_0
      21: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeVolatileLong(long, long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #40                 // long 8l
       5: invokevirtual #37                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_1
      13: lload_3
      14: invokeinterface #122,  5          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeVolatileLong:(JJ)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      19: pop
      20: aload_0
      21: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> write(net.openhft.chronicle.bytes.RandomDataInput) throws java.lang.IllegalStateException, java.nio.BufferOverflowException;
    Code:
       0: getstatic     #109                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_1
       7: aload_0
       8: if_acmpne     21
      11: new           #21                 // class java/lang/AssertionError
      14: dup
      15: ldc           #123                // String you should not write to yourself !
      17: invokespecial #22                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      20: athrow
      21: aload_0
      22: aload_1
      23: aload_1
      24: invokeinterface #124,  1          // InterfaceMethod net/openhft/chronicle/bytes/RandomDataInput.readPosition:()J
      29: aload_0
      30: invokevirtual #28                 // Method writeLimit:()J
      33: aload_0
      34: invokevirtual #15                 // Method writePosition:()J
      37: lsub
      38: aload_1
      39: invokeinterface #125,  1          // InterfaceMethod net/openhft/chronicle/bytes/RandomDataInput.readRemaining:()J
      44: invokestatic  #29                 // Method java/lang/Math.min:(JJ)J
      47: invokevirtual #126                // Method write:(Lnet/openhft/chronicle/bytes/RandomDataInput;JJ)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      50: checkcast     #127                // class net/openhft/chronicle/bytes/Bytes
      53: areturn
      54: astore_2
      55: new           #21                 // class java/lang/AssertionError
      58: dup
      59: aload_2
      60: invokespecial #22                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      63: athrow
    Exception table:
       from    to  target type
          21    53    54   Class java/nio/BufferUnderflowException
          21    53    54   Class java/lang/IllegalArgumentException

  public net.openhft.chronicle.bytes.Bytes<Underlying> write(long, byte[], int, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: iload         5
       2: i2l
       3: lstore        6
       5: lload         6
       7: lconst_0
       8: lcmp
       9: ifle          73
      12: lload         6
      14: aload_0
      15: invokevirtual #129                // Method safeCopySize:()I
      18: i2l
      19: invokestatic  #29                 // Method java/lang/Math.min:(JJ)J
      22: l2i
      23: istore        8
      25: aload_0
      26: lload_1
      27: iload         8
      29: i2l
      30: invokevirtual #37                 // Method writeCheckOffset:(JJ)V
      33: aload_0
      34: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      37: lload_1
      38: aload_3
      39: iload         4
      41: iload         8
      43: invokeinterface #130,  6          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.write:(J[BII)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      48: pop
      49: lload_1
      50: iload         8
      52: i2l
      53: ladd
      54: lstore_1
      55: iload         4
      57: iload         8
      59: iadd
      60: istore        4
      62: lload         6
      64: iload         8
      66: i2l
      67: lsub
      68: lstore        6
      70: goto          5
      73: aload_0
      74: areturn

  public void write(long, java.nio.ByteBuffer, int, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload         5
       4: i2l
       5: invokevirtual #37                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_1
      13: aload_3
      14: iload         4
      16: iload         5
      18: invokeinterface #131,  6          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.write:(JLjava/nio/ByteBuffer;II)V
      23: return

  public net.openhft.chronicle.bytes.Bytes<Underlying> write(long, net.openhft.chronicle.bytes.RandomDataInput, long, long) throws java.nio.BufferOverflowException, java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: lload         6
       2: lstore        8
       4: lload         8
       6: lconst_0
       7: lcmp
       8: ifle          74
      11: lload         8
      13: aload_0
      14: invokevirtual #129                // Method safeCopySize:()I
      17: i2l
      18: invokestatic  #29                 // Method java/lang/Math.min:(JJ)J
      21: l2i
      22: istore        10
      24: aload_0
      25: lload_1
      26: iload         10
      28: i2l
      29: invokevirtual #37                 // Method writeCheckOffset:(JJ)V
      32: aload_0
      33: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      36: lload_1
      37: aload_3
      38: lload         4
      40: iload         10
      42: i2l
      43: invokeinterface #132,  8          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.write:(JLnet/openhft/chronicle/bytes/RandomDataInput;JJ)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      48: pop
      49: lload_1
      50: iload         10
      52: i2l
      53: ladd
      54: lstore_1
      55: lload         4
      57: iload         10
      59: i2l
      60: ladd
      61: lstore        4
      63: lload         8
      65: iload         10
      67: i2l
      68: lsub
      69: lstore        8
      71: goto          4
      74: aload_0
      75: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> write8bit(java.lang.String, int, int) throws java.nio.BufferOverflowException, java.lang.IndexOutOfBoundsException, java.lang.ArithmeticException, java.lang.IllegalStateException, java.nio.BufferUnderflowException;
    Code:
       0: getstatic     #133                // Field net/openhft/chronicle/core/UnsafeMemory.INSTANCE:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: iload_3
       4: invokevirtual #134                // Method net/openhft/chronicle/core/UnsafeMemory.stopBitLength:(I)I
       7: iload_3
       8: iadd
       9: i2l
      10: lstore        4
      12: aload_0
      13: lload         4
      15: lconst_0
      16: invokevirtual #135                // Method writeOffsetPositionMoved:(JJ)J
      19: lstore        6
      21: aload_0
      22: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      25: lload         6
      27: aload_1
      28: iload_2
      29: iload_3
      30: invokeinterface #136,  6          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.write8bit:(JLjava/lang/String;II)J
      35: pop2
      36: aload_0
      37: aload_0
      38: invokevirtual #15                 // Method writePosition:()J
      41: lload         4
      43: ladd
      44: invokevirtual #11                 // Method uncheckedWritePosition:(J)V
      47: aload_0
      48: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> write8bit(net.openhft.chronicle.bytes.BytesStore) throws java.nio.BufferOverflowException, java.lang.IllegalStateException, java.nio.BufferUnderflowException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: aload_0
       5: ldc2_w        #137                // long -1l
       8: invokevirtual #139                // Method writeStopBit:(J)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      11: pop
      12: aload_0
      13: areturn
      14: aload_1
      15: invokeinterface #140,  1          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readRemaining:()J
      20: lstore_2
      21: getstatic     #133                // Field net/openhft/chronicle/core/UnsafeMemory.INSTANCE:Lnet/openhft/chronicle/core/UnsafeMemory;
      24: lload_2
      25: invokevirtual #141                // Method net/openhft/chronicle/core/UnsafeMemory.stopBitLength:(J)I
      28: i2l
      29: lload_2
      30: ladd
      31: lstore        4
      33: aload_0
      34: lload         4
      36: lconst_0
      37: invokevirtual #135                // Method writeOffsetPositionMoved:(JJ)J
      40: lstore        6
      42: aload_0
      43: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      46: lload         6
      48: aload_1
      49: invokeinterface #142,  4          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.write8bit:(JLnet/openhft/chronicle/bytes/BytesStore;)J
      54: pop2
      55: aload_0
      56: aload_0
      57: invokevirtual #15                 // Method writePosition:()J
      60: lload         4
      62: ladd
      63: invokevirtual #11                 // Method uncheckedWritePosition:(J)V
      66: aload_0
      67: areturn

  public long write8bit(long, net.openhft.chronicle.bytes.BytesStore);
    Code:
       0: aload_0
       1: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
       4: lload_1
       5: aload_3
       6: invokeinterface #142,  4          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.write8bit:(JLnet/openhft/chronicle/bytes/BytesStore;)J
      11: lreturn

  public long write8bit(long, java.lang.String, int, int);
    Code:
       0: aload_0
       1: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
       4: lload_1
       5: aload_3
       6: iload         4
       8: iload         5
      10: invokeinterface #136,  6          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.write8bit:(JLjava/lang/String;II)J
      15: lreturn

  void writeCheckOffset(long, long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: getstatic     #143                // Field BYTES_BOUNDS_UNCHECKED:Z
       3: ifeq          7
       6: return
       7: aload_0
       8: lload_1
       9: lload_3
      10: invokespecial #144                // Method writeCheckOffset0:(JJ)V
      13: return

  private void writeCheckOffset0(long, long) throws net.openhft.chronicle.bytes.util.DecoratedBufferOverflowException;
    Code:
       0: lload_1
       1: aload_0
       2: invokevirtual #16                 // Method start:()J
       5: lcmp
       6: ifge          15
       9: aload_0
      10: lload_1
      11: invokespecial #145                // Method newBOELower:(J)Lnet/openhft/chronicle/bytes/util/DecoratedBufferOverflowException;
      14: athrow
      15: lload_1
      16: lload_3
      17: ladd
      18: aload_0
      19: invokevirtual #28                 // Method writeLimit:()J
      22: lcmp
      23: ifle          39
      26: aload_0
      27: lload_1
      28: lload_3
      29: ldc           #146                // String writeCheckOffset failed. Offset: %d + adding %d> writeLimit: %d
      31: aload_0
      32: invokevirtual #28                 // Method writeLimit:()J
      35: invokespecial #25                 // Method newBOERange:(JJLjava/lang/String;J)Lnet/openhft/chronicle/bytes/util/DecoratedBufferOverflowException;
      38: athrow
      39: return

  private net.openhft.chronicle.bytes.util.DecoratedBufferOverflowException newBOERange(long, long, java.lang.String, long);
    Code:
       0: new           #76                 // class net/openhft/chronicle/bytes/util/DecoratedBufferOverflowException
       3: dup
       4: aload         5
       6: iconst_3
       7: anewarray     #63                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: lload_1
      13: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      16: aastore
      17: dup
      18: iconst_1
      19: lload_3
      20: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      23: aastore
      24: dup
      25: iconst_2
      26: lload         6
      28: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      31: aastore
      32: invokestatic  #65                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      35: invokespecial #78                 // Method net/openhft/chronicle/bytes/util/DecoratedBufferOverflowException."<init>":(Ljava/lang/String;)V
      38: areturn

  private net.openhft.chronicle.bytes.util.DecoratedBufferOverflowException newBOELower(long);
    Code:
       0: new           #76                 // class net/openhft/chronicle/bytes/util/DecoratedBufferOverflowException
       3: dup
       4: ldc           #147                // String writeCheckOffset failed. Offset: %d < start: %d
       6: iconst_2
       7: anewarray     #63                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: lload_1
      13: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      16: aastore
      17: dup
      18: iconst_1
      19: aload_0
      20: invokevirtual #16                 // Method start:()J
      23: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      26: aastore
      27: invokestatic  #65                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      30: invokespecial #78                 // Method net/openhft/chronicle/bytes/util/DecoratedBufferOverflowException."<init>":(Ljava/lang/String;)V
      33: areturn

  public byte readByte(long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: lconst_1
       3: iconst_1
       4: invokevirtual #100                // Method readCheckOffset:(JJZ)V
       7: aload_0
       8: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      11: lload_1
      12: invokeinterface #95,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readByte:(J)B
      17: ireturn

  public int peekUnsignedByte(long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: lload_1
       1: aload_0
       2: invokevirtual #67                 // Method readLimit:()J
       5: lcmp
       6: iflt          13
       9: iconst_m1
      10: goto          23
      13: aload_0
      14: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      17: lload_1
      18: invokeinterface #148,  3          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.peekUnsignedByte:(J)I
      23: ireturn

  public short readShort(long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #96                 // long 2l
       5: iconst_1
       6: invokevirtual #100                // Method readCheckOffset:(JJZ)V
       9: aload_0
      10: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      13: lload_1
      14: invokeinterface #98,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readShort:(J)S
      19: ireturn

  public int readInt(long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #35                 // long 4l
       5: iconst_1
       6: invokevirtual #100                // Method readCheckOffset:(JJZ)V
       9: aload_0
      10: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      13: lload_1
      14: invokeinterface #99,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readInt:(J)I
      19: ireturn

  public long readLong(long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #40                 // long 8l
       5: iconst_1
       6: invokevirtual #100                // Method readCheckOffset:(JJZ)V
       9: aload_0
      10: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      13: lload_1
      14: invokeinterface #105,  3          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readLong:(J)J
      19: lreturn

  public float readFloat(long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #35                 // long 4l
       5: iconst_1
       6: invokevirtual #100                // Method readCheckOffset:(JJZ)V
       9: aload_0
      10: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      13: lload_1
      14: invokeinterface #106,  3          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readFloat:(J)F
      19: freturn

  public double readDouble(long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #40                 // long 8l
       5: iconst_1
       6: invokevirtual #100                // Method readCheckOffset:(JJZ)V
       9: aload_0
      10: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      13: lload_1
      14: invokeinterface #107,  3          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readDouble:(J)D
      19: dreturn

  void readCheckOffset(long, long, boolean) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: getstatic     #143                // Field BYTES_BOUNDS_UNCHECKED:Z
       3: ifeq          7
       6: return
       7: aload_0
       8: lload_1
       9: lload_3
      10: iload         5
      12: invokespecial #149                // Method readCheckOffset0:(JJZ)V
      15: return

  private void readCheckOffset0(long, long, boolean) throws net.openhft.chronicle.bytes.util.DecoratedBufferUnderflowException;
    Code:
       0: lload_1
       1: aload_0
       2: invokevirtual #16                 // Method start:()J
       5: lcmp
       6: ifge          15
       9: aload_0
      10: lload_1
      11: invokespecial #150                // Method newBOEReadLower:(J)Lnet/openhft/chronicle/bytes/util/DecoratedBufferUnderflowException;
      14: athrow
      15: iload         5
      17: ifeq          27
      20: aload_0
      21: invokevirtual #28                 // Method writeLimit:()J
      24: goto          31
      27: aload_0
      28: invokevirtual #67                 // Method readLimit:()J
      31: lstore        6
      33: lload_1
      34: lload_3
      35: ladd
      36: lload         6
      38: lcmp
      39: ifle          51
      42: aload_0
      43: lload_1
      44: lload_3
      45: iload         5
      47: invokespecial #151                // Method newBOEReadUpper:(JJZ)Lnet/openhft/chronicle/bytes/util/DecoratedBufferUnderflowException;
      50: athrow
      51: return

  private net.openhft.chronicle.bytes.util.DecoratedBufferUnderflowException newBOEReadUpper(long, long, boolean);
    Code:
       0: iload         5
       2: ifeq          12
       5: aload_0
       6: invokevirtual #28                 // Method writeLimit:()J
       9: goto          16
      12: aload_0
      13: invokevirtual #67                 // Method readLimit:()J
      16: lstore        6
      18: new           #61                 // class net/openhft/chronicle/bytes/util/DecoratedBufferUnderflowException
      21: dup
      22: ldc           #152                // String readCheckOffset0 failed. Offset: %d + adding: %d > limit: %d (given: %s)
      24: iconst_4
      25: anewarray     #63                 // class java/lang/Object
      28: dup
      29: iconst_0
      30: lload_1
      31: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      34: aastore
      35: dup
      36: iconst_1
      37: lload_3
      38: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      41: aastore
      42: dup
      43: iconst_2
      44: lload         6
      46: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      49: aastore
      50: dup
      51: iconst_3
      52: iload         5
      54: invokestatic  #153                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      57: aastore
      58: invokestatic  #65                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      61: invokespecial #66                 // Method net/openhft/chronicle/bytes/util/DecoratedBufferUnderflowException."<init>":(Ljava/lang/String;)V
      64: astore        8
      66: aload         8
      68: areturn

  private net.openhft.chronicle.bytes.util.DecoratedBufferUnderflowException newBOEReadLower(long);
    Code:
       0: new           #61                 // class net/openhft/chronicle/bytes/util/DecoratedBufferUnderflowException
       3: dup
       4: ldc           #154                // String readCheckOffset0 failed. Offset: %d < start: %d
       6: iconst_2
       7: anewarray     #63                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: lload_1
      13: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      16: aastore
      17: dup
      18: iconst_1
      19: aload_0
      20: invokevirtual #16                 // Method start:()J
      23: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      26: aastore
      27: invokestatic  #65                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      30: invokespecial #66                 // Method net/openhft/chronicle/bytes/util/DecoratedBufferUnderflowException."<init>":(Ljava/lang/String;)V
      33: areturn

  void prewriteCheckOffset(long, long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: getstatic     #143                // Field BYTES_BOUNDS_UNCHECKED:Z
       3: ifeq          7
       6: return
       7: aload_0
       8: lload_1
       9: lload_3
      10: invokespecial #155                // Method prewriteCheckOffset0:(JJ)V
      13: return

  private void prewriteCheckOffset0(long, long) throws java.nio.BufferOverflowException;
    Code:
       0: lload_1
       1: lload_3
       2: lsub
       3: aload_0
       4: invokevirtual #16                 // Method start:()J
       7: lcmp
       8: ifge          24
      11: aload_0
      12: lload_1
      13: lload_3
      14: ldc           #156                // String prewriteCheckOffset0 failed. Offset: %d - subtracting: %d < start: %d
      16: aload_0
      17: invokevirtual #16                 // Method start:()J
      20: invokespecial #25                 // Method newBOERange:(JJLjava/lang/String;J)Lnet/openhft/chronicle/bytes/util/DecoratedBufferOverflowException;
      23: athrow
      24: aload_0
      25: invokevirtual #67                 // Method readLimit:()J
      28: lstore        5
      30: lload_1
      31: lload         5
      33: lcmp
      34: ifle          69
      37: new           #76                 // class net/openhft/chronicle/bytes/util/DecoratedBufferOverflowException
      40: dup
      41: ldc           #157                // String prewriteCheckOffset0 failed. Offset: %d > readLimit: %d
      43: iconst_2
      44: anewarray     #63                 // class java/lang/Object
      47: dup
      48: iconst_0
      49: lload_1
      50: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      53: aastore
      54: dup
      55: iconst_1
      56: lload         5
      58: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      61: aastore
      62: invokestatic  #65                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      65: invokespecial #78                 // Method net/openhft/chronicle/bytes/util/DecoratedBufferOverflowException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: return

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeByte(byte) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lconst_1
       2: lconst_1
       3: invokevirtual #135                // Method writeOffsetPositionMoved:(JJ)J
       6: lstore_2
       7: aload_0
       8: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      11: lload_2
      12: iload_1
      13: invokeinterface #111,  4          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeByte:(JB)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      18: pop
      19: aload_0
      20: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> prewrite(byte[]) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: arraylength
       3: i2l
       4: invokevirtual #158                // Method prewriteOffsetPositionMoved:(J)J
       7: lstore_2
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_2
      13: aload_1
      14: invokeinterface #159,  4          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.write:(J[B)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      19: pop
      20: aload_0
      21: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> prewrite(net.openhft.chronicle.bytes.BytesStore) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #140,  1          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readRemaining:()J
       7: invokevirtual #158                // Method prewriteOffsetPositionMoved:(J)J
      10: lstore_2
      11: aload_0
      12: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      15: lload_2
      16: aload_1
      17: invokeinterface #160,  4          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.write:(JLnet/openhft/chronicle/bytes/BytesStore;)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      22: pop
      23: aload_0
      24: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> prewriteByte(byte) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lconst_1
       2: invokevirtual #158                // Method prewriteOffsetPositionMoved:(J)J
       5: lstore_2
       6: aload_0
       7: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      10: lload_2
      11: iload_1
      12: invokeinterface #111,  4          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeByte:(JB)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      17: pop
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> prewriteInt(int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #35                 // long 4l
       4: invokevirtual #158                // Method prewriteOffsetPositionMoved:(J)J
       7: lstore_2
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_2
      13: iload_1
      14: invokeinterface #113,  4          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeInt:(JI)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      19: pop
      20: aload_0
      21: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> prewriteShort(short) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #96                 // long 2l
       4: invokevirtual #158                // Method prewriteOffsetPositionMoved:(J)J
       7: lstore_2
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_2
      13: iload_1
      14: invokeinterface #112,  4          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeShort:(JS)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      19: pop
      20: aload_0
      21: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> prewriteLong(long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #40                 // long 8l
       4: invokevirtual #158                // Method prewriteOffsetPositionMoved:(J)J
       7: lstore_3
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_3
      13: lload_1
      14: invokeinterface #115,  5          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeLong:(JJ)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      19: pop
      20: aload_0
      21: areturn

  protected final long writeOffsetPositionMoved(long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: lload_1
       3: invokevirtual #135                // Method writeOffsetPositionMoved:(JJ)J
       6: lreturn

  protected long writeOffsetPositionMoved(long, long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method writePosition:()J
       4: lstore        5
       6: aload_0
       7: lload         5
       9: lload_1
      10: invokevirtual #37                 // Method writeCheckOffset:(JJ)V
      13: aload_0
      14: aload_0
      15: invokevirtual #15                 // Method writePosition:()J
      18: lload_3
      19: ladd
      20: invokevirtual #11                 // Method uncheckedWritePosition:(J)V
      23: lload         5
      25: lreturn

  protected void uncheckedWritePosition(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #34                 // Field writePosition:J
       5: return

  protected long prewriteOffsetPositionMoved(long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field readPosition:J
       5: lload_1
       6: invokevirtual #161                // Method prewriteCheckOffset:(JJ)V
       9: aload_0
      10: dup
      11: getfield      #10                 // Field readPosition:J
      14: lload_1
      15: lsub
      16: dup2_x1
      17: putfield      #10                 // Field readPosition:J
      20: lreturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeShort(short) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #96                 // long 2l
       4: invokevirtual #162                // Method writeOffsetPositionMoved:(J)J
       7: lstore_2
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_2
      13: iload_1
      14: invokeinterface #112,  4          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeShort:(JS)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      19: pop
      20: aload_0
      21: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeInt(int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #35                 // long 4l
       4: invokevirtual #162                // Method writeOffsetPositionMoved:(J)J
       7: lstore_2
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_2
      13: iload_1
      14: invokeinterface #113,  4          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeInt:(JI)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      19: pop
      20: aload_0
      21: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeIntAdv(int, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #35                 // long 4l
       4: iload_2
       5: i2l
       6: invokevirtual #135                // Method writeOffsetPositionMoved:(JJ)J
       9: lstore_3
      10: aload_0
      11: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      14: lload_3
      15: iload_1
      16: invokeinterface #113,  4          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeInt:(JI)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      21: pop
      22: aload_0
      23: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeLong(long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #40                 // long 8l
       4: invokevirtual #162                // Method writeOffsetPositionMoved:(J)J
       7: lstore_3
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_3
      13: lload_1
      14: invokeinterface #115,  5          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeLong:(JJ)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      19: pop
      20: aload_0
      21: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeLongAdv(long, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #40                 // long 8l
       4: iload_3
       5: i2l
       6: invokevirtual #135                // Method writeOffsetPositionMoved:(JJ)J
       9: lstore        4
      11: aload_0
      12: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      15: lload         4
      17: lload_1
      18: invokeinterface #115,  5          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeLong:(JJ)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      23: pop
      24: aload_0
      25: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeFloat(float) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #35                 // long 4l
       4: invokevirtual #162                // Method writeOffsetPositionMoved:(J)J
       7: lstore_2
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_2
      13: fload_1
      14: invokeinterface #117,  4          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeFloat:(JF)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      19: pop
      20: aload_0
      21: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeDouble(double) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #40                 // long 8l
       4: invokevirtual #162                // Method writeOffsetPositionMoved:(J)J
       7: lstore_3
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_3
      13: dload_1
      14: invokeinterface #118,  5          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeDouble:(JD)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      19: pop
      20: aload_0
      21: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeDoubleAndInt(double, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #163                // long 12l
       4: invokevirtual #162                // Method writeOffsetPositionMoved:(J)J
       7: lstore        4
       9: aload_0
      10: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      13: lload         4
      15: dload_1
      16: invokeinterface #118,  5          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeDouble:(JD)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      21: pop
      22: aload_0
      23: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      26: lload         4
      28: ldc2_w        #40                 // long 8l
      31: ladd
      32: iload_3
      33: invokeinterface #113,  4          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeInt:(JI)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      38: pop
      39: aload_0
      40: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> write(byte[], int, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: iload_3
       1: iload_2
       2: iadd
       3: aload_1
       4: arraylength
       5: if_icmple     54
       8: new           #76                 // class net/openhft/chronicle/bytes/util/DecoratedBufferOverflowException
      11: dup
      12: new           #165                // class java/lang/StringBuilder
      15: dup
      16: invokespecial #166                // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #167                // String bytes.length=
      21: invokevirtual #168                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: arraylength
      26: invokevirtual #169                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: ldc           #170                // String , length=
      31: invokevirtual #168                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: iload_3
      35: invokevirtual #169                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      38: ldc           #171                // String , offset=
      40: invokevirtual #168                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: iload_2
      44: invokevirtual #169                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      47: invokevirtual #172                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokespecial #78                 // Method net/openhft/chronicle/bytes/util/DecoratedBufferOverflowException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: iload_3
      55: i2l
      56: aload_0
      57: invokevirtual #173                // Method writeRemaining:()J
      60: lcmp
      61: ifle          98
      64: new           #76                 // class net/openhft/chronicle/bytes/util/DecoratedBufferOverflowException
      67: dup
      68: ldc           #174                // String write failed. Length: %d > writeRemaining: %d
      70: iconst_2
      71: anewarray     #63                 // class java/lang/Object
      74: dup
      75: iconst_0
      76: iload_3
      77: invokestatic  #175                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      80: aastore
      81: dup
      82: iconst_1
      83: aload_0
      84: invokevirtual #173                // Method writeRemaining:()J
      87: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      90: aastore
      91: invokestatic  #65                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      94: invokespecial #78                 // Method net/openhft/chronicle/bytes/util/DecoratedBufferOverflowException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: aload_0
      99: aload_0
     100: invokevirtual #15                 // Method writePosition:()J
     103: iload_3
     104: i2l
     105: ladd
     106: invokevirtual #176                // Method ensureCapacity:(J)V
     109: iload_3
     110: istore        4
     112: iload         4
     114: ifle          168
     117: iload         4
     119: aload_0
     120: invokevirtual #129                // Method safeCopySize:()I
     123: invokestatic  #177                // Method java/lang/Math.min:(II)I
     126: istore        5
     128: aload_0
     129: iload         5
     131: i2l
     132: invokevirtual #162                // Method writeOffsetPositionMoved:(J)J
     135: lstore        6
     137: aload_0
     138: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
     141: lload         6
     143: aload_1
     144: iload_2
     145: iload         5
     147: invokeinterface #130,  6          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.write:(J[BII)Lnet/openhft/chronicle/bytes/RandomDataOutput;
     152: pop
     153: iload_2
     154: iload         5
     156: iadd
     157: istore_2
     158: iload         4
     160: iload         5
     162: isub
     163: istore        4
     165: goto          112
     168: aload_0
     169: areturn

  protected int safeCopySize();
    Code:
       0: ldc           #178                // int 65536
       2: ireturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeSome(java.nio.ByteBuffer) throws java.nio.BufferOverflowException, java.lang.IllegalStateException, java.nio.BufferUnderflowException;
    Code:
       0: aload_1
       1: invokevirtual #179                // Method java/nio/ByteBuffer.remaining:()I
       4: i2l
       5: aload_0
       6: invokevirtual #173                // Method writeRemaining:()J
       9: invokestatic  #29                 // Method java/lang/Math.min:(JJ)J
      12: l2i
      13: istore_2
      14: aload_0
      15: aload_0
      16: invokevirtual #15                 // Method writePosition:()J
      19: iload_2
      20: i2l
      21: ladd
      22: invokevirtual #176                // Method ensureCapacity:(J)V
      25: goto          38
      28: astore_3
      29: new           #21                 // class java/lang/AssertionError
      32: dup
      33: aload_3
      34: invokespecial #22                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      37: athrow
      38: aload_0
      39: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      42: aload_0
      43: invokevirtual #15                 // Method writePosition:()J
      46: aload_1
      47: aload_1
      48: invokevirtual #180                // Method java/nio/ByteBuffer.position:()I
      51: iload_2
      52: invokeinterface #131,  6          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.write:(JLjava/nio/ByteBuffer;II)V
      57: aload_0
      58: aload_0
      59: invokevirtual #15                 // Method writePosition:()J
      62: iload_2
      63: i2l
      64: ladd
      65: invokevirtual #11                 // Method uncheckedWritePosition:(J)V
      68: aload_1
      69: aload_1
      70: invokevirtual #180                // Method java/nio/ByteBuffer.position:()I
      73: iload_2
      74: iadd
      75: invokevirtual #181                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      78: pop
      79: aload_0
      80: areturn
    Exception table:
       from    to  target type
          14    25    28   Class java/lang/IllegalArgumentException

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeOrderedInt(int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #35                 // long 4l
       4: invokevirtual #162                // Method writeOffsetPositionMoved:(J)J
       7: lstore_2
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_2
      13: iload_1
      14: invokeinterface #114,  4          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeOrderedInt:(JI)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      19: pop
      20: aload_0
      21: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeOrderedLong(long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #40                 // long 8l
       4: invokevirtual #162                // Method writeOffsetPositionMoved:(J)J
       7: lstore_3
       8: aload_0
       9: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      12: lload_3
      13: lload_1
      14: invokeinterface #116,  5          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeOrderedLong:(JJ)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      19: pop
      20: aload_0
      21: areturn

  public long addressForRead(long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
       4: lload_1
       5: invokeinterface #182,  3          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.addressForRead:(J)J
      10: lreturn

  public long addressForWrite(long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
       4: lload_1
       5: invokeinterface #183,  3          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.addressForWrite:(J)J
      10: lreturn

  public long addressForWritePosition() throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
       4: aload_0
       5: invokevirtual #15                 // Method writePosition:()J
       8: invokeinterface #183,  3          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.addressForWrite:(J)J
      13: lreturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #184                // InterfaceMethod net/openhft/chronicle/bytes/algo/BytesStoreHash.hash32:(Lnet/openhft/chronicle/bytes/BytesStore;)I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #185                // class net/openhft/chronicle/bytes/BytesStore
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #185                // class net/openhft/chronicle/bytes/BytesStore
      13: astore_2
      14: aload_0
      15: invokevirtual #18                 // Method readRemaining:()J
      18: lstore_3
      19: aload_2
      20: invokeinterface #140,  1          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readRemaining:()J
      25: lload_3
      26: lcmp
      27: ifne          42
      30: aload_0
      31: aload_2
      32: invokestatic  #186                // Method net/openhft/chronicle/bytes/BytesInternal.contentEqual:(Lnet/openhft/chronicle/bytes/BytesStore;Lnet/openhft/chronicle/bytes/BytesStore;)Z
      35: ifeq          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: ireturn
      44: astore        5
      46: iconst_0
      47: ireturn
    Exception table:
       from    to  target type
          19    43    44   Class java/lang/IllegalStateException

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #187                // Method net/openhft/chronicle/bytes/BytesInternal.toString:(Lnet/openhft/chronicle/bytes/RandomDataInput;)Ljava/lang/String;
       4: areturn
       5: astore_1
       6: aload_1
       7: invokevirtual #189                // Method java/lang/Exception.toString:()Ljava/lang/String;
      10: areturn
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/Exception

  public void nativeRead(long, long, long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
       4: lload_1
       5: lload_3
       6: lload         5
       8: invokeinterface #190,  7          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.nativeRead:(JJJ)V
      13: return

  public void nativeWrite(long, long, long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
       4: lload_1
       5: lload_3
       6: lload         5
       8: invokeinterface #191,  7          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.nativeWrite:(JJJ)V
      13: return

  public net.openhft.chronicle.bytes.BytesStore bytesStore();
    Code:
       0: aload_0
       1: getfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
       4: areturn

  protected void bytesStore(net.openhft.chronicle.bytes.BytesStore<net.openhft.chronicle.bytes.Bytes<Underlying>, Underlying>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
       5: return

  public int lastDecimalPlaces();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lastDecimalPlaces:I
       4: ireturn

  public void lastDecimalPlaces(int);
    Code:
       0: aload_0
       1: iconst_0
       2: iload_1
       3: invokestatic  #192                // Method java/lang/Math.max:(II)I
       6: putfield      #5                  // Field lastDecimalPlaces:I
       9: return

  public void lenient(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field lenient:Z
       5: return

  public boolean lenient();
    Code:
       0: aload_0
       1: getfield      #6                  // Field lenient:Z
       4: ireturn

  public int byteCheckSum() throws net.openhft.chronicle.core.io.IORuntimeException, java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #75                 // Method readPosition:()J
       5: aload_0
       6: invokevirtual #67                 // Method readLimit:()J
       9: invokevirtual #193                // Method byteCheckSum:(JJ)I
      12: ireturn

  public int byteCheckSum(long, long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: lload_3
       1: ldc2_w        #195                // long 2147483647l
       4: lcmp
       5: ifge          24
       8: aload_0
       9: invokevirtual #30                 // Method isDirectMemory:()Z
      12: ifeq          24
      15: aload_0
      16: lload_1
      17: l2i
      18: lload_3
      19: l2i
      20: invokevirtual #197                // Method byteCheckSum:(II)I
      23: ireturn
      24: aload_0
      25: lload_1
      26: lload_3
      27: invokespecial #198                // InterfaceMethod net/openhft/chronicle/bytes/Bytes.byteCheckSum:(JJ)I
      30: ireturn

  public int byteCheckSum(int, int) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: iconst_0
       1: istore_3
       2: iload_1
       3: istore        4
       5: iload         4
       7: iload_2
       8: if_icmpge     27
      11: iload_3
      12: aload_0
      13: iload         4
      15: i2l
      16: invokevirtual #94                 // Method readByte:(J)B
      19: iadd
      20: istore_3
      21: iinc          4, 1
      24: goto          5
      27: iload_3
      28: sipush        255
      31: iand
      32: ireturn

  public net.openhft.chronicle.bytes.RandomDataOutput write(long, net.openhft.chronicle.bytes.RandomDataInput, long, long) throws java.nio.BufferOverflowException, java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: lload         4
       5: lload         6
       7: invokevirtual #199                // Method write:(JLnet/openhft/chronicle/bytes/RandomDataInput;JJ)Lnet/openhft/chronicle/bytes/Bytes;
      10: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput write(long, byte[], int, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: iload         4
       5: iload         5
       7: invokevirtual #200                // Method write:(J[BII)Lnet/openhft/chronicle/bytes/Bytes;
      10: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeVolatileLong(long, long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokevirtual #201                // Method writeVolatileLong:(JJ)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeVolatileInt(long, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #202                // Method writeVolatileInt:(JI)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeVolatileShort(long, short) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #203                // Method writeVolatileShort:(JS)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeVolatileByte(long, byte) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #204                // Method writeVolatileByte:(JB)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeDouble(long, double) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: dload_3
       3: invokevirtual #205                // Method writeDouble:(JD)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeFloat(long, float) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: fload_3
       3: invokevirtual #206                // Method writeFloat:(JF)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeOrderedLong(long, long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokevirtual #207                // Method writeOrderedLong:(JJ)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeLong(long, long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokevirtual #208                // Method writeLong:(JJ)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeOrderedInt(long, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #209                // Method writeOrderedInt:(JI)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeInt(long, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #210                // Method writeInt:(JI)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeShort(long, short) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #211                // Method writeShort:(JS)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeByte(long, byte) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #212                // Method writeByte:(JB)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.StreamingDataInput readSkip(long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #213                // Method readSkip:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataInput readLimit(long) throws java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #214                // Method readLimit:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataInput readPosition(long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #215                // Method readPosition:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingCommon clear() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #216                // Method clear:()Lnet/openhft/chronicle/bytes/Bytes;
       4: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeOrderedLong(long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #217                // Method writeOrderedLong:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeOrderedInt(int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #218                // Method writeOrderedInt:(I)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeSome(java.nio.ByteBuffer) throws java.nio.BufferOverflowException, java.lang.IllegalStateException, java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #219                // Method writeSome:(Ljava/nio/ByteBuffer;)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput write(byte[], int, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #220                // Method write:([BII)Lnet/openhft/chronicle/bytes/Bytes;
       7: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput write(net.openhft.chronicle.bytes.RandomDataInput) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #221                // Method write:(Lnet/openhft/chronicle/bytes/RandomDataInput;)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeDoubleAndInt(double, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: dload_1
       2: iload_3
       3: invokevirtual #222                // Method writeDoubleAndInt:(DI)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeDouble(double) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #223                // Method writeDouble:(D)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeFloat(float) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: fload_1
       2: invokevirtual #224                // Method writeFloat:(F)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeLongAdv(long, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #225                // Method writeLongAdv:(JI)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeLong(long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #226                // Method writeLong:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeIntAdv(int, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #227                // Method writeIntAdv:(II)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeInt(int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #228                // Method writeInt:(I)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeShort(short) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #229                // Method writeShort:(S)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeByte(byte) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #230                // Method writeByte:(B)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput write8bit(net.openhft.chronicle.bytes.BytesStore) throws java.nio.BufferOverflowException, java.lang.IllegalStateException, java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #231                // Method write8bit:(Lnet/openhft/chronicle/bytes/BytesStore;)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput write8bit(java.lang.String, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #232                // Method write8bit:(Ljava/lang/String;II)Lnet/openhft/chronicle/bytes/Bytes;
       7: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeSkip(long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #59                 // Method writeSkip:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeLimit(long) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #233                // Method writeLimit:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writePosition(long) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #234                // Method writePosition:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.ByteStringAppender append(double) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #235                // Method append:(D)Lnet/openhft/chronicle/bytes/AbstractBytes;
       5: areturn

  public net.openhft.chronicle.bytes.BytesPrepender prewriteLong(long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #236                // Method prewriteLong:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.BytesPrepender prewriteInt(int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #237                // Method prewriteInt:(I)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.BytesPrepender prewriteShort(short) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #238                // Method prewriteShort:(S)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.BytesPrepender prewriteByte(byte) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #239                // Method prewriteByte:(B)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.BytesPrepender prewrite(net.openhft.chronicle.bytes.BytesStore) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #240                // Method prewrite:(Lnet/openhft/chronicle/bytes/BytesStore;)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.BytesPrepender prewrite(byte[]) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #241                // Method prewrite:([B)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.BytesPrepender clearAndPad(long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #242                // Method clearAndPad:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  static {};
    Code:
       0: ldc           #243                // class net/openhft/chronicle/bytes/AbstractBytes
       2: invokevirtual #244                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #109                // Field $assertionsDisabled:Z
      16: ldc           #245                // String bytes.bounds.unchecked
      18: iconst_0
      19: invokestatic  #246                // Method net/openhft/chronicle/core/Jvm.getBoolean:(Ljava/lang/String;Z)Z
      22: putstatic     #143                // Field BYTES_BOUNDS_UNCHECKED:Z
      25: return
}
