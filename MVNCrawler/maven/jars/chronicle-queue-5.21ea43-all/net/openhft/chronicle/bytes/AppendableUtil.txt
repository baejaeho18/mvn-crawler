Compiled from "AppendableUtil.java"
public final class net.openhft.chronicle.bytes.AppendableUtil extends java.lang.Enum<net.openhft.chronicle.bytes.AppendableUtil> {
  private static final net.openhft.chronicle.bytes.AppendableUtil[] $VALUES;

  public static net.openhft.chronicle.bytes.AppendableUtil[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lnet/openhft/chronicle/bytes/AppendableUtil;
       3: invokevirtual #2                  // Method "[Lnet/openhft/chronicle/bytes/AppendableUtil;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lnet/openhft/chronicle/bytes/AppendableUtil;"
       9: areturn

  public static net.openhft.chronicle.bytes.AppendableUtil valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class net/openhft/chronicle/bytes/AppendableUtil
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class net/openhft/chronicle/bytes/AppendableUtil
       9: areturn

  private net.openhft.chronicle.bytes.AppendableUtil();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public static void setCharAt(java.lang.Appendable, int, char) throws java.lang.IllegalArgumentException, java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: instanceof    #7                  // class java/lang/StringBuilder
       4: ifeq          19
       7: aload_0
       8: checkcast     #7                  // class java/lang/StringBuilder
      11: iload_1
      12: iload_2
      13: invokevirtual #8                  // Method java/lang/StringBuilder.setCharAt:(IC)V
      16: goto          82
      19: aload_0
      20: instanceof    #9                  // class net/openhft/chronicle/bytes/Bytes
      23: ifeq          52
      26: aload_0
      27: checkcast     #9                  // class net/openhft/chronicle/bytes/Bytes
      30: iload_1
      31: i2l
      32: iload_2
      33: invokeinterface #10,  4           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writeByte:(JI)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      38: pop
      39: goto          82
      42: astore_3
      43: new           #13                 // class java/lang/AssertionError
      46: dup
      47: aload_3
      48: invokespecial #14                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      51: athrow
      52: new           #15                 // class java/lang/IllegalArgumentException
      55: dup
      56: new           #7                  // class java/lang/StringBuilder
      59: dup
      60: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #17                 // String
      65: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_0
      69: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      72: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      75: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      81: athrow
      82: return
    Exception table:
       from    to  target type
          26    39    42   Class java/lang/ArithmeticException
          26    39    42   Class java/lang/IllegalStateException

  public static void parseUtf8(net.openhft.chronicle.bytes.BytesStore, java.lang.StringBuilder, boolean, int) throws net.openhft.chronicle.bytes.UTFDataFormatRuntimeException, java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #23,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readPosition:()J
       7: aload_1
       8: iload_2
       9: iload_3
      10: invokestatic  #24                 // Method net/openhft/chronicle/bytes/BytesInternal.parseUtf8:(Lnet/openhft/chronicle/bytes/RandomDataInput;JLjava/lang/Appendable;ZI)V
      13: return

  public static void setLength(java.lang.Appendable, int) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: instanceof    #7                  // class java/lang/StringBuilder
       4: ifeq          18
       7: aload_0
       8: checkcast     #7                  // class java/lang/StringBuilder
      11: iload_1
      12: invokevirtual #25                 // Method java/lang/StringBuilder.setLength:(I)V
      15: goto          71
      18: aload_0
      19: instanceof    #9                  // class net/openhft/chronicle/bytes/Bytes
      22: ifeq          41
      25: aload_0
      26: checkcast     #9                  // class net/openhft/chronicle/bytes/Bytes
      29: lconst_0
      30: iload_1
      31: i2l
      32: invokeinterface #26,  5           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readPositionRemaining:(JJ)Lnet/openhft/chronicle/bytes/StreamingDataInput;
      37: pop
      38: goto          71
      41: new           #15                 // class java/lang/IllegalArgumentException
      44: dup
      45: new           #7                  // class java/lang/StringBuilder
      48: dup
      49: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #17                 // String
      54: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_0
      58: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      61: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      64: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: return

  public static void append(java.lang.Appendable, double) throws java.lang.IllegalArgumentException, java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: instanceof    #7                  // class java/lang/StringBuilder
       4: ifeq          19
       7: aload_0
       8: checkcast     #7                  // class java/lang/StringBuilder
      11: dload_1
      12: invokevirtual #27                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      15: pop
      16: goto          70
      19: aload_0
      20: instanceof    #9                  // class net/openhft/chronicle/bytes/Bytes
      23: ifeq          40
      26: aload_0
      27: checkcast     #9                  // class net/openhft/chronicle/bytes/Bytes
      30: dload_1
      31: invokeinterface #28,  3           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.append:(D)Lnet/openhft/chronicle/bytes/ByteStringAppender;
      36: pop
      37: goto          70
      40: new           #15                 // class java/lang/IllegalArgumentException
      43: dup
      44: new           #7                  // class java/lang/StringBuilder
      47: dup
      48: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #17                 // String
      53: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_0
      57: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      60: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      63: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: return

  public static void append(java.lang.Appendable, long) throws java.lang.IllegalArgumentException, java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: instanceof    #7                  // class java/lang/StringBuilder
       4: ifeq          19
       7: aload_0
       8: checkcast     #7                  // class java/lang/StringBuilder
      11: lload_1
      12: invokevirtual #29                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      15: pop
      16: goto          70
      19: aload_0
      20: instanceof    #9                  // class net/openhft/chronicle/bytes/Bytes
      23: ifeq          40
      26: aload_0
      27: checkcast     #9                  // class net/openhft/chronicle/bytes/Bytes
      30: lload_1
      31: invokeinterface #30,  3           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.append:(J)Lnet/openhft/chronicle/bytes/ByteStringAppender;
      36: pop
      37: goto          70
      40: new           #15                 // class java/lang/IllegalArgumentException
      43: dup
      44: new           #7                  // class java/lang/StringBuilder
      47: dup
      48: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #17                 // String
      53: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_0
      57: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      60: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      63: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: return

  public static <ACS extends java.lang.Appendable & java.lang.CharSequence> void append(ACS, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #31,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
       7: pop
       8: goto          21
      11: astore_2
      12: new           #13                 // class java/lang/AssertionError
      15: dup
      16: aload_2
      17: invokespecial #14                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      20: athrow
      21: return
    Exception table:
       from    to  target type
           0     8    11   Class java/io/IOException

  public static void read8bitAndAppend(net.openhft.chronicle.bytes.StreamingDataInput, java.lang.StringBuilder, net.openhft.chronicle.bytes.StopCharsTester) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokeinterface #33,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.readUnsignedByte:()I
       6: istore_3
       7: aload_2
       8: iload_3
       9: aload_0
      10: invokeinterface #34,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.peekUnsignedByte:()I
      15: invokeinterface #35,  3           // InterfaceMethod net/openhft/chronicle/bytes/StopCharsTester.isStopChar:(II)Z
      20: ifeq          24
      23: return
      24: aload_1
      25: iload_3
      26: i2c
      27: invokevirtual #36                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      30: pop
      31: aload_0
      32: invokeinterface #37,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.readRemaining:()J
      37: lconst_0
      38: lcmp
      39: ifne          43
      42: return
      43: goto          0

  public static void readUTFAndAppend(net.openhft.chronicle.bytes.StreamingDataInput, java.lang.Appendable, net.openhft.chronicle.bytes.StopCharsTester) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #38                 // Method readUtf8AndAppend:(Lnet/openhft/chronicle/bytes/StreamingDataInput;Ljava/lang/Appendable;Lnet/openhft/chronicle/bytes/StopCharsTester;)V
       6: goto          19
       9: astore_3
      10: new           #13                 // class java/lang/AssertionError
      13: dup
      14: aload_3
      15: invokespecial #14                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      18: athrow
      19: return
    Exception table:
       from    to  target type
           0     6     9   Class java/io/IOException

  public static void readUtf8AndAppend(net.openhft.chronicle.bytes.StreamingDataInput, java.lang.Appendable, net.openhft.chronicle.bytes.StopCharsTester) throws java.nio.BufferUnderflowException, java.io.IOException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokeinterface #33,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.readUnsignedByte:()I
       6: istore_3
       7: iload_3
       8: sipush        128
      11: if_icmplt     27
      14: aload_0
      15: ldc2_w        #39                 // long -1l
      18: invokeinterface #41,  3           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.readSkip:(J)Lnet/openhft/chronicle/bytes/StreamingDataInput;
      23: pop
      24: goto          120
      27: iload_3
      28: bipush        91
      30: if_icmpne     79
      33: aload_0
      34: invokeinterface #34,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.peekUnsignedByte:()I
      39: bipush        93
      41: if_icmpne     79
      44: aload_1
      45: iload_3
      46: i2c
      47: invokeinterface #42,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      52: pop
      53: aload_1
      54: aload_0
      55: invokeinterface #33,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.readUnsignedByte:()I
      60: i2c
      61: invokeinterface #42,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      66: pop
      67: aload_0
      68: invokeinterface #37,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.readRemaining:()J
      73: lconst_0
      74: lcmp
      75: ifne          0
      78: return
      79: aload_2
      80: iload_3
      81: aload_0
      82: invokeinterface #34,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.peekUnsignedByte:()I
      87: invokeinterface #35,  3           // InterfaceMethod net/openhft/chronicle/bytes/StopCharsTester.isStopChar:(II)Z
      92: ifeq          96
      95: return
      96: aload_1
      97: iload_3
      98: i2c
      99: invokeinterface #42,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     104: pop
     105: aload_0
     106: invokeinterface #37,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.readRemaining:()J
     111: lconst_0
     112: lcmp
     113: ifne          117
     116: return
     117: goto          0
     120: aload_0
     121: invokeinterface #33,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.readUnsignedByte:()I
     126: dup
     127: istore_3
     128: iflt          523
     131: iload_3
     132: iconst_4
     133: ishr
     134: tableswitch   { // 0 to 14
                     0: 208
                     1: 208
                     2: 208
                     3: 208
                     4: 208
                     5: 208
                     6: 208
                     7: 208
                     8: 493
                     9: 493
                    10: 493
                    11: 493
                    12: 237
                    13: 237
                    14: 335
               default: 493
          }
     208: aload_2
     209: iload_3
     210: aload_0
     211: invokeinterface #34,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.peekUnsignedByte:()I
     216: invokeinterface #35,  3           // InterfaceMethod net/openhft/chronicle/bytes/StopCharsTester.isStopChar:(II)Z
     221: ifeq          225
     224: return
     225: aload_1
     226: iload_3
     227: i2c
     228: invokeinterface #42,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     233: pop
     234: goto          120
     237: aload_0
     238: invokeinterface #33,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.readUnsignedByte:()I
     243: istore        4
     245: iload         4
     247: sipush        192
     250: iand
     251: sipush        128
     254: if_icmpeq     288
     257: new           #43                 // class java/io/UTFDataFormatException
     260: dup
     261: new           #7                  // class java/lang/StringBuilder
     264: dup
     265: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
     268: ldc           #44                 // String malformed input around byte
     270: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     273: iload         4
     275: invokestatic  #45                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
     278: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     281: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     284: invokespecial #46                 // Method java/io/UTFDataFormatException."<init>":(Ljava/lang/String;)V
     287: athrow
     288: iload_3
     289: bipush        31
     291: iand
     292: bipush        6
     294: ishl
     295: iload         4
     297: bipush        63
     299: iand
     300: ior
     301: i2c
     302: istore        5
     304: aload_2
     305: iload         5
     307: aload_0
     308: invokeinterface #34,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.peekUnsignedByte:()I
     313: invokeinterface #35,  3           // InterfaceMethod net/openhft/chronicle/bytes/StopCharsTester.isStopChar:(II)Z
     318: ifeq          322
     321: return
     322: aload_1
     323: iload         5
     325: i2c
     326: invokeinterface #42,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     331: pop
     332: goto          120
     335: aload_0
     336: invokeinterface #33,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.readUnsignedByte:()I
     341: istore        4
     343: aload_0
     344: invokeinterface #33,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.readUnsignedByte:()I
     349: istore        5
     351: iload         4
     353: sipush        192
     356: iand
     357: sipush        128
     360: if_icmpeq     394
     363: new           #43                 // class java/io/UTFDataFormatException
     366: dup
     367: new           #7                  // class java/lang/StringBuilder
     370: dup
     371: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
     374: ldc           #44                 // String malformed input around byte
     376: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     379: iload         4
     381: invokestatic  #45                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
     384: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     387: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     390: invokespecial #46                 // Method java/io/UTFDataFormatException."<init>":(Ljava/lang/String;)V
     393: athrow
     394: iload         5
     396: sipush        192
     399: iand
     400: sipush        128
     403: if_icmpeq     437
     406: new           #43                 // class java/io/UTFDataFormatException
     409: dup
     410: new           #7                  // class java/lang/StringBuilder
     413: dup
     414: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
     417: ldc           #44                 // String malformed input around byte
     419: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     422: iload         5
     424: invokestatic  #45                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
     427: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     430: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     433: invokespecial #46                 // Method java/io/UTFDataFormatException."<init>":(Ljava/lang/String;)V
     436: athrow
     437: iload_3
     438: bipush        15
     440: iand
     441: bipush        12
     443: ishl
     444: iload         4
     446: bipush        63
     448: iand
     449: bipush        6
     451: ishl
     452: ior
     453: iload         5
     455: bipush        63
     457: iand
     458: ior
     459: i2c
     460: istore        6
     462: aload_2
     463: iload         6
     465: aload_0
     466: invokeinterface #34,  1           // InterfaceMethod net/openhft/chronicle/bytes/StreamingDataInput.peekUnsignedByte:()I
     471: invokeinterface #35,  3           // InterfaceMethod net/openhft/chronicle/bytes/StopCharsTester.isStopChar:(II)Z
     476: ifeq          480
     479: return
     480: aload_1
     481: iload         6
     483: i2c
     484: invokeinterface #42,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
     489: pop
     490: goto          120
     493: new           #43                 // class java/io/UTFDataFormatException
     496: dup
     497: new           #7                  // class java/lang/StringBuilder
     500: dup
     501: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
     504: ldc           #44                 // String malformed input around byte
     506: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     509: iload_3
     510: invokestatic  #45                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
     513: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     516: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     519: invokespecial #46                 // Method java/io/UTFDataFormatException."<init>":(Ljava/lang/String;)V
     522: athrow
     523: return

  public static void parse8bit_SB1(net.openhft.chronicle.bytes.Bytes, java.lang.StringBuilder, int) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: iload_2
       1: i2l
       2: aload_0
       3: invokeinterface #47,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readRemaining:()J
       8: lcmp
       9: ifle          20
      12: new           #48                 // class java/nio/BufferUnderflowException
      15: dup
      16: invokespecial #49                 // Method java/nio/BufferUnderflowException."<init>":()V
      19: athrow
      20: aload_0
      21: invokeinterface #50,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.bytesStore:()Lnet/openhft/chronicle/bytes/BytesStore;
      26: checkcast     #51                 // class net/openhft/chronicle/bytes/NativeBytesStore
      29: astore_3
      30: aload_0
      31: invokeinterface #52,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readPosition:()J
      36: lstore        4
      38: lload         4
      40: aload_3
      41: aload_1
      42: iload_2
      43: invokestatic  #53                 // Method net/openhft/chronicle/bytes/BytesInternal.parse8bit_SB1:(JLnet/openhft/chronicle/bytes/NativeBytesStore;Ljava/lang/StringBuilder;I)I
      46: istore        6
      48: aload_0
      49: iload         6
      51: i2l
      52: invokeinterface #54,  3           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readSkip:(J)Lnet/openhft/chronicle/bytes/StreamingDataInput;
      57: pop
      58: return

  public static void parse8bit(net.openhft.chronicle.bytes.StreamingDataInput, java.lang.Appendable, int) throws java.nio.BufferUnderflowException, java.io.IOException, java.lang.IllegalStateException;
    Code:
       0: aload_1
       1: instanceof    #7                  // class java/lang/StringBuilder
       4: ifeq          55
       7: aload_1
       8: checkcast     #7                  // class java/lang/StringBuilder
      11: astore_3
      12: aload_0
      13: instanceof    #9                  // class net/openhft/chronicle/bytes/Bytes
      16: ifeq          46
      19: aload_0
      20: checkcast     #9                  // class net/openhft/chronicle/bytes/Bytes
      23: invokeinterface #50,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.bytesStore:()Lnet/openhft/chronicle/bytes/BytesStore;
      28: instanceof    #51                 // class net/openhft/chronicle/bytes/NativeBytesStore
      31: ifeq          46
      34: aload_0
      35: checkcast     #9                  // class net/openhft/chronicle/bytes/Bytes
      38: aload_3
      39: iload_2
      40: invokestatic  #55                 // Method parse8bit_SB1:(Lnet/openhft/chronicle/bytes/Bytes;Ljava/lang/StringBuilder;I)V
      43: goto          52
      46: aload_0
      47: aload_3
      48: iload_2
      49: invokestatic  #56                 // Method net/openhft/chronicle/bytes/BytesInternal.parse8bit1:(Lnet/openhft/chronicle/bytes/StreamingDataInput;Ljava/lang/StringBuilder;I)V
      52: goto          61
      55: aload_0
      56: aload_1
      57: iload_2
      58: invokestatic  #57                 // Method net/openhft/chronicle/bytes/BytesInternal.parse8bit1:(Lnet/openhft/chronicle/bytes/StreamingDataInput;Ljava/lang/Appendable;I)V
      61: return

  public static <ACS extends java.lang.Appendable & java.lang.CharSequence> void append(ACS, java.lang.CharSequence, long, long) throws java.lang.ArithmeticException, java.nio.BufferUnderflowException, java.lang.IllegalStateException, java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: instanceof    #7                  // class java/lang/StringBuilder
       4: ifeq          61
       7: aload_1
       8: instanceof    #9                  // class net/openhft/chronicle/bytes/Bytes
      11: ifeq          35
      14: aload_0
      15: checkcast     #7                  // class java/lang/StringBuilder
      18: aload_1
      19: checkcast     #9                  // class net/openhft/chronicle/bytes/Bytes
      22: lload_2
      23: lload         4
      25: invokestatic  #58                 // InterfaceMethod net/openhft/chronicle/bytes/Bytes.toString:(Lnet/openhft/chronicle/bytes/Bytes;JJ)Ljava/lang/String;
      28: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: pop
      32: goto          99
      35: aload_0
      36: checkcast     #7                  // class java/lang/StringBuilder
      39: aload_1
      40: lload_2
      41: invokestatic  #59                 // Method net/openhft/chronicle/core/Maths.toInt32:(J)I
      44: lload         4
      46: invokestatic  #59                 // Method net/openhft/chronicle/core/Maths.toInt32:(J)I
      49: invokeinterface #60,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
      54: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      57: pop
      58: goto          99
      61: aload_0
      62: instanceof    #9                  // class net/openhft/chronicle/bytes/Bytes
      65: ifeq          91
      68: aload_0
      69: checkcast     #9                  // class net/openhft/chronicle/bytes/Bytes
      72: aload_1
      73: lload_2
      74: invokestatic  #59                 // Method net/openhft/chronicle/core/Maths.toInt32:(J)I
      77: lload         4
      79: invokestatic  #59                 // Method net/openhft/chronicle/core/Maths.toInt32:(J)I
      82: invokeinterface #62,  4           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.appendUtf8:(Ljava/lang/CharSequence;II)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      87: pop
      88: goto          99
      91: new           #63                 // class java/lang/UnsupportedOperationException
      94: dup
      95: invokespecial #64                 // Method java/lang/UnsupportedOperationException."<init>":()V
      98: athrow
      99: return

  public static long findUtf8Length(java.lang.CharSequence) throws java.lang.IndexOutOfBoundsException;
    Code:
       0: aload_0
       1: invokeinterface #65,  1           // InterfaceMethod java/lang/CharSequence.length:()I
       6: istore_1
       7: iload_1
       8: i2l
       9: lstore_2
      10: iconst_0
      11: istore        4
      13: iload         4
      15: iload_1
      16: if_icmpge     66
      19: aload_0
      20: iload         4
      22: invokeinterface #66,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      27: istore        5
      29: iload         5
      31: bipush        127
      33: if_icmpgt     39
      36: goto          60
      39: iload         5
      41: sipush        2047
      44: if_icmpgt     54
      47: lload_2
      48: lconst_1
      49: ladd
      50: lstore_2
      51: goto          60
      54: lload_2
      55: ldc2_w        #67                 // long 2l
      58: ladd
      59: lstore_2
      60: iinc          4, 1
      63: goto          13
      66: lload_2
      67: lreturn

  public static long findUtf8Length(byte[], byte);
    Code:
       0: iload_1
       1: ifne          52
       4: aload_0
       5: arraylength
       6: istore        4
       8: aload_0
       9: arraylength
      10: i2l
      11: lstore_2
      12: iconst_0
      13: istore        5
      15: iload         5
      17: iload         4
      19: if_icmpge     49
      22: aload_0
      23: iload         5
      25: baload
      26: sipush        255
      29: iand
      30: istore        6
      32: iload         6
      34: bipush        127
      36: if_icmple     43
      39: lload_2
      40: lconst_1
      41: ladd
      42: lstore_2
      43: iinc          5, 1
      46: goto          15
      49: goto          136
      52: aload_0
      53: arraylength
      54: istore        4
      56: lconst_0
      57: lstore_2
      58: iconst_0
      59: istore        5
      61: iload         5
      63: iload         4
      65: if_icmpge     136
      68: aload_0
      69: iload         5
      71: iconst_1
      72: iadd
      73: baload
      74: sipush        255
      77: iand
      78: bipush        8
      80: ishl
      81: aload_0
      82: iload         5
      84: baload
      85: sipush        255
      88: iand
      89: ior
      90: i2c
      91: istore        6
      93: iload         6
      95: bipush        127
      97: if_icmpgt     107
     100: lload_2
     101: lconst_1
     102: ladd
     103: lstore_2
     104: goto          130
     107: iload         6
     109: sipush        2047
     112: if_icmpgt     124
     115: lload_2
     116: ldc2_w        #67                 // long 2l
     119: ladd
     120: lstore_2
     121: goto          130
     124: lload_2
     125: ldc2_w        #69                 // long 3l
     128: ladd
     129: lstore_2
     130: iinc          5, 2
     133: goto          61
     136: lload_2
     137: lreturn

  public static long findUtf8Length(byte[]);
    Code:
       0: lconst_0
       1: lstore_1
       2: aload_0
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     102
      14: aload_0
      15: iload         4
      17: baload
      18: sipush        255
      21: iand
      22: istore        5
      24: iload         5
      26: ifne          32
      29: goto          102
      32: iload         5
      34: sipush        240
      37: if_icmplt     52
      40: lload_1
      41: ldc2_w        #71                 // long 4l
      44: ladd
      45: lstore_1
      46: iinc          4, 3
      49: goto          96
      52: iload         5
      54: sipush        224
      57: if_icmplt     72
      60: lload_1
      61: ldc2_w        #69                 // long 3l
      64: ladd
      65: lstore_1
      66: iinc          4, 2
      69: goto          96
      72: iload         5
      74: sipush        192
      77: if_icmplt     92
      80: lload_1
      81: ldc2_w        #67                 // long 2l
      84: ladd
      85: lstore_1
      86: iinc          4, 1
      89: goto          96
      92: lload_1
      93: lconst_1
      94: ladd
      95: lstore_1
      96: iinc          4, 1
      99: goto          8
     102: lload_1
     103: lreturn

  public static long findUtf8Length(char[]);
    Code:
       0: aload_0
       1: arraylength
       2: i2l
       3: lstore_1
       4: aload_0
       5: astore_3
       6: aload_3
       7: arraylength
       8: istore        4
      10: iconst_0
      11: istore        5
      13: iload         5
      15: iload         4
      17: if_icmpge     63
      20: aload_3
      21: iload         5
      23: caload
      24: istore        6
      26: iload         6
      28: bipush        127
      30: if_icmpgt     36
      33: goto          57
      36: iload         6
      38: sipush        2047
      41: if_icmpgt     51
      44: lload_1
      45: lconst_1
      46: ladd
      47: lstore_1
      48: goto          57
      51: lload_1
      52: ldc2_w        #67                 // long 2l
      55: ladd
      56: lstore_1
      57: iinc          5, 1
      60: goto          13
      63: lload_1
      64: lreturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #4                  // class net/openhft/chronicle/bytes/AppendableUtil
       4: putstatic     #1                  // Field $VALUES:[Lnet/openhft/chronicle/bytes/AppendableUtil;
       7: return
}
