Compiled from "OnHeapBytes.java"
public class net.openhft.chronicle.bytes.OnHeapBytes extends net.openhft.chronicle.bytes.VanillaBytes<byte[]> {
  public static final int MAX_CAPACITY;

  private final boolean elastic;

  private final long capacity;

  public net.openhft.chronicle.bytes.OnHeapBytes(net.openhft.chronicle.bytes.BytesStore, boolean) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method net/openhft/chronicle/bytes/VanillaBytes."<init>":(Lnet/openhft/chronicle/bytes/BytesStore;)V
       5: aload_0
       6: iload_2
       7: putfield      #3                  // Field elastic:Z
      10: aload_0
      11: iload_2
      12: ifeq          21
      15: ldc2_w        #5                  // long 2147483632l
      18: goto          27
      21: aload_1
      22: invokeinterface #7,  1            // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.capacity:()J
      27: putfield      #8                  // Field capacity:J
      30: aload_0
      31: lconst_0
      32: invokevirtual #9                  // Method writePosition:(J)Lnet/openhft/chronicle/bytes/Bytes;
      35: pop
      36: aload_0
      37: aload_0
      38: invokevirtual #10                 // Method capacity:()J
      41: invokevirtual #11                 // Method writeLimit:(J)Lnet/openhft/chronicle/bytes/Bytes;
      44: pop
      45: goto          58
      48: astore_3
      49: new           #13                 // class java/lang/AssertionError
      52: dup
      53: aload_3
      54: invokespecial #14                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      57: athrow
      58: return
    Exception table:
       from    to  target type
          30    45    48   Class java/nio/BufferOverflowException

  public long capacity();
    Code:
       0: aload_0
       1: getfield      #8                  // Field capacity:J
       4: lreturn

  public void ensureCapacity(long) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method isElastic:()Z
       4: ifeq          29
       7: aload_0
       8: getfield      #16                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      11: invokeinterface #7,  1            // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.capacity:()J
      16: lload_1
      17: lcmp
      18: ifge          29
      21: aload_0
      22: lload_1
      23: invokespecial #17                 // Method resize:(J)V
      26: goto          34
      29: aload_0
      30: lload_1
      31: invokespecial #18                 // Method net/openhft/chronicle/bytes/VanillaBytes.ensureCapacity:(J)V
      34: return

  public boolean isElastic();
    Code:
       0: aload_0
       1: getfield      #3                  // Field elastic:Z
       4: ireturn

  protected void writeCheckOffset(long, long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #16                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
       5: invokeinterface #19,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.start:()J
      10: lcmp
      11: iflt          61
      14: lload_1
      15: lload_3
      16: ladd
      17: lstore        5
      19: lload         5
      21: aload_0
      22: getfield      #20                 // Field writeLimit:J
      25: lcmp
      26: ifle          36
      29: aload_0
      30: lload_3
      31: lload         5
      33: invokespecial #21                 // Method throwBeyondWriteLimit:(JJ)V
      36: lload         5
      38: aload_0
      39: getfield      #16                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      42: invokeinterface #22,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.safeLimit:()J
      47: lcmp
      48: ifgt          52
      51: return
      52: aload_0
      53: lload         5
      55: invokespecial #23                 // Method checkResize:(J)V
      58: goto          69
      61: new           #12                 // class java/nio/BufferOverflowException
      64: dup
      65: invokespecial #24                 // Method java/nio/BufferOverflowException."<init>":()V
      68: athrow
      69: return

  private void throwBeyondWriteLimit(long, long) throws net.openhft.chronicle.bytes.util.DecoratedBufferOverflowException;
    Code:
       0: new           #25                 // class net/openhft/chronicle/bytes/util/DecoratedBufferOverflowException
       3: dup
       4: new           #26                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #28                 // String attempt to write
      13: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: lload_1
      17: invokevirtual #30                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      20: ldc           #31                 // String  bytes to
      22: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: lload_3
      26: invokevirtual #30                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      29: ldc           #32                 // String  limit:
      31: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: getfield      #20                 // Field writeLimit:J
      38: invokevirtual #30                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      41: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #34                 // Method net/openhft/chronicle/bytes/util/DecoratedBufferOverflowException."<init>":(Ljava/lang/String;)V
      47: athrow

  private void checkResize(long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method isElastic:()Z
       4: ifeq          15
       7: aload_0
       8: lload_1
       9: invokespecial #17                 // Method resize:(J)V
      12: goto          23
      15: new           #12                 // class java/nio/BufferOverflowException
      18: dup
      19: invokespecial #24                 // Method java/nio/BufferOverflowException."<init>":()V
      22: athrow
      23: return

  private void resize(long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifge          14
       6: new           #12                 // class java/nio/BufferOverflowException
       9: dup
      10: invokespecial #24                 // Method java/nio/BufferOverflowException."<init>":()V
      13: athrow
      14: lload_1
      15: aload_0
      16: invokevirtual #10                 // Method capacity:()J
      19: lcmp
      20: ifle          31
      23: new           #12                 // class java/nio/BufferOverflowException
      26: dup
      27: invokespecial #24                 // Method java/nio/BufferOverflowException."<init>":()V
      30: athrow
      31: aload_0
      32: invokevirtual #35                 // Method realCapacity:()J
      35: lstore_3
      36: lload_1
      37: lload_3
      38: lcmp
      39: ifgt          43
      42: return
      43: lload_1
      44: lload_3
      45: ldc2_w        #36                 // long 3l
      48: lmul
      49: ldc2_w        #38                 // long 2l
      52: ldiv
      53: invokestatic  #40                 // Method java/lang/Math.max:(JJ)J
      56: lstore        5
      58: lload         5
      60: aload_0
      61: invokevirtual #10                 // Method capacity:()J
      64: invokestatic  #41                 // Method java/lang/Math.min:(JJ)J
      67: l2i
      68: istore        7
      70: lload_1
      71: ldc2_w        #42                 // long 131072l
      74: lcmp
      75: iflt          143
      78: invokestatic  #44                 // Method net/openhft/chronicle/core/Jvm.perf:()Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
      81: aload_0
      82: invokevirtual #45                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      85: new           #26                 // class java/lang/StringBuilder
      88: dup
      89: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      92: ldc           #46                 // String Resizing buffer was
      94: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: lload_3
      98: ldc2_w        #47                 // long 1024l
     101: ldiv
     102: invokevirtual #30                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     105: ldc           #49                 // String  KB, needs
     107: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: lload_1
     111: lload_3
     112: lsub
     113: invokevirtual #30                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     116: ldc           #50                 // String  bytes more, new-size
     118: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: iload         7
     123: sipush        1024
     126: idiv
     127: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     130: ldc           #52                 // String  KB
     132: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     138: invokeinterface #53,  3           // InterfaceMethod net/openhft/chronicle/core/onoes/ExceptionHandler.on:(Ljava/lang/Class;Ljava/lang/String;)V
     143: iload         7
     145: newarray       byte
     147: invokestatic  #54                 // Method net/openhft/chronicle/bytes/HeapBytesStore.wrap:([B)Lnet/openhft/chronicle/bytes/HeapBytesStore;
     150: astore        8
     152: aload         8
     154: getstatic     #55                 // Field INIT:Lnet/openhft/chronicle/core/io/ReferenceOwner;
     157: aload_0
     158: invokevirtual #56                 // Method net/openhft/chronicle/bytes/HeapBytesStore.reserveTransfer:(Lnet/openhft/chronicle/core/io/ReferenceOwner;Lnet/openhft/chronicle/core/io/ReferenceOwner;)V
     161: goto          186
     164: astore        9
     166: new           #12                 // class java/nio/BufferOverflowException
     169: dup
     170: invokespecial #24                 // Method java/nio/BufferOverflowException."<init>":()V
     173: astore        10
     175: aload         10
     177: aload         9
     179: invokevirtual #58                 // Method java/nio/BufferOverflowException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     182: pop
     183: aload         10
     185: athrow
     186: aload_0
     187: getfield      #16                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
     190: astore        9
     192: aload_0
     193: getfield      #16                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
     196: aload         8
     198: invokeinterface #59,  2           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.copyTo:(Lnet/openhft/chronicle/bytes/BytesStore;)J
     203: pop2
     204: aload_0
     205: aload         8
     207: invokevirtual #60                 // Method bytesStore:(Lnet/openhft/chronicle/bytes/BytesStore;)V
     210: aload         9
     212: aload_0
     213: invokeinterface #61,  2           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.release:(Lnet/openhft/chronicle/core/io/ReferenceOwner;)V
     218: goto          237
     221: astore        10
     223: invokestatic  #62                 // Method net/openhft/chronicle/core/Jvm.debug:()Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
     226: aload_0
     227: invokevirtual #45                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     230: aload         10
     232: invokeinterface #63,  3           // InterfaceMethod net/openhft/chronicle/core/onoes/ExceptionHandler.on:(Ljava/lang/Class;Ljava/lang/Throwable;)V
     237: return
    Exception table:
       from    to  target type
         143   161   164   Class java/lang/IllegalStateException
         210   218   221   Class java/lang/IllegalStateException
}
