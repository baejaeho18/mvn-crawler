Compiled from "BinaryIntReference.java"
public class net.openhft.chronicle.bytes.ref.BinaryIntReference extends net.openhft.chronicle.bytes.ref.AbstractReference implements net.openhft.chronicle.core.values.IntValue {
  public static final int INT_NOT_COMPLETE;

  public net.openhft.chronicle.bytes.ref.BinaryIntReference();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method net/openhft/chronicle/bytes/ref/AbstractReference."<init>":()V
       4: return

  public void bytesStore(net.openhft.chronicle.bytes.BytesStore, long, long) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method throwExceptionIfClosedInSetter:()V
       4: lload         4
       6: aload_0
       7: invokevirtual #4                  // Method maxSize:()J
      10: lcmp
      11: ifeq          22
      14: new           #5                  // class java/lang/IllegalArgumentException
      17: dup
      18: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":()V
      21: athrow
      22: aload_0
      23: aload_1
      24: lload_2
      25: lload         4
      27: invokespecial #7                  // Method net/openhft/chronicle/bytes/ref/AbstractReference.bytesStore:(Lnet/openhft/chronicle/bytes/BytesStore;JJ)V
      30: return

  public long maxSize();
    Code:
       0: ldc2_w        #8                  // long 4l
       3: lreturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #10                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       4: ifnonnull     10
       7: ldc           #11                 // String bytes is null
       9: areturn
      10: new           #12                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #14                 // String value:
      19: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: invokevirtual #16                 // Method getValue:()I
      26: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: areturn
      33: astore_1
      34: new           #12                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #14                 // String value:
      43: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_1
      47: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: areturn
    Exception table:
       from    to  target type
          10    32    33   Class java/lang/Throwable

  public int getValue() throws java.lang.IllegalStateException, java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method throwExceptionIfClosed:()V
       4: aload_0
       5: getfield      #10                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       8: ifnonnull     15
      11: iconst_0
      12: goto          28
      15: aload_0
      16: getfield      #10                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
      19: aload_0
      20: getfield      #22                 // Field offset:J
      23: invokeinterface #23,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readInt:(J)I
      28: ireturn

  public void setValue(int) throws java.lang.IllegalStateException, java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method throwExceptionIfClosedInSetter:()V
       4: aload_0
       5: getfield      #10                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       8: aload_0
       9: getfield      #22                 // Field offset:J
      12: iload_1
      13: invokeinterface #24,  4           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeInt:(JI)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      18: pop
      19: return

  public int getVolatileValue() throws java.lang.IllegalStateException, java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method throwExceptionIfClosed:()V
       4: aload_0
       5: getfield      #10                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       8: aload_0
       9: getfield      #22                 // Field offset:J
      12: invokeinterface #25,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readVolatileInt:(J)I
      17: ireturn

  public void setOrderedValue(int) throws java.lang.IllegalStateException, java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method throwExceptionIfClosedInSetter:()V
       4: aload_0
       5: getfield      #10                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       8: aload_0
       9: getfield      #22                 // Field offset:J
      12: iload_1
      13: invokeinterface #26,  4           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeOrderedInt:(JI)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      18: pop
      19: return

  public int addValue(int) throws java.lang.IllegalStateException, java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method throwExceptionIfClosed:()V
       4: aload_0
       5: getfield      #10                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       8: aload_0
       9: getfield      #22                 // Field offset:J
      12: iload_1
      13: invokeinterface #27,  4           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.addAndGetInt:(JI)I
      18: ireturn

  public int addAtomicValue(int) throws java.lang.IllegalStateException, java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method throwExceptionIfClosed:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #28                 // Method addValue:(I)I
       9: ireturn

  public boolean compareAndSwapValue(int, int) throws java.lang.IllegalStateException, java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method throwExceptionIfClosed:()V
       4: aload_0
       5: getfield      #10                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       8: aload_0
       9: getfield      #22                 // Field offset:J
      12: iload_1
      13: iload_2
      14: invokeinterface #29,  5           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.compareAndSwapInt:(JII)Z
      19: ireturn
}
