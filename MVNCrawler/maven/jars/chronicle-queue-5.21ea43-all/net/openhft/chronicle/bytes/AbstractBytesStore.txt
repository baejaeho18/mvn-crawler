Compiled from "AbstractBytesStore.java"
public abstract class net.openhft.chronicle.bytes.AbstractBytesStore<B extends net.openhft.chronicle.bytes.BytesStore<B, Underlying>, Underlying> extends net.openhft.chronicle.core.io.AbstractReferenceCounted implements net.openhft.chronicle.bytes.BytesStore<B, Underlying> {
  protected net.openhft.chronicle.bytes.AbstractBytesStore();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method net/openhft/chronicle/core/io/AbstractReferenceCounted."<init>":()V
       4: return

  protected net.openhft.chronicle.bytes.AbstractBytesStore(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #2                  // Method net/openhft/chronicle/core/io/AbstractReferenceCounted."<init>":(Z)V
       5: return

  public int peekUnsignedByte(long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: lload_1
       1: aload_0
       2: invokevirtual #3                  // Method readLimit:()J
       5: lcmp
       6: iflt          13
       9: iconst_m1
      10: goto          18
      13: aload_0
      14: lload_1
      15: invokevirtual #4                  // Method readUnsignedByte:(J)I
      18: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #5                  // InterfaceMethod net/openhft/chronicle/bytes/algo/BytesStoreHash.hash32:(Lnet/openhft/chronicle/bytes/BytesStore;)I
       4: ireturn

  public long readPosition();
    Code:
       0: lconst_0
       1: lreturn

  public long readRemaining();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method readLimit:()J
       4: aload_0
       5: invokevirtual #6                  // Method readPosition:()J
       8: lsub
       9: lreturn

  public long writeRemaining();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method writeLimit:()J
       4: aload_0
       5: invokevirtual #8                  // Method writePosition:()J
       8: lsub
       9: lreturn

  public long start();
    Code:
       0: lconst_0
       1: lreturn

  protected boolean performReleaseInBackground();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isDirectMemory:()Z
       4: ireturn
}
