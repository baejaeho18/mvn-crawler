Compiled from "UncheckedBytes.java"
public class net.openhft.chronicle.bytes.UncheckedBytes<Underlying> extends net.openhft.chronicle.bytes.AbstractBytes<Underlying> {
  net.openhft.chronicle.bytes.Bytes underlyingBytes;

  public net.openhft.chronicle.bytes.UncheckedBytes(net.openhft.chronicle.bytes.Bytes) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1,  1            // InterfaceMethod net/openhft/chronicle/bytes/Bytes.bytesStore:()Lnet/openhft/chronicle/bytes/BytesStore;
       7: checkcast     #2                  // class net/openhft/chronicle/bytes/AbstractBytesStore
      10: aload_1
      11: invokeinterface #3,  1            // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writePosition:()J
      16: aload_1
      17: invokeinterface #4,  1            // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writeLimit:()J
      22: invokespecial #5                  // Method net/openhft/chronicle/bytes/AbstractBytes."<init>":(Lnet/openhft/chronicle/bytes/BytesStore;JJ)V
      25: aload_0
      26: aload_1
      27: putfield      #6                  // Field underlyingBytes:Lnet/openhft/chronicle/bytes/Bytes;
      30: aload_0
      31: aload_1
      32: invokeinterface #7,  1            // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readPosition:()J
      37: invokevirtual #8                  // Method readPosition:(J)Lnet/openhft/chronicle/bytes/Bytes;
      40: pop
      41: return

  public void setBytes(net.openhft.chronicle.bytes.Bytes) throws java.lang.IllegalStateException;
    Code:
       0: aload_1
       1: invokeinterface #1,  1            // InterfaceMethod net/openhft/chronicle/bytes/Bytes.bytesStore:()Lnet/openhft/chronicle/bytes/BytesStore;
       6: astore_2
       7: aload_0
       8: getfield      #9                  // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      11: aload_2
      12: if_acmpeq     43
      15: aload_0
      16: getfield      #9                  // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      19: aload_0
      20: invokeinterface #10,  2           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.release:(Lnet/openhft/chronicle/core/io/ReferenceOwner;)V
      25: aload_0
      26: aload_2
      27: checkcast     #2                  // class net/openhft/chronicle/bytes/AbstractBytesStore
      30: invokevirtual #11                 // Method bytesStore:(Lnet/openhft/chronicle/bytes/BytesStore;)V
      33: aload_0
      34: getfield      #9                  // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      37: aload_0
      38: invokeinterface #12,  2           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.reserve:(Lnet/openhft/chronicle/core/io/ReferenceOwner;)V
      43: aload_0
      44: aload_1
      45: invokeinterface #7,  1            // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readPosition:()J
      50: invokevirtual #8                  // Method readPosition:(J)Lnet/openhft/chronicle/bytes/Bytes;
      53: pop
      54: aload_0
      55: aload_1
      56: invokeinterface #3,  1            // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writePosition:()J
      61: invokevirtual #13                 // Method uncheckedWritePosition:(J)V
      64: aload_0
      65: aload_1
      66: invokeinterface #4,  1            // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writeLimit:()J
      71: putfield      #14                 // Field writeLimit:J
      74: aload_0
      75: aload_1
      76: putfield      #6                  // Field underlyingBytes:Lnet/openhft/chronicle/bytes/Bytes;
      79: return

  public void ensureCapacity(long) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException;
    Code:
       0: lload_1
       1: aload_0
       2: invokevirtual #15                 // Method realCapacity:()J
       5: lcmp
       6: ifle          35
       9: aload_0
      10: getfield      #6                  // Field underlyingBytes:Lnet/openhft/chronicle/bytes/Bytes;
      13: lload_1
      14: invokeinterface #16,  3           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.ensureCapacity:(J)V
      19: aload_0
      20: aload_0
      21: getfield      #6                  // Field underlyingBytes:Lnet/openhft/chronicle/bytes/Bytes;
      24: invokeinterface #1,  1            // InterfaceMethod net/openhft/chronicle/bytes/Bytes.bytesStore:()Lnet/openhft/chronicle/bytes/BytesStore;
      29: checkcast     #2                  // class net/openhft/chronicle/bytes/AbstractBytesStore
      32: invokevirtual #11                 // Method bytesStore:(Lnet/openhft/chronicle/bytes/BytesStore;)V
      35: return

  public net.openhft.chronicle.bytes.Bytes<Underlying> unchecked(boolean);
    Code:
       0: aload_0
       1: areturn

  public boolean unchecked();
    Code:
       0: iconst_1
       1: ireturn

  void writeCheckOffset(long, long);
    Code:
       0: return

  void readCheckOffset(long, long, boolean);
    Code:
       0: return

  void prewriteCheckOffset(long, long);
    Code:
       0: return

  public net.openhft.chronicle.bytes.Bytes<Underlying> readPosition(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #17                 // Field readPosition:J
       5: aload_0
       6: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> readLimit(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #13                 // Method uncheckedWritePosition:(J)V
       5: aload_0
       6: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writePosition(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #13                 // Method uncheckedWritePosition:(J)V
       5: aload_0
       6: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> readSkip(long);
    Code:
       0: aload_0
       1: dup
       2: getfield      #17                 // Field readPosition:J
       5: lload_1
       6: ladd
       7: putfield      #17                 // Field readPosition:J
      10: aload_0
      11: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeSkip(long);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #18                 // Method writePosition:()J
       5: lload_1
       6: ladd
       7: invokevirtual #13                 // Method uncheckedWritePosition:(J)V
      10: aload_0
      11: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeLimit(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #14                 // Field writeLimit:J
       5: aload_0
       6: areturn

  public net.openhft.chronicle.bytes.BytesStore<net.openhft.chronicle.bytes.Bytes<Underlying>, Underlying> copy();
    Code:
       0: new           #19                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #20                 // String todo
       6: invokespecial #21                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean isElastic();
    Code:
       0: iconst_0
       1: ireturn

  protected long readOffsetPositionMoved(long);
    Code:
       0: aload_0
       1: getfield      #17                 // Field readPosition:J
       4: lstore_3
       5: aload_0
       6: dup
       7: getfield      #17                 // Field readPosition:J
      10: lload_1
      11: ladd
      12: putfield      #17                 // Field readPosition:J
      15: lload_3
      16: lreturn

  protected long writeOffsetPositionMoved(long, long);
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method writePosition:()J
       4: lstore        5
       6: aload_0
       7: aload_0
       8: invokevirtual #18                 // Method writePosition:()J
      11: lload_3
      12: ladd
      13: invokevirtual #13                 // Method uncheckedWritePosition:(J)V
      16: lload         5
      18: lreturn

  protected long prewriteOffsetPositionMoved(long) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #17                 // Field readPosition:J
       5: lload_1
       6: lsub
       7: dup2_x1
       8: putfield      #17                 // Field readPosition:J
      11: lreturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> write(net.openhft.chronicle.bytes.RandomDataInput, long, long) throws java.nio.BufferOverflowException, java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.nio.BufferUnderflowException;
    Code:
       0: lload         4
       2: ldc2_w        #22                 // long 8l
       5: lcmp
       6: ifne          24
       9: aload_0
      10: aload_1
      11: lload_2
      12: invokeinterface #24,  3           // InterfaceMethod net/openhft/chronicle/bytes/RandomDataInput.readLong:(J)J
      17: invokevirtual #25                 // Method writeLong:(J)Lnet/openhft/chronicle/bytes/Bytes;
      20: pop
      21: goto          33
      24: aload_0
      25: aload_1
      26: lload_2
      27: lload         4
      29: invokespecial #26                 // Method net/openhft/chronicle/bytes/AbstractBytes.write:(Lnet/openhft/chronicle/bytes/RandomDataInput;JJ)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      32: pop
      33: aload_0
      34: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> write(net.openhft.chronicle.bytes.BytesStore, long, long) throws java.nio.BufferOverflowException, java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.nio.BufferUnderflowException;
    Code:
       0: lload         4
       2: ldc2_w        #22                 // long 8l
       5: lcmp
       6: ifne          24
       9: aload_0
      10: aload_1
      11: lload_2
      12: invokeinterface #27,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readLong:(J)J
      17: invokevirtual #25                 // Method writeLong:(J)Lnet/openhft/chronicle/bytes/Bytes;
      20: pop
      21: goto          75
      24: aload_1
      25: invokeinterface #28,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.underlyingObject:()Ljava/lang/Object;
      30: ifnonnull     66
      33: aload_0
      34: getfield      #9                  // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      37: invokeinterface #29,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.isDirectMemory:()Z
      42: ifeq          66
      45: lload         4
      47: ldc2_w        #30                 // long 32l
      50: lcmp
      51: iflt          66
      54: aload_0
      55: aload_1
      56: lload_2
      57: lload         4
      59: invokevirtual #32                 // Method rawCopy:(Lnet/openhft/chronicle/bytes/BytesStore;JJ)J
      62: pop2
      63: goto          75
      66: aload_0
      67: aload_1
      68: lload_2
      69: lload         4
      71: invokespecial #33                 // Method net/openhft/chronicle/bytes/AbstractBytes.write:(Lnet/openhft/chronicle/bytes/BytesStore;JJ)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      74: pop
      75: aload_0
      76: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> append8bit(java.lang.CharSequence) throws java.nio.BufferOverflowException, java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_1
       1: instanceof    #34                 // class net/openhft/chronicle/bytes/RandomDataInput
       4: ifeq          16
       7: aload_0
       8: aload_1
       9: checkcast     #34                 // class net/openhft/chronicle/bytes/RandomDataInput
      12: invokevirtual #35                 // Method write:(Lnet/openhft/chronicle/bytes/RandomDataInput;)Lnet/openhft/chronicle/bytes/Bytes;
      15: areturn
      16: aload_1
      17: invokeinterface #36,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      22: istore_2
      23: aload_0
      24: iload_2
      25: i2l
      26: invokevirtual #37                 // Method writeOffsetPositionMoved:(J)J
      29: lstore_3
      30: iconst_0
      31: istore        5
      33: iload         5
      35: iload_2
      36: if_icmpge     76
      39: aload_1
      40: iload         5
      42: invokeinterface #38,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      47: istore        6
      49: iload         6
      51: sipush        255
      54: if_icmple     61
      57: bipush        63
      59: istore        6
      61: aload_0
      62: lload_3
      63: iload         6
      65: i2b
      66: invokevirtual #39                 // Method writeByte:(JB)Lnet/openhft/chronicle/bytes/Bytes;
      69: pop
      70: iinc          5, 1
      73: goto          33
      76: aload_0
      77: areturn

  long rawCopy(net.openhft.chronicle.bytes.BytesStore, long, long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException, java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method writeRemaining:()J
       4: aload_1
       5: invokeinterface #41,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.capacity:()J
      10: lload_2
      11: lsub
      12: lload         4
      14: invokestatic  #42                 // Method java/lang/Math.min:(JJ)J
      17: invokestatic  #42                 // Method java/lang/Math.min:(JJ)J
      20: lstore        6
      22: lload         6
      24: lconst_0
      25: lcmp
      26: ifle          71
      29: aload_0
      30: aload_0
      31: invokevirtual #18                 // Method writePosition:()J
      34: lload         6
      36: invokevirtual #43                 // Method writeCheckOffset:(JJ)V
      39: aload_0
      40: invokevirtual #44                 // Method throwExceptionIfReleased:()V
      43: invokestatic  #45                 // Method net/openhft/chronicle/core/OS.memory:()Lnet/openhft/chronicle/core/Memory;
      46: aload_1
      47: lload_2
      48: invokeinterface #46,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.addressForRead:(J)J
      53: aload_0
      54: invokevirtual #47                 // Method addressForWritePosition:()J
      57: lload         6
      59: invokeinterface #48,  7           // InterfaceMethod net/openhft/chronicle/core/Memory.copyMemory:(JJJ)V
      64: aload_0
      65: lload         6
      67: invokevirtual #49                 // Method writeSkip:(J)Lnet/openhft/chronicle/bytes/Bytes;
      70: pop
      71: lload         6
      73: lreturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeByte(byte) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lconst_1
       2: lconst_1
       3: invokevirtual #50                 // Method writeOffsetPositionMoved:(JJ)J
       6: lstore_2
       7: aload_0
       8: getfield      #9                  // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      11: lload_2
      12: iload_1
      13: invokeinterface #51,  4           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeByte:(JB)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      18: pop
      19: aload_0
      20: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeUtf8(java.lang.String) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: aload_0
       5: ldc2_w        #52                 // long -1l
       8: invokevirtual #54                 // Method writeStopBit:(J)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      11: pop
      12: aload_0
      13: areturn
      14: invokestatic  #55                 // Method net/openhft/chronicle/core/Jvm.isJava9Plus:()Z
      17: ifeq          59
      20: aload_1
      21: invokestatic  #56                 // Method net/openhft/chronicle/core/util/StringUtils.extractBytes:(Ljava/lang/String;)[B
      24: astore_2
      25: aload_1
      26: invokestatic  #57                 // Method net/openhft/chronicle/core/util/StringUtils.getStringCoder:(Ljava/lang/String;)B
      29: istore_3
      30: aload_2
      31: iload_3
      32: invokestatic  #58                 // Method net/openhft/chronicle/bytes/AppendableUtil.findUtf8Length:([BB)J
      35: lstore        4
      37: aload_0
      38: lload         4
      40: invokevirtual #54                 // Method writeStopBit:(J)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      43: pop
      44: aload_0
      45: aload_2
      46: iconst_0
      47: aload_1
      48: invokevirtual #59                 // Method java/lang/String.length:()I
      51: iload_3
      52: invokevirtual #60                 // Method appendUtf8:([BIIB)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      55: pop
      56: goto          100
      59: aload_1
      60: invokestatic  #61                 // Method net/openhft/chronicle/core/util/StringUtils.extractChars:(Ljava/lang/String;)[C
      63: astore_2
      64: aload_2
      65: invokestatic  #62                 // Method net/openhft/chronicle/bytes/AppendableUtil.findUtf8Length:([C)J
      68: lstore_3
      69: aload_0
      70: lload_3
      71: invokevirtual #54                 // Method writeStopBit:(J)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      74: pop
      75: lload_3
      76: aload_2
      77: arraylength
      78: i2l
      79: lcmp
      80: ifne          91
      83: aload_0
      84: aload_2
      85: invokevirtual #63                 // Method append8bit:([C)V
      88: goto          100
      91: aload_0
      92: aload_2
      93: iconst_0
      94: aload_2
      95: arraylength
      96: invokevirtual #64                 // Method appendUtf8:([CII)Lnet/openhft/chronicle/bytes/Bytes;
      99: pop
     100: goto          113
     103: astore_2
     104: new           #66                 // class java/lang/AssertionError
     107: dup
     108: aload_2
     109: invokespecial #67                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     112: athrow
     113: aload_0
     114: areturn
    Exception table:
       from    to  target type
          14   100   103   Class java/lang/IllegalArgumentException

  void append8bit(char[]) throws java.nio.BufferOverflowException, java.lang.IllegalArgumentException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method writePosition:()J
       4: lstore_2
       5: iconst_0
       6: istore        4
       8: iload         4
      10: aload_1
      11: arraylength
      12: if_icmpge     45
      15: aload_1
      16: iload         4
      18: caload
      19: istore        5
      21: aload_0
      22: getfield      #9                  // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      25: lload_2
      26: dup2
      27: lconst_1
      28: ladd
      29: lstore_2
      30: iload         5
      32: i2b
      33: invokeinterface #51,  4           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeByte:(JB)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      38: pop
      39: iinc          4, 1
      42: goto          8
      45: aload_0
      46: lload_2
      47: invokevirtual #13                 // Method uncheckedWritePosition:(J)V
      50: return

  public net.openhft.chronicle.bytes.Bytes<Underlying> appendUtf8(char[], int, int) throws java.nio.BufferOverflowException, java.lang.IllegalArgumentException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method writePosition:()J
       4: lstore        4
       6: iconst_0
       7: istore        6
       9: iload         6
      11: iload_3
      12: if_icmpge     59
      15: aload_1
      16: iload_2
      17: iload         6
      19: iadd
      20: caload
      21: istore        7
      23: iload         7
      25: bipush        127
      27: if_icmple     33
      30: goto          61
      33: aload_0
      34: getfield      #9                  // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      37: lload         4
      39: dup2
      40: lconst_1
      41: ladd
      42: lstore        4
      44: iload         7
      46: i2b
      47: invokeinterface #51,  4           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeByte:(JB)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      52: pop
      53: iinc          6, 1
      56: goto          9
      59: aload_0
      60: areturn
      61: iload         6
      63: iload_3
      64: if_icmpge     87
      67: aload_1
      68: iload_2
      69: iload         6
      71: iadd
      72: caload
      73: istore        7
      75: aload_0
      76: iload         7
      78: invokestatic  #68                 // Method net/openhft/chronicle/bytes/BytesInternal.appendUtf8Char:(Lnet/openhft/chronicle/bytes/StreamingDataOutput;I)V
      81: iinc          6, 1
      84: goto          61
      87: aload_0
      88: lload         4
      90: invokevirtual #13                 // Method uncheckedWritePosition:(J)V
      93: aload_0
      94: areturn

  public void write(long, java.nio.ByteBuffer, int, int) throws java.nio.BufferOverflowException;
    Code:
       0: return

  public net.openhft.chronicle.bytes.StreamingDataInput readSkip(long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #69                 // Method readSkip:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataInput readLimit(long) throws java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #70                 // Method readLimit:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataInput readPosition(long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #8                  // Method readPosition:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput appendUtf8(char[], int, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException, java.nio.BufferUnderflowException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #64                 // Method appendUtf8:([CII)Lnet/openhft/chronicle/bytes/Bytes;
       7: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput write(net.openhft.chronicle.bytes.BytesStore, long, long) throws java.nio.BufferOverflowException, java.nio.BufferUnderflowException, java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: lload         4
       5: invokevirtual #71                 // Method write:(Lnet/openhft/chronicle/bytes/BytesStore;JJ)Lnet/openhft/chronicle/bytes/Bytes;
       8: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput write(net.openhft.chronicle.bytes.RandomDataInput, long, long) throws java.nio.BufferOverflowException, java.nio.BufferUnderflowException, java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: lload         4
       5: invokevirtual #72                 // Method write:(Lnet/openhft/chronicle/bytes/RandomDataInput;JJ)Lnet/openhft/chronicle/bytes/Bytes;
       8: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeByte(byte) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #73                 // Method writeByte:(B)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeUtf8(java.lang.String) throws java.nio.BufferOverflowException, java.lang.IllegalStateException, java.nio.BufferUnderflowException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #74                 // Method writeUtf8:(Ljava/lang/String;)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeSkip(long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #49                 // Method writeSkip:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeLimit(long) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #75                 // Method writeLimit:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writePosition(long) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #76                 // Method writePosition:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.ByteStringAppender append8bit(java.lang.CharSequence) throws java.nio.BufferOverflowException, java.nio.BufferUnderflowException, java.lang.IndexOutOfBoundsException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #77                 // Method append8bit:(Ljava/lang/CharSequence;)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn
}
