Compiled from "MethodWriterInterceptor.java"
public interface net.openhft.chronicle.bytes.MethodWriterInterceptor {
  public static net.openhft.chronicle.bytes.MethodWriterInterceptor of(net.openhft.chronicle.bytes.MethodWriterListener, net.openhft.chronicle.bytes.MethodWriterInterceptor) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: ifnonnull     18
       4: aload_1
       5: ifnonnull     18
       8: new           #1                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #2                  // String both methodWriterListener and interceptor are NULL
      14: invokespecial #3                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: ifnonnull     34
      22: aload_1
      23: dup
      24: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: pop
      28: invokedynamic #5,  0              // InvokeDynamic #0:intercept:(Lnet/openhft/chronicle/bytes/MethodWriterInterceptor;)Lnet/openhft/chronicle/bytes/MethodWriterInterceptor;
      33: areturn
      34: aload_1
      35: ifnonnull     45
      38: aload_0
      39: invokedynamic #6,  0              // InvokeDynamic #1:intercept:(Lnet/openhft/chronicle/bytes/MethodWriterListener;)Lnet/openhft/chronicle/bytes/MethodWriterInterceptor;
      44: areturn
      45: aload_1
      46: aload_0
      47: invokedynamic #7,  0              // InvokeDynamic #2:intercept:(Lnet/openhft/chronicle/bytes/MethodWriterInterceptor;Lnet/openhft/chronicle/bytes/MethodWriterListener;)Lnet/openhft/chronicle/bytes/MethodWriterInterceptor;
      52: areturn

  public abstract void intercept(java.lang.reflect.Method, java.lang.Object[], java.util.function.BiConsumer<java.lang.reflect.Method, java.lang.Object[]>);

  private static void lambda$of$1(net.openhft.chronicle.bytes.MethodWriterInterceptor, net.openhft.chronicle.bytes.MethodWriterListener, java.lang.reflect.Method, java.lang.Object[], java.util.function.BiConsumer);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: aload         4
       5: invokeinterface #8,  4            // InterfaceMethod intercept:(Ljava/lang/reflect/Method;[Ljava/lang/Object;Ljava/util/function/BiConsumer;)V
      10: aload_1
      11: aload_2
      12: invokevirtual #9                  // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
      15: aload_3
      16: invokeinterface #10,  3           // InterfaceMethod net/openhft/chronicle/bytes/MethodWriterListener.onWrite:(Ljava/lang/String;[Ljava/lang/Object;)V
      21: return

  private static void lambda$of$0(net.openhft.chronicle.bytes.MethodWriterListener, java.lang.reflect.Method, java.lang.Object[], java.util.function.BiConsumer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
       5: aload_2
       6: invokeinterface #10,  3           // InterfaceMethod net/openhft/chronicle/bytes/MethodWriterListener.onWrite:(Ljava/lang/String;[Ljava/lang/Object;)V
      11: aload_3
      12: aload_1
      13: aload_2
      14: invokeinterface #11,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      19: return
}
