Compiled from "MethodReaderBuilder.java"
public interface net.openhft.chronicle.bytes.MethodReaderBuilder {
  public default net.openhft.chronicle.bytes.MethodReaderBuilder methodReaderInterceptor(net.openhft.chronicle.bytes.MethodReaderInterceptor);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #1,  0              // InvokeDynamic #0:intercept:(Lnet/openhft/chronicle/bytes/MethodReaderInterceptor;)Lnet/openhft/chronicle/bytes/MethodReaderInterceptorReturns;
       7: invokeinterface #2,  2            // InterfaceMethod methodReaderInterceptorReturns:(Lnet/openhft/chronicle/bytes/MethodReaderInterceptorReturns;)Lnet/openhft/chronicle/bytes/MethodReaderBuilder;
      12: areturn

  public abstract net.openhft.chronicle.bytes.MethodReaderBuilder methodReaderInterceptorReturns(net.openhft.chronicle.bytes.MethodReaderInterceptorReturns);

  public abstract net.openhft.chronicle.bytes.MethodReaderBuilder warnMissing(boolean);

  public abstract net.openhft.chronicle.bytes.MethodReader build(java.lang.Object...);

  private static java.lang.Object lambda$methodReaderInterceptor$0(net.openhft.chronicle.bytes.MethodReaderInterceptor, java.lang.reflect.Method, java.lang.Object, java.lang.Object[], net.openhft.chronicle.bytes.Invocation) throws java.lang.reflect.InvocationTargetException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokeinterface #3,  5            // InterfaceMethod net/openhft/chronicle/bytes/MethodReaderInterceptor.intercept:(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;Lnet/openhft/chronicle/bytes/Invocation;)V
      11: aconst_null
      12: areturn
}
