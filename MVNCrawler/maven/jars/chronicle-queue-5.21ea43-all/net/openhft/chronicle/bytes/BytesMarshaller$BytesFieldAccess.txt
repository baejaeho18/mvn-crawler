Compiled from "BytesMarshaller.java"
class net.openhft.chronicle.bytes.BytesMarshaller$BytesFieldAccess extends net.openhft.chronicle.bytes.BytesMarshaller$FieldAccess<net.openhft.chronicle.bytes.Bytes> {
  public net.openhft.chronicle.bytes.BytesMarshaller$BytesFieldAccess(java.lang.reflect.Field);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method net/openhft/chronicle/bytes/BytesMarshaller$FieldAccess."<init>":(Ljava/lang/reflect/Field;)V
       5: return

  protected void getValue(java.lang.Object, net.openhft.chronicle.bytes.BytesOut) throws java.lang.IllegalStateException, java.nio.BufferOverflowException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field field:Ljava/lang/reflect/Field;
       4: aload_1
       5: invokevirtual #3                  // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #4                  // class net/openhft/chronicle/bytes/BytesStore
      11: astore_3
      12: goto          27
      15: astore        4
      17: new           #6                  // class java/lang/AssertionError
      20: dup
      21: aload         4
      23: invokespecial #7                  // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      26: athrow
      27: aload_3
      28: ifnonnull     42
      31: aload_2
      32: ldc2_w        #8                  // long -1l
      35: invokeinterface #10,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesOut.writeStopBit:(J)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      40: pop
      41: return
      42: aload_3
      43: invokeinterface #11,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readPosition:()J
      48: lstore        4
      50: aload_3
      51: invokeinterface #12,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readRemaining:()J
      56: lstore        6
      58: aload_2
      59: lload         6
      61: invokeinterface #10,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesOut.writeStopBit:(J)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      66: pop
      67: aload_2
      68: aload_3
      69: lload         4
      71: lload         6
      73: invokeinterface #13,  6           // InterfaceMethod net/openhft/chronicle/bytes/BytesOut.write:(Lnet/openhft/chronicle/bytes/BytesStore;JJ)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      78: pop
      79: goto          94
      82: astore        8
      84: new           #6                  // class java/lang/AssertionError
      87: dup
      88: aload         8
      90: invokespecial #7                  // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      93: athrow
      94: return
    Exception table:
       from    to  target type
           0    12    15   Class java/lang/IllegalAccessException
          67    79    82   Class java/nio/BufferUnderflowException

  protected void setValue(java.lang.Object, net.openhft.chronicle.bytes.BytesIn) throws net.openhft.chronicle.core.io.IORuntimeException, java.lang.IllegalArgumentException, java.lang.IllegalStateException, java.lang.ArithmeticException, java.nio.BufferUnderflowException, java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field field:Ljava/lang/reflect/Field;
       4: aload_1
       5: invokevirtual #3                  // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #15                 // class net/openhft/chronicle/bytes/Bytes
      11: astore_3
      12: aload_2
      13: invokeinterface #16,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesIn.readStopBit:()J
      18: lstore        4
      20: lload         4
      22: ldc2_w        #8                  // long -1l
      25: lcmp
      26: ifne          49
      29: aload_3
      30: ifnull        39
      33: aload_3
      34: invokeinterface #17,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.releaseLast:()V
      39: aload_0
      40: getfield      #2                  // Field field:Ljava/lang/reflect/Field;
      43: aload_1
      44: aconst_null
      45: invokevirtual #18                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      48: return
      49: lload         4
      51: invokestatic  #19                 // Method net/openhft/chronicle/core/Maths.toUInt31:(J)I
      54: istore        6
      56: aload_3
      57: ifnonnull     80
      60: iload         6
      62: invokestatic  #20                 // InterfaceMethod net/openhft/chronicle/bytes/Bytes.allocateElasticOnHeap:(I)Lnet/openhft/chronicle/bytes/OnHeapBytes;
      65: astore        7
      67: aload_0
      68: getfield      #2                  // Field field:Ljava/lang/reflect/Field;
      71: aload_1
      72: aload         7
      74: invokevirtual #18                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      77: goto          83
      80: aload_3
      81: astore        7
      83: aload         7
      85: invokeinterface #21,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.clear:()Lnet/openhft/chronicle/bytes/Bytes;
      90: pop
      91: aload_2
      92: aload         7
      94: iload         6
      96: invokeinterface #22,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesIn.read:(Lnet/openhft/chronicle/bytes/Bytes;I)V
     101: aload         7
     103: iload         6
     105: i2l
     106: invokeinterface #23,  3           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readLimit:(J)Lnet/openhft/chronicle/bytes/StreamingDataInput;
     111: pop
     112: goto          125
     115: astore_3
     116: new           #6                  // class java/lang/AssertionError
     119: dup
     120: aload_3
     121: invokespecial #7                  // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     124: athrow
     125: return
    Exception table:
       from    to  target type
           0    48   115   Class java/lang/IllegalAccessException
          49   112   115   Class java/lang/IllegalAccessException
}
