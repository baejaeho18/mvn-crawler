Compiled from "HeapBytesStore.java"
public class net.openhft.chronicle.bytes.HeapBytesStore<Underlying> extends net.openhft.chronicle.bytes.AbstractBytesStore<net.openhft.chronicle.bytes.HeapBytesStore<Underlying>, Underlying> {
  private final java.lang.Object realUnderlyingObject;

  private final int dataOffset;

  private final long capacity;

  private final Underlying underlyingObject;

  static final boolean $assertionsDisabled;

  private net.openhft.chronicle.bytes.HeapBytesStore(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #1                  // Method net/openhft/chronicle/bytes/AbstractBytesStore."<init>":(Z)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field underlyingObject:Ljava/lang/Object;
      10: aload_0
      11: aload_1
      12: invokevirtual #3                  // Method java/nio/ByteBuffer.array:()[B
      15: putfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
      18: aload_0
      19: invokestatic  #5                  // Method net/openhft/chronicle/core/Jvm.arrayByteBaseOffset:()I
      22: aload_1
      23: invokevirtual #6                  // Method java/nio/ByteBuffer.arrayOffset:()I
      26: iadd
      27: putfield      #7                  // Field dataOffset:I
      30: aload_0
      31: aload_1
      32: invokevirtual #8                  // Method java/nio/ByteBuffer.capacity:()I
      35: i2l
      36: putfield      #9                  // Field capacity:J
      39: return

  private net.openhft.chronicle.bytes.HeapBytesStore(byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #1                  // Method net/openhft/chronicle/bytes/AbstractBytesStore."<init>":(Z)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field underlyingObject:Ljava/lang/Object;
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
      15: aload_0
      16: invokestatic  #5                  // Method net/openhft/chronicle/core/Jvm.arrayByteBaseOffset:()I
      19: putfield      #7                  // Field dataOffset:I
      22: aload_0
      23: aload_1
      24: arraylength
      25: i2l
      26: putfield      #9                  // Field capacity:J
      29: return

  private net.openhft.chronicle.bytes.HeapBytesStore(java.lang.Object, long, long);
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #1                  // Method net/openhft/chronicle/bytes/AbstractBytesStore."<init>":(Z)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field underlyingObject:Ljava/lang/Object;
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
      15: aload_0
      16: lload_2
      17: invokestatic  #10                 // Method java/lang/Math.toIntExact:(J)I
      20: putfield      #7                  // Field dataOffset:I
      23: aload_0
      24: lload         4
      26: putfield      #9                  // Field capacity:J
      29: return

  public static <T> net.openhft.chronicle.bytes.HeapBytesStore<T> forFields(java.lang.Object, java.lang.String, int);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokestatic  #12                 // Method net/openhft/chronicle/bytes/internal/BytesFieldInfo.lookup:(Ljava/lang/Class;)Lnet/openhft/chronicle/bytes/internal/BytesFieldInfo;
       7: astore_3
       8: aload_3
       9: aload_1
      10: invokevirtual #13                 // Method net/openhft/chronicle/bytes/internal/BytesFieldInfo.startOf:(Ljava/lang/String;)J
      13: lstore        4
      15: aload_3
      16: aload_1
      17: invokevirtual #14                 // Method net/openhft/chronicle/bytes/internal/BytesFieldInfo.lengthOf:(Ljava/lang/String;)J
      20: lstore        6
      22: new           #15                 // class net/openhft/chronicle/bytes/HeapBytesStore
      25: dup
      26: aload_0
      27: lload         4
      29: iload_2
      30: i2l
      31: ladd
      32: lload         6
      34: iload_2
      35: i2l
      36: lsub
      37: invokespecial #16                 // Method "<init>":(Ljava/lang/Object;JJ)V
      40: areturn

  public static net.openhft.chronicle.bytes.HeapBytesStore<byte[]> wrap(byte[]);
    Code:
       0: new           #15                 // class net/openhft/chronicle/bytes/HeapBytesStore
       3: dup
       4: aload_0
       5: invokespecial #17                 // Method "<init>":([B)V
       8: areturn

  public static net.openhft.chronicle.bytes.HeapBytesStore<java.nio.ByteBuffer> wrap(java.nio.ByteBuffer);
    Code:
       0: new           #15                 // class net/openhft/chronicle/bytes/HeapBytesStore
       3: dup
       4: aload_0
       5: invokespecial #18                 // Method "<init>":(Ljava/nio/ByteBuffer;)V
       8: areturn

  public boolean isDirectMemory();
    Code:
       0: iconst_0
       1: ireturn

  public void move(long, long, long) throws java.nio.BufferUnderflowException, java.lang.ArithmeticException;
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: iflt          12
       6: lload_3
       7: lconst_0
       8: lcmp
       9: ifge          20
      12: new           #19                 // class java/nio/BufferUnderflowException
      15: dup
      16: invokespecial #20                 // Method java/nio/BufferUnderflowException."<init>":()V
      19: athrow
      20: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
      23: aload_0
      24: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
      27: aload_0
      28: getfield      #7                  // Field dataOffset:I
      31: i2l
      32: lload_1
      33: ladd
      34: aload_0
      35: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
      38: aload_0
      39: getfield      #7                  // Field dataOffset:I
      42: i2l
      43: lload_3
      44: ladd
      45: lload         5
      47: invokestatic  #22                 // Method net/openhft/chronicle/core/Maths.toUInt31:(J)I
      50: invokevirtual #23                 // Method net/openhft/chronicle/core/UnsafeMemory.copyMemory:(Ljava/lang/Object;JLjava/lang/Object;JI)V
      53: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #24                 // Method net/openhft/chronicle/bytes/BytesInternal.toString:(Lnet/openhft/chronicle/bytes/RandomDataInput;)Ljava/lang/String;
       4: areturn

  public net.openhft.chronicle.bytes.BytesStore<net.openhft.chronicle.bytes.HeapBytesStore<Underlying>, Underlying> copy();
    Code:
       0: new           #25                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #26                 // String todo
       6: invokespecial #27                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  protected void performRelease();
    Code:
       0: return

  public long capacity();
    Code:
       0: aload_0
       1: getfield      #9                  // Field capacity:J
       4: lreturn

  public Underlying underlyingObject();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingObject:Ljava/lang/Object;
       4: areturn

  public boolean compareAndSwapInt(long, int, int);
    Code:
       0: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: aload_0
       4: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
       7: aload_0
       8: getfield      #7                  // Field dataOffset:I
      11: i2l
      12: lload_1
      13: ladd
      14: iload_3
      15: iload         4
      17: invokevirtual #28                 // Method net/openhft/chronicle/core/UnsafeMemory.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      20: ireturn

  public void testAndSetInt(long, int, int) throws java.lang.IllegalStateException;
    Code:
       0: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: aload_0
       4: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
       7: aload_0
       8: getfield      #7                  // Field dataOffset:I
      11: i2l
      12: lload_1
      13: ladd
      14: iload_3
      15: iload         4
      17: invokevirtual #29                 // Method net/openhft/chronicle/core/UnsafeMemory.testAndSetInt:(Ljava/lang/Object;JII)V
      20: return

  public boolean compareAndSwapLong(long, long, long);
    Code:
       0: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: aload_0
       4: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
       7: aload_0
       8: getfield      #7                  // Field dataOffset:I
      11: i2l
      12: lload_1
      13: ladd
      14: lload_3
      15: lload         5
      17: invokevirtual #30                 // Method net/openhft/chronicle/core/UnsafeMemory.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z
      20: ireturn

  public byte readByte(long) throws java.nio.BufferUnderflowException;
    Code:
       0: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: aload_0
       4: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
       7: aload_0
       8: getfield      #7                  // Field dataOffset:I
      11: i2l
      12: lload_1
      13: ladd
      14: invokevirtual #31                 // Method net/openhft/chronicle/core/UnsafeMemory.readByte:(Ljava/lang/Object;J)B
      17: ireturn

  public short readShort(long) throws java.nio.BufferUnderflowException;
    Code:
       0: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: aload_0
       4: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
       7: aload_0
       8: getfield      #7                  // Field dataOffset:I
      11: i2l
      12: lload_1
      13: ladd
      14: invokevirtual #32                 // Method net/openhft/chronicle/core/UnsafeMemory.readShort:(Ljava/lang/Object;J)S
      17: ireturn

  public int readInt(long) throws java.nio.BufferUnderflowException;
    Code:
       0: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: aload_0
       4: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
       7: aload_0
       8: getfield      #7                  // Field dataOffset:I
      11: i2l
      12: lload_1
      13: ladd
      14: invokevirtual #33                 // Method net/openhft/chronicle/core/UnsafeMemory.readInt:(Ljava/lang/Object;J)I
      17: ireturn

  public long readLong(long) throws java.nio.BufferUnderflowException;
    Code:
       0: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: aload_0
       4: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
       7: aload_0
       8: getfield      #7                  // Field dataOffset:I
      11: i2l
      12: lload_1
      13: ladd
      14: invokevirtual #34                 // Method net/openhft/chronicle/core/UnsafeMemory.readLong:(Ljava/lang/Object;J)J
      17: lreturn

  public float readFloat(long) throws java.nio.BufferUnderflowException;
    Code:
       0: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: aload_0
       4: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
       7: aload_0
       8: getfield      #7                  // Field dataOffset:I
      11: i2l
      12: lload_1
      13: ladd
      14: invokevirtual #35                 // Method net/openhft/chronicle/core/UnsafeMemory.readFloat:(Ljava/lang/Object;J)F
      17: freturn

  public double readDouble(long) throws java.nio.BufferUnderflowException;
    Code:
       0: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: aload_0
       4: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
       7: aload_0
       8: getfield      #7                  // Field dataOffset:I
      11: i2l
      12: lload_1
      13: ladd
      14: invokevirtual #36                 // Method net/openhft/chronicle/core/UnsafeMemory.readDouble:(Ljava/lang/Object;J)D
      17: dreturn

  public byte readVolatileByte(long) throws java.nio.BufferUnderflowException;
    Code:
       0: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: aload_0
       4: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
       7: aload_0
       8: getfield      #7                  // Field dataOffset:I
      11: i2l
      12: lload_1
      13: ladd
      14: invokevirtual #37                 // Method net/openhft/chronicle/core/UnsafeMemory.readVolatileByte:(Ljava/lang/Object;J)B
      17: ireturn

  public short readVolatileShort(long) throws java.nio.BufferUnderflowException;
    Code:
       0: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: aload_0
       4: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
       7: aload_0
       8: getfield      #7                  // Field dataOffset:I
      11: i2l
      12: lload_1
      13: ladd
      14: invokevirtual #38                 // Method net/openhft/chronicle/core/UnsafeMemory.readVolatileShort:(Ljava/lang/Object;J)S
      17: ireturn

  public int readVolatileInt(long) throws java.nio.BufferUnderflowException;
    Code:
       0: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: aload_0
       4: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
       7: aload_0
       8: getfield      #7                  // Field dataOffset:I
      11: i2l
      12: lload_1
      13: ladd
      14: invokevirtual #39                 // Method net/openhft/chronicle/core/UnsafeMemory.readVolatileInt:(Ljava/lang/Object;J)I
      17: ireturn

  public long readVolatileLong(long) throws java.nio.BufferUnderflowException;
    Code:
       0: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: aload_0
       4: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
       7: aload_0
       8: getfield      #7                  // Field dataOffset:I
      11: i2l
      12: lload_1
      13: ladd
      14: invokevirtual #40                 // Method net/openhft/chronicle/core/UnsafeMemory.readVolatileLong:(Ljava/lang/Object;J)J
      17: lreturn

  public long write8bit(long, net.openhft.chronicle.bytes.BytesStore);
    Code:
       0: aload_3
       1: invokeinterface #41,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readRemaining:()J
       6: invokestatic  #10                 // Method java/lang/Math.toIntExact:(J)I
       9: istore        4
      11: aload_0
      12: lload_1
      13: iload         4
      15: i2l
      16: invokestatic  #42                 // Method net/openhft/chronicle/bytes/BytesUtil.writeStopBit:(Lnet/openhft/chronicle/bytes/BytesStore;JJ)J
      19: lstore_1
      20: iconst_0
      21: istore        5
      23: iload         5
      25: iload         4
      27: bipush        7
      29: isub
      30: if_icmpge     58
      33: aload_0
      34: lload_1
      35: iload         5
      37: i2l
      38: ladd
      39: aload_3
      40: iload         5
      42: i2l
      43: invokeinterface #43,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readLong:(J)J
      48: invokevirtual #44                 // Method writeLong:(JJ)Lnet/openhft/chronicle/bytes/HeapBytesStore;
      51: pop
      52: iinc          5, 8
      55: goto          23
      58: iload         5
      60: iload         4
      62: if_icmpge     90
      65: aload_0
      66: lload_1
      67: iload         5
      69: i2l
      70: ladd
      71: aload_3
      72: iload         5
      74: i2l
      75: invokeinterface #45,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readByte:(J)B
      80: invokevirtual #46                 // Method writeByte:(JB)Lnet/openhft/chronicle/bytes/HeapBytesStore;
      83: pop
      84: iinc          5, 1
      87: goto          58
      90: lload_1
      91: iload         4
      93: i2l
      94: ladd
      95: lreturn

  public long write8bit(long, java.lang.String, int, int);
    Code:
       0: aload_0
       1: lload_1
       2: iload         5
       4: i2l
       5: invokestatic  #42                 // Method net/openhft/chronicle/bytes/BytesUtil.writeStopBit:(Lnet/openhft/chronicle/bytes/BytesStore;JJ)J
       8: lstore_1
       9: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
      12: aload_3
      13: iload         4
      15: aload_0
      16: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
      19: aload_0
      20: getfield      #7                  // Field dataOffset:I
      23: i2l
      24: lload_1
      25: ladd
      26: iload         5
      28: invokevirtual #47                 // Method net/openhft/chronicle/core/UnsafeMemory.write8bit:(Ljava/lang/String;ILjava/lang/Object;JI)V
      31: lload_1
      32: iload         5
      34: i2l
      35: ladd
      36: lreturn

  public net.openhft.chronicle.bytes.HeapBytesStore<Underlying> writeByte(long, byte) throws java.nio.BufferOverflowException;
    Code:
       0: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: aload_0
       4: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
       7: aload_0
       8: getfield      #7                  // Field dataOffset:I
      11: i2l
      12: lload_1
      13: ladd
      14: iload_3
      15: invokevirtual #48                 // Method net/openhft/chronicle/core/UnsafeMemory.writeByte:(Ljava/lang/Object;JB)V
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.HeapBytesStore<Underlying> writeShort(long, short) throws java.nio.BufferOverflowException;
    Code:
       0: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: aload_0
       4: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
       7: aload_0
       8: getfield      #7                  // Field dataOffset:I
      11: i2l
      12: lload_1
      13: ladd
      14: iload_3
      15: invokevirtual #49                 // Method net/openhft/chronicle/core/UnsafeMemory.writeShort:(Ljava/lang/Object;JS)V
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.HeapBytesStore<Underlying> writeInt(long, int) throws java.nio.BufferOverflowException;
    Code:
       0: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: aload_0
       4: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
       7: aload_0
       8: getfield      #7                  // Field dataOffset:I
      11: i2l
      12: lload_1
      13: ladd
      14: iload_3
      15: invokevirtual #50                 // Method net/openhft/chronicle/core/UnsafeMemory.writeInt:(Ljava/lang/Object;JI)V
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.HeapBytesStore<Underlying> writeOrderedInt(long, int) throws java.nio.BufferOverflowException;
    Code:
       0: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: aload_0
       4: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
       7: aload_0
       8: getfield      #7                  // Field dataOffset:I
      11: i2l
      12: lload_1
      13: ladd
      14: iload_3
      15: invokevirtual #51                 // Method net/openhft/chronicle/core/UnsafeMemory.writeOrderedInt:(Ljava/lang/Object;JI)V
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.HeapBytesStore<Underlying> writeLong(long, long) throws java.nio.BufferOverflowException;
    Code:
       0: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: aload_0
       4: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
       7: aload_0
       8: getfield      #7                  // Field dataOffset:I
      11: i2l
      12: lload_1
      13: ladd
      14: lload_3
      15: invokevirtual #52                 // Method net/openhft/chronicle/core/UnsafeMemory.writeLong:(Ljava/lang/Object;JJ)V
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.HeapBytesStore<Underlying> writeOrderedLong(long, long) throws java.nio.BufferOverflowException;
    Code:
       0: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: aload_0
       4: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
       7: aload_0
       8: getfield      #7                  // Field dataOffset:I
      11: i2l
      12: lload_1
      13: ladd
      14: lload_3
      15: invokevirtual #53                 // Method net/openhft/chronicle/core/UnsafeMemory.writeOrderedLong:(Ljava/lang/Object;JJ)V
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.HeapBytesStore<Underlying> writeFloat(long, float) throws java.nio.BufferOverflowException;
    Code:
       0: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: aload_0
       4: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
       7: aload_0
       8: getfield      #7                  // Field dataOffset:I
      11: i2l
      12: lload_1
      13: ladd
      14: fload_3
      15: invokevirtual #54                 // Method net/openhft/chronicle/core/UnsafeMemory.writeFloat:(Ljava/lang/Object;JF)V
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.HeapBytesStore<Underlying> writeDouble(long, double) throws java.nio.BufferOverflowException;
    Code:
       0: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: aload_0
       4: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
       7: aload_0
       8: getfield      #7                  // Field dataOffset:I
      11: i2l
      12: lload_1
      13: ladd
      14: dload_3
      15: invokevirtual #55                 // Method net/openhft/chronicle/core/UnsafeMemory.writeDouble:(Ljava/lang/Object;JD)V
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.HeapBytesStore<Underlying> writeVolatileByte(long, byte) throws java.nio.BufferOverflowException;
    Code:
       0: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: aload_0
       4: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
       7: aload_0
       8: getfield      #7                  // Field dataOffset:I
      11: i2l
      12: lload_1
      13: ladd
      14: iload_3
      15: invokevirtual #56                 // Method net/openhft/chronicle/core/UnsafeMemory.writeVolatileByte:(Ljava/lang/Object;JB)V
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.HeapBytesStore<Underlying> writeVolatileShort(long, short) throws java.nio.BufferOverflowException;
    Code:
       0: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: aload_0
       4: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
       7: aload_0
       8: getfield      #7                  // Field dataOffset:I
      11: i2l
      12: lload_1
      13: ladd
      14: iload_3
      15: invokevirtual #57                 // Method net/openhft/chronicle/core/UnsafeMemory.writeVolatileShort:(Ljava/lang/Object;JS)V
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.HeapBytesStore<Underlying> writeVolatileInt(long, int) throws java.nio.BufferOverflowException;
    Code:
       0: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: aload_0
       4: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
       7: aload_0
       8: getfield      #7                  // Field dataOffset:I
      11: i2l
      12: lload_1
      13: ladd
      14: iload_3
      15: invokevirtual #58                 // Method net/openhft/chronicle/core/UnsafeMemory.writeVolatileInt:(Ljava/lang/Object;JI)V
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.HeapBytesStore<Underlying> writeVolatileLong(long, long) throws java.nio.BufferOverflowException;
    Code:
       0: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: aload_0
       4: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
       7: aload_0
       8: getfield      #7                  // Field dataOffset:I
      11: i2l
      12: lload_1
      13: ladd
      14: lload_3
      15: invokevirtual #59                 // Method net/openhft/chronicle/core/UnsafeMemory.writeVolatileLong:(Ljava/lang/Object;JJ)V
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.HeapBytesStore<Underlying> write(long, byte[], int, int) throws java.nio.BufferOverflowException;
    Code:
       0: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: aload_3
       4: iload         4
       6: aload_0
       7: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
      10: aload_0
      11: getfield      #7                  // Field dataOffset:I
      14: i2l
      15: lload_1
      16: ladd
      17: iload         5
      19: invokevirtual #60                 // Method net/openhft/chronicle/core/UnsafeMemory.copyMemory:([BILjava/lang/Object;JI)V
      22: aload_0
      23: areturn

  public void write(long, java.nio.ByteBuffer, int, int) throws java.nio.BufferOverflowException;
    Code:
       0: getstatic     #61                 // Field $assertionsDisabled:Z
       3: ifne          41
       6: aload_0
       7: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
      10: ifnull        41
      13: aload_0
      14: getfield      #7                  // Field dataOffset:I
      17: invokestatic  #62                 // Method net/openhft/chronicle/core/Jvm.is64bit:()Z
      20: ifeq          28
      23: bipush        12
      25: goto          30
      28: bipush        8
      30: if_icmpge     41
      33: new           #63                 // class java/lang/AssertionError
      36: dup
      37: invokespecial #64                 // Method java/lang/AssertionError."<init>":()V
      40: athrow
      41: aload_3
      42: invokevirtual #65                 // Method java/nio/ByteBuffer.isDirect:()Z
      45: ifeq          74
      48: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
      51: aload_3
      52: invokestatic  #66                 // Method net/openhft/chronicle/core/Jvm.address:(Ljava/nio/ByteBuffer;)J
      55: aload_0
      56: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
      59: aload_0
      60: getfield      #7                  // Field dataOffset:I
      63: i2l
      64: lload_1
      65: ladd
      66: iload         5
      68: invokevirtual #67                 // Method net/openhft/chronicle/core/UnsafeMemory.copyMemory:(JLjava/lang/Object;JI)V
      71: goto          99
      74: getstatic     #21                 // Field net/openhft/chronicle/core/UnsafeMemory.MEMORY:Lnet/openhft/chronicle/core/UnsafeMemory;
      77: aload_3
      78: invokevirtual #3                  // Method java/nio/ByteBuffer.array:()[B
      81: iload         4
      83: aload_0
      84: getfield      #4                  // Field realUnderlyingObject:Ljava/lang/Object;
      87: aload_0
      88: getfield      #7                  // Field dataOffset:I
      91: i2l
      92: lload_1
      93: ladd
      94: iload         5
      96: invokevirtual #60                 // Method net/openhft/chronicle/core/UnsafeMemory.copyMemory:([BILjava/lang/Object;JI)V
      99: return

  public net.openhft.chronicle.bytes.HeapBytesStore<Underlying> write(long, net.openhft.chronicle.bytes.RandomDataInput, long, long) throws java.lang.IllegalStateException, java.nio.BufferUnderflowException, java.nio.BufferOverflowException;
    Code:
       0: lload         6
       2: lload         6
       4: l2i
       5: i2l
       6: lcmp
       7: ifne          102
      10: lload         6
      12: l2i
      13: istore        8
      15: iconst_0
      16: istore        9
      18: iload         9
      20: iload         8
      22: bipush        7
      24: isub
      25: if_icmpge     60
      28: aload_3
      29: lload         4
      31: iload         9
      33: i2l
      34: ladd
      35: invokeinterface #68,  3           // InterfaceMethod net/openhft/chronicle/bytes/RandomDataInput.readLong:(J)J
      40: lstore        10
      42: aload_0
      43: lload_1
      44: iload         9
      46: i2l
      47: ladd
      48: lload         10
      50: invokevirtual #44                 // Method writeLong:(JJ)Lnet/openhft/chronicle/bytes/HeapBytesStore;
      53: pop
      54: iinc          9, 8
      57: goto          18
      60: iload         9
      62: iload         8
      64: if_icmpge     99
      67: aload_3
      68: lload         4
      70: iload         9
      72: i2l
      73: ladd
      74: invokeinterface #69,  3           // InterfaceMethod net/openhft/chronicle/bytes/RandomDataInput.readByte:(J)B
      79: istore        10
      81: aload_0
      82: lload_1
      83: iload         9
      85: i2l
      86: ladd
      87: iload         10
      89: invokevirtual #46                 // Method writeByte:(JB)Lnet/openhft/chronicle/bytes/HeapBytesStore;
      92: pop
      93: iinc          9, 1
      96: goto          60
      99: goto          112
     102: aload_0
     103: lload_1
     104: aload_3
     105: lload         4
     107: lload         6
     109: invokespecial #70                 // Method writeLongLength:(JLnet/openhft/chronicle/bytes/RandomDataInput;JJ)V
     112: aload_0
     113: areturn

  private void writeLongLength(long, net.openhft.chronicle.bytes.RandomDataInput, long, long) throws java.lang.IllegalStateException, java.nio.BufferUnderflowException, java.nio.BufferOverflowException;
    Code:
       0: lconst_0
       1: lstore        8
       3: lload         8
       5: lload         6
       7: ldc2_w        #71                 // long 7l
      10: lsub
      11: lcmp
      12: ifge          50
      15: aload_3
      16: lload         4
      18: lload         8
      20: ladd
      21: invokeinterface #68,  3           // InterfaceMethod net/openhft/chronicle/bytes/RandomDataInput.readLong:(J)J
      26: lstore        10
      28: aload_0
      29: lload_1
      30: lload         8
      32: ladd
      33: lload         10
      35: invokevirtual #44                 // Method writeLong:(JJ)Lnet/openhft/chronicle/bytes/HeapBytesStore;
      38: pop
      39: lload         8
      41: ldc2_w        #73                 // long 8l
      44: ladd
      45: lstore        8
      47: goto          3
      50: lload         8
      52: lload         6
      54: lcmp
      55: ifge          91
      58: aload_3
      59: lload         4
      61: lload         8
      63: ladd
      64: invokeinterface #69,  3           // InterfaceMethod net/openhft/chronicle/bytes/RandomDataInput.readByte:(J)B
      69: istore        10
      71: aload_0
      72: lload_1
      73: lload         8
      75: ladd
      76: iload         10
      78: invokevirtual #46                 // Method writeByte:(JB)Lnet/openhft/chronicle/bytes/HeapBytesStore;
      81: pop
      82: lload         8
      84: lconst_1
      85: ladd
      86: lstore        8
      88: goto          50
      91: return

  public long addressForRead(long) throws java.lang.UnsupportedOperationException;
    Code:
       0: new           #25                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #75                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public long addressForWrite(long) throws java.lang.UnsupportedOperationException;
    Code:
       0: new           #25                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #75                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public long addressForWritePosition() throws java.lang.UnsupportedOperationException, java.nio.BufferOverflowException;
    Code:
       0: new           #25                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #75                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void nativeRead(long, long, long);
    Code:
       0: new           #25                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #26                 // String todo
       6: invokespecial #27                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void nativeWrite(long, long, long);
    Code:
       0: new           #25                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #26                 // String todo
       6: invokespecial #27                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #76                 // class net/openhft/chronicle/bytes/BytesStore
       4: ifeq          22
       7: aload_0
       8: aload_1
       9: checkcast     #76                 // class net/openhft/chronicle/bytes/BytesStore
      12: invokestatic  #77                 // Method net/openhft/chronicle/bytes/BytesInternal.contentEqual:(Lnet/openhft/chronicle/bytes/BytesStore;Lnet/openhft/chronicle/bytes/BytesStore;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn
      24: astore_2
      25: iconst_0
      26: ireturn
    Exception table:
       from    to  target type
           0    23    24   Class java/lang/IllegalStateException

  public boolean sharedMemory();
    Code:
       0: iconst_0
       1: ireturn

  public net.openhft.chronicle.bytes.RandomDataOutput write(long, net.openhft.chronicle.bytes.RandomDataInput, long, long) throws java.nio.BufferOverflowException, java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: lload         4
       5: lload         6
       7: invokevirtual #79                 // Method write:(JLnet/openhft/chronicle/bytes/RandomDataInput;JJ)Lnet/openhft/chronicle/bytes/HeapBytesStore;
      10: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput write(long, byte[], int, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: iload         4
       5: iload         5
       7: invokevirtual #80                 // Method write:(J[BII)Lnet/openhft/chronicle/bytes/HeapBytesStore;
      10: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeVolatileLong(long, long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokevirtual #81                 // Method writeVolatileLong:(JJ)Lnet/openhft/chronicle/bytes/HeapBytesStore;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeVolatileInt(long, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #82                 // Method writeVolatileInt:(JI)Lnet/openhft/chronicle/bytes/HeapBytesStore;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeVolatileShort(long, short) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #83                 // Method writeVolatileShort:(JS)Lnet/openhft/chronicle/bytes/HeapBytesStore;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeVolatileByte(long, byte) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #84                 // Method writeVolatileByte:(JB)Lnet/openhft/chronicle/bytes/HeapBytesStore;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeDouble(long, double) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: dload_3
       3: invokevirtual #85                 // Method writeDouble:(JD)Lnet/openhft/chronicle/bytes/HeapBytesStore;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeFloat(long, float) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: fload_3
       3: invokevirtual #86                 // Method writeFloat:(JF)Lnet/openhft/chronicle/bytes/HeapBytesStore;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeOrderedLong(long, long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokevirtual #87                 // Method writeOrderedLong:(JJ)Lnet/openhft/chronicle/bytes/HeapBytesStore;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeLong(long, long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokevirtual #44                 // Method writeLong:(JJ)Lnet/openhft/chronicle/bytes/HeapBytesStore;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeOrderedInt(long, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #88                 // Method writeOrderedInt:(JI)Lnet/openhft/chronicle/bytes/HeapBytesStore;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeInt(long, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #89                 // Method writeInt:(JI)Lnet/openhft/chronicle/bytes/HeapBytesStore;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeShort(long, short) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #90                 // Method writeShort:(JS)Lnet/openhft/chronicle/bytes/HeapBytesStore;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeByte(long, byte) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #46                 // Method writeByte:(JB)Lnet/openhft/chronicle/bytes/HeapBytesStore;
       6: areturn

  static {};
    Code:
       0: ldc           #15                 // class net/openhft/chronicle/bytes/HeapBytesStore
       2: invokevirtual #91                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #61                 // Field $assertionsDisabled:Z
      16: return
}
