Compiled from "TextBooleanReference.java"
public class net.openhft.chronicle.bytes.ref.TextBooleanReference extends net.openhft.chronicle.bytes.ref.AbstractReference implements net.openhft.chronicle.core.values.BooleanValue {
  private static final int FALSE;

  private static final int TRUE;

  public net.openhft.chronicle.bytes.ref.TextBooleanReference();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method net/openhft/chronicle/bytes/ref/AbstractReference."<init>":()V
       4: return

  public static void write(boolean, net.openhft.chronicle.bytes.BytesStore, long) throws java.lang.IllegalStateException, java.nio.BufferOverflowException;
    Code:
       0: aload_1
       1: lload_2
       2: iload_0
       3: ifeq          11
       6: ldc           #3                  // int 1970435104
       8: goto          13
      11: ldc           #4                  // int 1936482662
      13: invokeinterface #5,  4            // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeVolatileInt:(JI)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      18: pop
      19: aload_1
      20: lload_2
      21: ldc2_w        #6                  // long 4l
      24: ladd
      25: bipush        101
      27: invokeinterface #8,  4            // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeByte:(JB)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      32: pop
      33: return

  public long maxSize();
    Code:
       0: ldc2_w        #9                  // long 5l
       3: lreturn

  public java.lang.String toString();
    Code:
       0: new           #11                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #13                 // String value:
       9: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #15                 // Method getValue:()Z
      16: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      19: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn
      23: astore_1
      24: aload_1
      25: invokevirtual #20                 // Method java/lang/RuntimeException.toString:()Ljava/lang/String;
      28: areturn
    Exception table:
       from    to  target type
           0    22    23   Class java/lang/IllegalStateException
           0    22    23   Class java/nio/BufferUnderflowException

  public boolean getValue() throws java.lang.IllegalStateException, java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method throwExceptionIfClosed:()V
       4: aload_0
       5: getfield      #22                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       8: aload_0
       9: getfield      #23                 // Field offset:J
      12: invokeinterface #24,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readVolatileInt:(J)I
      17: ldc           #3                  // int 1970435104
      19: if_icmpne     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public void setValue(boolean) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method throwExceptionIfClosedInSetter:()V
       4: iload_1
       5: aload_0
       6: getfield      #22                 // Field bytes:Lnet/openhft/chronicle/bytes/BytesStore;
       9: aload_0
      10: getfield      #23                 // Field offset:J
      13: invokestatic  #26                 // Method write:(ZLnet/openhft/chronicle/bytes/BytesStore;J)V
      16: goto          29
      19: astore_2
      20: new           #28                 // class java/lang/AssertionError
      23: dup
      24: aload_2
      25: invokespecial #29                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      28: athrow
      29: return
    Exception table:
       from    to  target type
           4    16    19   Class java/nio/BufferOverflowException
}
