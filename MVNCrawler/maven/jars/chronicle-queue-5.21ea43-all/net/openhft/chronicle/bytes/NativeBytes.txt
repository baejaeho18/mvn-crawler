Compiled from "NativeBytes.java"
public class net.openhft.chronicle.bytes.NativeBytes<Underlying> extends net.openhft.chronicle.bytes.VanillaBytes<Underlying> {
  private static final boolean BYTES_GUARDED;

  private static boolean s_newGuarded;

  private long capacity;

  static final boolean $assertionsDisabled;

  public net.openhft.chronicle.bytes.NativeBytes(net.openhft.chronicle.bytes.BytesStore, long) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: lconst_0
       3: lload_2
       4: invokespecial #1                  // Method net/openhft/chronicle/bytes/VanillaBytes."<init>":(Lnet/openhft/chronicle/bytes/BytesStore;JJ)V
       7: aload_0
       8: lload_2
       9: putfield      #2                  // Field capacity:J
      12: return

  public net.openhft.chronicle.bytes.NativeBytes(net.openhft.chronicle.bytes.BytesStore) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: lconst_0
       3: aload_1
       4: invokeinterface #3,  1            // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.capacity:()J
       9: invokespecial #1                  // Method net/openhft/chronicle/bytes/VanillaBytes."<init>":(Lnet/openhft/chronicle/bytes/BytesStore;JJ)V
      12: aload_0
      13: aload_1
      14: invokeinterface #3,  1            // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.capacity:()J
      19: putfield      #2                  // Field capacity:J
      22: return

  public static boolean areNewGuarded();
    Code:
       0: getstatic     #4                  // Field s_newGuarded:Z
       3: ireturn

  public static boolean setNewGuarded(boolean);
    Code:
       0: iload_0
       1: putstatic     #4                  // Field s_newGuarded:Z
       4: iconst_1
       5: ireturn

  public static void resetNewGuarded();
    Code:
       0: getstatic     #5                  // Field BYTES_GUARDED:Z
       3: putstatic     #4                  // Field s_newGuarded:Z
       6: return

  public static net.openhft.chronicle.bytes.NativeBytes<java.lang.Void> nativeBytes();
    Code:
       0: invokestatic  #6                  // Method net/openhft/chronicle/bytes/NoBytesStore.noBytesStore:()Lnet/openhft/chronicle/bytes/BytesStore;
       3: ldc2_w        #8                  // long 9223372036854775792l
       6: invokestatic  #10                 // Method wrapWithNativeBytes:(Lnet/openhft/chronicle/bytes/BytesStore;J)Lnet/openhft/chronicle/bytes/NativeBytes;
       9: areturn
      10: astore_0
      11: new           #13                 // class java/lang/AssertionError
      14: dup
      15: aload_0
      16: invokespecial #14                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      19: athrow
    Exception table:
       from    to  target type
           0     9    10   Class java/lang/IllegalStateException
           0     9    10   Class java/lang/IllegalArgumentException

  public static net.openhft.chronicle.bytes.NativeBytes<java.lang.Void> nativeBytes(long) throws java.lang.IllegalArgumentException;
    Code:
       0: lload_0
       1: invokestatic  #15                 // Method net/openhft/chronicle/bytes/NativeBytesStore.nativeStoreWithFixedCapacity:(J)Lnet/openhft/chronicle/bytes/NativeBytesStore;
       4: astore_2
       5: aload_2
       6: ldc2_w        #8                  // long 9223372036854775792l
       9: invokestatic  #16                 // Method wrapWithNativeBytes:(Lnet/openhft/chronicle/bytes/BytesStore;J)Lnet/openhft/chronicle/bytes/NativeBytes;
      12: astore_3
      13: aload_2
      14: getstatic     #17                 // Field INIT:Lnet/openhft/chronicle/core/io/ReferenceOwner;
      17: invokevirtual #18                 // Method net/openhft/chronicle/bytes/NativeBytesStore.release:(Lnet/openhft/chronicle/core/io/ReferenceOwner;)V
      20: aload_3
      21: areturn
      22: astore        4
      24: aload_2
      25: getstatic     #17                 // Field INIT:Lnet/openhft/chronicle/core/io/ReferenceOwner;
      28: invokevirtual #18                 // Method net/openhft/chronicle/bytes/NativeBytesStore.release:(Lnet/openhft/chronicle/core/io/ReferenceOwner;)V
      31: aload         4
      33: athrow
      34: astore_3
      35: new           #13                 // class java/lang/AssertionError
      38: dup
      39: aload_3
      40: invokespecial #14                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      43: athrow
    Exception table:
       from    to  target type
           5    13    22   any
          22    24    22   any
           5    20    34   Class java/lang/IllegalStateException
          22    34    34   Class java/lang/IllegalStateException

  public static net.openhft.chronicle.bytes.BytesStore<net.openhft.chronicle.bytes.Bytes<java.lang.Void>, java.lang.Void> copyOf(net.openhft.chronicle.bytes.Bytes) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokeinterface #19,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readRemaining:()J
       6: lstore_1
       7: lload_1
       8: invokestatic  #20                 // InterfaceMethod net/openhft/chronicle/bytes/Bytes.allocateElasticDirect:(J)Lnet/openhft/chronicle/bytes/NativeBytes;
      11: astore_3
      12: aload_3
      13: aload_0
      14: lconst_0
      15: lload_1
      16: invokevirtual #21                 // Method write:(Lnet/openhft/chronicle/bytes/BytesStore;JJ)Lnet/openhft/chronicle/bytes/Bytes;
      19: pop
      20: aload_3
      21: areturn
      22: astore_3
      23: new           #13                 // class java/lang/AssertionError
      26: dup
      27: aload_3
      28: invokespecial #14                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      31: athrow
    Exception table:
       from    to  target type
           7    21    22   Class java/lang/IllegalArgumentException
           7    21    22   Class java/nio/BufferOverflowException
           7    21    22   Class java/nio/BufferUnderflowException

  private static long alignToPageSize(long);
    Code:
       0: invokestatic  #24                 // Method net/openhft/chronicle/core/OS.pageSize:()I
       3: iconst_1
       4: isub
       5: i2l
       6: lstore_2
       7: lload_0
       8: lload_2
       9: ladd
      10: lload_2
      11: ldc2_w        #25                 // long -1l
      14: lxor
      15: land
      16: lreturn

  public static <T> net.openhft.chronicle.bytes.NativeBytes<T> wrapWithNativeBytes(net.openhft.chronicle.bytes.BytesStore<?, T>, long) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: getstatic     #4                  // Field s_newGuarded:Z
       3: ifeq          18
       6: new           #27                 // class net/openhft/chronicle/bytes/GuardedNativeBytes
       9: dup
      10: aload_0
      11: lload_1
      12: invokespecial #28                 // Method net/openhft/chronicle/bytes/GuardedNativeBytes."<init>":(Lnet/openhft/chronicle/bytes/BytesStore;J)V
      15: goto          27
      18: new           #29                 // class net/openhft/chronicle/bytes/NativeBytes
      21: dup
      22: aload_0
      23: lload_1
      24: invokespecial #30                 // Method "<init>":(Lnet/openhft/chronicle/bytes/BytesStore;J)V
      27: areturn

  protected static <T> long maxCapacityFor(net.openhft.chronicle.bytes.BytesStore<?, T>);
    Code:
       0: aload_0
       1: invokeinterface #31,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.underlyingObject:()Ljava/lang/Object;
       6: instanceof    #32                 // class java/nio/ByteBuffer
       9: ifne          24
      12: aload_0
      13: invokeinterface #31,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.underlyingObject:()Ljava/lang/Object;
      18: instanceof    #33                 // class "[B"
      21: ifeq          30
      24: ldc2_w        #34                 // long 2147483632l
      27: goto          33
      30: ldc2_w        #8                  // long 9223372036854775792l
      33: lreturn

  public long capacity();
    Code:
       0: aload_0
       1: getfield      #2                  // Field capacity:J
       4: lreturn

  protected void writeCheckOffset(long, long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #36                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
       5: invokeinterface #37,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.start:()J
      10: lcmp
      11: iflt          62
      14: lload_1
      15: lload_3
      16: ladd
      17: lstore        5
      19: lload         5
      21: aload_0
      22: getfield      #36                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      25: invokeinterface #38,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.safeLimit:()J
      30: lcmp
      31: ifgt          35
      34: return
      35: lload         5
      37: aload_0
      38: getfield      #2                  // Field capacity:J
      41: lcmp
      42: iflt          53
      45: new           #22                 // class java/nio/BufferOverflowException
      48: dup
      49: invokespecial #39                 // Method java/nio/BufferOverflowException."<init>":()V
      52: athrow
      53: aload_0
      54: lload         5
      56: invokespecial #40                 // Method checkResize:(J)V
      59: goto          70
      62: new           #22                 // class java/nio/BufferOverflowException
      65: dup
      66: invokespecial #39                 // Method java/nio/BufferOverflowException."<init>":()V
      69: athrow
      70: return

  void prewriteCheckOffset(long, long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: lload_1
       1: lload_3
       2: lsub
       3: aload_0
       4: getfield      #36                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
       7: invokeinterface #37,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.start:()J
      12: lcmp
      13: iflt          56
      16: lload_1
      17: aload_0
      18: getfield      #36                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      21: invokeinterface #38,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.safeLimit:()J
      26: lcmp
      27: ifgt          31
      30: return
      31: lload_1
      32: aload_0
      33: getfield      #2                  // Field capacity:J
      36: lcmp
      37: iflt          48
      40: new           #22                 // class java/nio/BufferOverflowException
      43: dup
      44: invokespecial #39                 // Method java/nio/BufferOverflowException."<init>":()V
      47: athrow
      48: aload_0
      49: lload_1
      50: invokespecial #40                 // Method checkResize:(J)V
      53: goto          64
      56: new           #22                 // class java/nio/BufferOverflowException
      59: dup
      60: invokespecial #39                 // Method java/nio/BufferOverflowException."<init>":()V
      63: athrow
      64: return

  public void ensureCapacity(long) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException;
    Code:
       0: getstatic     #41                 // Field $assertionsDisabled:Z
       3: ifne          20
       6: lload_1
       7: lconst_0
       8: lcmp
       9: ifge          20
      12: new           #13                 // class java/lang/AssertionError
      15: dup
      16: invokespecial #42                 // Method java/lang/AssertionError."<init>":()V
      19: athrow
      20: aload_0
      21: invokevirtual #43                 // Method writePosition:()J
      24: lstore_3
      25: aload_0
      26: lload_3
      27: lload_1
      28: lload_3
      29: lsub
      30: invokevirtual #44                 // Method writeCheckOffset:(JJ)V
      33: goto          85
      36: astore_3
      37: new           #12                 // class java/lang/IllegalArgumentException
      40: dup
      41: new           #45                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #47                 // String Bytes cannot be resized to
      50: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: lload_1
      54: invokevirtual #49                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      57: ldc           #50                 // String  limit:
      59: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: invokevirtual #51                 // Method capacity:()J
      66: invokevirtual #49                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      69: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      75: astore        4
      77: aload         4
      79: invokevirtual #54                 // Method java/lang/IllegalArgumentException.printStackTrace:()V
      82: aload         4
      84: athrow
      85: return
    Exception table:
       from    to  target type
           0    33    36   Class java/nio/BufferOverflowException

  private void checkResize(long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method isElastic:()Z
       4: ifeq          15
       7: aload_0
       8: lload_1
       9: invokespecial #56                 // Method resize:(J)V
      12: goto          23
      15: new           #22                 // class java/nio/BufferOverflowException
      18: dup
      19: invokespecial #39                 // Method java/nio/BufferOverflowException."<init>":()V
      22: athrow
      23: return

  public boolean isElastic();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isEqual(long, long, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #36                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
       4: lload_1
       5: lload_3
       6: aload         5
       8: invokeinterface #57,  6           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.isEqual:(JJLjava/lang/String;)Z
      13: ireturn

  private void resize(long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method throwExceptionIfReleased:()V
       4: lload_1
       5: lconst_0
       6: lcmp
       7: ifge          37
      10: new           #59                 // class net/openhft/chronicle/bytes/util/DecoratedBufferOverflowException
      13: dup
      14: new           #45                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      21: lload_1
      22: invokevirtual #49                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      25: ldc           #60                 // String < 0
      27: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #61                 // Method net/openhft/chronicle/bytes/util/DecoratedBufferOverflowException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: lload_1
      38: aload_0
      39: invokevirtual #51                 // Method capacity:()J
      42: lcmp
      43: ifle          80
      46: new           #59                 // class net/openhft/chronicle/bytes/util/DecoratedBufferOverflowException
      49: dup
      50: new           #45                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      57: lload_1
      58: invokevirtual #49                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      61: ldc           #62                 // String >
      63: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_0
      67: invokevirtual #51                 // Method capacity:()J
      70: invokevirtual #49                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      73: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: invokespecial #61                 // Method net/openhft/chronicle/bytes/util/DecoratedBufferOverflowException."<init>":(Ljava/lang/String;)V
      79: athrow
      80: aload_0
      81: invokevirtual #63                 // Method realCapacity:()J
      84: lstore_3
      85: lload_1
      86: lload_3
      87: lcmp
      88: ifgt          92
      91: return
      92: lload_1
      93: ldc2_w        #64                 // long 7l
      96: ladd
      97: lload_3
      98: ldc2_w        #66                 // long 3l
     101: lmul
     102: ldc2_w        #68                 // long 2l
     105: ldiv
     106: ldc2_w        #70                 // long 32l
     109: ladd
     110: invokestatic  #72                 // Method java/lang/Math.max:(JJ)J
     113: lstore        5
     115: aload_0
     116: invokevirtual #73                 // Method isDirectMemory:()Z
     119: ifne          131
     122: lload         5
     124: ldc2_w        #34                 // long 2147483632l
     127: lcmp
     128: ifle          141
     131: lload         5
     133: invokestatic  #74                 // Method alignToPageSize:(J)J
     136: lstore        5
     138: goto          149
     141: lload         5
     143: ldc2_w        #75                 // long -8l
     146: land
     147: lstore        5
     149: lload         5
     151: aload_0
     152: invokevirtual #51                 // Method capacity:()J
     155: invokestatic  #77                 // Method java/lang/Math.min:(JJ)J
     158: lstore        5
     160: aload_0
     161: getfield      #36                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
     164: invokeinterface #31,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.underlyingObject:()Ljava/lang/Object;
     169: instanceof    #32                 // class java/nio/ByteBuffer
     172: istore        7
     174: iload         7
     176: ifeq          252
     179: lload         5
     181: ldc2_w        #34                 // long 2147483632l
     184: lcmp
     185: ifle          252
     188: new           #78                 // class net/openhft/chronicle/core/StackTrace
     191: dup
     192: invokespecial #79                 // Method net/openhft/chronicle/core/StackTrace."<init>":()V
     195: astore        8
     197: ldc           #80                 // String Calling stack is
     199: aload         8
     201: invokestatic  #81                 // Method net/openhft/chronicle/bytes/BytesUtil.asString:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/lang/String;
     204: astore        9
     206: invokestatic  #82                 // Method net/openhft/chronicle/core/Jvm.warn:()Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
     209: aload_0
     210: invokevirtual #83                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     213: new           #45                 // class java/lang/StringBuilder
     216: dup
     217: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     220: ldc           #84                 // String Going to try to replace ByteBuffer-backed BytesStore with raw NativeBytesStore to grow to
     222: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     225: lload         5
     227: ldc2_w        #85                 // long 1024l
     230: ldiv
     231: invokevirtual #49                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     234: ldc           #87                 // String  KB. If later it is assumed that this bytes\' underlyingObject() is ByteBuffer, NullPointerException is likely to be thrown.
     236: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     239: aload         9
     241: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     244: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     247: invokeinterface #88,  3           // InterfaceMethod net/openhft/chronicle/core/onoes/ExceptionHandler.on:(Ljava/lang/Class;Ljava/lang/String;)V
     252: lload_1
     253: ldc2_w        #89                 // long 131072l
     256: lcmp
     257: iflt          325
     260: invokestatic  #91                 // Method net/openhft/chronicle/core/Jvm.perf:()Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
     263: aload_0
     264: invokevirtual #83                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     267: new           #45                 // class java/lang/StringBuilder
     270: dup
     271: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     274: ldc           #92                 // String Resizing buffer was
     276: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     279: lload_3
     280: ldc2_w        #85                 // long 1024l
     283: ldiv
     284: invokevirtual #49                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     287: ldc           #93                 // String  KB, needs
     289: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     292: lload_1
     293: lload_3
     294: lsub
     295: invokevirtual #49                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     298: ldc           #94                 // String  bytes more, new-size
     300: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     303: lload         5
     305: ldc2_w        #85                 // long 1024l
     308: ldiv
     309: invokevirtual #49                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     312: ldc           #95                 // String  KB
     314: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     317: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     320: invokeinterface #88,  3           // InterfaceMethod net/openhft/chronicle/core/onoes/ExceptionHandler.on:(Ljava/lang/Class;Ljava/lang/String;)V
     325: iconst_0
     326: istore        9
     328: iload         7
     330: ifeq          385
     333: lload         5
     335: ldc2_w        #34                 // long 2147483632l
     338: lcmp
     339: ifgt          385
     342: aload_0
     343: getfield      #36                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
     346: invokeinterface #31,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.underlyingObject:()Ljava/lang/Object;
     351: checkcast     #32                 // class java/nio/ByteBuffer
     354: invokevirtual #96                 // Method java/nio/ByteBuffer.position:()I
     357: istore        9
     359: aload_0
     360: lload         5
     362: invokestatic  #97                 // Method net/openhft/chronicle/core/Maths.toInt32:(J)I
     365: invokespecial #98                 // Method allocateNewByteBufferBackedStore:(I)Lnet/openhft/chronicle/bytes/BytesStore;
     368: astore        8
     370: goto          409
     373: astore        10
     375: new           #13                 // class java/lang/AssertionError
     378: dup
     379: aload         10
     381: invokespecial #14                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     384: athrow
     385: lload         5
     387: invokestatic  #100                // Method net/openhft/chronicle/bytes/NativeBytesStore.lazyNativeBytesStoreWithFixedCapacity:(J)Lnet/openhft/chronicle/bytes/NativeBytesStore;
     390: astore        8
     392: aload_0
     393: getfield      #101                // Field referenceCounted:Lnet/openhft/chronicle/core/io/MonitorReferenceCounted;
     396: invokeinterface #102,  1          // InterfaceMethod net/openhft/chronicle/core/io/MonitorReferenceCounted.unmonitored:()Z
     401: ifeq          409
     404: aload         8
     406: invokestatic  #103                // Method net/openhft/chronicle/core/io/AbstractReferenceCounted.unmonitor:(Lnet/openhft/chronicle/core/io/ReferenceCounted;)V
     409: aload         8
     411: getstatic     #17                 // Field INIT:Lnet/openhft/chronicle/core/io/ReferenceOwner;
     414: aload_0
     415: invokeinterface #104,  3          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.reserveTransfer:(Lnet/openhft/chronicle/core/io/ReferenceOwner;Lnet/openhft/chronicle/core/io/ReferenceOwner;)V
     420: goto          445
     423: astore        10
     425: new           #22                 // class java/nio/BufferOverflowException
     428: dup
     429: invokespecial #39                 // Method java/nio/BufferOverflowException."<init>":()V
     432: astore        11
     434: aload         11
     436: aload         10
     438: invokevirtual #105                // Method java/nio/BufferOverflowException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     441: pop
     442: aload         11
     444: athrow
     445: aload_0
     446: invokevirtual #58                 // Method throwExceptionIfReleased:()V
     449: aload_0
     450: getfield      #36                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
     453: astore        10
     455: aload_0
     456: getfield      #36                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
     459: aload         8
     461: invokeinterface #106,  2          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.copyTo:(Lnet/openhft/chronicle/bytes/BytesStore;)J
     466: pop2
     467: aload_0
     468: aload         8
     470: invokevirtual #107                // Method bytesStore:(Lnet/openhft/chronicle/bytes/BytesStore;)V
     473: aload         10
     475: aload_0
     476: invokeinterface #108,  2          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.release:(Lnet/openhft/chronicle/core/io/ReferenceOwner;)V
     481: goto          500
     484: astore        11
     486: invokestatic  #109                // Method net/openhft/chronicle/core/Jvm.debug:()Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
     489: aload_0
     490: invokevirtual #83                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     493: aload         11
     495: invokeinterface #110,  3          // InterfaceMethod net/openhft/chronicle/core/onoes/ExceptionHandler.on:(Ljava/lang/Class;Ljava/lang/Throwable;)V
     500: aload_0
     501: getfield      #36                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
     504: invokeinterface #31,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.underlyingObject:()Ljava/lang/Object;
     509: instanceof    #32                 // class java/nio/ByteBuffer
     512: ifeq          555
     515: aload_0
     516: getfield      #36                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
     519: invokeinterface #31,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.underlyingObject:()Ljava/lang/Object;
     524: checkcast     #32                 // class java/nio/ByteBuffer
     527: astore        11
     529: aload         11
     531: iconst_0
     532: invokevirtual #111                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     535: pop
     536: aload         11
     538: aload         11
     540: invokevirtual #112                // Method java/nio/ByteBuffer.capacity:()I
     543: invokevirtual #113                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     546: pop
     547: aload         11
     549: iload         9
     551: invokevirtual #111                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     554: pop
     555: return
    Exception table:
       from    to  target type
         359   370   373   Class java/lang/ArithmeticException
         328   420   423   Class java/lang/IllegalArgumentException
         473   481   484   Class java/lang/IllegalStateException

  protected void bytesStore(net.openhft.chronicle.bytes.BytesStore<net.openhft.chronicle.bytes.Bytes<Underlying>, Underlying>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field capacity:J
       4: aload_1
       5: invokeinterface #3,  1            // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.capacity:()J
      10: lcmp
      11: ifge          24
      14: aload_0
      15: aload_1
      16: invokeinterface #3,  1            // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.capacity:()J
      21: putfield      #2                  // Field capacity:J
      24: aload_0
      25: aload_1
      26: invokespecial #114                // Method net/openhft/chronicle/bytes/VanillaBytes.bytesStore:(Lnet/openhft/chronicle/bytes/BytesStore;)V
      29: return

  public void bytesStore(net.openhft.chronicle.bytes.BytesStore<net.openhft.chronicle.bytes.Bytes<Underlying>, Underlying>, long, long) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field capacity:J
       4: lload_2
       5: lload         4
       7: ladd
       8: lcmp
       9: ifge          20
      12: aload_0
      13: lload_2
      14: lload         4
      16: ladd
      17: putfield      #2                  // Field capacity:J
      20: aload_0
      21: aload_1
      22: lload_2
      23: lload         4
      25: invokespecial #115                // Method net/openhft/chronicle/bytes/VanillaBytes.bytesStore:(Lnet/openhft/chronicle/bytes/BytesStore;JJ)V
      28: return

  private net.openhft.chronicle.bytes.BytesStore allocateNewByteBufferBackedStore(int);
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method isDirectMemory:()Z
       4: ifeq          16
       7: iload_1
       8: aload_0
       9: invokevirtual #51                 // Method capacity:()J
      12: invokestatic  #116                // Method net/openhft/chronicle/bytes/NativeBytesStore.elasticByteBuffer:(IJ)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      15: areturn
      16: iload_1
      17: invokestatic  #117                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      20: invokestatic  #118                // Method net/openhft/chronicle/bytes/HeapBytesStore.wrap:(Ljava/nio/ByteBuffer;)Lnet/openhft/chronicle/bytes/HeapBytesStore;
      23: areturn

  public net.openhft.chronicle.bytes.NativeBytes writeSome(net.openhft.chronicle.bytes.Bytes) throws java.lang.IllegalStateException;
    Code:
       0: invokestatic  #119                // Method net/openhft/chronicle/bytes/AbstractBytes$ReportUnoptimised.reportOnce:()V
       3: aload_1
       4: invokeinterface #19,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readRemaining:()J
       9: aload_0
      10: invokevirtual #120                // Method writeRemaining:()J
      13: invokestatic  #77                 // Method java/lang/Math.min:(JJ)J
      16: lstore_2
      17: lload_2
      18: aload_0
      19: invokevirtual #43                 // Method writePosition:()J
      22: ladd
      23: ldc2_w        #121                // long 1048576l
      26: lcmp
      27: iflt          49
      30: aload_1
      31: invokeinterface #19,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readRemaining:()J
      36: aload_0
      37: invokevirtual #63                 // Method realCapacity:()J
      40: aload_0
      41: invokevirtual #43                 // Method writePosition:()J
      44: lsub
      45: invokestatic  #77                 // Method java/lang/Math.min:(JJ)J
      48: lstore_2
      49: aload_1
      50: invokeinterface #123,  1          // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readPosition:()J
      55: lstore        4
      57: aload_0
      58: aload_0
      59: invokevirtual #43                 // Method writePosition:()J
      62: lload_2
      63: ladd
      64: invokevirtual #124                // Method ensureCapacity:(J)V
      67: aload_0
      68: aload_1
      69: lload         4
      71: lload_2
      72: invokevirtual #125                // Method optimisedWrite:(Lnet/openhft/chronicle/bytes/RandomDataInput;JJ)V
      75: lload_2
      76: aload_1
      77: invokeinterface #19,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readRemaining:()J
      82: lcmp
      83: ifne          96
      86: aload_1
      87: invokeinterface #126,  1          // InterfaceMethod net/openhft/chronicle/bytes/Bytes.clear:()Lnet/openhft/chronicle/bytes/Bytes;
      92: pop
      93: goto          131
      96: aload_1
      97: lload_2
      98: invokeinterface #127,  3          // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readSkip:(J)Lnet/openhft/chronicle/bytes/StreamingDataInput;
     103: pop
     104: aload_1
     105: invokeinterface #128,  1          // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writePosition:()J
     110: aload_1
     111: invokeinterface #129,  1          // InterfaceMethod net/openhft/chronicle/bytes/Bytes.realCapacity:()J
     116: ldc2_w        #68                 // long 2l
     119: ldiv
     120: lcmp
     121: ifle          131
     124: aload_1
     125: invokeinterface #130,  1          // InterfaceMethod net/openhft/chronicle/bytes/Bytes.compact:()Lnet/openhft/chronicle/bytes/Bytes;
     130: pop
     131: aload_0
     132: areturn
     133: astore_2
     134: new           #13                 // class java/lang/AssertionError
     137: dup
     138: aload_2
     139: invokespecial #14                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     142: athrow
    Exception table:
       from    to  target type
           3   132   133   Class java/lang/IllegalArgumentException
           3   132   133   Class java/nio/BufferUnderflowException
           3   132   133   Class java/nio/BufferOverflowException

  protected long writeOffsetPositionMoved(long, long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method writePosition:()J
       4: lstore        5
       6: aload_0
       7: getfield      #131                // Field writePosition:J
      10: aload_0
      11: getfield      #36                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      14: invokeinterface #37,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.start:()J
      19: lcmp
      20: ifge          31
      23: new           #22                 // class java/nio/BufferOverflowException
      26: dup
      27: invokespecial #39                 // Method java/nio/BufferOverflowException."<init>":()V
      30: athrow
      31: aload_0
      32: invokevirtual #43                 // Method writePosition:()J
      35: lload_1
      36: ladd
      37: lstore        7
      39: lload         7
      41: aload_0
      42: getfield      #132                // Field writeLimit:J
      45: lcmp
      46: ifle          59
      49: aload_0
      50: lload_3
      51: lload         7
      53: invokespecial #133                // Method throwBeyondWriteLimit:(JJ)V
      56: goto          80
      59: lload         7
      61: aload_0
      62: getfield      #36                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      65: invokeinterface #38,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.safeLimit:()J
      70: lcmp
      71: ifle          80
      74: aload_0
      75: lload         7
      77: invokespecial #40                 // Method checkResize:(J)V
      80: aload_0
      81: aload_0
      82: invokevirtual #43                 // Method writePosition:()J
      85: lload_3
      86: ladd
      87: invokevirtual #134                // Method uncheckedWritePosition:(J)V
      90: lload         5
      92: lreturn

  private void throwBeyondWriteLimit(long, long) throws net.openhft.chronicle.bytes.util.DecoratedBufferOverflowException;
    Code:
       0: new           #59                 // class net/openhft/chronicle/bytes/util/DecoratedBufferOverflowException
       3: dup
       4: new           #45                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #135                // String attempt to write
      13: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: lload_1
      17: invokevirtual #49                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      20: ldc           #136                // String  bytes to
      22: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: lload_3
      26: invokevirtual #49                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      29: ldc           #50                 // String  limit:
      31: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: getfield      #132                // Field writeLimit:J
      38: invokevirtual #49                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      41: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #61                 // Method net/openhft/chronicle/bytes/util/DecoratedBufferOverflowException."<init>":(Ljava/lang/String;)V
      47: athrow

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeByte(byte) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lconst_1
       2: lconst_1
       3: invokevirtual #137                // Method writeOffsetPositionMoved:(JJ)J
       6: lstore_2
       7: aload_0
       8: getfield      #36                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      11: lload_2
      12: iload_1
      13: invokeinterface #138,  4          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeByte:(JB)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      18: pop
      19: aload_0
      20: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeLong(long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #139                // long 8l
       4: ldc2_w        #139                // long 8l
       7: invokevirtual #137                // Method writeOffsetPositionMoved:(JJ)J
      10: lstore_3
      11: aload_0
      12: getfield      #36                 // Field bytesStore:Lnet/openhft/chronicle/bytes/BytesStore;
      15: lload_3
      16: lload_1
      17: invokeinterface #141,  5          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.writeLong:(JJ)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      22: pop
      23: aload_0
      24: areturn

  public long readRemaining();
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method writePosition:()J
       4: aload_0
       5: getfield      #142                // Field readPosition:J
       8: lsub
       9: lreturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeSome(net.openhft.chronicle.bytes.Bytes) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #143                // Method writeSome:(Lnet/openhft/chronicle/bytes/Bytes;)Lnet/openhft/chronicle/bytes/NativeBytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeLong(long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #144                // Method writeLong:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeByte(byte) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #145                // Method writeByte:(B)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  static {};
    Code:
       0: ldc           #29                 // class net/openhft/chronicle/bytes/NativeBytes
       2: invokevirtual #146                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #41                 // Field $assertionsDisabled:Z
      16: ldc           #147                // String bytes.guarded
      18: invokestatic  #148                // Method net/openhft/chronicle/core/Jvm.getBoolean:(Ljava/lang/String;)Z
      21: putstatic     #5                  // Field BYTES_GUARDED:Z
      24: getstatic     #5                  // Field BYTES_GUARDED:Z
      27: putstatic     #4                  // Field s_newGuarded:Z
      30: return
}
