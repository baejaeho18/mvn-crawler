Compiled from "BytesMarshaller.java"
class net.openhft.chronicle.bytes.BytesMarshaller$MapFieldAccess extends net.openhft.chronicle.bytes.BytesMarshaller$FieldAccess {
  final java.util.function.Supplier<java.util.Map> collectionSupplier;

  private final java.lang.Class<?> type;

  private final java.lang.Class keyType;

  private final java.lang.Class valueType;

  public net.openhft.chronicle.bytes.BytesMarshaller$MapFieldAccess(java.lang.reflect.Field);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method net/openhft/chronicle/bytes/BytesMarshaller$FieldAccess."<init>":(Ljava/lang/reflect/Field;)V
       5: aload_0
       6: aload_1
       7: invokevirtual #2                  // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
      10: putfield      #3                  // Field type:Ljava/lang/Class;
      13: aload_0
      14: getfield      #3                  // Field type:Ljava/lang/Class;
      17: ldc           #4                  // class java/util/Map
      19: if_acmpne     34
      22: aload_0
      23: invokedynamic #5,  0              // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
      28: putfield      #6                  // Field collectionSupplier:Ljava/util/function/Supplier;
      31: goto          76
      34: aload_0
      35: getfield      #3                  // Field type:Ljava/lang/Class;
      38: ldc           #7                  // class java/util/SortedMap
      40: if_acmpeq     52
      43: aload_0
      44: getfield      #3                  // Field type:Ljava/lang/Class;
      47: ldc           #8                  // class java/util/NavigableMap
      49: if_acmpne     64
      52: aload_0
      53: invokedynamic #9,  0              // InvokeDynamic #1:get:()Ljava/util/function/Supplier;
      58: putfield      #6                  // Field collectionSupplier:Ljava/util/function/Supplier;
      61: goto          76
      64: aload_0
      65: aload_0
      66: aload_0
      67: getfield      #3                  // Field type:Ljava/lang/Class;
      70: invokevirtual #10                 // Method newInstance:(Ljava/lang/Class;)Ljava/util/function/Supplier;
      73: putfield      #6                  // Field collectionSupplier:Ljava/util/function/Supplier;
      76: aload_1
      77: invokevirtual #11                 // Method java/lang/reflect/Field.getGenericType:()Ljava/lang/reflect/Type;
      80: astore_2
      81: aload_2
      82: instanceof    #12                 // class java/lang/reflect/ParameterizedType
      85: ifeq          126
      88: aload_2
      89: checkcast     #12                 // class java/lang/reflect/ParameterizedType
      92: astore_3
      93: aload_3
      94: invokeinterface #13,  1           // InterfaceMethod java/lang/reflect/ParameterizedType.getActualTypeArguments:()[Ljava/lang/reflect/Type;
      99: astore        4
     101: aload_0
     102: aload         4
     104: iconst_0
     105: aaload
     106: invokestatic  #14                 // Method extractClass:(Ljava/lang/reflect/Type;)Ljava/lang/Class;
     109: putfield      #15                 // Field keyType:Ljava/lang/Class;
     112: aload_0
     113: aload         4
     115: iconst_1
     116: aaload
     117: invokestatic  #14                 // Method extractClass:(Ljava/lang/reflect/Type;)Ljava/lang/Class;
     120: putfield      #16                 // Field valueType:Ljava/lang/Class;
     123: goto          138
     126: aload_0
     127: ldc           #17                 // class java/lang/Object
     129: putfield      #15                 // Field keyType:Ljava/lang/Class;
     132: aload_0
     133: ldc           #17                 // class java/lang/Object
     135: putfield      #16                 // Field valueType:Ljava/lang/Class;
     138: return

  protected void getValue(java.lang.Object, net.openhft.chronicle.bytes.BytesOut) throws java.lang.IllegalStateException, java.nio.BufferOverflowException, java.lang.IllegalArgumentException, java.nio.BufferUnderflowException, java.lang.ArithmeticException;
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: getfield      #18                 // Field field:Ljava/lang/reflect/Field;
       6: aload_1
       7: invokevirtual #19                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #4                  // class java/util/Map
      13: astore_3
      14: goto          29
      17: astore        4
      19: new           #21                 // class java/lang/AssertionError
      22: dup
      23: aload         4
      25: invokespecial #22                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      28: athrow
      29: aload_3
      30: ifnonnull     44
      33: aload_2
      34: ldc2_w        #23                 // long -1l
      37: invokeinterface #25,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesOut.writeStopBit:(J)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      42: pop
      43: return
      44: aload_2
      45: aload_3
      46: invokeinterface #26,  1           // InterfaceMethod java/util/Map.size:()I
      51: i2l
      52: invokeinterface #25,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesOut.writeStopBit:(J)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      57: pop
      58: aload_3
      59: invokeinterface #27,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      64: invokeinterface #28,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      69: astore        4
      71: aload         4
      73: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      78: ifeq          130
      81: aload         4
      83: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      88: checkcast     #31                 // class java/util/Map$Entry
      91: astore        5
      93: aload_2
      94: aload_0
      95: getfield      #15                 // Field keyType:Ljava/lang/Class;
      98: aload         5
     100: invokeinterface #32,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     105: invokeinterface #33,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesOut.writeObject:(Ljava/lang/Class;Ljava/lang/Object;)V
     110: aload_2
     111: aload_0
     112: getfield      #16                 // Field valueType:Ljava/lang/Class;
     115: aload         5
     117: invokeinterface #34,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     122: invokeinterface #33,  3           // InterfaceMethod net/openhft/chronicle/bytes/BytesOut.writeObject:(Ljava/lang/Class;Ljava/lang/Object;)V
     127: goto          71
     130: return
    Exception table:
       from    to  target type
           2    14    17   Class java/lang/IllegalAccessException

  protected void setValue(java.lang.Object, net.openhft.chronicle.bytes.BytesIn) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.nio.BufferUnderflowException, java.nio.BufferOverflowException, java.lang.ArithmeticException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field field:Ljava/lang/reflect/Field;
       4: aload_1
       5: invokevirtual #19                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #4                  // class java/util/Map
      11: astore_3
      12: aload_2
      13: invokeinterface #35,  1           // InterfaceMethod net/openhft/chronicle/bytes/BytesIn.readStopBit:()J
      18: lstore        4
      20: lload         4
      22: lconst_0
      23: lcmp
      24: ifge          41
      27: aload_3
      28: ifnull        40
      31: aload_0
      32: getfield      #18                 // Field field:Ljava/lang/reflect/Field;
      35: aload_1
      36: aconst_null
      37: invokevirtual #36                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      40: return
      41: aload_3
      42: ifnonnull     65
      45: aload_0
      46: getfield      #18                 // Field field:Ljava/lang/reflect/Field;
      49: aload_1
      50: new           #37                 // class java/util/LinkedHashMap
      53: dup
      54: invokespecial #38                 // Method java/util/LinkedHashMap."<init>":()V
      57: dup
      58: astore_3
      59: invokevirtual #36                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      62: goto          71
      65: aload_3
      66: invokeinterface #39,  1           // InterfaceMethod java/util/Map.clear:()V
      71: iconst_0
      72: istore        6
      74: iload         6
      76: i2l
      77: lload         4
      79: lcmp
      80: ifge          116
      83: aload_3
      84: aload_2
      85: aload_0
      86: getfield      #15                 // Field keyType:Ljava/lang/Class;
      89: invokeinterface #40,  2           // InterfaceMethod net/openhft/chronicle/bytes/BytesIn.readObject:(Ljava/lang/Class;)Ljava/lang/Object;
      94: aload_2
      95: aload_0
      96: getfield      #16                 // Field valueType:Ljava/lang/Class;
      99: invokeinterface #40,  2           // InterfaceMethod net/openhft/chronicle/bytes/BytesIn.readObject:(Ljava/lang/Class;)Ljava/lang/Object;
     104: invokeinterface #41,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     109: pop
     110: iinc          6, 1
     113: goto          74
     116: goto          129
     119: astore_3
     120: new           #21                 // class java/lang/AssertionError
     123: dup
     124: aload_3
     125: invokespecial #22                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     128: athrow
     129: return
    Exception table:
       from    to  target type
           0    40   119   Class java/lang/IllegalAccessException
          41   116   119   Class java/lang/IllegalAccessException
}
