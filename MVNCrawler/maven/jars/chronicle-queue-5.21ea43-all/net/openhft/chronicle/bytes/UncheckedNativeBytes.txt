Compiled from "UncheckedNativeBytes.java"
public class net.openhft.chronicle.bytes.UncheckedNativeBytes<Underlying> extends net.openhft.chronicle.core.io.AbstractReferenceCounted implements net.openhft.chronicle.bytes.Bytes<Underlying> {
  protected final long capacity;

  private final net.openhft.chronicle.bytes.Bytes<Underlying> underlyingBytes;

  protected net.openhft.chronicle.bytes.NativeBytesStore<Underlying> bytesStore;

  protected long readPosition;

  protected long writePosition;

  protected long writeLimit;

  private int lastDecimalPlaces;

  static final boolean $assertionsDisabled;

  public net.openhft.chronicle.bytes.UncheckedNativeBytes(net.openhft.chronicle.bytes.Bytes<Underlying>) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method net/openhft/chronicle/core/io/AbstractReferenceCounted."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field lastDecimalPlaces:I
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field underlyingBytes:Lnet/openhft/chronicle/bytes/Bytes;
      14: aload_1
      15: aload_0
      16: invokeinterface #4,  2            // InterfaceMethod net/openhft/chronicle/bytes/Bytes.reserve:(Lnet/openhft/chronicle/core/io/ReferenceOwner;)V
      21: aload_0
      22: aload_1
      23: invokeinterface #5,  1            // InterfaceMethod net/openhft/chronicle/bytes/Bytes.bytesStore:()Lnet/openhft/chronicle/bytes/BytesStore;
      28: checkcast     #6                  // class net/openhft/chronicle/bytes/NativeBytesStore
      31: putfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      34: getstatic     #8                  // Field $assertionsDisabled:Z
      37: ifne          60
      40: aload_0
      41: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      44: invokevirtual #9                  // Method net/openhft/chronicle/bytes/NativeBytesStore.start:()J
      47: lconst_0
      48: lcmp
      49: ifeq          60
      52: new           #10                 // class java/lang/AssertionError
      55: dup
      56: invokespecial #11                 // Method java/lang/AssertionError."<init>":()V
      59: athrow
      60: aload_0
      61: aload_1
      62: invokeinterface #12,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writePosition:()J
      67: putfield      #13                 // Field writePosition:J
      70: aload_0
      71: aload_1
      72: invokeinterface #14,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writeLimit:()J
      77: putfield      #15                 // Field writeLimit:J
      80: aload_0
      81: aload_1
      82: invokeinterface #16,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readPosition:()J
      87: putfield      #17                 // Field readPosition:J
      90: aload_0
      91: aload_0
      92: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      95: invokevirtual #18                 // Method net/openhft/chronicle/bytes/NativeBytesStore.capacity:()J
      98: putfield      #19                 // Field capacity:J
     101: return

  public void ensureCapacity(long) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException;
    Code:
       0: lload_1
       1: aload_0
       2: invokevirtual #20                 // Method realCapacity:()J
       5: lcmp
       6: ifle          35
       9: aload_0
      10: getfield      #3                  // Field underlyingBytes:Lnet/openhft/chronicle/bytes/Bytes;
      13: lload_1
      14: invokeinterface #21,  3           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.ensureCapacity:(J)V
      19: aload_0
      20: aload_0
      21: getfield      #3                  // Field underlyingBytes:Lnet/openhft/chronicle/bytes/Bytes;
      24: invokeinterface #5,  1            // InterfaceMethod net/openhft/chronicle/bytes/Bytes.bytesStore:()Lnet/openhft/chronicle/bytes/BytesStore;
      29: checkcast     #6                  // class net/openhft/chronicle/bytes/NativeBytesStore
      32: putfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      35: return

  public boolean unchecked();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isDirectMemory();
    Code:
       0: iconst_1
       1: ireturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> unchecked(boolean);
    Code:
       0: aload_0
       1: areturn

  public void move(long, long, long) throws java.lang.IllegalStateException, java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
       4: lload_1
       5: aload_0
       6: invokevirtual #22                 // Method start:()J
       9: lsub
      10: lload_3
      11: aload_0
      12: invokevirtual #22                 // Method start:()J
      15: lsub
      16: lload         5
      18: invokevirtual #23                 // Method net/openhft/chronicle/bytes/NativeBytesStore.move:(JJJ)V
      21: return

  public net.openhft.chronicle.bytes.Bytes<Underlying> compact();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method start:()J
       4: lstore_1
       5: aload_0
       6: invokevirtual #24                 // Method readRemaining:()J
       9: lstore_3
      10: lload_3
      11: lconst_0
      12: lcmp
      13: ifle          53
      16: lload_1
      17: aload_0
      18: getfield      #17                 // Field readPosition:J
      21: lcmp
      22: ifge          53
      25: aload_0
      26: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      29: aload_0
      30: getfield      #17                 // Field readPosition:J
      33: lload_1
      34: lload_3
      35: invokevirtual #23                 // Method net/openhft/chronicle/bytes/NativeBytesStore.move:(JJJ)V
      38: aload_0
      39: lload_1
      40: putfield      #17                 // Field readPosition:J
      43: aload_0
      44: aload_0
      45: getfield      #17                 // Field readPosition:J
      48: lload_3
      49: ladd
      50: putfield      #13                 // Field writePosition:J
      53: aload_0
      54: areturn
      55: astore_1
      56: new           #10                 // class java/lang/AssertionError
      59: dup
      60: aload_1
      61: invokespecial #26                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      64: athrow
      65: astore_1
      66: aload_0
      67: areturn
    Exception table:
       from    to  target type
           0    54    55   Class java/nio/BufferUnderflowException
           0    54    65   Class java/lang/IllegalStateException

  public net.openhft.chronicle.bytes.Bytes<Underlying> readPosition(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #17                 // Field readPosition:J
       5: aload_0
       6: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> readLimit(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #13                 // Field writePosition:J
       5: aload_0
       6: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writePosition(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #13                 // Field writePosition:J
       5: aload_0
       6: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> readSkip(long);
    Code:
       0: aload_0
       1: dup
       2: getfield      #17                 // Field readPosition:J
       5: lload_1
       6: ladd
       7: putfield      #17                 // Field readPosition:J
      10: aload_0
      11: areturn

  public byte readVolatileByte(long) throws java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
       4: lload_1
       5: invokevirtual #28                 // Method net/openhft/chronicle/bytes/NativeBytesStore.readVolatileByte:(J)B
       8: ireturn

  public short readVolatileShort(long) throws java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
       4: lload_1
       5: invokevirtual #29                 // Method net/openhft/chronicle/bytes/NativeBytesStore.readVolatileShort:(J)S
       8: ireturn

  public int readVolatileInt(long) throws java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
       4: lload_1
       5: invokevirtual #30                 // Method net/openhft/chronicle/bytes/NativeBytesStore.readVolatileInt:(J)I
       8: ireturn

  public long readVolatileLong(long) throws java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
       4: lload_1
       5: invokevirtual #31                 // Method net/openhft/chronicle/bytes/NativeBytesStore.readVolatileLong:(J)J
       8: lreturn

  public void uncheckedReadSkipOne();
    Code:
       0: aload_0
       1: dup
       2: getfield      #17                 // Field readPosition:J
       5: lconst_1
       6: ladd
       7: putfield      #17                 // Field readPosition:J
      10: return

  public void uncheckedReadSkipBackOne();
    Code:
       0: aload_0
       1: dup
       2: getfield      #17                 // Field readPosition:J
       5: lconst_1
       6: lsub
       7: putfield      #17                 // Field readPosition:J
      10: return

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeSkip(long);
    Code:
       0: aload_0
       1: dup
       2: getfield      #13                 // Field writePosition:J
       5: lload_1
       6: ladd
       7: putfield      #13                 // Field writePosition:J
      10: aload_0
      11: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeLimit(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #15                 // Field writeLimit:J
       5: aload_0
       6: areturn

  public net.openhft.chronicle.bytes.BytesStore<net.openhft.chronicle.bytes.Bytes<Underlying>, Underlying> copy();
    Code:
       0: new           #32                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #33                 // String todo
       6: invokespecial #34                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean isElastic();
    Code:
       0: iconst_0
       1: ireturn

  protected long readOffsetPositionMoved(long);
    Code:
       0: aload_0
       1: getfield      #17                 // Field readPosition:J
       4: lstore_3
       5: aload_0
       6: dup
       7: getfield      #17                 // Field readPosition:J
      10: lload_1
      11: ladd
      12: putfield      #17                 // Field readPosition:J
      15: lload_3
      16: lreturn

  protected long writeOffsetPositionMoved(long);
    Code:
       0: aload_0
       1: lload_1
       2: lload_1
       3: invokevirtual #35                 // Method writeOffsetPositionMoved:(JJ)J
       6: lreturn

  protected long writeOffsetPositionMoved(long, long);
    Code:
       0: aload_0
       1: getfield      #13                 // Field writePosition:J
       4: lstore        5
       6: lload         5
       8: lload_1
       9: ladd
      10: lstore        7
      12: getstatic     #8                  // Field $assertionsDisabled:Z
      15: ifne          39
      18: lload         7
      20: aload_0
      21: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      24: invokevirtual #36                 // Method net/openhft/chronicle/bytes/NativeBytesStore.safeLimit:()J
      27: lcmp
      28: ifle          39
      31: new           #10                 // class java/lang/AssertionError
      34: dup
      35: invokespecial #11                 // Method java/lang/AssertionError."<init>":()V
      38: athrow
      39: aload_0
      40: dup
      41: getfield      #13                 // Field writePosition:J
      44: lload_3
      45: ladd
      46: putfield      #13                 // Field writePosition:J
      49: lload         5
      51: lreturn

  protected long prewriteOffsetPositionMoved(long);
    Code:
       0: aload_0
       1: dup
       2: getfield      #17                 // Field readPosition:J
       5: lload_1
       6: lsub
       7: dup2_x1
       8: putfield      #17                 // Field readPosition:J
      11: lreturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> write(net.openhft.chronicle.bytes.RandomDataInput, long, long) throws java.nio.BufferUnderflowException, java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: lload         4
       2: ldc2_w        #37                 // long 8l
       5: lcmp
       6: ifne          24
       9: aload_0
      10: aload_1
      11: lload_2
      12: invokeinterface #39,  3           // InterfaceMethod net/openhft/chronicle/bytes/RandomDataInput.readLong:(J)J
      17: invokevirtual #40                 // Method writeLong:(J)Lnet/openhft/chronicle/bytes/Bytes;
      20: pop
      21: goto          62
      24: lload         4
      26: ldc2_w        #41                 // long 16l
      29: lcmp
      30: iflt          54
      33: aload_1
      34: invokeinterface #43,  1           // InterfaceMethod net/openhft/chronicle/bytes/RandomDataInput.isDirectMemory:()Z
      39: ifeq          54
      42: aload_0
      43: aload_1
      44: lload_2
      45: lload         4
      47: invokevirtual #44                 // Method rawCopy:(Lnet/openhft/chronicle/bytes/RandomDataInput;JJ)J
      50: pop2
      51: goto          62
      54: aload_1
      55: lload_2
      56: lload         4
      58: aload_0
      59: invokestatic  #45                 // Method net/openhft/chronicle/bytes/BytesInternal.writeFully:(Lnet/openhft/chronicle/bytes/RandomDataInput;JJLnet/openhft/chronicle/bytes/StreamingDataOutput;)V
      62: aload_0
      63: areturn

  public long rawCopy(net.openhft.chronicle.bytes.RandomDataInput, long, long) throws java.nio.BufferOverflowException, java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method writeRemaining:()J
       4: aload_1
       5: invokeinterface #47,  1           // InterfaceMethod net/openhft/chronicle/bytes/RandomDataInput.capacity:()J
      10: lload_2
      11: lsub
      12: lload         4
      14: invokestatic  #48                 // Method java/lang/Math.min:(JJ)J
      17: invokestatic  #48                 // Method java/lang/Math.min:(JJ)J
      20: lstore        6
      22: lload         6
      24: lconst_0
      25: lcmp
      26: ifle          71
      29: aload_0
      30: aload_0
      31: invokevirtual #49                 // Method writePosition:()J
      34: lload         6
      36: invokevirtual #50                 // Method writeCheckOffset:(JJ)V
      39: aload_0
      40: invokevirtual #51                 // Method throwExceptionIfReleased:()V
      43: invokestatic  #52                 // Method net/openhft/chronicle/core/OS.memory:()Lnet/openhft/chronicle/core/Memory;
      46: aload_1
      47: lload_2
      48: invokeinterface #53,  3           // InterfaceMethod net/openhft/chronicle/bytes/RandomDataInput.addressForRead:(J)J
      53: aload_0
      54: invokevirtual #54                 // Method addressForWritePosition:()J
      57: lload         6
      59: invokeinterface #55,  7           // InterfaceMethod net/openhft/chronicle/core/Memory.copyMemory:(JJJ)V
      64: aload_0
      65: lload         6
      67: invokevirtual #56                 // Method writeSkip:(J)Lnet/openhft/chronicle/bytes/Bytes;
      70: pop
      71: lload         6
      73: lreturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> clear();
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: invokevirtual #22                 // Method start:()J
       6: dup2_x1
       7: putfield      #13                 // Field writePosition:J
      10: putfield      #17                 // Field readPosition:J
      13: aload_0
      14: aload_0
      15: invokevirtual #57                 // Method capacity:()J
      18: putfield      #15                 // Field writeLimit:J
      21: aload_0
      22: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> clearAndPad(long) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method start:()J
       4: lload_1
       5: ladd
       6: aload_0
       7: invokevirtual #57                 // Method capacity:()J
      10: lcmp
      11: ifle          22
      14: new           #58                 // class java/nio/BufferOverflowException
      17: dup
      18: invokespecial #59                 // Method java/nio/BufferOverflowException."<init>":()V
      21: athrow
      22: aload_0
      23: aload_0
      24: aload_0
      25: invokevirtual #22                 // Method start:()J
      28: lload_1
      29: ladd
      30: dup2_x1
      31: putfield      #13                 // Field writePosition:J
      34: putfield      #17                 // Field readPosition:J
      37: aload_0
      38: aload_0
      39: invokevirtual #57                 // Method capacity:()J
      42: putfield      #15                 // Field writeLimit:J
      45: aload_0
      46: areturn

  public long readLimit();
    Code:
       0: aload_0
       1: getfield      #13                 // Field writePosition:J
       4: lreturn

  public long writeLimit();
    Code:
       0: aload_0
       1: getfield      #15                 // Field writeLimit:J
       4: lreturn

  public long realCapacity();
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
       4: invokevirtual #60                 // Method net/openhft/chronicle/bytes/NativeBytesStore.realCapacity:()J
       7: lreturn

  public long realWriteRemaining();
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method writeRemaining:()J
       4: lreturn

  public long capacity();
    Code:
       0: aload_0
       1: getfield      #19                 // Field capacity:J
       4: lreturn

  public Underlying underlyingObject();
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
       4: invokevirtual #61                 // Method net/openhft/chronicle/bytes/NativeBytesStore.underlyingObject:()Ljava/lang/Object;
       7: areturn

  public long readPosition();
    Code:
       0: aload_0
       1: getfield      #17                 // Field readPosition:J
       4: lreturn

  public long writePosition();
    Code:
       0: aload_0
       1: getfield      #13                 // Field writePosition:J
       4: lreturn

  public boolean compareAndSwapInt(long, int, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #62                 // long 4l
       5: invokevirtual #50                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_1
      13: iload_3
      14: iload         4
      16: invokevirtual #64                 // Method net/openhft/chronicle/bytes/NativeBytesStore.compareAndSwapInt:(JII)Z
      19: ireturn

  public void testAndSetInt(long, int, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #62                 // long 4l
       5: invokevirtual #50                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_1
      13: iload_3
      14: iload         4
      16: invokevirtual #65                 // Method net/openhft/chronicle/bytes/NativeBytesStore.testAndSetInt:(JII)V
      19: return

  public boolean compareAndSwapLong(long, long, long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #37                 // long 8l
       5: invokevirtual #50                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_1
      13: lload_3
      14: lload         5
      16: invokevirtual #66                 // Method net/openhft/chronicle/bytes/NativeBytesStore.compareAndSwapLong:(JJJ)Z
      19: ireturn

  protected void performRelease() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field underlyingBytes:Lnet/openhft/chronicle/bytes/Bytes;
       4: aload_0
       5: invokeinterface #67,  2           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.release:(Lnet/openhft/chronicle/core/io/ReferenceOwner;)V
      10: invokestatic  #68                 // Method net/openhft/chronicle/core/io/BackgroundResourceReleaser.releasePendingResources:()V
      13: return

  public int readUnsignedByte();
    Code:
       0: aload_0
       1: lconst_1
       2: invokevirtual #69                 // Method readOffsetPositionMoved:(J)J
       5: lstore_1
       6: aload_0
       7: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      10: getfield      #70                 // Field net/openhft/chronicle/bytes/NativeBytesStore.memory:Lnet/openhft/chronicle/core/Memory;
      13: aload_0
      14: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      17: getfield      #71                 // Field net/openhft/chronicle/bytes/NativeBytesStore.address:J
      20: lload_1
      21: ladd
      22: invokeinterface #72,  3           // InterfaceMethod net/openhft/chronicle/core/Memory.readByte:(J)B
      27: sipush        255
      30: iand
      31: ireturn

  public int uncheckedReadUnsignedByte();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method readUnsignedByte:()I
       4: ireturn

  public byte readByte();
    Code:
       0: aload_0
       1: lconst_1
       2: invokevirtual #69                 // Method readOffsetPositionMoved:(J)J
       5: lstore_1
       6: aload_0
       7: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      10: getfield      #70                 // Field net/openhft/chronicle/bytes/NativeBytesStore.memory:Lnet/openhft/chronicle/core/Memory;
      13: aload_0
      14: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      17: getfield      #71                 // Field net/openhft/chronicle/bytes/NativeBytesStore.address:J
      20: lload_1
      21: ladd
      22: invokeinterface #72,  3           // InterfaceMethod net/openhft/chronicle/core/Memory.readByte:(J)B
      27: ireturn

  public int peekUnsignedByte();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method readRemaining:()J
       4: lconst_0
       5: lcmp
       6: ifle          23
       9: aload_0
      10: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      13: aload_0
      14: getfield      #17                 // Field readPosition:J
      17: invokevirtual #74                 // Method net/openhft/chronicle/bytes/NativeBytesStore.readUnsignedByte:(J)I
      20: goto          24
      23: iconst_m1
      24: ireturn
      25: astore_1
      26: iconst_m1
      27: ireturn
    Exception table:
       from    to  target type
           0    24    25   Class java/nio/BufferUnderflowException

  public short readShort();
    Code:
       0: aload_0
       1: ldc2_w        #75                 // long 2l
       4: invokevirtual #69                 // Method readOffsetPositionMoved:(J)J
       7: lstore_1
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_1
      13: invokevirtual #77                 // Method net/openhft/chronicle/bytes/NativeBytesStore.readShort:(J)S
      16: ireturn

  public int readInt();
    Code:
       0: aload_0
       1: ldc2_w        #62                 // long 4l
       4: invokevirtual #69                 // Method readOffsetPositionMoved:(J)J
       7: lstore_1
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_1
      13: invokevirtual #78                 // Method net/openhft/chronicle/bytes/NativeBytesStore.readInt:(J)I
      16: ireturn

  public long readLong();
    Code:
       0: aload_0
       1: ldc2_w        #37                 // long 8l
       4: invokevirtual #69                 // Method readOffsetPositionMoved:(J)J
       7: lstore_1
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_1
      13: invokevirtual #79                 // Method net/openhft/chronicle/bytes/NativeBytesStore.readLong:(J)J
      16: lreturn

  public float readFloat();
    Code:
       0: aload_0
       1: ldc2_w        #62                 // long 4l
       4: invokevirtual #69                 // Method readOffsetPositionMoved:(J)J
       7: lstore_1
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_1
      13: invokevirtual #80                 // Method net/openhft/chronicle/bytes/NativeBytesStore.readFloat:(J)F
      16: freturn

  public double readDouble();
    Code:
       0: aload_0
       1: ldc2_w        #37                 // long 8l
       4: invokevirtual #69                 // Method readOffsetPositionMoved:(J)J
       7: lstore_1
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_1
      13: invokevirtual #81                 // Method net/openhft/chronicle/bytes/NativeBytesStore.readDouble:(J)D
      16: dreturn

  public int readVolatileInt();
    Code:
       0: aload_0
       1: ldc2_w        #62                 // long 4l
       4: invokevirtual #69                 // Method readOffsetPositionMoved:(J)J
       7: lstore_1
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_1
      13: invokevirtual #30                 // Method net/openhft/chronicle/bytes/NativeBytesStore.readVolatileInt:(J)I
      16: ireturn

  public long readVolatileLong();
    Code:
       0: aload_0
       1: ldc2_w        #37                 // long 8l
       4: invokevirtual #69                 // Method readOffsetPositionMoved:(J)J
       7: lstore_1
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_1
      13: invokevirtual #31                 // Method net/openhft/chronicle/bytes/NativeBytesStore.readVolatileLong:(J)J
      16: lreturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeByte(long, byte) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: lconst_1
       3: invokevirtual #50                 // Method writeCheckOffset:(JJ)V
       6: aload_0
       7: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      10: lload_1
      11: iload_3
      12: invokevirtual #82                 // Method net/openhft/chronicle/bytes/NativeBytesStore.writeByte:(JB)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      15: pop
      16: aload_0
      17: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeShort(long, short) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #75                 // long 2l
       5: invokevirtual #50                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_1
      13: iload_3
      14: invokevirtual #83                 // Method net/openhft/chronicle/bytes/NativeBytesStore.writeShort:(JS)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      17: pop
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeInt(long, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #62                 // long 4l
       5: invokevirtual #50                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_1
      13: iload_3
      14: invokevirtual #84                 // Method net/openhft/chronicle/bytes/NativeBytesStore.writeInt:(JI)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      17: pop
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeOrderedInt(long, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #62                 // long 4l
       5: invokevirtual #50                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_1
      13: iload_3
      14: invokevirtual #85                 // Method net/openhft/chronicle/bytes/NativeBytesStore.writeOrderedInt:(JI)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      17: pop
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeLong(long, long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #37                 // long 8l
       5: invokevirtual #50                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_1
      13: lload_3
      14: invokevirtual #86                 // Method net/openhft/chronicle/bytes/NativeBytesStore.writeLong:(JJ)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      17: pop
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeOrderedLong(long, long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #37                 // long 8l
       5: invokevirtual #50                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_1
      13: lload_3
      14: invokevirtual #87                 // Method net/openhft/chronicle/bytes/NativeBytesStore.writeOrderedLong:(JJ)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      17: pop
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeFloat(long, float) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #62                 // long 4l
       5: invokevirtual #50                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_1
      13: fload_3
      14: invokevirtual #88                 // Method net/openhft/chronicle/bytes/NativeBytesStore.writeFloat:(JF)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      17: pop
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeDouble(long, double) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #37                 // long 8l
       5: invokevirtual #50                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_1
      13: dload_3
      14: invokevirtual #89                 // Method net/openhft/chronicle/bytes/NativeBytesStore.writeDouble:(JD)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      17: pop
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeVolatileByte(long, byte) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: lconst_1
       3: invokevirtual #50                 // Method writeCheckOffset:(JJ)V
       6: aload_0
       7: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      10: lload_1
      11: iload_3
      12: invokevirtual #90                 // Method net/openhft/chronicle/bytes/NativeBytesStore.writeVolatileByte:(JB)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      15: pop
      16: aload_0
      17: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeVolatileShort(long, short) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #75                 // long 2l
       5: invokevirtual #50                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_1
      13: iload_3
      14: invokevirtual #91                 // Method net/openhft/chronicle/bytes/NativeBytesStore.writeVolatileShort:(JS)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      17: pop
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeVolatileInt(long, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #62                 // long 4l
       5: invokevirtual #50                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_1
      13: iload_3
      14: invokevirtual #92                 // Method net/openhft/chronicle/bytes/NativeBytesStore.writeVolatileInt:(JI)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      17: pop
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeVolatileLong(long, long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #37                 // long 8l
       5: invokevirtual #50                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_1
      13: lload_3
      14: invokevirtual #93                 // Method net/openhft/chronicle/bytes/NativeBytesStore.writeVolatileLong:(JJ)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      17: pop
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> write(long, byte[], int, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload         5
       4: i2l
       5: invokevirtual #50                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_1
      13: aload_3
      14: iload         4
      16: iload         5
      18: invokevirtual #94                 // Method net/openhft/chronicle/bytes/NativeBytesStore.write:(J[BII)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      21: pop
      22: aload_0
      23: areturn

  public void write(long, java.nio.ByteBuffer, int, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload         5
       4: i2l
       5: invokevirtual #50                 // Method writeCheckOffset:(JJ)V
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_1
      13: aload_3
      14: iload         4
      16: iload         5
      18: invokevirtual #95                 // Method net/openhft/chronicle/bytes/NativeBytesStore.write:(JLjava/nio/ByteBuffer;II)V
      21: return

  public net.openhft.chronicle.bytes.Bytes<Underlying> write(long, net.openhft.chronicle.bytes.RandomDataInput, long, long) throws java.nio.BufferUnderflowException, java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: lload         6
       4: invokevirtual #50                 // Method writeCheckOffset:(JJ)V
       7: aload_0
       8: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      11: lload_1
      12: aload_3
      13: lload         4
      15: lload         6
      17: invokevirtual #96                 // Method net/openhft/chronicle/bytes/NativeBytesStore.write:(JLnet/openhft/chronicle/bytes/RandomDataInput;JJ)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      20: pop
      21: aload_0
      22: areturn

  void writeCheckOffset(long, long) throws java.nio.BufferOverflowException;
    Code:
       0: return

  public byte readByte(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
       4: lload_1
       5: invokevirtual #97                 // Method net/openhft/chronicle/bytes/NativeBytesStore.readByte:(J)B
       8: ireturn

  public int readUnsignedByte(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
       4: getfield      #70                 // Field net/openhft/chronicle/bytes/NativeBytesStore.memory:Lnet/openhft/chronicle/core/Memory;
       7: aload_0
       8: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      11: getfield      #71                 // Field net/openhft/chronicle/bytes/NativeBytesStore.address:J
      14: lload_1
      15: ladd
      16: invokeinterface #72,  3           // InterfaceMethod net/openhft/chronicle/core/Memory.readByte:(J)B
      21: sipush        255
      24: iand
      25: ireturn

  public int peekUnsignedByte(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #13                 // Field writePosition:J
       5: lcmp
       6: iflt          13
       9: iconst_m1
      10: goto          18
      13: aload_0
      14: lload_1
      15: invokevirtual #98                 // Method readByte:(J)B
      18: ireturn

  public short readShort(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
       4: lload_1
       5: invokevirtual #77                 // Method net/openhft/chronicle/bytes/NativeBytesStore.readShort:(J)S
       8: ireturn

  public int readInt(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
       4: lload_1
       5: invokevirtual #78                 // Method net/openhft/chronicle/bytes/NativeBytesStore.readInt:(J)I
       8: ireturn

  public long readLong(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
       4: lload_1
       5: invokevirtual #79                 // Method net/openhft/chronicle/bytes/NativeBytesStore.readLong:(J)J
       8: lreturn

  public float readFloat(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
       4: lload_1
       5: invokevirtual #80                 // Method net/openhft/chronicle/bytes/NativeBytesStore.readFloat:(J)F
       8: freturn

  public double readDouble(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
       4: lload_1
       5: invokevirtual #81                 // Method net/openhft/chronicle/bytes/NativeBytesStore.readDouble:(J)D
       8: dreturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeByte(byte);
    Code:
       0: aload_0
       1: lconst_1
       2: invokevirtual #99                 // Method writeOffsetPositionMoved:(J)J
       5: lstore_2
       6: aload_0
       7: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      10: getfield      #70                 // Field net/openhft/chronicle/bytes/NativeBytesStore.memory:Lnet/openhft/chronicle/core/Memory;
      13: aload_0
      14: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      17: getfield      #71                 // Field net/openhft/chronicle/bytes/NativeBytesStore.address:J
      20: lload_2
      21: ladd
      22: iload_1
      23: invokeinterface #100,  4          // InterfaceMethod net/openhft/chronicle/core/Memory.writeByte:(JB)V
      28: aload_0
      29: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> prewriteByte(byte);
    Code:
       0: aload_0
       1: lconst_1
       2: invokevirtual #101                // Method prewriteOffsetPositionMoved:(J)J
       5: lstore_2
       6: aload_0
       7: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      10: getfield      #70                 // Field net/openhft/chronicle/bytes/NativeBytesStore.memory:Lnet/openhft/chronicle/core/Memory;
      13: aload_0
      14: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      17: getfield      #71                 // Field net/openhft/chronicle/bytes/NativeBytesStore.address:J
      20: lload_2
      21: ladd
      22: iload_1
      23: invokeinterface #100,  4          // InterfaceMethod net/openhft/chronicle/core/Memory.writeByte:(JB)V
      28: aload_0
      29: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeShort(short) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #75                 // long 2l
       4: invokevirtual #99                 // Method writeOffsetPositionMoved:(J)J
       7: lstore_2
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_2
      13: iload_1
      14: invokevirtual #83                 // Method net/openhft/chronicle/bytes/NativeBytesStore.writeShort:(JS)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      17: pop
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> prewriteShort(short) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #75                 // long 2l
       4: invokevirtual #101                // Method prewriteOffsetPositionMoved:(J)J
       7: lstore_2
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_2
      13: iload_1
      14: invokevirtual #83                 // Method net/openhft/chronicle/bytes/NativeBytesStore.writeShort:(JS)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      17: pop
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeInt(int) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #62                 // long 4l
       4: invokevirtual #99                 // Method writeOffsetPositionMoved:(J)J
       7: lstore_2
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_2
      13: iload_1
      14: invokevirtual #84                 // Method net/openhft/chronicle/bytes/NativeBytesStore.writeInt:(JI)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      17: pop
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeIntAdv(int, int) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #62                 // long 4l
       4: iload_2
       5: i2l
       6: invokevirtual #35                 // Method writeOffsetPositionMoved:(JJ)J
       9: lstore_3
      10: aload_0
      11: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      14: lload_3
      15: iload_1
      16: invokevirtual #84                 // Method net/openhft/chronicle/bytes/NativeBytesStore.writeInt:(JI)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      19: pop
      20: aload_0
      21: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> prewriteInt(int) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #62                 // long 4l
       4: invokevirtual #101                // Method prewriteOffsetPositionMoved:(J)J
       7: lstore_2
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_2
      13: iload_1
      14: invokevirtual #84                 // Method net/openhft/chronicle/bytes/NativeBytesStore.writeInt:(JI)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      17: pop
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeLong(long) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #37                 // long 8l
       4: invokevirtual #99                 // Method writeOffsetPositionMoved:(J)J
       7: lstore_3
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_3
      13: lload_1
      14: invokevirtual #86                 // Method net/openhft/chronicle/bytes/NativeBytesStore.writeLong:(JJ)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      17: pop
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeLongAdv(long, int) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #37                 // long 8l
       4: iload_3
       5: i2l
       6: invokevirtual #35                 // Method writeOffsetPositionMoved:(JJ)J
       9: lstore        4
      11: aload_0
      12: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      15: lload         4
      17: lload_1
      18: invokevirtual #86                 // Method net/openhft/chronicle/bytes/NativeBytesStore.writeLong:(JJ)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      21: pop
      22: aload_0
      23: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> prewriteLong(long) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #37                 // long 8l
       4: invokevirtual #101                // Method prewriteOffsetPositionMoved:(J)J
       7: lstore_3
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_3
      13: lload_1
      14: invokevirtual #86                 // Method net/openhft/chronicle/bytes/NativeBytesStore.writeLong:(JJ)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      17: pop
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeFloat(float) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #62                 // long 4l
       4: invokevirtual #99                 // Method writeOffsetPositionMoved:(J)J
       7: lstore_2
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_2
      13: fload_1
      14: invokevirtual #88                 // Method net/openhft/chronicle/bytes/NativeBytesStore.writeFloat:(JF)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      17: pop
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeDouble(double) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #37                 // long 8l
       4: invokevirtual #99                 // Method writeOffsetPositionMoved:(J)J
       7: lstore_3
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_3
      13: dload_1
      14: invokevirtual #89                 // Method net/openhft/chronicle/bytes/NativeBytesStore.writeDouble:(JD)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      17: pop
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeDoubleAndInt(double, int) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #102                // long 12l
       4: invokevirtual #99                 // Method writeOffsetPositionMoved:(J)J
       7: lstore        4
       9: aload_0
      10: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      13: lload         4
      15: dload_1
      16: invokevirtual #89                 // Method net/openhft/chronicle/bytes/NativeBytesStore.writeDouble:(JD)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      19: pop
      20: aload_0
      21: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      24: lload         4
      26: ldc2_w        #37                 // long 8l
      29: ladd
      30: iload_3
      31: invokevirtual #84                 // Method net/openhft/chronicle/bytes/NativeBytesStore.writeInt:(JI)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      34: pop
      35: aload_0
      36: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> write(byte[], int, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException, java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: iload_3
       1: iload_2
       2: iadd
       3: aload_1
       4: arraylength
       5: if_icmple     54
       8: new           #104                // class java/lang/ArrayIndexOutOfBoundsException
      11: dup
      12: new           #105                // class java/lang/StringBuilder
      15: dup
      16: invokespecial #106                // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #107                // String bytes.length=
      21: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: arraylength
      26: invokevirtual #109                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: ldc           #110                // String , length=
      31: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: iload_3
      35: invokevirtual #109                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      38: ldc           #111                // String , offset=
      40: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: iload_2
      44: invokevirtual #109                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      47: invokevirtual #112                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokespecial #113                // Method java/lang/ArrayIndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: iload_3
      55: i2l
      56: aload_0
      57: invokevirtual #46                 // Method writeRemaining:()J
      60: lcmp
      61: ifle          72
      64: new           #58                 // class java/nio/BufferOverflowException
      67: dup
      68: invokespecial #59                 // Method java/nio/BufferOverflowException."<init>":()V
      71: athrow
      72: aload_0
      73: iload_3
      74: i2l
      75: invokevirtual #99                 // Method writeOffsetPositionMoved:(J)J
      78: lstore        4
      80: aload_0
      81: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      84: lload         4
      86: aload_1
      87: iload_2
      88: iload_3
      89: invokevirtual #94                 // Method net/openhft/chronicle/bytes/NativeBytesStore.write:(J[BII)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      92: pop
      93: aload_0
      94: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> prewrite(byte[]) throws java.lang.IllegalStateException, java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: aload_1
       2: arraylength
       3: i2l
       4: invokevirtual #101                // Method prewriteOffsetPositionMoved:(J)J
       7: lstore_2
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_2
      13: aload_1
      14: invokevirtual #114                // Method net/openhft/chronicle/bytes/NativeBytesStore.write:(J[B)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      17: pop
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> prewrite(net.openhft.chronicle.bytes.BytesStore) throws java.lang.IllegalStateException, java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #115,  1          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.length:()I
       7: i2l
       8: invokevirtual #101                // Method prewriteOffsetPositionMoved:(J)J
      11: lstore_2
      12: aload_0
      13: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      16: lload_2
      17: aload_1
      18: invokevirtual #116                // Method net/openhft/chronicle/bytes/NativeBytesStore.write:(JLnet/openhft/chronicle/bytes/BytesStore;)Lnet/openhft/chronicle/bytes/RandomDataOutput;
      21: pop
      22: aload_0
      23: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeSome(java.nio.ByteBuffer) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
       4: aload_0
       5: getfield      #13                 // Field writePosition:J
       8: aload_1
       9: aload_1
      10: invokevirtual #117                // Method java/nio/ByteBuffer.position:()I
      13: aload_1
      14: invokevirtual #118                // Method java/nio/ByteBuffer.limit:()I
      17: invokevirtual #95                 // Method net/openhft/chronicle/bytes/NativeBytesStore.write:(JLjava/nio/ByteBuffer;II)V
      20: aload_0
      21: dup
      22: getfield      #13                 // Field writePosition:J
      25: aload_1
      26: invokevirtual #119                // Method java/nio/ByteBuffer.remaining:()I
      29: i2l
      30: ladd
      31: putfield      #13                 // Field writePosition:J
      34: getstatic     #8                  // Field $assertionsDisabled:Z
      37: ifne          60
      40: aload_0
      41: getfield      #13                 // Field writePosition:J
      44: aload_0
      45: invokevirtual #120                // Method writeLimit:()J
      48: lcmp
      49: ifle          60
      52: new           #10                 // class java/lang/AssertionError
      55: dup
      56: invokespecial #11                 // Method java/lang/AssertionError."<init>":()V
      59: athrow
      60: aload_0
      61: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeOrderedInt(int) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #62                 // long 4l
       4: invokevirtual #99                 // Method writeOffsetPositionMoved:(J)J
       7: lstore_2
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_2
      13: iload_1
      14: invokevirtual #85                 // Method net/openhft/chronicle/bytes/NativeBytesStore.writeOrderedInt:(JI)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      17: pop
      18: aload_0
      19: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> writeOrderedLong(long) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc2_w        #37                 // long 8l
       4: invokevirtual #99                 // Method writeOffsetPositionMoved:(J)J
       7: lstore_3
       8: aload_0
       9: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      12: lload_3
      13: lload_1
      14: invokevirtual #87                 // Method net/openhft/chronicle/bytes/NativeBytesStore.writeOrderedLong:(JJ)Lnet/openhft/chronicle/bytes/NativeBytesStore;
      17: pop
      18: aload_0
      19: areturn

  public long addressForRead(long) throws java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
       4: lload_1
       5: invokevirtual #121                // Method net/openhft/chronicle/bytes/NativeBytesStore.addressForRead:(J)J
       8: lreturn

  public long addressForWrite(long) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
       4: lload_1
       5: invokevirtual #122                // Method net/openhft/chronicle/bytes/NativeBytesStore.addressForWrite:(J)J
       8: lreturn

  public long addressForWritePosition() throws java.lang.UnsupportedOperationException, java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
       4: lconst_0
       5: invokevirtual #122                // Method net/openhft/chronicle/bytes/NativeBytesStore.addressForWrite:(J)J
       8: lreturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokestatic  #123                // InterfaceMethod net/openhft/chronicle/bytes/algo/BytesStoreHash.hash32:(Lnet/openhft/chronicle/bytes/BytesStore;)I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #124                // class net/openhft/chronicle/bytes/Bytes
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #124                // class net/openhft/chronicle/bytes/Bytes
      13: astore_2
      14: aload_0
      15: invokevirtual #24                 // Method readRemaining:()J
      18: lstore_3
      19: aload_2
      20: invokeinterface #125,  1          // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readRemaining:()J
      25: lload_3
      26: lcmp
      27: ifne          43
      30: aload_0
      31: aload_2
      32: lload_3
      33: invokevirtual #126                // Method equalsBytes:(Lnet/openhft/chronicle/bytes/Bytes;J)Z
      36: ifeq          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn
      45: astore        5
      47: iconst_0
      48: ireturn
    Exception table:
       from    to  target type
          19    44    45   Class java/lang/IllegalStateException

  public boolean equalsBytes(net.openhft.chronicle.bytes.Bytes, long) throws java.lang.IllegalStateException;
    Code:
       0: lconst_0
       1: lstore        4
       3: lload         4
       5: lload_2
       6: ldc2_w        #127                // long 7l
       9: lsub
      10: lcmp
      11: ifge          57
      14: aload_0
      15: aload_0
      16: invokevirtual #129                // Method readPosition:()J
      19: lload         4
      21: ladd
      22: invokevirtual #130                // Method readLong:(J)J
      25: aload_1
      26: aload_1
      27: invokeinterface #16,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readPosition:()J
      32: lload         4
      34: ladd
      35: invokeinterface #131,  3          // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readLong:(J)J
      40: lcmp
      41: ifeq          46
      44: iconst_0
      45: ireturn
      46: lload         4
      48: ldc2_w        #37                 // long 8l
      51: ladd
      52: lstore        4
      54: goto          3
      57: lload         4
      59: lload_2
      60: lcmp
      61: ifge          104
      64: aload_0
      65: aload_0
      66: invokevirtual #129                // Method readPosition:()J
      69: lload         4
      71: ladd
      72: invokevirtual #98                 // Method readByte:(J)B
      75: aload_1
      76: aload_1
      77: invokeinterface #16,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readPosition:()J
      82: lload         4
      84: ladd
      85: invokeinterface #132,  3          // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readByte:(J)B
      90: if_icmpeq     95
      93: iconst_0
      94: ireturn
      95: lload         4
      97: lconst_1
      98: ladd
      99: lstore        4
     101: goto          57
     104: goto          115
     107: astore        6
     109: aload         6
     111: invokestatic  #133                // Method net/openhft/chronicle/core/Jvm.rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     114: athrow
     115: iconst_1
     116: ireturn
    Exception table:
       from    to  target type
           3    45   107   Class java/nio/BufferUnderflowException
          46    94   107   Class java/nio/BufferUnderflowException
          95   104   107   Class java/nio/BufferUnderflowException

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #134                // Method net/openhft/chronicle/bytes/BytesInternal.toString:(Lnet/openhft/chronicle/bytes/RandomDataInput;)Ljava/lang/String;
       4: areturn

  public void lenient(boolean);
    Code:
       0: new           #32                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #135                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean lenient();
    Code:
       0: iconst_0
       1: ireturn

  public void nativeRead(long, long, long) throws java.lang.IllegalStateException, java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
       4: lload_1
       5: lload_3
       6: lload         5
       8: invokevirtual #136                // Method net/openhft/chronicle/bytes/NativeBytesStore.nativeRead:(JJJ)V
      11: return

  public void nativeWrite(long, long, long) throws java.lang.IllegalStateException, java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
       4: lload_1
       5: lload_3
       6: lload         5
       8: invokevirtual #137                // Method net/openhft/chronicle/bytes/NativeBytesStore.nativeWrite:(JJJ)V
      11: return

  public net.openhft.chronicle.bytes.BytesStore bytesStore();
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
       4: areturn

  public int byteCheckSum() throws net.openhft.chronicle.core.io.IORuntimeException;
    Code:
       0: aload_0
       1: invokevirtual #138                // Method bytesStore:()Lnet/openhft/chronicle/bytes/BytesStore;
       4: checkcast     #6                  // class net/openhft/chronicle/bytes/NativeBytesStore
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #129                // Method readPosition:()J
      13: aload_0
      14: invokevirtual #139                // Method readLimit:()J
      17: invokevirtual #140                // Method net/openhft/chronicle/bytes/NativeBytesStore.byteCheckSum:(JJ)I
      20: ireturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> append8bit(java.lang.CharSequence) throws java.nio.BufferOverflowException, java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_1
       1: instanceof    #141                // class net/openhft/chronicle/bytes/BytesStore
       4: ifeq          19
       7: aload_0
       8: aload_1
       9: checkcast     #141                // class net/openhft/chronicle/bytes/BytesStore
      12: invokevirtual #142                // Method write:(Lnet/openhft/chronicle/bytes/BytesStore;)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      15: checkcast     #143                // class net/openhft/chronicle/bytes/Bytes
      18: areturn
      19: aload_1
      20: invokeinterface #144,  1          // InterfaceMethod java/lang/CharSequence.length:()I
      25: istore_2
      26: aload_0
      27: iload_2
      28: i2l
      29: invokevirtual #99                 // Method writeOffsetPositionMoved:(J)J
      32: lstore_3
      33: aload_0
      34: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      37: lload_3
      38: invokevirtual #122                // Method net/openhft/chronicle/bytes/NativeBytesStore.addressForWrite:(J)J
      41: lstore        5
      43: aload_0
      44: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      47: getfield      #70                 // Field net/openhft/chronicle/bytes/NativeBytesStore.memory:Lnet/openhft/chronicle/core/Memory;
      50: astore        7
      52: getstatic     #8                  // Field $assertionsDisabled:Z
      55: ifne          71
      58: aload         7
      60: ifnonnull     71
      63: new           #10                 // class java/lang/AssertionError
      66: dup
      67: invokespecial #11                 // Method java/lang/AssertionError."<init>":()V
      70: athrow
      71: iconst_0
      72: istore        8
      74: iload         8
      76: iload_2
      77: iconst_1
      78: isub
      79: if_icmpge     144
      82: aload_1
      83: iload         8
      85: invokeinterface #145,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      90: istore        9
      92: aload_1
      93: iload         8
      95: iconst_1
      96: iadd
      97: invokeinterface #145,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     102: istore        10
     104: aload         7
     106: lload         5
     108: iload         8
     110: i2l
     111: ladd
     112: iload         9
     114: i2b
     115: invokeinterface #100,  4          // InterfaceMethod net/openhft/chronicle/core/Memory.writeByte:(JB)V
     120: aload         7
     122: lload         5
     124: iload         8
     126: i2l
     127: ladd
     128: lconst_1
     129: ladd
     130: iload         10
     132: i2b
     133: invokeinterface #100,  4          // InterfaceMethod net/openhft/chronicle/core/Memory.writeByte:(JB)V
     138: iinc          8, 2
     141: goto          74
     144: iload         8
     146: iload_2
     147: if_icmpge     182
     150: aload_1
     151: iload         8
     153: invokeinterface #145,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     158: istore        9
     160: aload         7
     162: lload         5
     164: iload         8
     166: i2l
     167: ladd
     168: iload         9
     170: i2b
     171: invokeinterface #100,  4          // InterfaceMethod net/openhft/chronicle/core/Memory.writeByte:(JB)V
     176: iinc          8, 1
     179: goto          144
     182: aload_0
     183: areturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> appendUtf8(char[], int, int) throws java.nio.BufferOverflowException, java.lang.IllegalArgumentException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #13                 // Field writePosition:J
       5: iload_3
       6: i2l
       7: ldc2_w        #146                // long 3l
      10: lmul
      11: ladd
      12: invokevirtual #148                // Method ensureCapacity:(J)V
      15: aload_0
      16: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      19: astore        4
      21: aload         4
      23: aload_0
      24: invokevirtual #49                 // Method writePosition:()J
      27: aload_1
      28: iload_2
      29: iload_3
      30: invokevirtual #149                // Method net/openhft/chronicle/bytes/NativeBytesStore.appendUtf8:(J[CII)J
      33: lstore        5
      35: aload_0
      36: lload         5
      38: invokevirtual #150                // Method writePosition:(J)Lnet/openhft/chronicle/bytes/Bytes;
      41: pop
      42: aload_0
      43: areturn

  public int lastDecimalPlaces();
    Code:
       0: aload_0
       1: getfield      #2                  // Field lastDecimalPlaces:I
       4: ireturn

  public void lastDecimalPlaces(int);
    Code:
       0: aload_0
       1: iconst_0
       2: iload_1
       3: invokestatic  #151                // Method java/lang/Math.max:(II)I
       6: putfield      #2                  // Field lastDecimalPlaces:I
       9: return

  public net.openhft.chronicle.bytes.Bytes<Underlying> write(net.openhft.chronicle.bytes.RandomDataInput) throws java.lang.IllegalStateException;
    Code:
       0: getstatic     #8                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_1
       7: aload_0
       8: if_acmpne     21
      11: new           #10                 // class java/lang/AssertionError
      14: dup
      15: ldc           #152                // String you should not write to yourself !
      17: invokespecial #26                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      20: athrow
      21: aload_0
      22: aload_1
      23: aload_1
      24: invokeinterface #153,  1          // InterfaceMethod net/openhft/chronicle/bytes/RandomDataInput.readPosition:()J
      29: aload_0
      30: invokevirtual #46                 // Method writeRemaining:()J
      33: aload_1
      34: invokeinterface #154,  1          // InterfaceMethod net/openhft/chronicle/bytes/RandomDataInput.readRemaining:()J
      39: invokestatic  #48                 // Method java/lang/Math.min:(JJ)J
      42: invokevirtual #155                // Method write:(Lnet/openhft/chronicle/bytes/RandomDataInput;JJ)Lnet/openhft/chronicle/bytes/Bytes;
      45: areturn
      46: astore_2
      47: new           #10                 // class java/lang/AssertionError
      50: dup
      51: aload_2
      52: invokespecial #26                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      55: athrow
    Exception table:
       from    to  target type
          21    45    46   Class java/nio/BufferOverflowException
          21    45    46   Class java/nio/BufferUnderflowException

  public long write8bit(long, net.openhft.chronicle.bytes.BytesStore);
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
       4: lload_1
       5: aload_3
       6: invokevirtual #156                // Method net/openhft/chronicle/bytes/NativeBytesStore.write8bit:(JLnet/openhft/chronicle/bytes/BytesStore;)J
       9: lreturn

  public long write8bit(long, java.lang.String, int, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
       4: lload_1
       5: aload_3
       6: iload         4
       8: iload         5
      10: invokevirtual #157                // Method net/openhft/chronicle/bytes/NativeBytesStore.write8bit:(JLjava/lang/String;II)J
      13: lreturn

  public net.openhft.chronicle.bytes.Bytes<Underlying> write8bit(net.openhft.chronicle.bytes.BytesStore) throws java.nio.BufferOverflowException, java.lang.IllegalStateException, java.nio.BufferUnderflowException;
    Code:
       0: aload_1
       1: ifnonnull     15
       4: aload_0
       5: ldc2_w        #158                // long -1l
       8: invokevirtual #160                // Method writeStopBit:(J)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      11: pop
      12: goto          70
      15: aload_1
      16: invokeinterface #161,  1          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readPosition:()J
      21: lstore_2
      22: aload_0
      23: invokevirtual #46                 // Method writeRemaining:()J
      26: aload_1
      27: invokeinterface #162,  1          // InterfaceMethod net/openhft/chronicle/bytes/BytesStore.readLimit:()J
      32: lload_2
      33: lsub
      34: invokestatic  #48                 // Method java/lang/Math.min:(JJ)J
      37: lstore        4
      39: aload_0
      40: lload         4
      42: invokevirtual #160                // Method writeStopBit:(J)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      45: pop
      46: aload_0
      47: aload_1
      48: lload_2
      49: lload         4
      51: invokevirtual #163                // Method write:(Lnet/openhft/chronicle/bytes/BytesStore;JJ)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      54: pop
      55: goto          70
      58: astore        6
      60: new           #10                 // class java/lang/AssertionError
      63: dup
      64: aload         6
      66: invokespecial #26                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      69: athrow
      70: aload_0
      71: areturn
    Exception table:
       from    to  target type
          46    55    58   Class java/lang/IllegalArgumentException

  public net.openhft.chronicle.bytes.Bytes<Underlying> write8bit(java.lang.String, int, int);
    Code:
       0: getstatic     #165                // Field net/openhft/chronicle/core/UnsafeMemory.INSTANCE:Lnet/openhft/chronicle/core/UnsafeMemory;
       3: iload_3
       4: invokevirtual #166                // Method net/openhft/chronicle/core/UnsafeMemory.stopBitLength:(I)I
       7: iload_3
       8: iadd
       9: i2l
      10: lstore        4
      12: aload_0
      13: lload         4
      15: lconst_0
      16: invokevirtual #35                 // Method writeOffsetPositionMoved:(JJ)J
      19: lstore        6
      21: aload_0
      22: getfield      #7                  // Field bytesStore:Lnet/openhft/chronicle/bytes/NativeBytesStore;
      25: lload         6
      27: aload_1
      28: iload_2
      29: iload_3
      30: invokevirtual #157                // Method net/openhft/chronicle/bytes/NativeBytesStore.write8bit:(JLjava/lang/String;II)J
      33: pop2
      34: aload_0
      35: dup
      36: getfield      #13                 // Field writePosition:J
      39: lload         4
      41: ladd
      42: putfield      #13                 // Field writePosition:J
      45: aload_0
      46: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput write(long, net.openhft.chronicle.bytes.RandomDataInput, long, long) throws java.nio.BufferOverflowException, java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: lload         4
       5: lload         6
       7: invokevirtual #167                // Method write:(JLnet/openhft/chronicle/bytes/RandomDataInput;JJ)Lnet/openhft/chronicle/bytes/Bytes;
      10: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput write(long, byte[], int, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: iload         4
       5: iload         5
       7: invokevirtual #168                // Method write:(J[BII)Lnet/openhft/chronicle/bytes/Bytes;
      10: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeVolatileLong(long, long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokevirtual #169                // Method writeVolatileLong:(JJ)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeVolatileInt(long, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #170                // Method writeVolatileInt:(JI)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeVolatileShort(long, short) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #171                // Method writeVolatileShort:(JS)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeVolatileByte(long, byte) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #172                // Method writeVolatileByte:(JB)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeDouble(long, double) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: dload_3
       3: invokevirtual #173                // Method writeDouble:(JD)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeFloat(long, float) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: fload_3
       3: invokevirtual #174                // Method writeFloat:(JF)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeOrderedLong(long, long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokevirtual #175                // Method writeOrderedLong:(JJ)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeLong(long, long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: lload_3
       3: invokevirtual #176                // Method writeLong:(JJ)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeOrderedInt(long, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #177                // Method writeOrderedInt:(JI)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeInt(long, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #178                // Method writeInt:(JI)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeShort(long, short) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #179                // Method writeShort:(JS)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.RandomDataOutput writeByte(long, byte) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #180                // Method writeByte:(JB)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.StreamingDataInput readSkip(long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #181                // Method readSkip:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataInput readLimit(long) throws java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #182                // Method readLimit:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataInput readPosition(long) throws java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #183                // Method readPosition:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingCommon clear() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #184                // Method clear:()Lnet/openhft/chronicle/bytes/Bytes;
       4: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput appendUtf8(char[], int, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException, java.nio.BufferUnderflowException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #185                // Method appendUtf8:([CII)Lnet/openhft/chronicle/bytes/Bytes;
       7: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeOrderedLong(long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #186                // Method writeOrderedLong:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeOrderedInt(int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #187                // Method writeOrderedInt:(I)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeSome(java.nio.ByteBuffer) throws java.nio.BufferOverflowException, java.lang.IllegalStateException, java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #188                // Method writeSome:(Ljava/nio/ByteBuffer;)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput write(byte[], int, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.ArrayIndexOutOfBoundsException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #189                // Method write:([BII)Lnet/openhft/chronicle/bytes/Bytes;
       7: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput write(net.openhft.chronicle.bytes.RandomDataInput, long, long) throws java.nio.BufferOverflowException, java.nio.BufferUnderflowException, java.lang.IllegalStateException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: lload         4
       5: invokevirtual #155                // Method write:(Lnet/openhft/chronicle/bytes/RandomDataInput;JJ)Lnet/openhft/chronicle/bytes/Bytes;
       8: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput write(net.openhft.chronicle.bytes.RandomDataInput) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #190                // Method write:(Lnet/openhft/chronicle/bytes/RandomDataInput;)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeDoubleAndInt(double, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: dload_1
       2: iload_3
       3: invokevirtual #191                // Method writeDoubleAndInt:(DI)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeDouble(double) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #192                // Method writeDouble:(D)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeFloat(float) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: fload_1
       2: invokevirtual #193                // Method writeFloat:(F)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeLongAdv(long, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokevirtual #194                // Method writeLongAdv:(JI)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeLong(long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #40                 // Method writeLong:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeIntAdv(int, int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #195                // Method writeIntAdv:(II)Lnet/openhft/chronicle/bytes/Bytes;
       6: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeInt(int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #196                // Method writeInt:(I)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeShort(short) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #197                // Method writeShort:(S)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeByte(byte) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #198                // Method writeByte:(B)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput write8bit(net.openhft.chronicle.bytes.BytesStore) throws java.nio.BufferOverflowException, java.lang.IllegalStateException, java.nio.BufferUnderflowException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #199                // Method write8bit:(Lnet/openhft/chronicle/bytes/BytesStore;)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput write8bit(java.lang.String, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #200                // Method write8bit:(Ljava/lang/String;II)Lnet/openhft/chronicle/bytes/Bytes;
       7: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeSkip(long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #56                 // Method writeSkip:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writeLimit(long) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #201                // Method writeLimit:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.StreamingDataOutput writePosition(long) throws java.nio.BufferOverflowException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #150                // Method writePosition:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.ByteStringAppender append8bit(java.lang.CharSequence) throws java.nio.BufferOverflowException, java.nio.BufferUnderflowException, java.lang.IndexOutOfBoundsException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #202                // Method append8bit:(Ljava/lang/CharSequence;)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.BytesPrepender prewriteLong(long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #203                // Method prewriteLong:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.BytesPrepender prewriteInt(int) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #204                // Method prewriteInt:(I)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.BytesPrepender prewriteShort(short) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #205                // Method prewriteShort:(S)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.BytesPrepender prewriteByte(byte) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #206                // Method prewriteByte:(B)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.BytesPrepender prewrite(net.openhft.chronicle.bytes.BytesStore) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #207                // Method prewrite:(Lnet/openhft/chronicle/bytes/BytesStore;)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.BytesPrepender prewrite(byte[]) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #208                // Method prewrite:([B)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  public net.openhft.chronicle.bytes.BytesPrepender clearAndPad(long) throws java.nio.BufferOverflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #209                // Method clearAndPad:(J)Lnet/openhft/chronicle/bytes/Bytes;
       5: areturn

  static {};
    Code:
       0: ldc           #210                // class net/openhft/chronicle/bytes/UncheckedNativeBytes
       2: invokevirtual #211                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #8                  // Field $assertionsDisabled:Z
      16: return
}
