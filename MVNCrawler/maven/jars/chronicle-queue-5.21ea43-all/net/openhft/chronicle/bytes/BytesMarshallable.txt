Compiled from "BytesMarshallable.java"
public interface net.openhft.chronicle.bytes.BytesMarshallable extends net.openhft.chronicle.bytes.ReadBytesMarshallable,net.openhft.chronicle.bytes.WriteBytesMarshallable {
  public default boolean usesSelfDescribingMessage();
    Code:
       0: iconst_0
       1: ireturn

  public default void readMarshallable(net.openhft.chronicle.bytes.BytesIn) throws net.openhft.chronicle.core.io.IORuntimeException, java.nio.BufferUnderflowException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method net/openhft/chronicle/bytes/BytesUtil.readMarshallable:(Lnet/openhft/chronicle/bytes/ReadBytesMarshallable;Lnet/openhft/chronicle/bytes/BytesIn;)V
       5: return

  public default void writeMarshallable(net.openhft.chronicle.bytes.BytesOut) throws java.lang.IllegalStateException, java.nio.BufferOverflowException, java.nio.BufferUnderflowException, java.lang.ArithmeticException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method net/openhft/chronicle/bytes/BytesUtil.writeMarshallable:(Lnet/openhft/chronicle/bytes/WriteBytesMarshallable;Lnet/openhft/chronicle/bytes/BytesOut;)V
       5: return

  public default java.lang.String $toString();
    Code:
       0: new           #3                  // class net/openhft/chronicle/bytes/HexDumpBytes
       3: dup
       4: invokespecial #4                  // Method net/openhft/chronicle/bytes/HexDumpBytes."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokeinterface #5,  2            // InterfaceMethod writeMarshallable:(Lnet/openhft/chronicle/bytes/BytesOut;)V
      15: new           #6                  // class java/lang/StringBuilder
      18: dup
      19: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #8                  // String #
      24: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      31: invokevirtual #11                 // Method java/lang/Class.getName:()Ljava/lang/String;
      34: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #12                 // String \n
      39: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_1
      43: invokevirtual #13                 // Method net/openhft/chronicle/bytes/HexDumpBytes.toHexString:()Ljava/lang/String;
      46: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: astore_2
      53: aload_1
      54: invokevirtual #15                 // Method net/openhft/chronicle/bytes/HexDumpBytes.releaseLast:()V
      57: aload_2
      58: areturn
      59: astore_1
      60: aload_1
      61: invokevirtual #17                 // Method java/lang/Throwable.toString:()Ljava/lang/String;
      64: areturn
    Exception table:
       from    to  target type
           0    58    59   Class java/lang/Throwable
}
