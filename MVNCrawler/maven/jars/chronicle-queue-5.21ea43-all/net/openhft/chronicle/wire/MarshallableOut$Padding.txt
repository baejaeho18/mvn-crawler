Compiled from "MarshallableOut.java"
public final class net.openhft.chronicle.wire.MarshallableOut$Padding extends java.lang.Enum<net.openhft.chronicle.wire.MarshallableOut$Padding> {
  public static final net.openhft.chronicle.wire.MarshallableOut$Padding WORD;

  public static final net.openhft.chronicle.wire.MarshallableOut$Padding CACHE_LINE;

  public static final net.openhft.chronicle.wire.MarshallableOut$Padding NEVER;

  public static final net.openhft.chronicle.wire.MarshallableOut$Padding SMART;

  public static final net.openhft.chronicle.wire.MarshallableOut$Padding ALWAYS;

  private static final net.openhft.chronicle.wire.MarshallableOut$Padding[] $VALUES;

  public static net.openhft.chronicle.wire.MarshallableOut$Padding[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lnet/openhft/chronicle/wire/MarshallableOut$Padding;
       3: invokevirtual #2                  // Method "[Lnet/openhft/chronicle/wire/MarshallableOut$Padding;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lnet/openhft/chronicle/wire/MarshallableOut$Padding;"
       9: areturn

  public static net.openhft.chronicle.wire.MarshallableOut$Padding valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class net/openhft/chronicle/wire/MarshallableOut$Padding
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class net/openhft/chronicle/wire/MarshallableOut$Padding
       9: areturn

  private net.openhft.chronicle.wire.MarshallableOut$Padding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  static {};
    Code:
       0: new           #4                  // class net/openhft/chronicle/wire/MarshallableOut$Padding
       3: dup
       4: ldc           #7                  // String WORD
       6: iconst_0
       7: ldc           #8                  // String align to every word
       9: invokespecial #9                  // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      12: putstatic     #10                 // Field WORD:Lnet/openhft/chronicle/wire/MarshallableOut$Padding;
      15: new           #4                  // class net/openhft/chronicle/wire/MarshallableOut$Padding
      18: dup
      19: ldc           #11                 // String CACHE_LINE
      21: iconst_1
      22: ldc           #12                 // String always pads to cache lines
      24: invokespecial #9                  // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      27: putstatic     #13                 // Field CACHE_LINE:Lnet/openhft/chronicle/wire/MarshallableOut$Padding;
      30: new           #4                  // class net/openhft/chronicle/wire/MarshallableOut$Padding
      33: dup
      34: ldc           #14                 // String NEVER
      36: iconst_2
      37: ldc           #15                 // String never adds padding
      39: invokespecial #9                  // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      42: putstatic     #16                 // Field NEVER:Lnet/openhft/chronicle/wire/MarshallableOut$Padding;
      45: new           #4                  // class net/openhft/chronicle/wire/MarshallableOut$Padding
      48: dup
      49: ldc           #17                 // String SMART
      51: iconst_3
      52: ldc           #18                 // String adds padding to ensure new wire headers dont straggle cache lines, where possible to do so without breaking theexisting message format specification
      54: invokespecial #9                  // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      57: putstatic     #19                 // Field SMART:Lnet/openhft/chronicle/wire/MarshallableOut$Padding;
      60: iconst_4
      61: anewarray     #4                  // class net/openhft/chronicle/wire/MarshallableOut$Padding
      64: dup
      65: iconst_0
      66: getstatic     #10                 // Field WORD:Lnet/openhft/chronicle/wire/MarshallableOut$Padding;
      69: aastore
      70: dup
      71: iconst_1
      72: getstatic     #13                 // Field CACHE_LINE:Lnet/openhft/chronicle/wire/MarshallableOut$Padding;
      75: aastore
      76: dup
      77: iconst_2
      78: getstatic     #16                 // Field NEVER:Lnet/openhft/chronicle/wire/MarshallableOut$Padding;
      81: aastore
      82: dup
      83: iconst_3
      84: getstatic     #19                 // Field SMART:Lnet/openhft/chronicle/wire/MarshallableOut$Padding;
      87: aastore
      88: putstatic     #1                  // Field $VALUES:[Lnet/openhft/chronicle/wire/MarshallableOut$Padding;
      91: getstatic     #13                 // Field CACHE_LINE:Lnet/openhft/chronicle/wire/MarshallableOut$Padding;
      94: putstatic     #20                 // Field ALWAYS:Lnet/openhft/chronicle/wire/MarshallableOut$Padding;
      97: return
}
