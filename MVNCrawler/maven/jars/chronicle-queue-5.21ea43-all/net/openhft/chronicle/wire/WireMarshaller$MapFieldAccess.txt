Compiled from "WireMarshaller.java"
class net.openhft.chronicle.wire.WireMarshaller$MapFieldAccess extends net.openhft.chronicle.wire.WireMarshaller$FieldAccess {
  final java.util.function.Supplier<java.util.Map> collectionSupplier;

  private final java.lang.Class<?> type;

  private final java.lang.Class keyType;

  private final java.lang.Class valueType;

  net.openhft.chronicle.wire.WireMarshaller$MapFieldAccess(java.lang.reflect.Field);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method net/openhft/chronicle/wire/WireMarshaller$FieldAccess."<init>":(Ljava/lang/reflect/Field;)V
       5: aload_0
       6: aload_1
       7: invokevirtual #2                  // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
      10: putfield      #3                  // Field type:Ljava/lang/Class;
      13: aload_0
      14: getfield      #3                  // Field type:Ljava/lang/Class;
      17: ldc           #4                  // class java/util/Map
      19: if_acmpne     34
      22: aload_0
      23: invokedynamic #5,  0              // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
      28: putfield      #6                  // Field collectionSupplier:Ljava/util/function/Supplier;
      31: goto          72
      34: aload_0
      35: getfield      #3                  // Field type:Ljava/lang/Class;
      38: ldc           #7                  // class java/util/SortedMap
      40: if_acmpeq     52
      43: aload_0
      44: getfield      #3                  // Field type:Ljava/lang/Class;
      47: ldc           #8                  // class java/util/NavigableMap
      49: if_acmpne     64
      52: aload_0
      53: invokedynamic #9,  0              // InvokeDynamic #1:get:()Ljava/util/function/Supplier;
      58: putfield      #6                  // Field collectionSupplier:Ljava/util/function/Supplier;
      61: goto          72
      64: aload_0
      65: aload_0
      66: invokespecial #10                 // Method newInstance:()Ljava/util/function/Supplier;
      69: putfield      #6                  // Field collectionSupplier:Ljava/util/function/Supplier;
      72: aload_1
      73: invokevirtual #11                 // Method java/lang/reflect/Field.getGenericType:()Ljava/lang/reflect/Type;
      76: astore_2
      77: aload_2
      78: instanceof    #12                 // class java/lang/reflect/ParameterizedType
      81: ifeq          122
      84: aload_2
      85: checkcast     #12                 // class java/lang/reflect/ParameterizedType
      88: astore_3
      89: aload_3
      90: invokeinterface #13,  1           // InterfaceMethod java/lang/reflect/ParameterizedType.getActualTypeArguments:()[Ljava/lang/reflect/Type;
      95: astore        4
      97: aload_0
      98: aload         4
     100: iconst_0
     101: aaload
     102: invokestatic  #14                 // Method extractClass:(Ljava/lang/reflect/Type;)Ljava/lang/Class;
     105: putfield      #15                 // Field keyType:Ljava/lang/Class;
     108: aload_0
     109: aload         4
     111: iconst_1
     112: aaload
     113: invokestatic  #14                 // Method extractClass:(Ljava/lang/reflect/Type;)Ljava/lang/Class;
     116: putfield      #16                 // Field valueType:Ljava/lang/Class;
     119: goto          134
     122: aload_0
     123: ldc           #17                 // class java/lang/Object
     125: putfield      #15                 // Field keyType:Ljava/lang/Class;
     128: aload_0
     129: ldc           #17                 // class java/lang/Object
     131: putfield      #16                 // Field valueType:Ljava/lang/Class;
     134: return

  private java.util.function.Supplier<java.util.Map> newInstance();
    Code:
       0: aload_0
       1: invokedynamic #18,  0             // InvokeDynamic #2:get:(Lnet/openhft/chronicle/wire/WireMarshaller$MapFieldAccess;)Ljava/util/function/Supplier;
       6: areturn

  protected void getValue(java.lang.Object, net.openhft.chronicle.wire.ValueOut, java.lang.Object) throws java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field field:Ljava/lang/reflect/Field;
       4: aload_1
       5: invokevirtual #20                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #4                  // class java/util/Map
      11: astore        4
      13: aload_2
      14: aload         4
      16: aload_0
      17: getfield      #15                 // Field keyType:Ljava/lang/Class;
      20: aload_0
      21: getfield      #16                 // Field valueType:Ljava/lang/Class;
      24: getstatic     #21                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      27: aload_0
      28: getfield      #22                 // Field isLeaf:Ljava/lang/Boolean;
      31: invokevirtual #23                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      34: invokeinterface #24,  5           // InterfaceMethod net/openhft/chronicle/wire/ValueOut.marshallable:(Ljava/util/Map;Ljava/lang/Class;Ljava/lang/Class;Z)Lnet/openhft/chronicle/wire/WireOut;
      39: pop
      40: return

  protected void copy(java.lang.Object, java.lang.Object) throws java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field field:Ljava/lang/reflect/Field;
       4: aload_1
       5: invokevirtual #20                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #4                  // class java/util/Map
      11: astore_3
      12: aload_3
      13: ifnonnull     26
      16: aload_0
      17: getfield      #19                 // Field field:Ljava/lang/reflect/Field;
      20: aload_2
      21: aconst_null
      22: invokevirtual #25                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      25: return
      26: aload_0
      27: getfield      #19                 // Field field:Ljava/lang/reflect/Field;
      30: aload_2
      31: invokevirtual #20                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #4                  // class java/util/Map
      37: astore        4
      39: aload         4
      41: ifnonnull     71
      44: aload_0
      45: getfield      #6                  // Field collectionSupplier:Ljava/util/function/Supplier;
      48: invokeinterface #26,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      53: checkcast     #4                  // class java/util/Map
      56: astore        4
      58: aload_0
      59: getfield      #19                 // Field field:Ljava/lang/reflect/Field;
      62: aload_2
      63: aload         4
      65: invokevirtual #25                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      68: goto          88
      71: aload         4
      73: invokeinterface #27,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      78: ifne          88
      81: aload         4
      83: invokeinterface #28,  1           // InterfaceMethod java/util/Map.clear:()V
      88: aload         4
      90: invokeinterface #28,  1           // InterfaceMethod java/util/Map.clear:()V
      95: aload         4
      97: aload_3
      98: invokeinterface #29,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     103: return

  protected void readValue(java.lang.Object, java.lang.Object, net.openhft.chronicle.wire.ValueIn, boolean) throws java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field field:Ljava/lang/reflect/Field;
       4: aload_1
       5: invokevirtual #20                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #4                  // class java/util/Map
      11: astore        5
      13: aload         5
      15: ifnonnull     45
      18: aload_0
      19: getfield      #6                  // Field collectionSupplier:Ljava/util/function/Supplier;
      22: invokeinterface #26,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      27: checkcast     #4                  // class java/util/Map
      30: astore        5
      32: aload_0
      33: getfield      #19                 // Field field:Ljava/lang/reflect/Field;
      36: aload_1
      37: aload         5
      39: invokevirtual #25                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      42: goto          62
      45: aload         5
      47: invokeinterface #27,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      52: ifne          62
      55: aload         5
      57: invokeinterface #28,  1           // InterfaceMethod java/util/Map.clear:()V
      62: aload_3
      63: aload_0
      64: getfield      #15                 // Field keyType:Ljava/lang/Class;
      67: aload_0
      68: getfield      #16                 // Field valueType:Ljava/lang/Class;
      71: aload         5
      73: invokeinterface #30,  4           // InterfaceMethod net/openhft/chronicle/wire/ValueIn.marshallableAsMap:(Ljava/lang/Class;Ljava/lang/Class;Ljava/util/Map;)Ljava/util/Map;
      78: ifnonnull     90
      81: aload_0
      82: getfield      #19                 // Field field:Ljava/lang/reflect/Field;
      85: aload_1
      86: aconst_null
      87: invokevirtual #25                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      90: return

  protected void setValue(java.lang.Object, net.openhft.chronicle.wire.ValueIn, boolean);
    Code:
       0: new           #31                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #32                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void getAsBytes(java.lang.Object, net.openhft.chronicle.bytes.Bytes);
    Code:
       0: new           #31                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #32                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  private java.util.Map lambda$newInstance$0();
    Code:
       0: aload_0
       1: getfield      #3                  // Field type:Ljava/lang/Class;
       4: invokestatic  #33                 // Method net/openhft/chronicle/core/util/ObjectUtils.newInstance:(Ljava/lang/Class;)Ljava/lang/Object;
       7: checkcast     #4                  // class java/util/Map
      10: areturn
}
