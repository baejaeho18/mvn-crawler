Compiled from "QueryWire.java"
class net.openhft.chronicle.wire.QueryWire$QueryValueIn extends net.openhft.chronicle.wire.TextWire$TextValueIn {
  final net.openhft.chronicle.wire.QueryWire this$0;

  net.openhft.chronicle.wire.QueryWire$QueryValueIn(net.openhft.chronicle.wire.QueryWire);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lnet/openhft/chronicle/wire/QueryWire;
       5: aload_0
       6: aload_1
       7: invokespecial #2                  // Method net/openhft/chronicle/wire/TextWire$TextValueIn."<init>":(Lnet/openhft/chronicle/wire/TextWire;)V
      10: return

  public java.lang.String text();
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method net/openhft/chronicle/wire/WireInternal.acquireStringBuilder:()Ljava/lang/StringBuilder;
       4: invokevirtual #4                  // Method textTo:(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;
       7: invokestatic  #5                  // Method net/openhft/chronicle/core/util/StringUtils.toString:(Ljava/lang/Object;)Ljava/lang/String;
      10: areturn

  public java.lang.StringBuilder textTo(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lnet/openhft/chronicle/wire/QueryWire;
       4: invokevirtual #6                  // Method net/openhft/chronicle/wire/QueryWire.consumePadding:()V
       7: aload_0
       8: getfield      #1                  // Field this$0:Lnet/openhft/chronicle/wire/QueryWire;
      11: getfield      #7                  // Field net/openhft/chronicle/wire/QueryWire.bytes:Lnet/openhft/chronicle/bytes/Bytes;
      14: aload_1
      15: getstatic     #8                  // Field net/openhft/chronicle/wire/QueryWire$QueryStopCharTesters.QUERY_VALUE:Lnet/openhft/chronicle/wire/QueryWire$QueryStopCharTesters;
      18: invokeinterface #9,  3            // InterfaceMethod net/openhft/chronicle/bytes/Bytes.parseUtf8:(Ljava/lang/Appendable;Lnet/openhft/chronicle/bytes/StopCharTester;)V
      23: aload_1
      24: areturn

  public net.openhft.chronicle.bytes.Bytes textTo(net.openhft.chronicle.bytes.Bytes);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lnet/openhft/chronicle/wire/QueryWire;
       4: invokevirtual #6                  // Method net/openhft/chronicle/wire/QueryWire.consumePadding:()V
       7: aload_0
       8: getfield      #1                  // Field this$0:Lnet/openhft/chronicle/wire/QueryWire;
      11: getfield      #7                  // Field net/openhft/chronicle/wire/QueryWire.bytes:Lnet/openhft/chronicle/bytes/Bytes;
      14: aload_1
      15: getstatic     #8                  // Field net/openhft/chronicle/wire/QueryWire$QueryStopCharTesters.QUERY_VALUE:Lnet/openhft/chronicle/wire/QueryWire$QueryStopCharTesters;
      18: invokeinterface #9,  3            // InterfaceMethod net/openhft/chronicle/bytes/Bytes.parseUtf8:(Ljava/lang/Appendable;Lnet/openhft/chronicle/bytes/StopCharTester;)V
      23: aload_1
      24: areturn

  public <T> net.openhft.chronicle.wire.WireIn typeLiteralAsText(T, java.util.function.BiConsumer<T, java.lang.CharSequence>);
    Code:
       0: invokestatic  #3                  // Method net/openhft/chronicle/wire/WireInternal.acquireStringBuilder:()Ljava/lang/StringBuilder;
       3: astore_3
       4: aload_0
       5: aload_3
       6: invokevirtual #4                  // Method textTo:(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;
       9: pop
      10: aload_2
      11: aload_1
      12: aload_3
      13: invokeinterface #10,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      18: aload_0
      19: invokevirtual #11                 // Method wireIn:()Lnet/openhft/chronicle/wire/WireIn;
      22: areturn

  public java.lang.reflect.Type typeLiteral(java.util.function.BiFunction<java.lang.CharSequence, java.lang.ClassNotFoundException, java.lang.reflect.Type>);
    Code:
       0: invokestatic  #3                  // Method net/openhft/chronicle/wire/WireInternal.acquireStringBuilder:()Ljava/lang/StringBuilder;
       3: astore_2
       4: aload_0
       5: aload_2
       6: invokevirtual #4                  // Method textTo:(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;
       9: pop
      10: getstatic     #12                 // Field net/openhft/chronicle/core/pool/ClassAliasPool.CLASS_ALIASES:Lnet/openhft/chronicle/core/pool/ClassAliasPool;
      13: aload_2
      14: invokevirtual #13                 // Method net/openhft/chronicle/core/pool/ClassAliasPool.forName:(Ljava/lang/CharSequence;)Ljava/lang/Class;
      17: areturn

  public boolean hasNextSequenceItem();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lnet/openhft/chronicle/wire/QueryWire;
       4: invokevirtual #6                  // Method net/openhft/chronicle/wire/QueryWire.consumePadding:()V
       7: aload_0
       8: getfield      #1                  // Field this$0:Lnet/openhft/chronicle/wire/QueryWire;
      11: invokevirtual #14                 // Method net/openhft/chronicle/wire/QueryWire.peekCode:()I
      14: istore_1
      15: iload_1
      16: bipush        44
      18: if_icmpne     37
      21: aload_0
      22: getfield      #1                  // Field this$0:Lnet/openhft/chronicle/wire/QueryWire;
      25: getfield      #7                  // Field net/openhft/chronicle/wire/QueryWire.bytes:Lnet/openhft/chronicle/bytes/Bytes;
      28: lconst_1
      29: invokeinterface #15,  3           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readSkip:(J)Lnet/openhft/chronicle/bytes/StreamingDataInput;
      34: pop
      35: iconst_1
      36: ireturn
      37: iload_1
      38: bipush        93
      40: if_icmpeq     47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ireturn
}
