Compiled from "Base95LongConverter.java"
public class net.openhft.chronicle.wire.Base95LongConverter implements net.openhft.chronicle.wire.LongConverter {
  public static final int MAX_LENGTH;

  public static final net.openhft.chronicle.wire.Base95LongConverter INSTANCE;

  private static final int BASE;

  private static final java.math.BigInteger BASE_BI;

  private static final java.math.BigInteger TWO_TO_64;

  public net.openhft.chronicle.wire.Base95LongConverter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public int maxParseLength();
    Code:
       0: getstatic     #2                  // Field MAX_LENGTH:I
       3: ireturn

  public long parse(java.lang.CharSequence);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method lengthCheck:(Ljava/lang/CharSequence;)V
       5: lconst_0
       6: lstore_2
       7: iconst_0
       8: istore        4
      10: iload         4
      12: aload_1
      13: invokeinterface #4,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      18: if_icmpge     49
      21: lload_2
      22: ldc2_w        #6                  // long 95l
      25: lmul
      26: aload_1
      27: iload         4
      29: invokeinterface #8,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      34: i2l
      35: ladd
      36: ldc2_w        #9                  // long 32l
      39: lsub
      40: lconst_1
      41: ladd
      42: lstore_2
      43: iinc          4, 1
      46: goto          10
      49: lload_2
      50: lreturn

  public void append(java.lang.StringBuilder, long);
    Code:
       0: aload_1
       1: invokevirtual #11                 // Method java/lang/StringBuilder.length:()I
       4: istore        4
       6: lload_2
       7: lconst_0
       8: lcmp
       9: ifge          62
      12: lload_2
      13: invokestatic  #12                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      16: getstatic     #13                 // Field TWO_TO_64:Ljava/math/BigInteger;
      19: invokevirtual #14                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      22: astore        5
      24: aload         5
      26: getstatic     #15                 // Field BASE_BI:Ljava/math/BigInteger;
      29: invokevirtual #16                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      32: invokevirtual #17                 // Method java/math/BigInteger.intValueExact:()I
      35: istore        6
      37: aload         5
      39: getstatic     #15                 // Field BASE_BI:Ljava/math/BigInteger;
      42: invokevirtual #18                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      45: invokevirtual #19                 // Method java/math/BigInteger.longValueExact:()J
      48: lstore_2
      49: aload_1
      50: bipush        32
      52: iload         6
      54: iadd
      55: iconst_1
      56: isub
      57: i2c
      58: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      61: pop
      62: lload_2
      63: lconst_0
      64: lcmp
      65: ifeq          98
      68: lload_2
      69: ldc2_w        #6                  // long 95l
      72: lrem
      73: l2i
      74: istore        5
      76: lload_2
      77: ldc2_w        #6                  // long 95l
      80: ldiv
      81: lstore_2
      82: aload_1
      83: bipush        32
      85: iload         5
      87: iadd
      88: iconst_1
      89: isub
      90: i2c
      91: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      94: pop
      95: goto          62
      98: aload_1
      99: iload         4
     101: invokestatic  #21                 // Method net/openhft/chronicle/core/util/StringUtils.reverse:(Ljava/lang/StringBuilder;I)V
     104: aload_1
     105: invokevirtual #11                 // Method java/lang/StringBuilder.length:()I
     108: iload         4
     110: aload_0
     111: invokevirtual #22                 // Method maxParseLength:()I
     114: iadd
     115: if_icmple     143
     118: invokestatic  #23                 // Method net/openhft/chronicle/core/Jvm.warn:()Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
     121: aload_0
     122: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     125: ldc           #25                 // String truncated because the value was too large
     127: invokeinterface #26,  3           // InterfaceMethod net/openhft/chronicle/core/onoes/ExceptionHandler.on:(Ljava/lang/Class;Ljava/lang/String;)V
     132: aload_1
     133: iload         4
     135: aload_0
     136: invokevirtual #22                 // Method maxParseLength:()I
     139: iadd
     140: invokevirtual #27                 // Method java/lang/StringBuilder.setLength:(I)V
     143: return

  static {};
    Code:
       0: bipush        95
       2: invokestatic  #28                 // InterfaceMethod net/openhft/chronicle/wire/LongConverter.maxParseLength:(I)I
       5: putstatic     #2                  // Field MAX_LENGTH:I
       8: new           #5                  // class net/openhft/chronicle/wire/Base95LongConverter
      11: dup
      12: invokespecial #29                 // Method "<init>":()V
      15: putstatic     #30                 // Field INSTANCE:Lnet/openhft/chronicle/wire/Base95LongConverter;
      18: ldc2_w        #6                  // long 95l
      21: invokestatic  #12                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      24: putstatic     #15                 // Field BASE_BI:Ljava/math/BigInteger;
      27: getstatic     #31                 // Field java/math/BigInteger.ONE:Ljava/math/BigInteger;
      30: bipush        64
      32: invokevirtual #32                 // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
      35: putstatic     #13                 // Field TWO_TO_64:Ljava/math/BigInteger;
      38: return
}
