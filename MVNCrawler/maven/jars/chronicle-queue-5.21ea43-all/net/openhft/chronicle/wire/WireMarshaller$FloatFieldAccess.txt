Compiled from "WireMarshaller.java"
class net.openhft.chronicle.wire.WireMarshaller$FloatFieldAccess extends net.openhft.chronicle.wire.WireMarshaller$FieldAccess {
  net.openhft.chronicle.wire.WireMarshaller$FloatFieldAccess(java.lang.reflect.Field);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method net/openhft/chronicle/wire/WireMarshaller$FieldAccess."<init>":(Ljava/lang/reflect/Field;)V
       5: return

  protected void getValue(java.lang.Object, net.openhft.chronicle.wire.ValueOut, java.lang.Object);
    Code:
       0: aload_3
       1: ifnonnull     22
       4: aload_2
       5: aload_1
       6: aload_0
       7: getfield      #2                  // Field offset:J
      10: invokestatic  #3                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafeGetFloat:(Ljava/lang/Object;J)F
      13: invokeinterface #4,  2            // InterfaceMethod net/openhft/chronicle/wire/ValueOut.float32:(F)Lnet/openhft/chronicle/wire/WireOut;
      18: pop
      19: goto          45
      22: aload_2
      23: aload_1
      24: aload_0
      25: getfield      #2                  // Field offset:J
      28: invokestatic  #3                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafeGetFloat:(Ljava/lang/Object;J)F
      31: aload_3
      32: aload_0
      33: getfield      #2                  // Field offset:J
      36: invokestatic  #3                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafeGetFloat:(Ljava/lang/Object;J)F
      39: invokeinterface #5,  3            // InterfaceMethod net/openhft/chronicle/wire/ValueOut.float32:(FF)Lnet/openhft/chronicle/wire/WireOut;
      44: pop
      45: return

  protected void setValue(java.lang.Object, net.openhft.chronicle.wire.ValueIn, boolean);
    Code:
       0: iload_3
       1: ifeq          13
       4: aload_2
       5: invokeinterface #6,  1            // InterfaceMethod net/openhft/chronicle/wire/ValueIn.float32:()F
      10: goto          27
      13: aload_2
      14: aload_1
      15: aload_0
      16: getfield      #2                  // Field offset:J
      19: invokestatic  #3                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafeGetFloat:(Ljava/lang/Object;J)F
      22: invokeinterface #7,  2            // InterfaceMethod net/openhft/chronicle/wire/ValueIn.float32:(F)F
      27: fstore        4
      29: aload_1
      30: aload_0
      31: getfield      #2                  // Field offset:J
      34: fload         4
      36: invokestatic  #8                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafePutFloat:(Ljava/lang/Object;JF)V
      39: return

  public void getAsBytes(java.lang.Object, net.openhft.chronicle.bytes.Bytes);
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: getfield      #2                  // Field offset:J
       6: invokestatic  #3                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafeGetFloat:(Ljava/lang/Object;J)F
       9: invokeinterface #9,  2            // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writeFloat:(F)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      14: pop
      15: return

  protected boolean sameValue(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field offset:J
       5: invokestatic  #3                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafeGetFloat:(Ljava/lang/Object;J)F
       8: aload_2
       9: aload_0
      10: getfield      #2                  // Field offset:J
      13: invokestatic  #3                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafeGetFloat:(Ljava/lang/Object;J)F
      16: invokestatic  #10                 // Method net/openhft/chronicle/core/Maths.same:(FF)Z
      19: ireturn

  protected void copy(java.lang.Object, java.lang.Object);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #2                  // Field offset:J
       5: aload_1
       6: aload_0
       7: getfield      #2                  // Field offset:J
      10: invokestatic  #3                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafeGetFloat:(Ljava/lang/Object;J)F
      13: invokestatic  #8                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafePutFloat:(Ljava/lang/Object;JF)V
      16: return
}
