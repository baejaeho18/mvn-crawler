Compiled from "WireIn.java"
public interface net.openhft.chronicle.wire.WireIn extends net.openhft.chronicle.wire.WireCommon,net.openhft.chronicle.wire.MarshallableIn {
  public default <K, V> java.util.Map<K, V> readAllAsMap(java.lang.Class<K>, java.lang.Class<V>, java.util.Map<K, V>);
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod isNotEmptyAfterPadding:()Z
       6: ifeq          79
       9: aload_0
      10: invokeinterface #2,  1            // InterfaceMethod bytes:()Lnet/openhft/chronicle/bytes/Bytes;
      15: invokeinterface #3,  1            // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readRemaining:()J
      20: lstore        4
      22: aload_0
      23: aload_1
      24: invokeinterface #4,  2            // InterfaceMethod readEvent:(Ljava/lang/Class;)Ljava/lang/Object;
      29: astore        6
      31: aload_0
      32: invokeinterface #5,  1            // InterfaceMethod getValueIn:()Lnet/openhft/chronicle/wire/ValueIn;
      37: aload_2
      38: invokeinterface #6,  2            // InterfaceMethod net/openhft/chronicle/wire/ValueIn.object:(Ljava/lang/Class;)Ljava/lang/Object;
      43: astore        7
      45: lload         4
      47: aload_0
      48: invokeinterface #2,  1            // InterfaceMethod bytes:()Lnet/openhft/chronicle/bytes/Bytes;
      53: invokeinterface #3,  1            // InterfaceMethod net/openhft/chronicle/bytes/Bytes.readRemaining:()J
      58: lcmp
      59: ifne          65
      62: goto          79
      65: aload_3
      66: aload         6
      68: aload         7
      70: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      75: pop
      76: goto          0
      79: aload_3
      80: areturn

  public abstract void copyTo(net.openhft.chronicle.wire.WireOut);

  public abstract net.openhft.chronicle.wire.ValueIn read();

  public abstract net.openhft.chronicle.wire.ValueIn read(net.openhft.chronicle.wire.WireKey);

  public default net.openhft.chronicle.wire.ValueIn read(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #8,  0              // InvokeDynamic #0:name:(Ljava/lang/String;)Lnet/openhft/chronicle/wire/WireKey;
       7: invokeinterface #9,  2            // InterfaceMethod read:(Lnet/openhft/chronicle/wire/WireKey;)Lnet/openhft/chronicle/wire/ValueIn;
      12: areturn

  public abstract long readEventNumber();

  public default net.openhft.chronicle.wire.ValueIn readEventName(java.lang.StringBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #10,  2           // InterfaceMethod read:(Ljava/lang/StringBuilder;)Lnet/openhft/chronicle/wire/ValueIn;
       7: areturn
       8: astore_2
       9: new           #12                 // class net/openhft/chronicle/core/io/IORuntimeException
      12: dup
      13: new           #13                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #15                 // String failed to parse bytes=
      22: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_0
      26: invokeinterface #2,  1            // InterfaceMethod bytes:()Lnet/openhft/chronicle/bytes/Bytes;
      31: ldc2_w        #17                 // long 128l
      34: invokeinterface #19,  3           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.toDebugString:(J)Ljava/lang/String;
      39: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: aload_2
      46: invokespecial #21                 // Method net/openhft/chronicle/core/io/IORuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      49: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/Exception

  public abstract net.openhft.chronicle.wire.ValueIn read(java.lang.StringBuilder);

  public abstract <K> K readEvent(java.lang.Class<K>);

  public abstract net.openhft.chronicle.wire.ValueIn getValueIn();

  public abstract java.io.ObjectInput objectInput();

  public abstract net.openhft.chronicle.wire.WireIn readComment(java.lang.StringBuilder);

  public abstract void clear();

  public default boolean hasMore();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod isNotEmptyAfterPadding:()Z
       6: ireturn

  public default boolean isNotEmptyAfterPadding();
    Code:
       0: aload_0
       1: invokeinterface #22,  1           // InterfaceMethod consumePadding:()V
       6: aload_0
       7: invokeinterface #23,  1           // InterfaceMethod isEmpty:()Z
      12: ifne          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public default boolean isEmpty();
    Code:
       0: aload_0
       1: invokeinterface #2,  1            // InterfaceMethod bytes:()Lnet/openhft/chronicle/bytes/Bytes;
       6: invokeinterface #24,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.isEmpty:()Z
      11: ireturn

  public default net.openhft.chronicle.wire.WireIn readAlignTo(int);
    Code:
       0: aload_0
       1: areturn

  public default boolean readDocument(net.openhft.chronicle.wire.ReadMarshallable, net.openhft.chronicle.wire.ReadMarshallable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #25                 // Method net/openhft/chronicle/wire/WireInternal.readData:(Lnet/openhft/chronicle/wire/WireIn;Lnet/openhft/chronicle/wire/ReadMarshallable;Lnet/openhft/chronicle/wire/ReadMarshallable;)Z
       6: ireturn

  public default boolean readDocument(long, net.openhft.chronicle.wire.ReadMarshallable, net.openhft.chronicle.wire.ReadMarshallable);
    Code:
       0: lload_1
       1: aload_0
       2: aload_3
       3: aload         4
       5: invokestatic  #26                 // Method net/openhft/chronicle/wire/WireInternal.readData:(JLnet/openhft/chronicle/wire/WireIn;Lnet/openhft/chronicle/wire/ReadMarshallable;Lnet/openhft/chronicle/wire/ReadMarshallable;)Z
       8: ireturn

  public default void rawReadData(net.openhft.chronicle.wire.ReadMarshallable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #27                 // Method net/openhft/chronicle/wire/WireInternal.rawReadData:(Lnet/openhft/chronicle/wire/WireIn;Lnet/openhft/chronicle/wire/ReadMarshallable;)V
       5: return

  public abstract net.openhft.chronicle.wire.DocumentContext readingDocument();

  public abstract net.openhft.chronicle.wire.DocumentContext readingDocument(long);

  public abstract void consumePadding();

  public default boolean readDataHeader() throws java.io.EOFException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokeinterface #28,  2           // InterfaceMethod readDataHeader:(Z)Lnet/openhft/chronicle/wire/WireIn$HeaderType;
       7: getstatic     #29                 // Field net/openhft/chronicle/wire/WireIn$HeaderType.DATA:Lnet/openhft/chronicle/wire/WireIn$HeaderType;
      10: if_acmpne     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public abstract net.openhft.chronicle.wire.WireIn$HeaderType readDataHeader(boolean) throws java.io.EOFException;

  public abstract void readAndSetLength(long);

  public abstract void readFirstHeader(long, java.util.concurrent.TimeUnit) throws java.util.concurrent.TimeoutException, java.io.StreamCorruptedException;

  public abstract void readFirstHeader() throws java.io.StreamCorruptedException;

  public abstract void readMetaDataHeader();

  public default java.lang.CharSequence asText();
    Code:
       0: aload_0
       1: invokestatic  #30                 // Method net/openhft/chronicle/wire/Wires.asText:(Lnet/openhft/chronicle/wire/WireIn;)Ljava/lang/CharSequence;
       4: areturn

  public abstract java.lang.String readingPeekYaml();

  public default void startEvent();
    Code:
       0: return

  public default boolean isEndEvent();
    Code:
       0: iconst_0
       1: ireturn

  public default void endEvent();
    Code:
       0: return

  public default boolean hintReadInputOrder();
    Code:
       0: iconst_0
       1: ireturn

  private static java.lang.CharSequence lambda$read$0(java.lang.String);
    Code:
       0: aload_0
       1: areturn
}
