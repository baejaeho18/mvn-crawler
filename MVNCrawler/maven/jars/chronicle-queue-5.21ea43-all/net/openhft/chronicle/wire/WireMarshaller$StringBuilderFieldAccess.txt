Compiled from "WireMarshaller.java"
class net.openhft.chronicle.wire.WireMarshaller$StringBuilderFieldAccess extends net.openhft.chronicle.wire.WireMarshaller$FieldAccess {
  public net.openhft.chronicle.wire.WireMarshaller$StringBuilderFieldAccess(java.lang.reflect.Field);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokestatic  #1                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       6: invokespecial #2                  // Method net/openhft/chronicle/wire/WireMarshaller$FieldAccess."<init>":(Ljava/lang/reflect/Field;Ljava/lang/Boolean;)V
       9: return

  protected void getValue(java.lang.Object, net.openhft.chronicle.wire.ValueOut, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field offset:J
       5: invokestatic  #4                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafeGetObject:(Ljava/lang/Object;J)Ljava/lang/Object;
       8: checkcast     #5                  // class java/lang/CharSequence
      11: astore        4
      13: aload_2
      14: aload         4
      16: invokeinterface #6,  2            // InterfaceMethod net/openhft/chronicle/wire/ValueOut.text:(Ljava/lang/CharSequence;)Lnet/openhft/chronicle/wire/WireOut;
      21: pop
      22: return

  protected void setValue(java.lang.Object, net.openhft.chronicle.wire.ValueIn, boolean);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field offset:J
       5: invokestatic  #4                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafeGetObject:(Ljava/lang/Object;J)Ljava/lang/Object;
       8: checkcast     #7                  // class java/lang/StringBuilder
      11: astore        4
      13: aload         4
      15: ifnonnull     36
      18: aload_1
      19: aload_0
      20: getfield      #3                  // Field offset:J
      23: new           #7                  // class java/lang/StringBuilder
      26: dup
      27: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      30: dup
      31: astore        4
      33: invokestatic  #9                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafePutObject:(Ljava/lang/Object;JLjava/lang/Object;)V
      36: aload_2
      37: aload         4
      39: invokeinterface #10,  2           // InterfaceMethod net/openhft/chronicle/wire/ValueIn.textTo:(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;
      44: ifnonnull     56
      47: aload_1
      48: aload_0
      49: getfield      #3                  // Field offset:J
      52: aconst_null
      53: invokestatic  #9                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafePutObject:(Ljava/lang/Object;JLjava/lang/Object;)V
      56: return

  public void getAsBytes(java.lang.Object, net.openhft.chronicle.bytes.Bytes);
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: getfield      #3                  // Field offset:J
       6: invokestatic  #4                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafeGetObject:(Ljava/lang/Object;J)Ljava/lang/Object;
       9: checkcast     #5                  // class java/lang/CharSequence
      12: invokeinterface #11,  2           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writeUtf8:(Ljava/lang/CharSequence;)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      17: pop
      18: return

  protected boolean sameValue(java.lang.Object, java.lang.Object) throws java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field field:Ljava/lang/reflect/Field;
       4: aload_1
       5: invokevirtual #13                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #7                  // class java/lang/StringBuilder
      11: aload_0
      12: getfield      #12                 // Field field:Ljava/lang/reflect/Field;
      15: aload_2
      16: invokevirtual #13                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #7                  // class java/lang/StringBuilder
      22: invokestatic  #14                 // Method net/openhft/chronicle/core/util/StringUtils.isEqual:(Ljava/lang/StringBuilder;Ljava/lang/CharSequence;)Z
      25: ireturn

  protected void copy(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field offset:J
       5: invokestatic  #4                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafeGetObject:(Ljava/lang/Object;J)Ljava/lang/Object;
       8: checkcast     #7                  // class java/lang/StringBuilder
      11: astore_3
      12: aload_2
      13: aload_0
      14: getfield      #3                  // Field offset:J
      17: invokestatic  #4                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafeGetObject:(Ljava/lang/Object;J)Ljava/lang/Object;
      20: checkcast     #7                  // class java/lang/StringBuilder
      23: astore        4
      25: aload_3
      26: ifnonnull     39
      29: aload_2
      30: aload_0
      31: getfield      #3                  // Field offset:J
      34: aconst_null
      35: invokestatic  #9                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafePutObject:(Ljava/lang/Object;JLjava/lang/Object;)V
      38: return
      39: aload         4
      41: ifnonnull     62
      44: aload_2
      45: aload_0
      46: getfield      #3                  // Field offset:J
      49: new           #7                  // class java/lang/StringBuilder
      52: dup
      53: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      56: dup
      57: astore        4
      59: invokestatic  #9                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafePutObject:(Ljava/lang/Object;JLjava/lang/Object;)V
      62: aload         4
      64: iconst_0
      65: invokevirtual #15                 // Method java/lang/StringBuilder.setLength:(I)V
      68: aload         4
      70: aload_3
      71: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      74: pop
      75: return
}
