Compiled from "WireMarshaller.java"
class net.openhft.chronicle.wire.WireMarshaller$ArrayFieldAccess extends net.openhft.chronicle.wire.WireMarshaller$FieldAccess {
  private final java.lang.Class componentType;

  private final java.lang.Class objectType;

  net.openhft.chronicle.wire.WireMarshaller$ArrayFieldAccess(java.lang.reflect.Field);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method net/openhft/chronicle/wire/WireMarshaller$FieldAccess."<init>":(Ljava/lang/reflect/Field;)V
       5: aload_0
       6: aload_1
       7: invokevirtual #2                  // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
      10: invokevirtual #3                  // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      13: putfield      #4                  // Field componentType:Ljava/lang/Class;
      16: aload_0
      17: aload_0
      18: getfield      #4                  // Field componentType:Ljava/lang/Class;
      21: invokestatic  #5                  // Method net/openhft/chronicle/core/util/ObjectUtils.primToWrapper:(Ljava/lang/Class;)Ljava/lang/Class;
      24: invokestatic  #6                  // Method net/openhft/chronicle/core/util/ObjectUtils.implementationToUse:(Ljava/lang/Class;)Ljava/lang/Class;
      27: putfield      #7                  // Field objectType:Ljava/lang/Class;
      30: return

  protected void getValue(java.lang.Object, net.openhft.chronicle.wire.ValueOut, java.lang.Object) throws java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field field:Ljava/lang/reflect/Field;
       4: aload_1
       5: invokevirtual #9                  // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: astore        4
      10: aload_2
      11: iconst_1
      12: invokeinterface #10,  2           // InterfaceMethod net/openhft/chronicle/wire/ValueOut.swapLeaf:(Z)Z
      17: istore        5
      19: aload         4
      21: ifnonnull     34
      24: aload_2
      25: invokeinterface #11,  1           // InterfaceMethod net/openhft/chronicle/wire/ValueOut.nu11:()Lnet/openhft/chronicle/wire/WireOut;
      30: pop
      31: goto          49
      34: aload_2
      35: aload         4
      37: aload_0
      38: invokedynamic #12,  0             // InvokeDynamic #0:accept:(Lnet/openhft/chronicle/wire/WireMarshaller$ArrayFieldAccess;)Ljava/util/function/BiConsumer;
      43: invokeinterface #13,  3           // InterfaceMethod net/openhft/chronicle/wire/ValueOut.sequence:(Ljava/lang/Object;Ljava/util/function/BiConsumer;)Lnet/openhft/chronicle/wire/WireOut;
      48: pop
      49: aload_2
      50: iload         5
      52: invokeinterface #10,  2           // InterfaceMethod net/openhft/chronicle/wire/ValueOut.swapLeaf:(Z)Z
      57: pop
      58: return

  protected void setValue(java.lang.Object, net.openhft.chronicle.wire.ValueIn, boolean) throws java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field field:Ljava/lang/reflect/Field;
       4: aload_1
       5: invokevirtual #9                  // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: astore        4
      10: aload_2
      11: invokeinterface #14,  1           // InterfaceMethod net/openhft/chronicle/wire/ValueIn.isNull:()Z
      16: ifeq          34
      19: aload         4
      21: ifnull        33
      24: aload_0
      25: getfield      #8                  // Field field:Ljava/lang/reflect/Field;
      28: aload_1
      29: aconst_null
      30: invokevirtual #15                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      33: return
      34: new           #16                 // class java/util/ArrayList
      37: dup
      38: invokespecial #17                 // Method java/util/ArrayList."<init>":()V
      41: astore        5
      43: aload_2
      44: aload         5
      46: aload_0
      47: invokedynamic #18,  0             // InvokeDynamic #1:accept:(Lnet/openhft/chronicle/wire/WireMarshaller$ArrayFieldAccess;)Ljava/util/function/BiConsumer;
      52: invokeinterface #19,  3           // InterfaceMethod net/openhft/chronicle/wire/ValueIn.sequence:(Ljava/lang/Object;Ljava/util/function/BiConsumer;)Z
      57: pop
      58: aload_0
      59: getfield      #4                  // Field componentType:Ljava/lang/Class;
      62: aload         5
      64: invokeinterface #20,  1           // InterfaceMethod java/util/List.size:()I
      69: invokestatic  #21                 // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
      72: astore        6
      74: iconst_0
      75: istore        7
      77: iload         7
      79: aload         5
      81: invokeinterface #20,  1           // InterfaceMethod java/util/List.size:()I
      86: if_icmpge     111
      89: aload         6
      91: iload         7
      93: aload         5
      95: iload         7
      97: invokeinterface #22,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     102: invokestatic  #23                 // Method java/lang/reflect/Array.set:(Ljava/lang/Object;ILjava/lang/Object;)V
     105: iinc          7, 1
     108: goto          77
     111: aload_0
     112: getfield      #8                  // Field field:Ljava/lang/reflect/Field;
     115: aload_1
     116: aload         6
     118: invokevirtual #15                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
     121: return

  public void getAsBytes(java.lang.Object, net.openhft.chronicle.bytes.Bytes);
    Code:
       0: new           #24                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #25                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean isEqual(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #8                  // Field field:Ljava/lang/reflect/Field;
       4: aload_1
       5: invokevirtual #9                  // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: astore_3
       9: aload_0
      10: getfield      #8                  // Field field:Ljava/lang/reflect/Field;
      13: aload_2
      14: invokevirtual #9                  // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: astore        4
      19: aload_3
      20: ifnonnull     34
      23: aload         4
      25: ifnonnull     32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn
      34: aload         4
      36: ifnonnull     41
      39: iconst_0
      40: ireturn
      41: aload_3
      42: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      45: astore        5
      47: aload         4
      49: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      52: astore        6
      54: aload         5
      56: aload         6
      58: if_acmpeq     83
      61: aload         5
      63: aload         6
      65: invokevirtual #27                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      68: ifne          83
      71: aload         6
      73: aload         5
      75: invokevirtual #27                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      78: ifne          83
      81: iconst_0
      82: ireturn
      83: aload_3
      84: invokestatic  #28                 // Method java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I
      87: istore        7
      89: aload         4
      91: invokestatic  #28                 // Method java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I
      94: istore        8
      96: iload         7
      98: iload         8
     100: if_icmpeq     105
     103: iconst_0
     104: ireturn
     105: iconst_0
     106: istore        9
     108: iload         9
     110: iload         7
     112: if_icmpge     142
     115: aload_3
     116: iload         9
     118: invokestatic  #29                 // Method java/lang/reflect/Array.get:(Ljava/lang/Object;I)Ljava/lang/Object;
     121: aload         4
     123: iload         9
     125: invokestatic  #29                 // Method java/lang/reflect/Array.get:(Ljava/lang/Object;I)Ljava/lang/Object;
     128: invokestatic  #30                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     131: ifne          136
     134: iconst_0
     135: ireturn
     136: iinc          9, 1
     139: goto          108
     142: iconst_1
     143: ireturn
     144: astore_3
     145: new           #32                 // class java/lang/AssertionError
     148: dup
     149: aload_3
     150: invokespecial #33                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     153: athrow
    Exception table:
       from    to  target type
           0    33   144   Class java/lang/IllegalAccessException
          34    40   144   Class java/lang/IllegalAccessException
          41    82   144   Class java/lang/IllegalAccessException
          83   104   144   Class java/lang/IllegalAccessException
         105   135   144   Class java/lang/IllegalAccessException
         136   143   144   Class java/lang/IllegalAccessException

  private void lambda$setValue$1(java.util.List, net.openhft.chronicle.wire.ValueIn);
    Code:
       0: aload_2
       1: invokeinterface #34,  1           // InterfaceMethod net/openhft/chronicle/wire/ValueIn.hasNextSequenceItem:()Z
       6: ifeq          29
       9: aload_1
      10: aload_2
      11: aload_0
      12: getfield      #4                  // Field componentType:Ljava/lang/Class;
      15: invokeinterface #35,  2           // InterfaceMethod net/openhft/chronicle/wire/ValueIn.object:(Ljava/lang/Class;)Ljava/lang/Object;
      20: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      25: pop
      26: goto          0
      29: return

  private void lambda$getValue$0(java.lang.Object, net.openhft.chronicle.wire.ValueOut);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_1
       3: invokestatic  #28                 // Method java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I
       6: istore        4
       8: iload_3
       9: iload         4
      11: if_icmpge     36
      14: aload_2
      15: aload_0
      16: getfield      #7                  // Field objectType:Ljava/lang/Class;
      19: aload_1
      20: iload_3
      21: invokestatic  #29                 // Method java/lang/reflect/Array.get:(Ljava/lang/Object;I)Ljava/lang/Object;
      24: invokeinterface #37,  3           // InterfaceMethod net/openhft/chronicle/wire/ValueOut.object:(Ljava/lang/Class;Ljava/lang/Object;)Lnet/openhft/chronicle/wire/WireOut;
      29: pop
      30: iinc          3, 1
      33: goto          8
      36: return
}
