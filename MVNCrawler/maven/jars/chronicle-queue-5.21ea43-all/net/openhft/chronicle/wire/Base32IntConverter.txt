Compiled from "Base32IntConverter.java"
public class net.openhft.chronicle.wire.Base32IntConverter implements net.openhft.chronicle.wire.IntConverter {
  public static final int MAX_LENGTH;

  public static final net.openhft.chronicle.wire.Base32IntConverter INSTANCE;

  static final byte[] ENCODE;

  static final int BASE;

  private static final java.lang.String CHARS;

  static final char[] DECODE;

  static final boolean $assertionsDisabled;

  public net.openhft.chronicle.wire.Base32IntConverter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public int maxParseLength();
    Code:
       0: getstatic     #2                  // Field MAX_LENGTH:I
       3: ireturn

  public int parse(java.lang.CharSequence);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method lengthCheck:(Ljava/lang/CharSequence;)V
       5: iconst_0
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: aload_1
      11: invokeinterface #4,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      16: if_icmpge     50
      19: getstatic     #5                  // Field ENCODE:[B
      22: aload_1
      23: iload_3
      24: invokeinterface #6,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      29: baload
      30: istore        4
      32: iload         4
      34: iflt          44
      37: iload_2
      38: iconst_5
      39: ishl
      40: iload         4
      42: iadd
      43: istore_2
      44: iinc          3, 1
      47: goto          9
      50: iload_2
      51: ireturn

  public void append(java.lang.StringBuilder, int);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method java/lang/StringBuilder.length:()I
       4: istore_3
       5: iload_2
       6: ifeq          33
       9: iload_2
      10: bipush        31
      12: iand
      13: istore        4
      15: iload_2
      16: iconst_5
      17: iushr
      18: istore_2
      19: aload_1
      20: getstatic     #9                  // Field DECODE:[C
      23: iload         4
      25: caload
      26: invokevirtual #10                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      29: pop
      30: goto          5
      33: aload_1
      34: iload_3
      35: invokestatic  #11                 // Method net/openhft/chronicle/core/util/StringUtils.reverse:(Ljava/lang/StringBuilder;I)V
      38: aload_1
      39: invokevirtual #7                  // Method java/lang/StringBuilder.length:()I
      42: iload_3
      43: aload_0
      44: invokevirtual #12                 // Method maxParseLength:()I
      47: iadd
      48: if_icmple     75
      51: invokestatic  #13                 // Method net/openhft/chronicle/core/Jvm.warn:()Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
      54: aload_0
      55: invokevirtual #14                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      58: ldc           #15                 // String truncated because the value was too large
      60: invokeinterface #16,  3           // InterfaceMethod net/openhft/chronicle/core/onoes/ExceptionHandler.on:(Ljava/lang/Class;Ljava/lang/String;)V
      65: aload_1
      66: iload_3
      67: aload_0
      68: invokevirtual #12                 // Method maxParseLength:()I
      71: iadd
      72: invokevirtual #17                 // Method java/lang/StringBuilder.setLength:(I)V
      75: return

  static {};
    Code:
       0: ldc           #8                  // class net/openhft/chronicle/wire/Base32IntConverter
       2: invokevirtual #18                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #19                 // Field $assertionsDisabled:Z
      16: bipush        32
      18: invokestatic  #20                 // InterfaceMethod net/openhft/chronicle/wire/IntConverter.maxParseLength:(I)I
      21: putstatic     #2                  // Field MAX_LENGTH:I
      24: new           #8                  // class net/openhft/chronicle/wire/Base32IntConverter
      27: dup
      28: invokespecial #21                 // Method "<init>":()V
      31: putstatic     #22                 // Field INSTANCE:Lnet/openhft/chronicle/wire/Base32IntConverter;
      34: sipush        128
      37: newarray       byte
      39: putstatic     #5                  // Field ENCODE:[B
      42: ldc           #23                 // String 234567ABCDEFGHIJKLMNOPQRSTUVWXYZ
      44: invokevirtual #24                 // Method java/lang/String.toCharArray:()[C
      47: putstatic     #9                  // Field DECODE:[C
      50: getstatic     #19                 // Field $assertionsDisabled:Z
      53: ifne          73
      56: getstatic     #9                  // Field DECODE:[C
      59: arraylength
      60: bipush        32
      62: if_icmpeq     73
      65: new           #25                 // class java/lang/AssertionError
      68: dup
      69: invokespecial #26                 // Method java/lang/AssertionError."<init>":()V
      72: athrow
      73: getstatic     #5                  // Field ENCODE:[B
      76: iconst_m1
      77: invokestatic  #27                 // Method java/util/Arrays.fill:([BB)V
      80: iconst_0
      81: istore_0
      82: iload_0
      83: getstatic     #9                  // Field DECODE:[C
      86: arraylength
      87: if_icmpge     119
      90: getstatic     #9                  // Field DECODE:[C
      93: iload_0
      94: caload
      95: istore_1
      96: getstatic     #5                  // Field ENCODE:[B
      99: iload_1
     100: iload_0
     101: i2b
     102: bastore
     103: getstatic     #5                  // Field ENCODE:[B
     106: iload_1
     107: invokestatic  #28                 // Method java/lang/Character.toLowerCase:(C)C
     110: iload_0
     111: i2b
     112: bastore
     113: iinc          0, 1
     116: goto          82
     119: getstatic     #5                  // Field ENCODE:[B
     122: bipush        48
     124: getstatic     #5                  // Field ENCODE:[B
     127: bipush        79
     129: baload
     130: bastore
     131: getstatic     #5                  // Field ENCODE:[B
     134: bipush        49
     136: getstatic     #5                  // Field ENCODE:[B
     139: bipush        108
     141: baload
     142: bastore
     143: getstatic     #5                  // Field ENCODE:[B
     146: bipush        56
     148: getstatic     #5                  // Field ENCODE:[B
     151: bipush        66
     153: baload
     154: bastore
     155: getstatic     #5                  // Field ENCODE:[B
     158: bipush        57
     160: getstatic     #5                  // Field ENCODE:[B
     163: bipush        113
     165: baload
     166: bastore
     167: getstatic     #5                  // Field ENCODE:[B
     170: bipush        61
     172: iconst_0
     173: bastore
     174: return
}
