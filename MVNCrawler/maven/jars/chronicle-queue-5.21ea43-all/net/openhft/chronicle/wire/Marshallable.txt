Compiled from "Marshallable.java"
public interface net.openhft.chronicle.wire.Marshallable extends net.openhft.chronicle.wire.WriteMarshallable,net.openhft.chronicle.wire.ReadMarshallable,net.openhft.chronicle.core.io.Resettable {
  public static boolean $equals(net.openhft.chronicle.wire.WriteMarshallable, java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #1                  // class net/openhft/chronicle/wire/WriteMarshallable
       4: ifeq          24
       7: aload_0
       8: aload_1
       9: if_acmpeq     20
      12: aload_0
      13: aload_1
      14: invokestatic  #2                  // Method net/openhft/chronicle/wire/Wires.isEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public static int $hashCode(net.openhft.chronicle.wire.WriteMarshallable);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method net/openhft/chronicle/wire/HashWire.hash32:(Lnet/openhft/chronicle/wire/WriteMarshallable;)I
       4: ireturn

  public static java.lang.String $toString(net.openhft.chronicle.wire.WriteMarshallable);
    Code:
       0: getstatic     #4                  // Field net/openhft/chronicle/wire/WireType.TEXT:Lnet/openhft/chronicle/wire/WireType;
       3: aload_0
       4: invokevirtual #5                  // Method net/openhft/chronicle/wire/WireType.asString:(Ljava/lang/Object;)Ljava/lang/String;
       7: areturn

  public static <T> T fromString(java.lang.CharSequence);
    Code:
       0: getstatic     #4                  // Field net/openhft/chronicle/wire/WireType.TEXT:Lnet/openhft/chronicle/wire/WireType;
       3: aload_0
       4: invokevirtual #6                  // Method net/openhft/chronicle/wire/WireType.fromString:(Ljava/lang/CharSequence;)Ljava/lang/Object;
       7: areturn

  public static <T> T fromString(java.lang.Class<T>, java.lang.CharSequence);
    Code:
       0: getstatic     #4                  // Field net/openhft/chronicle/wire/WireType.TEXT:Lnet/openhft/chronicle/wire/WireType;
       3: aload_0
       4: aload_1
       5: invokevirtual #7                  // Method net/openhft/chronicle/wire/WireType.fromString:(Ljava/lang/Class;Ljava/lang/CharSequence;)Ljava/lang/Object;
       8: areturn

  public static <T> T fromFile(java.lang.String) throws java.io.IOException;
    Code:
       0: getstatic     #4                  // Field net/openhft/chronicle/wire/WireType.TEXT:Lnet/openhft/chronicle/wire/WireType;
       3: aload_0
       4: invokevirtual #8                  // Method net/openhft/chronicle/wire/WireType.fromFile:(Ljava/lang/String;)Ljava/lang/Object;
       7: areturn

  public static <T> T fromString(java.io.InputStream);
    Code:
       0: new           #9                  // class java/util/Scanner
       3: dup
       4: aload_0
       5: invokespecial #10                 // Method java/util/Scanner."<init>":(Ljava/io/InputStream;)V
       8: ldc           #11                 // String \\A
      10: invokevirtual #12                 // Method java/util/Scanner.useDelimiter:(Ljava/lang/String;)Ljava/util/Scanner;
      13: astore_1
      14: getstatic     #4                  // Field net/openhft/chronicle/wire/WireType.TEXT:Lnet/openhft/chronicle/wire/WireType;
      17: aload_1
      18: invokevirtual #13                 // Method java/util/Scanner.hasNext:()Z
      21: ifeq          31
      24: aload_1
      25: invokevirtual #14                 // Method java/util/Scanner.next:()Ljava/lang/String;
      28: goto          33
      31: ldc           #15                 // String
      33: invokevirtual #6                  // Method net/openhft/chronicle/wire/WireType.fromString:(Ljava/lang/CharSequence;)Ljava/lang/Object;
      36: areturn

  public static <T> T fromFile(java.lang.Class<T>, java.lang.String) throws java.io.IOException;
    Code:
       0: getstatic     #4                  // Field net/openhft/chronicle/wire/WireType.TEXT:Lnet/openhft/chronicle/wire/WireType;
       3: aload_0
       4: aload_1
       5: invokevirtual #16                 // Method net/openhft/chronicle/wire/WireType.fromFile:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
       8: areturn

  public static <T> java.util.stream.Stream<T> streamFromFile(java.lang.String) throws java.io.IOException;
    Code:
       0: getstatic     #4                  // Field net/openhft/chronicle/wire/WireType.TEXT:Lnet/openhft/chronicle/wire/WireType;
       3: aload_0
       4: invokevirtual #17                 // Method net/openhft/chronicle/wire/WireType.streamFromFile:(Ljava/lang/String;)Ljava/util/stream/Stream;
       7: areturn

  public static <T> java.util.stream.Stream<T> streamFromFile(java.lang.Class<T>, java.lang.String) throws java.io.IOException;
    Code:
       0: getstatic     #4                  // Field net/openhft/chronicle/wire/WireType.TEXT:Lnet/openhft/chronicle/wire/WireType;
       3: aload_0
       4: aload_1
       5: invokevirtual #18                 // Method net/openhft/chronicle/wire/WireType.streamFromFile:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/stream/Stream;
       8: areturn

  public static java.util.Map<java.lang.String, java.lang.Object> fromFileAsMap(java.lang.String) throws java.io.IOException;
    Code:
       0: getstatic     #4                  // Field net/openhft/chronicle/wire/WireType.TEXT:Lnet/openhft/chronicle/wire/WireType;
       3: aload_0
       4: ldc           #19                 // class java/lang/Object
       6: invokevirtual #20                 // Method net/openhft/chronicle/wire/WireType.fromFileAsMap:(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Map;
       9: areturn

  public static <V> java.util.Map<java.lang.String, V> fromFileAsMap(java.lang.String, java.lang.Class<V>) throws java.io.IOException;
    Code:
       0: getstatic     #4                  // Field net/openhft/chronicle/wire/WireType.TEXT:Lnet/openhft/chronicle/wire/WireType;
       3: aload_0
       4: aload_1
       5: invokevirtual #21                 // Method net/openhft/chronicle/wire/WireType.fromFileAsMap:(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Map;
       8: areturn

  public static java.util.Map<java.lang.String, java.lang.Object> fromHexString(java.lang.CharSequence);
    Code:
       0: getstatic     #22                 // Field net/openhft/chronicle/wire/WireType.READ_ANY:Lnet/openhft/chronicle/wire/WireType;
       3: aload_0
       4: invokevirtual #23                 // Method net/openhft/chronicle/wire/WireType.fromHexString:(Ljava/lang/CharSequence;)Ljava/lang/Object;
       7: checkcast     #24                 // class java/util/Map
      10: areturn

  public default <T> T getField(java.lang.String, java.lang.Class<T>) throws java.lang.NoSuchFieldException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #25                 // Method net/openhft/chronicle/wire/Wires.getField:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
       6: areturn

  public default void setField(java.lang.String, java.lang.Object) throws java.lang.NoSuchFieldException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #26                 // Method net/openhft/chronicle/wire/Wires.setField:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)V
       6: return

  public default long getLongField(java.lang.String) throws java.lang.NoSuchFieldException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #27                 // Method net/openhft/chronicle/wire/Wires.getLongField:(Ljava/lang/Object;Ljava/lang/String;)J
       5: lreturn

  public default void setLongField(java.lang.String, long) throws java.lang.NoSuchFieldException;
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokestatic  #28                 // Method net/openhft/chronicle/wire/Wires.setLongField:(Ljava/lang/Object;Ljava/lang/String;J)V
       6: return

  public default void readMarshallable(net.openhft.chronicle.wire.WireIn) throws net.openhft.chronicle.core.io.IORuntimeException;
    Code:
       0: getstatic     #29                 // Field net/openhft/chronicle/wire/WireMarshaller.WIRE_MARSHALLER_CL:Lnet/openhft/chronicle/core/ClassLocal;
       3: aload_0
       4: invokevirtual #30                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       7: invokevirtual #31                 // Method net/openhft/chronicle/core/ClassLocal.get:(Ljava/lang/Class;)Ljava/lang/Object;
      10: checkcast     #32                 // class net/openhft/chronicle/wire/WireMarshaller
      13: astore_2
      14: aload_2
      15: aload_0
      16: aload_1
      17: aload_2
      18: invokevirtual #33                 // Method net/openhft/chronicle/wire/WireMarshaller.defaultValue:()Ljava/lang/Object;
      21: iconst_1
      22: invokevirtual #34                 // Method net/openhft/chronicle/wire/WireMarshaller.readMarshallable:(Ljava/lang/Object;Lnet/openhft/chronicle/wire/WireIn;Ljava/lang/Object;Z)V
      25: return

  public default void writeMarshallable(net.openhft.chronicle.wire.WireOut);
    Code:
       0: getstatic     #29                 // Field net/openhft/chronicle/wire/WireMarshaller.WIRE_MARSHALLER_CL:Lnet/openhft/chronicle/core/ClassLocal;
       3: aload_0
       4: invokevirtual #30                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       7: invokevirtual #31                 // Method net/openhft/chronicle/core/ClassLocal.get:(Ljava/lang/Class;)Ljava/lang/Object;
      10: checkcast     #32                 // class net/openhft/chronicle/wire/WireMarshaller
      13: astore_2
      14: aload_2
      15: aload_0
      16: aload_1
      17: invokevirtual #35                 // Method net/openhft/chronicle/wire/WireMarshaller.writeMarshallable:(Ljava/lang/Object;Lnet/openhft/chronicle/wire/WireOut;)V
      20: return

  public default <T> T deepCopy();
    Code:
       0: aload_0
       1: invokestatic  #36                 // Method net/openhft/chronicle/wire/Wires.deepCopy:(Lnet/openhft/chronicle/wire/Marshallable;)Lnet/openhft/chronicle/wire/Marshallable;
       4: areturn

  public default <T extends net.openhft.chronicle.wire.Marshallable> T copyFrom(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #37                 // Method net/openhft/chronicle/wire/Wires.copyTo:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #38                 // class net/openhft/chronicle/wire/Marshallable
       8: areturn

  public default <T extends net.openhft.chronicle.wire.Marshallable> T copyTo(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #37                 // Method net/openhft/chronicle/wire/Wires.copyTo:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #38                 // class net/openhft/chronicle/wire/Marshallable
       8: areturn

  public default <K, T extends net.openhft.chronicle.wire.Marshallable> T mergeToMap(java.util.Map<K, T>, java.util.function.Function<T, K>);
    Code:
       0: aload_0
       1: astore_3
       2: aload_1
       3: aload_2
       4: aload_3
       5: invokeinterface #39,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      10: aload_3
      11: invokedynamic #40,  0             // InvokeDynamic #0:apply:()Ljava/util/function/BiFunction;
      16: invokeinterface #41,  4           // InterfaceMethod java/util/Map.merge:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      21: checkcast     #38                 // class net/openhft/chronicle/wire/Marshallable
      24: areturn

  public default java.util.List<net.openhft.chronicle.wire.FieldInfo> $fieldInfos();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokestatic  #42                 // Method net/openhft/chronicle/wire/Wires.fieldInfos:(Ljava/lang/Class;)Ljava/util/List;
       7: areturn

  public default java.util.Map<java.lang.String, net.openhft.chronicle.wire.FieldInfo> $fieldInfoMap();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokestatic  #43                 // Method net/openhft/chronicle/wire/Wires.fieldInfoMap:(Ljava/lang/Class;)Ljava/util/Map;
       7: areturn

  public default java.lang.String className();
    Code:
       0: getstatic     #44                 // Field net/openhft/chronicle/core/pool/ClassAliasPool.CLASS_ALIASES:Lnet/openhft/chronicle/core/pool/ClassAliasPool;
       3: aload_0
       4: invokevirtual #30                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       7: invokevirtual #45                 // Method net/openhft/chronicle/core/pool/ClassAliasPool.nameFor:(Ljava/lang/Class;)Ljava/lang/String;
      10: areturn

  public default void reset();
    Code:
       0: aload_0
       1: invokestatic  #46                 // Method net/openhft/chronicle/wire/Wires.reset:(Ljava/lang/Object;)V
       4: return

  private static net.openhft.chronicle.wire.Marshallable lambda$mergeToMap$0(net.openhft.chronicle.wire.Marshallable, net.openhft.chronicle.wire.Marshallable);
    Code:
       0: aload_0
       1: ifnonnull     16
       4: aload_1
       5: invokeinterface #47,  1           // InterfaceMethod deepCopy:()Ljava/lang/Object;
      10: checkcast     #38                 // class net/openhft/chronicle/wire/Marshallable
      13: goto          23
      16: aload_0
      17: aload_1
      18: invokeinterface #48,  2           // InterfaceMethod copyFrom:(Lnet/openhft/chronicle/wire/Marshallable;)Lnet/openhft/chronicle/wire/Marshallable;
      23: areturn
}
