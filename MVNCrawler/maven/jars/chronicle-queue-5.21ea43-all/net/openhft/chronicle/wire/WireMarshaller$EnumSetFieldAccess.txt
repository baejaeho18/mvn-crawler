Compiled from "WireMarshaller.java"
class net.openhft.chronicle.wire.WireMarshaller$EnumSetFieldAccess extends net.openhft.chronicle.wire.WireMarshaller$FieldAccess {
  private final java.lang.Object[] values;

  private final java.util.function.BiConsumer<java.lang.Object, net.openhft.chronicle.wire.ValueOut> sequenceGetter;

  private final java.lang.Class componentType;

  private final java.util.function.Supplier<java.util.EnumSet> enumSetSupplier;

  private java.util.function.BiConsumer<java.util.EnumSet, net.openhft.chronicle.wire.ValueIn> addAll;

  net.openhft.chronicle.wire.WireMarshaller$EnumSetFieldAccess(java.lang.reflect.Field, java.lang.Boolean, java.lang.Object[], java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method net/openhft/chronicle/wire/WireMarshaller$FieldAccess."<init>":(Ljava/lang/reflect/Field;Ljava/lang/Boolean;)V
       6: aload_0
       7: aload_3
       8: putfield      #2                  // Field values:[Ljava/lang/Object;
      11: aload_0
      12: aload         4
      14: putfield      #3                  // Field componentType:Ljava/lang/Class;
      17: aload_0
      18: aload_0
      19: invokedynamic #4,  0              // InvokeDynamic #0:get:(Lnet/openhft/chronicle/wire/WireMarshaller$EnumSetFieldAccess;)Ljava/util/function/Supplier;
      24: putfield      #5                  // Field enumSetSupplier:Ljava/util/function/Supplier;
      27: aload_0
      28: aload_0
      29: invokedynamic #6,  0              // InvokeDynamic #1:accept:(Lnet/openhft/chronicle/wire/WireMarshaller$EnumSetFieldAccess;)Ljava/util/function/BiConsumer;
      34: putfield      #7                  // Field sequenceGetter:Ljava/util/function/BiConsumer;
      37: aload_0
      38: aload_0
      39: invokedynamic #8,  0              // InvokeDynamic #2:accept:(Lnet/openhft/chronicle/wire/WireMarshaller$EnumSetFieldAccess;)Ljava/util/function/BiConsumer;
      44: putfield      #9                  // Field addAll:Ljava/util/function/BiConsumer;
      47: return

  private static void sequenceGetter(java.lang.Object, net.openhft.chronicle.wire.ValueOut, java.lang.Object[], java.lang.reflect.Field, java.lang.Class);
    Code:
       0: aload_3
       1: aload_0
       2: invokevirtual #10                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #11                 // class java/util/EnumSet
       8: astore        5
      10: goto          25
      13: astore        6
      15: new           #13                 // class java/lang/AssertionError
      18: dup
      19: aload         6
      21: invokespecial #14                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      24: athrow
      25: aload_2
      26: astore        6
      28: aload         6
      30: arraylength
      31: istore        7
      33: iconst_0
      34: istore        8
      36: iload         8
      38: iload         7
      40: if_icmpge     77
      43: aload         6
      45: iload         8
      47: aaload
      48: astore        9
      50: aload         5
      52: aload         9
      54: invokevirtual #15                 // Method java/util/EnumSet.contains:(Ljava/lang/Object;)Z
      57: ifeq          71
      60: aload_1
      61: aload         4
      63: aload         9
      65: invokeinterface #16,  3           // InterfaceMethod net/openhft/chronicle/wire/ValueOut.object:(Ljava/lang/Class;Ljava/lang/Object;)Lnet/openhft/chronicle/wire/WireOut;
      70: pop
      71: iinc          8, 1
      74: goto          36
      77: return
    Exception table:
       from    to  target type
           0    10    13   Class java/lang/IllegalAccessException

  protected void getValue(java.lang.Object, net.openhft.chronicle.wire.ValueOut, java.lang.Object) throws java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field field:Ljava/lang/reflect/Field;
       4: aload_1
       5: invokevirtual #10                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #18                 // class java/util/Collection
      11: astore        4
      13: aload         4
      15: ifnonnull     26
      18: aload_2
      19: invokeinterface #19,  1           // InterfaceMethod net/openhft/chronicle/wire/ValueOut.nu11:()Lnet/openhft/chronicle/wire/WireOut;
      24: pop
      25: return
      26: aload_2
      27: aload_1
      28: aload_0
      29: getfield      #7                  // Field sequenceGetter:Ljava/util/function/BiConsumer;
      32: invokeinterface #20,  3           // InterfaceMethod net/openhft/chronicle/wire/ValueOut.sequence:(Ljava/lang/Object;Ljava/util/function/BiConsumer;)Lnet/openhft/chronicle/wire/WireOut;
      37: pop
      38: return

  protected void readValue(java.lang.Object, java.lang.Object, net.openhft.chronicle.wire.ValueIn, boolean) throws java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field field:Ljava/lang/reflect/Field;
       4: aload_1
       5: invokevirtual #10                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #11                 // class java/util/EnumSet
      11: astore        5
      13: aload         5
      15: ifnonnull     42
      18: aload_0
      19: getfield      #5                  // Field enumSetSupplier:Ljava/util/function/Supplier;
      22: invokeinterface #21,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      27: checkcast     #11                 // class java/util/EnumSet
      30: astore        5
      32: aload_0
      33: getfield      #17                 // Field field:Ljava/lang/reflect/Field;
      36: aload_1
      37: aload         5
      39: invokevirtual #22                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      42: aload_3
      43: aload         5
      45: aload_0
      46: getfield      #9                  // Field addAll:Ljava/util/function/BiConsumer;
      49: invokeinterface #23,  3           // InterfaceMethod net/openhft/chronicle/wire/ValueIn.sequence:(Ljava/lang/Object;Ljava/util/function/BiConsumer;)Z
      54: ifne          110
      57: aload_0
      58: getfield      #17                 // Field field:Ljava/lang/reflect/Field;
      61: aload_2
      62: invokevirtual #10                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      65: checkcast     #18                 // class java/util/Collection
      68: astore        6
      70: aload         6
      72: ifnonnull     87
      75: aload_0
      76: getfield      #17                 // Field field:Ljava/lang/reflect/Field;
      79: aload_1
      80: aconst_null
      81: invokevirtual #22                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      84: goto          110
      87: aload         5
      89: invokevirtual #24                 // Method java/util/EnumSet.clear:()V
      92: aload         6
      94: invokeinterface #25,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      99: ifne          110
     102: aload         5
     104: aload         6
     106: invokevirtual #26                 // Method java/util/EnumSet.addAll:(Ljava/util/Collection;)Z
     109: pop
     110: return

  protected void copy(java.lang.Object, java.lang.Object) throws java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field field:Ljava/lang/reflect/Field;
       4: aload_1
       5: invokevirtual #10                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #11                 // class java/util/EnumSet
      11: astore_3
      12: aload_3
      13: ifnonnull     26
      16: aload_0
      17: getfield      #17                 // Field field:Ljava/lang/reflect/Field;
      20: aload_2
      21: aconst_null
      22: invokevirtual #22                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      25: return
      26: aload_0
      27: getfield      #17                 // Field field:Ljava/lang/reflect/Field;
      30: aload_2
      31: invokevirtual #10                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #11                 // class java/util/EnumSet
      37: astore        4
      39: aload         4
      41: ifnonnull     68
      44: aload_0
      45: getfield      #5                  // Field enumSetSupplier:Ljava/util/function/Supplier;
      48: invokeinterface #21,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      53: checkcast     #11                 // class java/util/EnumSet
      56: astore        4
      58: aload_0
      59: getfield      #17                 // Field field:Ljava/lang/reflect/Field;
      62: aload_2
      63: aload         4
      65: invokevirtual #22                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      68: aload         4
      70: invokevirtual #24                 // Method java/util/EnumSet.clear:()V
      73: aload_0
      74: getfield      #2                  // Field values:[Ljava/lang/Object;
      77: arraylength
      78: iconst_1
      79: isub
      80: istore        5
      82: iload         5
      84: iconst_m1
      85: if_icmpeq     121
      88: aload_3
      89: aload_0
      90: getfield      #2                  // Field values:[Ljava/lang/Object;
      93: iload         5
      95: aaload
      96: invokevirtual #15                 // Method java/util/EnumSet.contains:(Ljava/lang/Object;)Z
      99: ifeq          115
     102: aload         4
     104: aload_0
     105: getfield      #2                  // Field values:[Ljava/lang/Object;
     108: iload         5
     110: aaload
     111: invokevirtual #27                 // Method java/util/EnumSet.add:(Ljava/lang/Object;)Z
     114: pop
     115: iinc          5, -1
     118: goto          82
     121: return

  protected void setValue(java.lang.Object, net.openhft.chronicle.wire.ValueIn, boolean);
    Code:
       0: new           #28                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #29                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void getAsBytes(java.lang.Object, net.openhft.chronicle.bytes.Bytes);
    Code:
       0: new           #28                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #29                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  private void addAll(java.util.EnumSet, net.openhft.chronicle.wire.ValueIn);
    Code:
       0: aload_1
       1: invokevirtual #30                 // Method java/util/EnumSet.isEmpty:()Z
       4: ifne          11
       7: aload_1
       8: invokevirtual #24                 // Method java/util/EnumSet.clear:()V
      11: aload_2
      12: invokeinterface #31,  1           // InterfaceMethod net/openhft/chronicle/wire/ValueIn.hasNextSequenceItem:()Z
      17: ifeq          38
      20: aload_1
      21: aload_2
      22: aload_0
      23: getfield      #3                  // Field componentType:Ljava/lang/Class;
      26: invokeinterface #32,  2           // InterfaceMethod net/openhft/chronicle/wire/ValueIn.asEnum:(Ljava/lang/Class;)Ljava/lang/Enum;
      31: invokevirtual #27                 // Method java/util/EnumSet.add:(Ljava/lang/Object;)Z
      34: pop
      35: goto          11
      38: return

  private void lambda$new$1(java.lang.Object, net.openhft.chronicle.wire.ValueOut);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: getfield      #2                  // Field values:[Ljava/lang/Object;
       6: aload_0
       7: getfield      #17                 // Field field:Ljava/lang/reflect/Field;
      10: aload_0
      11: getfield      #3                  // Field componentType:Ljava/lang/Class;
      14: invokestatic  #33                 // Method sequenceGetter:(Ljava/lang/Object;Lnet/openhft/chronicle/wire/ValueOut;[Ljava/lang/Object;Ljava/lang/reflect/Field;Ljava/lang/Class;)V
      17: return

  private java.util.EnumSet lambda$new$0();
    Code:
       0: aload_0
       1: getfield      #3                  // Field componentType:Ljava/lang/Class;
       4: invokestatic  #34                 // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
       7: areturn
}
