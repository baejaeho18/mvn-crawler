Compiled from "MethodWriterInvocationHandlerSupplier.java"
public class net.openhft.chronicle.wire.MethodWriterInvocationHandlerSupplier<T> implements java.util.function.Supplier<net.openhft.chronicle.bytes.MethodWriterInvocationHandler> {
  private final java.util.function.Supplier<net.openhft.chronicle.bytes.MethodWriterInvocationHandler> supplier;

  private java.util.function.Function<T, T> modifier;

  private boolean recordHistory;

  private net.openhft.chronicle.bytes.MethodWriterListener methodWriterListener;

  private net.openhft.chronicle.bytes.MethodWriterInterceptorReturns methodWriterInterceptorReturns;

  private net.openhft.chronicle.core.io.Closeable closeable;

  private boolean disableThreadSafe;

  private java.lang.String genericEvent;

  private boolean useMethodIds;

  private final java.lang.ThreadLocal<net.openhft.chronicle.bytes.MethodWriterInvocationHandler> handlerTL;

  private net.openhft.chronicle.bytes.MethodWriterInvocationHandler handler;

  public net.openhft.chronicle.wire.MethodWriterInvocationHandlerSupplier(java.util.function.Supplier<net.openhft.chronicle.bytes.MethodWriterInvocationHandler>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field useMethodIds:Z
       9: aload_0
      10: aload_0
      11: invokedynamic #3,  0              // InvokeDynamic #0:get:(Lnet/openhft/chronicle/wire/MethodWriterInvocationHandlerSupplier;)Ljava/util/function/Supplier;
      16: invokestatic  #4                  // Method java/lang/ThreadLocal.withInitial:(Ljava/util/function/Supplier;)Ljava/lang/ThreadLocal;
      19: putfield      #5                  // Field handlerTL:Ljava/lang/ThreadLocal;
      22: aload_0
      23: aload_1
      24: putfield      #6                  // Field supplier:Ljava/util/function/Supplier;
      27: return

  public void recordHistory(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field recordHistory:Z
       5: return

  public void methodWriterListener(net.openhft.chronicle.bytes.MethodWriterListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field methodWriterListener:Lnet/openhft/chronicle/bytes/MethodWriterListener;
       5: return

  public void methodWriterInterceptor(net.openhft.chronicle.bytes.MethodWriterInterceptor);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #9                  // InterfaceMethod net/openhft/chronicle/bytes/MethodWriterInterceptorReturns.of:(Lnet/openhft/chronicle/bytes/MethodWriterInterceptor;)Lnet/openhft/chronicle/bytes/MethodWriterInterceptorReturns;
       5: putfield      #10                 // Field methodWriterInterceptorReturns:Lnet/openhft/chronicle/bytes/MethodWriterInterceptorReturns;
       8: return

  public net.openhft.chronicle.wire.MethodWriterInvocationHandlerSupplier methodWriterInterceptorReturns(net.openhft.chronicle.bytes.MethodWriterInterceptorReturns);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field methodWriterInterceptorReturns:Lnet/openhft/chronicle/bytes/MethodWriterInterceptorReturns;
       5: aload_0
       6: areturn

  public net.openhft.chronicle.bytes.MethodWriterInterceptorReturns methodWriterInterceptorReturns();
    Code:
       0: aload_0
       1: getfield      #10                 // Field methodWriterInterceptorReturns:Lnet/openhft/chronicle/bytes/MethodWriterInterceptorReturns;
       4: areturn

  public void onClose(net.openhft.chronicle.core.io.Closeable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field closeable:Lnet/openhft/chronicle/core/io/Closeable;
       5: return

  public void disableThreadSafe(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field disableThreadSafe:Z
       5: return

  public void genericEvent(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field genericEvent:Ljava/lang/String;
       5: return

  public void useMethodIds(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field useMethodIds:Z
       5: return

  public net.openhft.chronicle.wire.MethodWriterInvocationHandlerSupplier modifier(java.util.function.Function<T, T>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field modifier:Ljava/util/function/Function;
       5: aload_0
       6: areturn

  private net.openhft.chronicle.bytes.MethodWriterInvocationHandler newHandler();
    Code:
       0: aload_0
       1: getfield      #6                  // Field supplier:Ljava/util/function/Supplier;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       9: checkcast     #16                 // class net/openhft/chronicle/bytes/MethodWriterInvocationHandler
      12: astore_1
      13: aload_1
      14: aload_0
      15: getfield      #13                 // Field genericEvent:Ljava/lang/String;
      18: invokeinterface #17,  2           // InterfaceMethod net/openhft/chronicle/bytes/MethodWriterInvocationHandler.genericEvent:(Ljava/lang/String;)V
      23: aload_1
      24: aload_0
      25: getfield      #8                  // Field methodWriterListener:Lnet/openhft/chronicle/bytes/MethodWriterListener;
      28: aload_0
      29: getfield      #10                 // Field methodWriterInterceptorReturns:Lnet/openhft/chronicle/bytes/MethodWriterInterceptorReturns;
      32: invokeinterface #18,  3           // InterfaceMethod net/openhft/chronicle/bytes/MethodWriterInvocationHandler.methodWriterInterceptorReturns:(Lnet/openhft/chronicle/bytes/MethodWriterListener;Lnet/openhft/chronicle/bytes/MethodWriterInterceptorReturns;)V
      37: aload_1
      38: aload_0
      39: getfield      #11                 // Field closeable:Lnet/openhft/chronicle/core/io/Closeable;
      42: invokeinterface #19,  2           // InterfaceMethod net/openhft/chronicle/bytes/MethodWriterInvocationHandler.onClose:(Lnet/openhft/chronicle/core/io/Closeable;)V
      47: aload_1
      48: aload_0
      49: getfield      #7                  // Field recordHistory:Z
      52: invokeinterface #20,  2           // InterfaceMethod net/openhft/chronicle/bytes/MethodWriterInvocationHandler.recordHistory:(Z)V
      57: aload_1
      58: aload_0
      59: getfield      #2                  // Field useMethodIds:Z
      62: invokeinterface #21,  2           // InterfaceMethod net/openhft/chronicle/bytes/MethodWriterInvocationHandler.useMethodIds:(Z)V
      67: aload_1
      68: areturn

  public net.openhft.chronicle.bytes.MethodWriterInvocationHandler get();
    Code:
       0: aload_0
       1: getfield      #12                 // Field disableThreadSafe:Z
       4: ifeq          27
       7: aload_0
       8: getfield      #22                 // Field handler:Lnet/openhft/chronicle/bytes/MethodWriterInvocationHandler;
      11: ifnonnull     22
      14: aload_0
      15: aload_0
      16: invokespecial #23                 // Method newHandler:()Lnet/openhft/chronicle/bytes/MethodWriterInvocationHandler;
      19: putfield      #22                 // Field handler:Lnet/openhft/chronicle/bytes/MethodWriterInvocationHandler;
      22: aload_0
      23: getfield      #22                 // Field handler:Lnet/openhft/chronicle/bytes/MethodWriterInvocationHandler;
      26: areturn
      27: aload_0
      28: getfield      #5                  // Field handlerTL:Ljava/lang/ThreadLocal;
      31: invokevirtual #24                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      34: checkcast     #16                 // class net/openhft/chronicle/bytes/MethodWriterInvocationHandler
      37: areturn

  public java.lang.Object get();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method get:()Lnet/openhft/chronicle/bytes/MethodWriterInvocationHandler;
       4: areturn
}
