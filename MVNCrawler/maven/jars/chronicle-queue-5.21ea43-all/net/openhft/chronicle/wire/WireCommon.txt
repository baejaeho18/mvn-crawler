Compiled from "WireCommon.java"
public interface net.openhft.chronicle.wire.WireCommon {
  public abstract void classLookup(net.openhft.chronicle.core.pool.ClassLookup);

  public abstract net.openhft.chronicle.core.pool.ClassLookup classLookup();

  public abstract void pauser(net.openhft.chronicle.threads.Pauser);

  public abstract net.openhft.chronicle.threads.Pauser pauser();

  public abstract net.openhft.chronicle.bytes.Bytes<?> bytes();

  public abstract net.openhft.chronicle.bytes.BytesComment<?> bytesComment();

  public abstract net.openhft.chronicle.core.values.IntValue newIntReference();

  public abstract net.openhft.chronicle.core.values.LongValue newLongReference();

  public default net.openhft.chronicle.core.values.TwoLongValue newTwoLongReference();
    Code:
       0: new           #1                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #2                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public abstract net.openhft.chronicle.core.values.LongArrayValues newLongArrayReference();

  public abstract net.openhft.chronicle.core.values.IntArrayValues newIntArrayReference();

  public abstract void clear();

  public abstract java.lang.Object parent();

  public abstract void parent(java.lang.Object);

  public abstract boolean startUse();

  public abstract boolean endUse();

  public default boolean notCompleteIsNotPresent();
    Code:
       0: iconst_1
       1: ireturn

  public default void notCompleteIsNotPresent(boolean);
    Code:
       0: new           #1                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #2                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public abstract net.openhft.chronicle.wire.WireOut headerNumber(long);

  public abstract long headerNumber();

  public abstract void usePadding(boolean);

  public abstract boolean usePadding();

  public abstract net.openhft.chronicle.core.values.BooleanValue newBooleanReference();

  public abstract boolean useSelfDescribingMessage(net.openhft.chronicle.bytes.CommonMarshallable);
}
