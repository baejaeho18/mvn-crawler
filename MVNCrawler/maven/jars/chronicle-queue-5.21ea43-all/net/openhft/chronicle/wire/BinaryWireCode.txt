Compiled from "BinaryWireCode.java"
public final class net.openhft.chronicle.wire.BinaryWireCode extends java.lang.Enum<net.openhft.chronicle.wire.BinaryWireCode> {
  public static final int BYTES_LENGTH8;

  public static final int BYTES_LENGTH16;

  public static final int BYTES_LENGTH32;

  public static final int FIELD_ANCHOR;

  public static final int ANCHOR;

  public static final int UPDATED_ALIAS;

  public static final int U8_ARRAY;

  public static final int I64_ARRAY;

  public static final int PADDING32;

  public static final int PADDING;

  public static final int FLOAT32;

  public static final int FLOAT64;

  public static final int FLOAT_STOP_2;

  public static final int FLOAT_STOP_4;

  public static final int FLOAT_STOP_6;

  public static final int FLOAT_SET_LOW_0;

  public static final int FLOAT_SET_LOW_2;

  public static final int FLOAT_SET_LOW_4;

  public static final int UUID;

  public static final int UINT8;

  public static final int UINT16;

  public static final int UINT32;

  public static final int INT8;

  public static final int INT16;

  public static final int INT32;

  public static final int INT64;

  public static final int SET_LOW_INT8;

  public static final int SET_LOW_INT16;

  public static final int INT64_0x;

  public static final int FALSE;

  public static final int TRUE;

  public static final int TIME;

  public static final int DATE;

  public static final int DATE_TIME;

  public static final int ZONED_DATE_TIME;

  public static final int TYPE_PREFIX;

  public static final int FIELD_NAME_ANY;

  public static final int STRING_ANY;

  public static final int EVENT_NAME;

  public static final int FIELD_NUMBER;

  public static final int NULL;

  public static final int TYPE_LITERAL;

  public static final int EVENT_OBJECT;

  public static final int COMMENT;

  public static final int HINT;

  public static final int FIELD_NAME0;

  public static final int FIELD_NAME31;

  public static final int STRING_0;

  public static final int STRING_31;

  public static final java.lang.String[] STRING_FOR_CODE;

  private static final net.openhft.chronicle.wire.BinaryWireCode[] $VALUES;

  public static net.openhft.chronicle.wire.BinaryWireCode[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lnet/openhft/chronicle/wire/BinaryWireCode;
       3: invokevirtual #2                  // Method "[Lnet/openhft/chronicle/wire/BinaryWireCode;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lnet/openhft/chronicle/wire/BinaryWireCode;"
       9: areturn

  public static net.openhft.chronicle.wire.BinaryWireCode valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class net/openhft/chronicle/wire/BinaryWireCode
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class net/openhft/chronicle/wire/BinaryWireCode
       9: areturn

  private net.openhft.chronicle.wire.BinaryWireCode();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public static boolean isFieldCode(int);
    Code:
       0: iload_0
       1: sipush        183
       4: if_icmpeq     28
       7: iload_0
       8: sipush        186
      11: if_icmpeq     28
      14: iload_0
      15: sipush        192
      18: if_icmplt     32
      21: iload_0
      22: sipush        223
      25: if_icmpgt     32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public static java.lang.String stringForCode(int);
    Code:
       0: iload_0
       1: iconst_m1
       2: if_icmpne     10
       5: ldc           #7                  // String EndOfFile
       7: goto          15
      10: getstatic     #8                  // Field STRING_FOR_CODE:[Ljava/lang/String;
      13: iload_0
      14: aaload
      15: areturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #4                  // class net/openhft/chronicle/wire/BinaryWireCode
       4: putstatic     #1                  // Field $VALUES:[Lnet/openhft/chronicle/wire/BinaryWireCode;
       7: sipush        256
      10: anewarray     #9                  // class java/lang/String
      13: putstatic     #8                  // Field STRING_FOR_CODE:[Ljava/lang/String;
      16: ldc           #4                  // class net/openhft/chronicle/wire/BinaryWireCode
      18: invokevirtual #10                 // Method java/lang/Class.getDeclaredFields:()[Ljava/lang/reflect/Field;
      21: astore_0
      22: aload_0
      23: arraylength
      24: istore_1
      25: iconst_0
      26: istore_2
      27: iload_2
      28: iload_1
      29: if_icmpge     65
      32: aload_0
      33: iload_2
      34: aaload
      35: astore_3
      36: aload_3
      37: invokevirtual #11                 // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
      40: getstatic     #12                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      43: if_acmpne     59
      46: getstatic     #8                  // Field STRING_FOR_CODE:[Ljava/lang/String;
      49: aload_3
      50: aconst_null
      51: invokevirtual #13                 // Method java/lang/reflect/Field.getInt:(Ljava/lang/Object;)I
      54: aload_3
      55: invokevirtual #14                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
      58: aastore
      59: iinc          2, 1
      62: goto          27
      65: sipush        192
      68: istore_0
      69: iload_0
      70: sipush        223
      73: if_icmpgt     106
      76: getstatic     #8                  // Field STRING_FOR_CODE:[Ljava/lang/String;
      79: iload_0
      80: new           #15                 // class java/lang/StringBuilder
      83: dup
      84: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      87: ldc           #17                 // String FIELD_
      89: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: iload_0
      93: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      96: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: aastore
     100: iinc          0, 1
     103: goto          69
     106: sipush        224
     109: istore_0
     110: iload_0
     111: sipush        255
     114: if_icmpgt     147
     117: getstatic     #8                  // Field STRING_FOR_CODE:[Ljava/lang/String;
     120: iload_0
     121: new           #15                 // class java/lang/StringBuilder
     124: dup
     125: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
     128: ldc           #21                 // String STRING_
     130: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: iload_0
     134: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     137: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     140: aastore
     141: iinc          0, 1
     144: goto          110
     147: iconst_0
     148: istore_0
     149: iload_0
     150: getstatic     #8                  // Field STRING_FOR_CODE:[Ljava/lang/String;
     153: arraylength
     154: if_icmpge     241
     157: getstatic     #8                  // Field STRING_FOR_CODE:[Ljava/lang/String;
     160: iload_0
     161: aaload
     162: ifnonnull     235
     165: iload_0
     166: bipush        32
     168: if_icmple     177
     171: iload_0
     172: bipush        127
     174: if_icmplt     210
     177: getstatic     #8                  // Field STRING_FOR_CODE:[Ljava/lang/String;
     180: iload_0
     181: new           #15                 // class java/lang/StringBuilder
     184: dup
     185: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
     188: ldc           #22                 // String Unknown_0x
     190: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     193: iload_0
     194: invokestatic  #23                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
     197: invokevirtual #24                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
     200: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: aastore
     207: goto          235
     210: getstatic     #8                  // Field STRING_FOR_CODE:[Ljava/lang/String;
     213: iload_0
     214: new           #15                 // class java/lang/StringBuilder
     217: dup
     218: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
     221: ldc           #25                 // String Unknown_
     223: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     226: iload_0
     227: i2c
     228: invokevirtual #26                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     231: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     234: aastore
     235: iinc          0, 1
     238: goto          149
     241: goto          254
     244: astore_0
     245: new           #28                 // class java/lang/AssertionError
     248: dup
     249: aload_0
     250: invokespecial #29                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     253: athrow
     254: return
    Exception table:
       from    to  target type
          16   241   244   Class java/lang/IllegalAccessException
}
