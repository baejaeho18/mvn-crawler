Compiled from "WireMarshaller.java"
class net.openhft.chronicle.wire.WireMarshaller$CharFieldAccess extends net.openhft.chronicle.wire.WireMarshaller$FieldAccess {
  net.openhft.chronicle.wire.WireMarshaller$CharFieldAccess(java.lang.reflect.Field);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method net/openhft/chronicle/wire/WireMarshaller$FieldAccess."<init>":(Ljava/lang/reflect/Field;)V
       5: return

  protected void getValue(java.lang.Object, net.openhft.chronicle.wire.ValueOut, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field offset:J
       5: invokestatic  #3                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafeGetChar:(Ljava/lang/Object;J)C
       8: istore        4
      10: iload         4
      12: ldc           #4                  // int 65535
      14: if_icmpne     27
      17: aload_2
      18: invokeinterface #5,  1            // InterfaceMethod net/openhft/chronicle/wire/ValueOut.nu11:()Lnet/openhft/chronicle/wire/WireOut;
      23: pop
      24: goto          52
      27: invokestatic  #6                  // Method net/openhft/chronicle/wire/WireMarshaller.access$300:()Lnet/openhft/chronicle/core/pool/StringBuilderPool;
      30: invokevirtual #7                  // Method net/openhft/chronicle/core/pool/StringBuilderPool.acquireStringBuilder:()Ljava/lang/StringBuilder;
      33: astore        5
      35: aload         5
      37: iload         4
      39: invokevirtual #8                  // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      42: pop
      43: aload_2
      44: aload         5
      46: invokeinterface #9,  2            // InterfaceMethod net/openhft/chronicle/wire/ValueOut.text:(Ljava/lang/CharSequence;)Lnet/openhft/chronicle/wire/WireOut;
      51: pop
      52: return

  protected void setValue(java.lang.Object, net.openhft.chronicle.wire.ValueIn, boolean);
    Code:
       0: aload_2
       1: invokeinterface #10,  1           // InterfaceMethod net/openhft/chronicle/wire/ValueIn.text:()Ljava/lang/String;
       6: astore        4
       8: aload         4
      10: ifnull        22
      13: aload         4
      15: invokevirtual #11                 // Method java/lang/String.length:()I
      18: iconst_1
      19: if_icmpge     34
      22: iload_3
      23: ifeq          33
      26: ldc           #12                 // String \u0000
      28: astore        4
      30: goto          34
      33: return
      34: aload_1
      35: aload_0
      36: getfield      #2                  // Field offset:J
      39: aload         4
      41: iconst_0
      42: invokevirtual #13                 // Method java/lang/String.charAt:(I)C
      45: invokestatic  #14                 // Method net/openhft/chronicle/core/UnsafeMemory.unsafePutChar:(Ljava/lang/Object;JC)V
      48: return

  public void getAsBytes(java.lang.Object, net.openhft.chronicle.bytes.Bytes);
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: getfield      #2                  // Field offset:J
       6: invokestatic  #3                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafeGetChar:(Ljava/lang/Object;J)C
       9: invokeinterface #15,  2           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writeUnsignedShort:(I)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      14: pop
      15: return

  protected boolean sameValue(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field offset:J
       5: invokestatic  #3                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafeGetChar:(Ljava/lang/Object;J)C
       8: aload_2
       9: aload_0
      10: getfield      #2                  // Field offset:J
      13: invokestatic  #3                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafeGetChar:(Ljava/lang/Object;J)C
      16: if_icmpne     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  protected void copy(java.lang.Object, java.lang.Object);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #2                  // Field offset:J
       5: aload_1
       6: aload_0
       7: getfield      #2                  // Field offset:J
      10: invokestatic  #3                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafeGetChar:(Ljava/lang/Object;J)C
      13: invokestatic  #14                 // Method net/openhft/chronicle/core/UnsafeMemory.unsafePutChar:(Ljava/lang/Object;JC)V
      16: return
}
