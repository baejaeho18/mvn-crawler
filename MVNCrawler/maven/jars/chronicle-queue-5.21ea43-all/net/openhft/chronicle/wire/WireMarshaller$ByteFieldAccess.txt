Compiled from "WireMarshaller.java"
class net.openhft.chronicle.wire.WireMarshaller$ByteFieldAccess extends net.openhft.chronicle.wire.WireMarshaller$FieldAccess {
  net.openhft.chronicle.wire.WireMarshaller$ByteFieldAccess(java.lang.reflect.Field);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method net/openhft/chronicle/wire/WireMarshaller$FieldAccess."<init>":(Ljava/lang/reflect/Field;)V
       5: return

  protected void getValue(java.lang.Object, net.openhft.chronicle.wire.ValueOut, java.lang.Object);
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: getfield      #2                  // Field offset:J
       6: invokestatic  #3                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafeGetByte:(Ljava/lang/Object;J)B
       9: invokeinterface #4,  2            // InterfaceMethod net/openhft/chronicle/wire/ValueOut.int8:(B)Lnet/openhft/chronicle/wire/WireOut;
      14: pop
      15: return

  protected void setValue(java.lang.Object, net.openhft.chronicle.wire.ValueIn, boolean);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field offset:J
       5: aload_2
       6: invokeinterface #5,  1            // InterfaceMethod net/openhft/chronicle/wire/ValueIn.int8:()B
      11: invokestatic  #6                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafePutByte:(Ljava/lang/Object;JB)V
      14: return

  public void getAsBytes(java.lang.Object, net.openhft.chronicle.bytes.Bytes);
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: getfield      #2                  // Field offset:J
       6: invokestatic  #3                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafeGetByte:(Ljava/lang/Object;J)B
       9: invokeinterface #7,  2            // InterfaceMethod net/openhft/chronicle/bytes/Bytes.writeByte:(B)Lnet/openhft/chronicle/bytes/StreamingDataOutput;
      14: pop
      15: return

  protected boolean sameValue(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field offset:J
       5: invokestatic  #3                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafeGetByte:(Ljava/lang/Object;J)B
       8: aload_2
       9: aload_0
      10: getfield      #2                  // Field offset:J
      13: invokestatic  #3                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafeGetByte:(Ljava/lang/Object;J)B
      16: if_icmpne     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  protected void copy(java.lang.Object, java.lang.Object);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #2                  // Field offset:J
       5: aload_1
       6: aload_0
       7: getfield      #2                  // Field offset:J
      10: invokestatic  #3                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafeGetByte:(Ljava/lang/Object;J)B
      13: invokestatic  #6                  // Method net/openhft/chronicle/core/UnsafeMemory.unsafePutByte:(Ljava/lang/Object;JB)V
      16: return
}
