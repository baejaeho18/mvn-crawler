Compiled from "ThreadLocalHelper.java"
public final class net.openhft.chronicle.core.threads.ThreadLocalHelper {
  private net.openhft.chronicle.core.threads.ThreadLocalHelper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <T> T getTL(java.lang.ThreadLocal<java.lang.ref.WeakReference<T>>, java.util.function.Supplier<T>);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       4: checkcast     #3                  // class java/lang/ref/WeakReference
       7: astore_2
       8: aconst_null
       9: astore_3
      10: aload_2
      11: ifnull        19
      14: aload_2
      15: invokevirtual #4                  // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      18: astore_3
      19: aload_3
      20: ifnonnull     44
      23: aload_1
      24: invokeinterface #5,  1            // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      29: astore_3
      30: new           #6                  // class java/lang/ref/WeakReference
      33: dup
      34: aload_3
      35: invokespecial #7                  // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      38: astore_2
      39: aload_0
      40: aload_2
      41: invokevirtual #8                  // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      44: aload_3
      45: areturn

  public static <T> T getSTL(java.lang.ThreadLocal<T>, java.util.function.Supplier<T>);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       4: astore_2
       5: aload_2
       6: ifnonnull     21
       9: aload_1
      10: invokeinterface #5,  1            // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      15: astore_2
      16: aload_0
      17: aload_2
      18: invokevirtual #8                  // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      21: aload_2
      22: areturn

  public static <T, A> T getTL(java.lang.ThreadLocal<java.lang.ref.WeakReference<T>>, A, java.util.function.Function<A, T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aconst_null
       5: invokestatic  #9                  // Method getTL:(Ljava/lang/ThreadLocal;Ljava/lang/Object;Ljava/util/function/Function;Ljava/lang/ref/ReferenceQueue;Ljava/util/function/Consumer;)Ljava/lang/Object;
       8: areturn

  public static <T, A> T getTL(java.lang.ThreadLocal<java.lang.ref.WeakReference<T>>, A, java.util.function.Function<A, T>, java.lang.ref.ReferenceQueue<T>, java.util.function.Consumer<java.lang.ref.WeakReference<T>>);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       4: checkcast     #10                 // class java/lang/ref/WeakReference
       7: astore        5
       9: aconst_null
      10: astore        6
      12: aload         5
      14: ifnull        24
      17: aload         5
      19: invokevirtual #4                  // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      22: astore        6
      24: aload         6
      26: ifnonnull     88
      29: aload_2
      30: aload_1
      31: invokeinterface #11,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      36: astore        6
      38: aload_3
      39: ifnull        71
      42: aload         4
      44: ifnull        71
      47: new           #6                  // class java/lang/ref/WeakReference
      50: dup
      51: aload         6
      53: aload_3
      54: invokespecial #12                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      57: astore        5
      59: aload         4
      61: aload         5
      63: invokeinterface #13,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      68: goto          82
      71: new           #6                  // class java/lang/ref/WeakReference
      74: dup
      75: aload         6
      77: invokespecial #7                  // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      80: astore        5
      82: aload_0
      83: aload         5
      85: invokevirtual #8                  // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      88: aload         6
      90: areturn
}
