Compiled from "ReferenceCounted.java"
public interface net.openhft.chronicle.core.io.ReferenceCounted extends net.openhft.chronicle.core.io.ReferenceOwner {
  public abstract void reserve(net.openhft.chronicle.core.io.ReferenceOwner) throws java.lang.IllegalStateException;

  public default void reserveTransfer(net.openhft.chronicle.core.io.ReferenceOwner, net.openhft.chronicle.core.io.ReferenceOwner) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #1,  2            // InterfaceMethod reserve:(Lnet/openhft/chronicle/core/io/ReferenceOwner;)V
       7: aload_0
       8: aload_1
       9: invokeinterface #2,  2            // InterfaceMethod release:(Lnet/openhft/chronicle/core/io/ReferenceOwner;)V
      14: return

  public abstract boolean tryReserve(net.openhft.chronicle.core.io.ReferenceOwner) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException;

  public abstract boolean reservedBy(net.openhft.chronicle.core.io.ReferenceOwner) throws java.lang.IllegalStateException;

  public abstract void release(net.openhft.chronicle.core.io.ReferenceOwner) throws java.lang.IllegalStateException;

  public abstract void releaseLast(net.openhft.chronicle.core.io.ReferenceOwner) throws java.lang.IllegalStateException;

  public default void releaseLast() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getstatic     #3                  // Field INIT:Lnet/openhft/chronicle/core/io/ReferenceOwner;
       4: invokeinterface #4,  2            // InterfaceMethod releaseLast:(Lnet/openhft/chronicle/core/io/ReferenceOwner;)V
       9: return

  public abstract int refCount();
}
