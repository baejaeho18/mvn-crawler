Compiled from "SetTimeProvider.java"
public class net.openhft.chronicle.core.time.SetTimeProvider extends java.util.concurrent.atomic.AtomicLong implements net.openhft.chronicle.core.time.TimeProvider {
  private long autoIncrement;

  public net.openhft.chronicle.core.time.SetTimeProvider();
    Code:
       0: aload_0
       1: lconst_0
       2: invokespecial #1                  // Method "<init>":(J)V
       5: return

  public net.openhft.chronicle.core.time.SetTimeProvider(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #2                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
       5: aload_0
       6: lconst_0
       7: putfield      #3                  // Field autoIncrement:J
      10: return

  public net.openhft.chronicle.core.time.SetTimeProvider(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #4                  // Method initialNanos:(Ljava/lang/String;)J
       5: invokespecial #2                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
       8: aload_0
       9: lconst_0
      10: putfield      #3                  // Field autoIncrement:J
      13: return

  public net.openhft.chronicle.core.time.SetTimeProvider(java.time.Instant);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #5                  // Method initialNanos:(Ljava/time/Instant;)J
       5: invokespecial #2                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
       8: aload_0
       9: lconst_0
      10: putfield      #3                  // Field autoIncrement:J
      13: return

  static long initialNanos(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #6                  // String /
       3: ldc           #7                  // String -
       5: invokevirtual #8                  // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
       8: invokestatic  #9                  // Method java/time/LocalDateTime.parse:(Ljava/lang/CharSequence;)Ljava/time/LocalDateTime;
      11: astore_1
      12: aload_1
      13: getstatic     #10                 // Field java/time/ZoneOffset.UTC:Ljava/time/ZoneOffset;
      16: invokevirtual #11                 // Method java/time/LocalDateTime.toInstant:(Ljava/time/ZoneOffset;)Ljava/time/Instant;
      19: invokestatic  #5                  // Method initialNanos:(Ljava/time/Instant;)J
      22: lreturn

  static long initialNanos(java.time.Instant);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method java/time/Instant.getEpochSecond:()J
       4: ldc2_w        #13                 // long 1000000000l
       7: lmul
       8: lstore_1
       9: aload_0
      10: getstatic     #15                 // Field java/time/temporal/ChronoField.NANO_OF_SECOND:Ljava/time/temporal/ChronoField;
      13: invokevirtual #16                 // Method java/time/Instant.isSupported:(Ljava/time/temporal/TemporalField;)Z
      16: ifeq          29
      19: lload_1
      20: aload_0
      21: getstatic     #15                 // Field java/time/temporal/ChronoField.NANO_OF_SECOND:Ljava/time/temporal/ChronoField;
      24: invokevirtual #17                 // Method java/time/Instant.getLong:(Ljava/time/temporal/TemporalField;)J
      27: ladd
      28: lstore_1
      29: lload_1
      30: lreturn

  public net.openhft.chronicle.core.time.SetTimeProvider autoIncrement(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_3
       2: lload_1
       3: invokevirtual #18                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       6: putfield      #3                  // Field autoIncrement:J
       9: aload_0
      10: areturn

  public void currentTimeMillis(long) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: getstatic     #19                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       4: lload_1
       5: invokevirtual #18                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       8: invokevirtual #20                 // Method currentTimeNanos:(J)V
      11: return

  public long currentTimeMillis();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method currentTimeNanos:()J
       4: ldc2_w        #22                 // long 1000000l
       7: ldiv
       8: lreturn

  public void currentTimeMicros(long) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: getstatic     #24                 // Field java/util/concurrent/TimeUnit.MICROSECONDS:Ljava/util/concurrent/TimeUnit;
       4: lload_1
       5: invokevirtual #18                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       8: invokevirtual #20                 // Method currentTimeNanos:(J)V
      11: return

  public long currentTimeMicros();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method currentTimeNanos:()J
       4: ldc2_w        #25                 // long 1000l
       7: ldiv
       8: lreturn

  public void currentTimeNanos(long) throws java.lang.IllegalArgumentException;
    Code:
       0: lload_1
       1: aload_0
       2: invokevirtual #27                 // Method get:()J
       5: lcmp
       6: ifge          19
       9: new           #28                 // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #29                 // String Cannot go back in time!
      15: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: lload_1
      21: invokevirtual #31                 // Method set:(J)V
      24: return

  public long currentTimeNanos();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field autoIncrement:J
       5: invokevirtual #32                 // Method getAndAdd:(J)J
       8: lreturn

  public long currentTime(java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #21                 // Method currentTimeNanos:()J
       5: getstatic     #33                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
       8: invokevirtual #34                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      11: lreturn

  public net.openhft.chronicle.core.time.SetTimeProvider advanceMillis(long);
    Code:
       0: aload_0
       1: getstatic     #19                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       4: lload_1
       5: invokevirtual #18                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       8: invokevirtual #35                 // Method advanceNanos:(J)Lnet/openhft/chronicle/core/time/SetTimeProvider;
      11: pop
      12: aload_0
      13: areturn

  public net.openhft.chronicle.core.time.SetTimeProvider advanceMicros(long);
    Code:
       0: aload_0
       1: getstatic     #24                 // Field java/util/concurrent/TimeUnit.MICROSECONDS:Ljava/util/concurrent/TimeUnit;
       4: lload_1
       5: invokevirtual #18                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       8: invokevirtual #35                 // Method advanceNanos:(J)Lnet/openhft/chronicle/core/time/SetTimeProvider;
      11: pop
      12: aload_0
      13: areturn

  public net.openhft.chronicle.core.time.SetTimeProvider advanceNanos(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #36                 // Method addAndGet:(J)J
       5: pop2
       6: aload_0
       7: areturn

  public java.lang.String toString();
    Code:
       0: new           #37                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #39                 // String SetTimeProvider{autoIncrement=
       9: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #3                  // Field autoIncrement:J
      16: invokevirtual #41                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      19: ldc           #42                 // String , nanoTime=
      21: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #27                 // Method get:()J
      28: invokevirtual #41                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      31: bipush        125
      33: invokevirtual #43                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      36: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn
}
