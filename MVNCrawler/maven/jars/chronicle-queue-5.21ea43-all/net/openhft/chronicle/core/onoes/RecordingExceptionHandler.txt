Compiled from "RecordingExceptionHandler.java"
public class net.openhft.chronicle.core.onoes.RecordingExceptionHandler implements net.openhft.chronicle.core.onoes.ExceptionHandler {
  private final net.openhft.chronicle.core.onoes.LogLevel level;

  private final java.util.Map<net.openhft.chronicle.core.onoes.ExceptionKey, java.lang.Integer> exceptionKeyCountMap;

  private final boolean exceptionsOnly;

  public net.openhft.chronicle.core.onoes.RecordingExceptionHandler(net.openhft.chronicle.core.onoes.LogLevel, java.util.Map<net.openhft.chronicle.core.onoes.ExceptionKey, java.lang.Integer>, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field level:Lnet/openhft/chronicle/core/onoes/LogLevel;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field exceptionKeyCountMap:Ljava/util/Map;
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field exceptionsOnly:Z
      19: return

  public void on(java.lang.Class, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field exceptionsOnly:Z
       4: ifeq          12
       7: aload_3
       8: ifnonnull     12
      11: return
      12: aload_0
      13: getfield      #3                  // Field exceptionKeyCountMap:Ljava/util/Map;
      16: dup
      17: astore        4
      19: monitorenter
      20: new           #5                  // class net/openhft/chronicle/core/onoes/ExceptionKey
      23: dup
      24: aload_0
      25: getfield      #2                  // Field level:Lnet/openhft/chronicle/core/onoes/LogLevel;
      28: aload_1
      29: aload_2
      30: aload_3
      31: invokespecial #6                  // Method net/openhft/chronicle/core/onoes/ExceptionKey."<init>":(Lnet/openhft/chronicle/core/onoes/LogLevel;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Throwable;)V
      34: astore        5
      36: aload_0
      37: getfield      #3                  // Field exceptionKeyCountMap:Ljava/util/Map;
      40: aload         5
      42: iconst_1
      43: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      46: invokedynamic #8,  0              // InvokeDynamic #0:apply:()Ljava/util/function/BiFunction;
      51: invokeinterface #9,  4            // InterfaceMethod java/util/Map.merge:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
      56: pop
      57: aload         4
      59: monitorexit
      60: goto          71
      63: astore        6
      65: aload         4
      67: monitorexit
      68: aload         6
      70: athrow
      71: return
    Exception table:
       from    to  target type
          20    60    63   any
          63    68    63   any

  private static java.lang.Integer lambda$on$0(java.lang.Integer, java.lang.Integer);
    Code:
       0: aload_0
       1: ifnonnull     11
       4: aload_1
       5: invokevirtual #10                 // Method java/lang/Integer.intValue:()I
       8: goto          20
      11: aload_0
      12: invokevirtual #10                 // Method java/lang/Integer.intValue:()I
      15: aload_1
      16: invokevirtual #10                 // Method java/lang/Integer.intValue:()I
      19: iadd
      20: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      23: areturn
}
