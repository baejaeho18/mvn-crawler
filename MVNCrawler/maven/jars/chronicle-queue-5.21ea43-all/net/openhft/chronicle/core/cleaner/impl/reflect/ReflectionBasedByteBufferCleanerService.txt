Compiled from "ReflectionBasedByteBufferCleanerService.java"
public final class net.openhft.chronicle.core.cleaner.impl.reflect.ReflectionBasedByteBufferCleanerService implements net.openhft.chronicle.core.cleaner.spi.ByteBufferCleanerService {
  private static final java.lang.String JDK8_CLEANER_CLASS_NAME;

  private static final java.lang.String JDK9_CLEANER_CLASS_NAME;

  private static final java.lang.invoke.MethodHandle CLEANER_METHOD;

  private static final java.lang.invoke.MethodHandle CLEAN_METHOD;

  private static final net.openhft.chronicle.core.cleaner.spi.ByteBufferCleanerService$Impact IMPACT;

  public net.openhft.chronicle.core.cleaner.impl.reflect.ReflectionBasedByteBufferCleanerService();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void clean(java.nio.ByteBuffer);
    Code:
       0: getstatic     #2                  // Field IMPACT:Lnet/openhft/chronicle/core/cleaner/spi/ByteBufferCleanerService$Impact;
       3: getstatic     #3                  // Field net/openhft/chronicle/core/cleaner/spi/ByteBufferCleanerService$Impact.UNAVAILABLE:Lnet/openhft/chronicle/core/cleaner/spi/ByteBufferCleanerService$Impact;
       6: if_acmpne     53
       9: ldc           #4                  // class net/openhft/chronicle/core/cleaner/impl/reflect/ReflectionBasedByteBufferCleanerService
      11: invokevirtual #5                  // Method java/lang/Class.getName:()Ljava/lang/String;
      14: invokestatic  #6                  // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      17: new           #7                  // class java/lang/StringBuilder
      20: dup
      21: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #9                  // String Cleaning is not available. The ByteBuffer 0x
      26: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_1
      30: invokestatic  #11                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      33: invokestatic  #12                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      36: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #13                 // String  could not be explicitly cleaned and will thus linger until the next GC.
      41: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokevirtual #15                 // Method java/util/logging/Logger.warning:(Ljava/lang/String;)V
      50: goto          80
      53: getstatic     #16                 // Field CLEANER_METHOD:Ljava/lang/invoke/MethodHandle;
      56: aload_1
      57: checkcast     #17                 // class sun/nio/ch/DirectBuffer
      60: invokevirtual #18                 // Method java/lang/invoke/MethodHandle.invoke:(Lsun/nio/ch/DirectBuffer;)Ljava/lang/Object;
      63: astore_2
      64: getstatic     #19                 // Field CLEAN_METHOD:Ljava/lang/invoke/MethodHandle;
      67: aload_2
      68: invokevirtual #20                 // Method java/lang/invoke/MethodHandle.invoke:(Ljava/lang/Object;)V
      71: goto          80
      74: astore_2
      75: aload_2
      76: invokestatic  #22                 // Method net/openhft/chronicle/core/Jvm.rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      79: athrow
      80: return
    Exception table:
       from    to  target type
          53    71    74   Class java/lang/Throwable

  public net.openhft.chronicle.core.cleaner.spi.ByteBufferCleanerService$Impact impact();
    Code:
       0: getstatic     #2                  // Field IMPACT:Lnet/openhft/chronicle/core/cleaner/spi/ByteBufferCleanerService$Impact;
       3: areturn

  static {};
    Code:
       0: invokestatic  #23                 // Method java/lang/invoke/MethodHandles.lookup:()Ljava/lang/invoke/MethodHandles$Lookup;
       3: astore_0
       4: invokestatic  #24                 // Method net/openhft/chronicle/core/Jvm.isJava9Plus:()Z
       7: ifeq          15
      10: ldc           #25                 // String jdk.internal.ref.Cleaner
      12: goto          17
      15: ldc           #26                 // String sun.misc.Cleaner
      17: astore_1
      18: aconst_null
      19: astore_2
      20: aconst_null
      21: astore_3
      22: getstatic     #27                 // Field net/openhft/chronicle/core/cleaner/spi/ByteBufferCleanerService$Impact.SOME_IMPACT:Lnet/openhft/chronicle/core/cleaner/spi/ByteBufferCleanerService$Impact;
      25: astore        4
      27: aload_1
      28: invokestatic  #28                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      31: astore        5
      33: aload_0
      34: ldc           #17                 // class sun/nio/ch/DirectBuffer
      36: ldc           #29                 // String cleaner
      38: aload         5
      40: invokestatic  #30                 // Method java/lang/invoke/MethodType.methodType:(Ljava/lang/Class;)Ljava/lang/invoke/MethodType;
      43: invokevirtual #31                 // Method java/lang/invoke/MethodHandles$Lookup.findVirtual:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;
      46: astore_2
      47: aload_0
      48: aload         5
      50: ldc           #32                 // String clean
      52: getstatic     #33                 // Field java/lang/Void.TYPE:Ljava/lang/Class;
      55: invokestatic  #30                 // Method java/lang/invoke/MethodType.methodType:(Ljava/lang/Class;)Ljava/lang/invoke/MethodType;
      58: invokevirtual #31                 // Method java/lang/invoke/MethodHandles$Lookup.findVirtual:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;
      61: astore_3
      62: goto          106
      65: astore        5
      67: ldc           #4                  // class net/openhft/chronicle/core/cleaner/impl/reflect/ReflectionBasedByteBufferCleanerService
      69: invokevirtual #5                  // Method java/lang/Class.getName:()Ljava/lang/String;
      72: invokestatic  #6                  // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      75: new           #7                  // class java/lang/StringBuilder
      78: dup
      79: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      82: ldc           #37                 // String Make sure you have set the command line option \"--illegal-access=permit --add-exports java.base/jdk.internal.ref=ALL-UNNAMED\" to enable
      84: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: ldc           #4                  // class net/openhft/chronicle/core/cleaner/impl/reflect/ReflectionBasedByteBufferCleanerService
      89: invokevirtual #38                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      92: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: invokevirtual #15                 // Method java/util/logging/Logger.warning:(Ljava/lang/String;)V
     101: getstatic     #3                  // Field net/openhft/chronicle/core/cleaner/spi/ByteBufferCleanerService$Impact.UNAVAILABLE:Lnet/openhft/chronicle/core/cleaner/spi/ByteBufferCleanerService$Impact;
     104: astore        4
     106: aload_3
     107: putstatic     #19                 // Field CLEAN_METHOD:Ljava/lang/invoke/MethodHandle;
     110: aload_2
     111: putstatic     #16                 // Field CLEANER_METHOD:Ljava/lang/invoke/MethodHandle;
     114: aload         4
     116: putstatic     #2                  // Field IMPACT:Lnet/openhft/chronicle/core/cleaner/spi/ByteBufferCleanerService$Impact;
     119: return
    Exception table:
       from    to  target type
          27    62    65   Class java/lang/NoSuchMethodException
          27    62    65   Class java/lang/ClassNotFoundException
          27    62    65   Class java/lang/IllegalAccessException
}
