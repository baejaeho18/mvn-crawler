Compiled from "JLBHOptions.java"
public class net.openhft.chronicle.core.jlbh.JLBHOptions {
  int throughput;

  net.openhft.chronicle.core.jlbh.LatencyDistributor latencyDistributor;

  java.util.concurrent.TimeUnit throughputTimeUnit;

  boolean accountForCoordinatedOmission;

  int recordJitterGreaterThanNs;

  boolean recordOSJitter;

  int warmUpIterations;

  int runs;

  int iterations;

  net.openhft.chronicle.core.jlbh.JLBHTask jlbhTask;

  int pauseAfterWarmupMS;

  net.openhft.chronicle.core.jlbh.JLBHOptions$SKIP_FIRST_RUN skipFirstRun;

  boolean jitterAffinity;

  java.util.function.Supplier<net.openhft.affinity.AffinityLock> acquireLock;

  long timeout;

  public net.openhft.chronicle.core.jlbh.JLBHOptions();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: sipush        10000
       8: putfield      #2                  // Field throughput:I
      11: aload_0
      12: getstatic     #3                  // Field net/openhft/chronicle/core/jlbh/LatencyDistributors.NORMAL:Lnet/openhft/chronicle/core/jlbh/LatencyDistributors;
      15: putfield      #4                  // Field latencyDistributor:Lnet/openhft/chronicle/core/jlbh/LatencyDistributor;
      18: aload_0
      19: getstatic     #5                  // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      22: putfield      #6                  // Field throughputTimeUnit:Ljava/util/concurrent/TimeUnit;
      25: aload_0
      26: iconst_1
      27: putfield      #7                  // Field accountForCoordinatedOmission:Z
      30: aload_0
      31: sipush        1000
      34: putfield      #8                  // Field recordJitterGreaterThanNs:I
      37: aload_0
      38: iconst_1
      39: putfield      #9                  // Field recordOSJitter:Z
      42: aload_0
      43: invokestatic  #10                 // Method net/openhft/chronicle/core/Jvm.compileThreshold:()I
      46: bipush        6
      48: imul
      49: iconst_5
      50: idiv
      51: putfield      #11                 // Field warmUpIterations:I
      54: aload_0
      55: iconst_3
      56: putfield      #12                 // Field runs:I
      59: aload_0
      60: ldc           #13                 // int 100000
      62: putfield      #14                 // Field iterations:I
      65: aload_0
      66: iconst_0
      67: putfield      #15                 // Field pauseAfterWarmupMS:I
      70: aload_0
      71: getstatic     #16                 // Field net/openhft/chronicle/core/jlbh/JLBHOptions$SKIP_FIRST_RUN.NOT_SET:Lnet/openhft/chronicle/core/jlbh/JLBHOptions$SKIP_FIRST_RUN;
      74: putfield      #17                 // Field skipFirstRun:Lnet/openhft/chronicle/core/jlbh/JLBHOptions$SKIP_FIRST_RUN;
      77: aload_0
      78: invokedynamic #18,  0             // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
      83: putfield      #19                 // Field acquireLock:Ljava/util/function/Supplier;
      86: return

  public net.openhft.chronicle.core.jlbh.JLBHOptions throughput(int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #5                  // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
       5: invokevirtual #20                 // Method throughput:(ILjava/util/concurrent/TimeUnit;)Lnet/openhft/chronicle/core/jlbh/JLBHOptions;
       8: areturn

  public net.openhft.chronicle.core.jlbh.JLBHOptions throughput(int, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field throughput:I
       5: aload_0
       6: aload_2
       7: putfield      #6                  // Field throughputTimeUnit:Ljava/util/concurrent/TimeUnit;
      10: aload_0
      11: areturn

  public net.openhft.chronicle.core.jlbh.JLBHOptions latencyDistributor(net.openhft.chronicle.core.jlbh.LatencyDistributor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field latencyDistributor:Lnet/openhft/chronicle/core/jlbh/LatencyDistributor;
       5: aload_0
       6: areturn

  public net.openhft.chronicle.core.jlbh.JLBHOptions accountForCoordinatedOmission(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field accountForCoordinatedOmission:Z
       5: aload_0
       6: areturn

  public net.openhft.chronicle.core.jlbh.JLBHOptions accountForCoordinatedOmmission(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #21                 // Method accountForCoordinatedOmission:(Z)Lnet/openhft/chronicle/core/jlbh/JLBHOptions;
       5: areturn

  public net.openhft.chronicle.core.jlbh.JLBHOptions recordJitterGreaterThanNs(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field recordJitterGreaterThanNs:I
       5: aload_0
       6: areturn

  public net.openhft.chronicle.core.jlbh.JLBHOptions recordOSJitter(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field recordOSJitter:Z
       5: aload_0
       6: areturn

  public net.openhft.chronicle.core.jlbh.JLBHOptions warmUpIterations(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field warmUpIterations:I
       5: aload_0
       6: areturn

  public net.openhft.chronicle.core.jlbh.JLBHOptions runs(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field runs:I
       5: aload_0
       6: areturn

  public net.openhft.chronicle.core.jlbh.JLBHOptions iterations(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field iterations:I
       5: aload_0
       6: areturn

  public net.openhft.chronicle.core.jlbh.JLBHOptions jlbhTask(net.openhft.chronicle.core.jlbh.JLBHTask);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field jlbhTask:Lnet/openhft/chronicle/core/jlbh/JLBHTask;
       5: aload_0
       6: areturn

  public net.openhft.chronicle.core.jlbh.JLBHOptions pauseAfterWarmupMS(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field pauseAfterWarmupMS:I
       5: aload_0
       6: areturn

  public net.openhft.chronicle.core.jlbh.JLBHOptions skipFirstRun(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          11
       5: getstatic     #23                 // Field net/openhft/chronicle/core/jlbh/JLBHOptions$SKIP_FIRST_RUN.SKIP:Lnet/openhft/chronicle/core/jlbh/JLBHOptions$SKIP_FIRST_RUN;
       8: goto          14
      11: getstatic     #24                 // Field net/openhft/chronicle/core/jlbh/JLBHOptions$SKIP_FIRST_RUN.NO_SKIP:Lnet/openhft/chronicle/core/jlbh/JLBHOptions$SKIP_FIRST_RUN;
      14: putfield      #17                 // Field skipFirstRun:Lnet/openhft/chronicle/core/jlbh/JLBHOptions$SKIP_FIRST_RUN;
      17: aload_0
      18: areturn

  public net.openhft.chronicle.core.jlbh.JLBHOptions jitterAffinity(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #25                 // Field jitterAffinity:Z
       5: aload_0
       6: areturn

  public net.openhft.chronicle.core.jlbh.JLBHOptions acquireLock(java.util.function.Supplier<net.openhft.affinity.AffinityLock>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field acquireLock:Ljava/util/function/Supplier;
       5: aload_0
       6: areturn

  public net.openhft.chronicle.core.jlbh.JLBHOptions timeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #26                 // Field timeout:J
       5: aload_0
       6: areturn
}
