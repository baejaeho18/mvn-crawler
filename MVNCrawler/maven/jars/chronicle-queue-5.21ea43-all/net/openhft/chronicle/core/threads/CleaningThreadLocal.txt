Compiled from "CleaningThreadLocal.java"
public class net.openhft.chronicle.core.threads.CleaningThreadLocal<T> extends java.lang.ThreadLocal<T> {
  private final java.util.function.Supplier<T> supplier;

  private final java.util.function.Function<T, T> getWrapper;

  private net.openhft.chronicle.core.util.ThrowingConsumer<T, java.lang.Exception> cleanup;

  net.openhft.chronicle.core.threads.CleaningThreadLocal(java.util.function.Supplier<T>, net.openhft.chronicle.core.util.ThrowingConsumer<T, java.lang.Exception>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1                  // InterfaceMethod java/util/function/Function.identity:()Ljava/util/function/Function;
       6: invokespecial #2                  // Method "<init>":(Ljava/util/function/Supplier;Lnet/openhft/chronicle/core/util/ThrowingConsumer;Ljava/util/function/Function;)V
       9: return

  net.openhft.chronicle.core.threads.CleaningThreadLocal(java.util.function.Supplier<T>, net.openhft.chronicle.core.util.ThrowingConsumer<T, java.lang.Exception>, java.util.function.Function<T, T>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/ThreadLocal."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field supplier:Ljava/util/function/Supplier;
       9: aload_0
      10: aload_2
      11: putfield      #5                  // Field cleanup:Lnet/openhft/chronicle/core/util/ThrowingConsumer;
      14: aload_0
      15: aload_3
      16: putfield      #6                  // Field getWrapper:Ljava/util/function/Function;
      19: return

  public static <T> net.openhft.chronicle.core.threads.CleaningThreadLocal<T> withCloseQuietly(java.util.function.Supplier<T>);
    Code:
       0: new           #7                  // class net/openhft/chronicle/core/threads/CleaningThreadLocal
       3: dup
       4: aload_0
       5: invokedynamic #8,  0              // InvokeDynamic #0:accept:()Lnet/openhft/chronicle/core/util/ThrowingConsumer;
      10: invokespecial #9                  // Method "<init>":(Ljava/util/function/Supplier;Lnet/openhft/chronicle/core/util/ThrowingConsumer;)V
      13: areturn

  public static <T> net.openhft.chronicle.core.threads.CleaningThreadLocal<T> withCleanup(net.openhft.chronicle.core.util.ThrowingConsumer<T, java.lang.Exception>);
    Code:
       0: new           #7                  // class net/openhft/chronicle/core/threads/CleaningThreadLocal
       3: dup
       4: invokedynamic #10,  0             // InvokeDynamic #1:get:()Ljava/util/function/Supplier;
       9: aload_0
      10: invokespecial #9                  // Method "<init>":(Ljava/util/function/Supplier;Lnet/openhft/chronicle/core/util/ThrowingConsumer;)V
      13: areturn

  public static <T> net.openhft.chronicle.core.threads.CleaningThreadLocal<T> withCleanup(java.util.function.Supplier<T>, net.openhft.chronicle.core.util.ThrowingConsumer<T, java.lang.Exception>);
    Code:
       0: new           #7                  // class net/openhft/chronicle/core/threads/CleaningThreadLocal
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #9                  // Method "<init>":(Ljava/util/function/Supplier;Lnet/openhft/chronicle/core/util/ThrowingConsumer;)V
       9: areturn

  public static <T> net.openhft.chronicle.core.threads.CleaningThreadLocal<T> withCleanup(java.util.function.Supplier<T>, net.openhft.chronicle.core.util.ThrowingConsumer<T, java.lang.Exception>, java.util.function.Function<T, T>);
    Code:
       0: new           #7                  // class net/openhft/chronicle/core/threads/CleaningThreadLocal
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #2                  // Method "<init>":(Ljava/util/function/Supplier;Lnet/openhft/chronicle/core/util/ThrowingConsumer;Ljava/util/function/Function;)V
      10: areturn

  protected T initialValue();
    Code:
       0: aload_0
       1: getfield      #4                  // Field supplier:Ljava/util/function/Supplier;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       9: areturn

  public T get();
    Code:
       0: aload_0
       1: getfield      #6                  // Field getWrapper:Ljava/util/function/Function;
       4: aload_0
       5: invokespecial #12                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       8: invokeinterface #13,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public synchronized void cleanup(T);
    Code:
       0: aload_0
       1: getfield      #5                  // Field cleanup:Lnet/openhft/chronicle/core/util/ThrowingConsumer;
       4: astore_2
       5: aload_2
       6: ifnull        16
       9: aload_2
      10: aload_1
      11: invokeinterface #14,  2           // InterfaceMethod net/openhft/chronicle/core/util/ThrowingConsumer.accept:(Ljava/lang/Object;)V
      16: aload_0
      17: aconst_null
      18: putfield      #5                  // Field cleanup:Lnet/openhft/chronicle/core/util/ThrowingConsumer;
      21: goto          60
      24: astore_2
      25: invokestatic  #16                 // Method net/openhft/chronicle/core/Jvm.warn:()Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
      28: aload_0
      29: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      32: new           #18                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #20                 // String Exception cleaning up
      41: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_1
      45: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      48: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      51: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: aload_2
      55: invokeinterface #24,  4           // InterfaceMethod net/openhft/chronicle/core/onoes/ExceptionHandler.on:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Throwable;)V
      60: return
    Exception table:
       from    to  target type
           0    21    24   Class java/lang/Exception

  private static java.lang.Object lambda$withCleanup$0();
    Code:
       0: aconst_null
       1: areturn
}
