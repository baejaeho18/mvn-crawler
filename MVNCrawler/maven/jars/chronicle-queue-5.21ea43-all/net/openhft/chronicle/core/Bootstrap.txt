Compiled from "Bootstrap.java"
final class net.openhft.chronicle.core.Bootstrap extends java.lang.Enum<net.openhft.chronicle.core.Bootstrap> {
  public static final java.lang.String OS_ARCH;

  public static final java.lang.String VM_VENDOR;

  public static final java.lang.String VM_VERSION;

  public static final java.lang.String VM_NAME;

  private static final net.openhft.chronicle.core.Bootstrap[] $VALUES;

  public static net.openhft.chronicle.core.Bootstrap[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lnet/openhft/chronicle/core/Bootstrap;
       3: invokevirtual #2                  // Method "[Lnet/openhft/chronicle/core/Bootstrap;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lnet/openhft/chronicle/core/Bootstrap;"
       9: areturn

  public static net.openhft.chronicle.core.Bootstrap valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class net/openhft/chronicle/core/Bootstrap
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class net/openhft/chronicle/core/Bootstrap
       9: areturn

  private net.openhft.chronicle.core.Bootstrap();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  static boolean isArm0();
    Code:
       0: ldc           #7                  // String jvm.isarm
       2: invokestatic  #8                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: invokestatic  #9                  // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
       8: ifne          33
      11: getstatic     #10                 // Field OS_ARCH:Ljava/lang/String;
      14: ldc           #11                 // String arm
      16: invokevirtual #12                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      19: ifne          33
      22: getstatic     #10                 // Field OS_ARCH:Ljava/lang/String;
      25: ldc           #13                 // String aarch
      27: invokevirtual #12                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      30: ifeq          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  static boolean isMacArm0();
    Code:
       0: ldc           #14                 // String os.name
       2: ldc           #15                 // String ?
       4: invokestatic  #16                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: ldc           #17                 // String Mac OS X
       9: invokevirtual #18                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      12: ifeq          30
      15: getstatic     #10                 // Field OS_ARCH:Ljava/lang/String;
      18: ldc           #19                 // String aarch64
      20: invokevirtual #18                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  static boolean isAzulZing0();
    Code:
       0: getstatic     #20                 // Field VM_VENDOR:Ljava/lang/String;
       3: ldc           #21                 // String Azul
       5: invokevirtual #12                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       8: ifeq          26
      11: getstatic     #22                 // Field VM_VERSION:Ljava/lang/String;
      14: ldc           #23                 // String zing
      16: invokevirtual #24                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  static boolean isAzulZulu0();
    Code:
       0: getstatic     #20                 // Field VM_VENDOR:Ljava/lang/String;
       3: ldc           #21                 // String Azul
       5: invokevirtual #12                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       8: ifeq          37
      11: getstatic     #25                 // Field VM_NAME:Ljava/lang/String;
      14: ldc           #26                 // String OpenJDK
      16: invokevirtual #12                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      19: ifne          33
      22: getstatic     #25                 // Field VM_NAME:Ljava/lang/String;
      25: ldc           #27                 // String Zulu
      27: invokevirtual #12                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      30: ifeq          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #4                  // class net/openhft/chronicle/core/Bootstrap
       4: putstatic     #1                  // Field $VALUES:[Lnet/openhft/chronicle/core/Bootstrap;
       7: ldc           #28                 // String os.arch
       9: ldc           #15                 // String ?
      11: invokestatic  #16                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      14: putstatic     #10                 // Field OS_ARCH:Ljava/lang/String;
      17: ldc           #29                 // String java.vm.vendor
      19: ldc           #15                 // String ?
      21: invokestatic  #16                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      24: putstatic     #20                 // Field VM_VENDOR:Ljava/lang/String;
      27: ldc           #30                 // String java.vm.version
      29: ldc           #15                 // String ?
      31: invokestatic  #16                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      34: putstatic     #22                 // Field VM_VERSION:Ljava/lang/String;
      37: ldc           #31                 // String java.vm.name
      39: ldc           #15                 // String ?
      41: invokestatic  #16                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      44: putstatic     #25                 // Field VM_NAME:Ljava/lang/String;
      47: return
}
