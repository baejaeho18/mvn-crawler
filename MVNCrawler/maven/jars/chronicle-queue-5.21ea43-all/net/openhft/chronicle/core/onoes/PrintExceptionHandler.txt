Compiled from "PrintExceptionHandler.java"
public abstract class net.openhft.chronicle.core.onoes.PrintExceptionHandler extends java.lang.Enum<net.openhft.chronicle.core.onoes.PrintExceptionHandler> implements net.openhft.chronicle.core.onoes.ExceptionHandler {
  public static final net.openhft.chronicle.core.onoes.PrintExceptionHandler ERR;

  public static final net.openhft.chronicle.core.onoes.PrintExceptionHandler OUT;

  public static final net.openhft.chronicle.core.onoes.PrintExceptionHandler WARN;

  public static final net.openhft.chronicle.core.onoes.PrintExceptionHandler DEBUG;

  private static final net.openhft.chronicle.core.onoes.PrintExceptionHandler[] $VALUES;

  public static net.openhft.chronicle.core.onoes.PrintExceptionHandler[] values();
    Code:
       0: getstatic     #3                  // Field $VALUES:[Lnet/openhft/chronicle/core/onoes/PrintExceptionHandler;
       3: invokevirtual #4                  // Method "[Lnet/openhft/chronicle/core/onoes/PrintExceptionHandler;".clone:()Ljava/lang/Object;
       6: checkcast     #5                  // class "[Lnet/openhft/chronicle/core/onoes/PrintExceptionHandler;"
       9: areturn

  public static net.openhft.chronicle.core.onoes.PrintExceptionHandler valueOf(java.lang.String);
    Code:
       0: ldc           #6                  // class net/openhft/chronicle/core/onoes/PrintExceptionHandler
       2: aload_0
       3: invokestatic  #7                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #6                  // class net/openhft/chronicle/core/onoes/PrintExceptionHandler
       9: areturn

  private net.openhft.chronicle.core.onoes.PrintExceptionHandler();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #8                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  private static void printLog(java.lang.Class, java.lang.String, java.lang.Throwable, java.io.PrintStream);
    Code:
       0: invokestatic  #9                  // Method java/lang/Thread.interrupted:()Z
       3: istore        4
       5: aload_3
       6: dup
       7: astore        5
       9: monitorenter
      10: aload_3
      11: new           #10                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      18: invokestatic  #12                 // Method java/time/LocalDateTime.now:()Ljava/time/LocalDateTime;
      21: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      24: ldc           #14                 // String
      26: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokestatic  #16                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      32: invokevirtual #17                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      35: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #14                 // String
      40: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: invokevirtual #18                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      47: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: ldc           #14                 // String
      52: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_1
      56: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokevirtual #20                 // Method java/io/PrintStream.print:(Ljava/lang/String;)V
      65: aload_2
      66: ifnull        77
      69: aload_2
      70: aload_3
      71: invokevirtual #21                 // Method java/lang/Throwable.printStackTrace:(Ljava/io/PrintStream;)V
      74: goto          81
      77: aload_3
      78: invokevirtual #22                 // Method java/io/PrintStream.println:()V
      81: aload         5
      83: monitorexit
      84: goto          95
      87: astore        6
      89: aload         5
      91: monitorexit
      92: aload         6
      94: athrow
      95: iload         4
      97: ifeq          125
     100: invokestatic  #16                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     103: invokevirtual #23                 // Method java/lang/Thread.interrupt:()V
     106: goto          125
     109: astore        7
     111: iload         4
     113: ifeq          122
     116: invokestatic  #16                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     119: invokevirtual #23                 // Method java/lang/Thread.interrupt:()V
     122: aload         7
     124: athrow
     125: return
    Exception table:
       from    to  target type
          10    84    87   any
          87    92    87   any
           5    95   109   any
         109   111   109   any

  net.openhft.chronicle.core.onoes.PrintExceptionHandler(java.lang.String, int, net.openhft.chronicle.core.onoes.PrintExceptionHandler$1);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #2                  // Method "<init>":(Ljava/lang/String;I)V
       6: return

  static void access$100(java.lang.Class, java.lang.String, java.lang.Throwable, java.io.PrintStream);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1                  // Method printLog:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Throwable;Ljava/io/PrintStream;)V
       7: return

  static {};
    Code:
       0: new           #24                 // class net/openhft/chronicle/core/onoes/PrintExceptionHandler$1
       3: dup
       4: ldc           #25                 // String ERR
       6: iconst_0
       7: invokespecial #26                 // Method net/openhft/chronicle/core/onoes/PrintExceptionHandler$1."<init>":(Ljava/lang/String;I)V
      10: putstatic     #27                 // Field ERR:Lnet/openhft/chronicle/core/onoes/PrintExceptionHandler;
      13: new           #28                 // class net/openhft/chronicle/core/onoes/PrintExceptionHandler$2
      16: dup
      17: ldc           #29                 // String OUT
      19: iconst_1
      20: invokespecial #30                 // Method net/openhft/chronicle/core/onoes/PrintExceptionHandler$2."<init>":(Ljava/lang/String;I)V
      23: putstatic     #31                 // Field OUT:Lnet/openhft/chronicle/core/onoes/PrintExceptionHandler;
      26: iconst_2
      27: anewarray     #6                  // class net/openhft/chronicle/core/onoes/PrintExceptionHandler
      30: dup
      31: iconst_0
      32: getstatic     #27                 // Field ERR:Lnet/openhft/chronicle/core/onoes/PrintExceptionHandler;
      35: aastore
      36: dup
      37: iconst_1
      38: getstatic     #31                 // Field OUT:Lnet/openhft/chronicle/core/onoes/PrintExceptionHandler;
      41: aastore
      42: putstatic     #3                  // Field $VALUES:[Lnet/openhft/chronicle/core/onoes/PrintExceptionHandler;
      45: getstatic     #27                 // Field ERR:Lnet/openhft/chronicle/core/onoes/PrintExceptionHandler;
      48: putstatic     #32                 // Field WARN:Lnet/openhft/chronicle/core/onoes/PrintExceptionHandler;
      51: getstatic     #31                 // Field OUT:Lnet/openhft/chronicle/core/onoes/PrintExceptionHandler;
      54: putstatic     #33                 // Field DEBUG:Lnet/openhft/chronicle/core/onoes/PrintExceptionHandler;
      57: return
}
