Compiled from "UpstartDecorator.java"
public class org.smallmind.forge.deploy.UpstartDecorator implements org.smallmind.forge.deploy.Decorator {
  private static final freemarker.template.Template UPSTART_TEMPLATE;

  public org.smallmind.forge.deploy.UpstartDecorator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void decorate(org.smallmind.forge.deploy.OperatingSystem, java.lang.String, java.nio.file.Path, java.lang.String, java.lang.String, java.lang.String, org.smallmind.forge.deploy.Repository, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String...) throws java.io.IOException, freemarker.template.TemplateException;
    Code:
       0: aload_1
       1: getstatic     #2                  // Field org/smallmind/forge/deploy/OperatingSystem.LINUX:Lorg/smallmind/forge/deploy/OperatingSystem;
       4: invokevirtual #3                  // Method org/smallmind/forge/deploy/OperatingSystem.equals:(Ljava/lang/Object;)Z
       7: ifeq          156
      10: new           #4                  // class java/util/HashMap
      13: dup
      14: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      17: astore        14
      19: aload         14
      21: ldc           #6                  // String artifactId
      23: aload         9
      25: invokevirtual #7                  // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: aload         14
      31: ldc           #8                  // String applicationName
      33: aload         9
      35: invokevirtual #9                  // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      38: invokevirtual #7                  // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: aload         14
      44: ldc           #10                 // String installDir
      46: aload_3
      47: invokeinterface #11,  1           // InterfaceMethod java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;
      52: invokevirtual #7                  // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: aload         14
      58: ldc           #12                 // String batchExtension
      60: aload_1
      61: invokevirtual #13                 // Method org/smallmind/forge/deploy/OperatingSystem.getBatchExtension:()Ljava/lang/String;
      64: invokevirtual #7                  // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      67: pop
      68: aload         14
      70: ldc           #14                 // String envVars
      72: aload         13
      74: invokevirtual #7                  // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      77: pop
      78: getstatic     #15                 // Field UPSTART_TEMPLATE:Lfreemarker/template/Template;
      81: aload         14
      83: aload_3
      84: aload         9
      86: invokeinterface #16,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      91: ldc           #17                 // String bin
      93: invokeinterface #16,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
      98: new           #18                 // class java/lang/StringBuilder
     101: dup
     102: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
     105: aload         9
     107: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: ldc           #21                 // String .install
     112: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     118: invokeinterface #16,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
     123: ldc           #23                 // String UTF-8
     125: invokestatic  #24                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
     128: iconst_3
     129: anewarray     #25                 // class java/nio/file/OpenOption
     132: dup
     133: iconst_0
     134: getstatic     #26                 // Field java/nio/file/StandardOpenOption.WRITE:Ljava/nio/file/StandardOpenOption;
     137: aastore
     138: dup
     139: iconst_1
     140: getstatic     #27                 // Field java/nio/file/StandardOpenOption.CREATE:Ljava/nio/file/StandardOpenOption;
     143: aastore
     144: dup
     145: iconst_2
     146: getstatic     #28                 // Field java/nio/file/StandardOpenOption.TRUNCATE_EXISTING:Ljava/nio/file/StandardOpenOption;
     149: aastore
     150: invokestatic  #29                 // Method java/nio/file/Files.newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;
     153: invokevirtual #30                 // Method freemarker/template/Template.process:(Ljava/lang/Object;Ljava/io/Writer;)V
     156: return

  static {};
    Code:
       0: new           #31                 // class freemarker/template/Configuration
       3: dup
       4: invokespecial #32                 // Method freemarker/template/Configuration."<init>":()V
       7: astore_0
       8: aload_0
       9: iconst_2
      10: invokevirtual #33                 // Method freemarker/template/Configuration.setTagSyntax:(I)V
      13: new           #34                 // class freemarker/template/Template
      16: dup
      17: ldc           #35                 // String upstart template
      19: new           #36                 // class java/io/InputStreamReader
      22: dup
      23: ldc           #37                 // class org/smallmind/forge/deploy/UpstartDecorator
      25: invokevirtual #38                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      28: ldc           #39                 // String org/smallmind/forge/deploy/upstart-install.freemarker.in
      30: invokevirtual #40                 // Method java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
      33: invokespecial #41                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;)V
      36: aload_0
      37: invokespecial #42                 // Method freemarker/template/Template."<init>":(Ljava/lang/String;Ljava/io/Reader;Lfreemarker/template/Configuration;)V
      40: putstatic     #15                 // Field UPSTART_TEMPLATE:Lfreemarker/template/Template;
      43: goto          56
      46: astore_1
      47: new           #44                 // class org/smallmind/nutsnbolts/lang/StaticInitializationError
      50: dup
      51: aload_1
      52: invokespecial #45                 // Method org/smallmind/nutsnbolts/lang/StaticInitializationError."<init>":(Ljava/lang/Throwable;)V
      55: athrow
      56: return
    Exception table:
       from    to  target type
          13    43    46   Class java/io/IOException
}
