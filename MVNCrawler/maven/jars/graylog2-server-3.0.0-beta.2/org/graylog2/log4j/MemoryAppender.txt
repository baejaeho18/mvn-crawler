Compiled from "MemoryAppender.java"
public class org.graylog2.log4j.MemoryAppender extends org.apache.logging.log4j.core.appender.AbstractAppender {
  private org.apache.commons.collections.Buffer buffer;

  private int bufferSize;

  protected org.graylog2.log4j.MemoryAppender(java.lang.String, org.apache.logging.log4j.core.Filter, org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>, boolean, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: invokespecial #1                  // Method org/apache/logging/log4j/core/appender/AbstractAppender."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/core/Layout;Z)V
       9: aload_0
      10: iload         5
      12: putfield      #2                  // Field bufferSize:I
      15: aload_0
      16: new           #3                  // class org/apache/commons/collections/buffer/CircularFifoBuffer
      19: dup
      20: iload         5
      22: invokespecial #4                  // Method org/apache/commons/collections/buffer/CircularFifoBuffer."<init>":(I)V
      25: invokestatic  #5                  // Method org/apache/commons/collections/BufferUtils.synchronizedBuffer:(Lorg/apache/commons/collections/Buffer;)Lorg/apache/commons/collections/Buffer;
      28: putfield      #6                  // Field buffer:Lorg/apache/commons/collections/Buffer;
      31: return

  public static org.graylog2.log4j.MemoryAppender createAppender(org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>, org.apache.logging.log4j.core.Filter, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: ifnonnull     16
       4: getstatic     #7                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       7: ldc           #8                  // String No name provided for MemoryAppender
       9: invokeinterface #9,  2            // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      14: aconst_null
      15: areturn
      16: aload_0
      17: ifnonnull     24
      20: invokestatic  #10                 // Method org/apache/logging/log4j/core/layout/PatternLayout.createDefaultLayout:()Lorg/apache/logging/log4j/core/layout/PatternLayout;
      23: astore_0
      24: aload_3
      25: invokestatic  #11                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      28: istore        5
      30: aload         4
      32: iconst_1
      33: invokestatic  #12                 // Method org/apache/logging/log4j/core/util/Booleans.parseBoolean:(Ljava/lang/String;Z)Z
      36: istore        6
      38: new           #13                 // class org/graylog2/log4j/MemoryAppender
      41: dup
      42: aload_2
      43: aload_1
      44: aload_0
      45: iload         6
      47: iload         5
      49: invokespecial #14                 // Method "<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/core/Layout;ZI)V
      52: areturn

  public void append(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: getfield      #6                  // Field buffer:Lorg/apache/commons/collections/Buffer;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod org/apache/commons/collections/Buffer.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void stop();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method org/apache/logging/log4j/core/appender/AbstractAppender.stop:()V
       4: aload_0
       5: getfield      #6                  // Field buffer:Lorg/apache/commons/collections/Buffer;
       8: invokeinterface #17,  1           // InterfaceMethod org/apache/commons/collections/Buffer.clear:()V
      13: return

  public java.util.List<org.apache.logging.log4j.core.LogEvent> getLogMessages(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field buffer:Lorg/apache/commons/collections/Buffer;
       4: ifnonnull     17
       7: new           #18                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #19                 // String Cannot return log messages: Appender is not initialized.
      13: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: new           #21                 // class java/util/ArrayList
      20: dup
      21: iload_1
      22: invokespecial #22                 // Method java/util/ArrayList."<init>":(I)V
      25: astore_2
      26: aload_0
      27: getfield      #6                  // Field buffer:Lorg/apache/commons/collections/Buffer;
      30: invokeinterface #23,  1           // InterfaceMethod org/apache/commons/collections/Buffer.toArray:()[Ljava/lang/Object;
      35: astore_3
      36: aload_3
      37: arraylength
      38: iconst_1
      39: isub
      40: istore        4
      42: iload         4
      44: iflt          76
      47: iload         4
      49: aload_3
      50: arraylength
      51: iload_1
      52: isub
      53: if_icmplt     76
      56: aload_2
      57: aload_3
      58: iload         4
      60: aaload
      61: checkcast     #24                 // class org/apache/logging/log4j/core/LogEvent
      64: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      69: pop
      70: iinc          4, -1
      73: goto          42
      76: aload_2
      77: areturn

  public int getBufferSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field bufferSize:I
       4: ireturn
}
