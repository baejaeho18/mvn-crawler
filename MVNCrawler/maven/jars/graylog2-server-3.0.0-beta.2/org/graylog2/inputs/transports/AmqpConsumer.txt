Compiled from "AmqpConsumer.java"
public class org.graylog2.inputs.transports.AmqpConsumer {
  private static final org.slf4j.Logger LOG;

  private final java.lang.String hostname;

  private final int port;

  private final java.lang.String virtualHost;

  private final java.lang.String username;

  private final java.lang.String password;

  private final int prefetchCount;

  private final java.lang.String queue;

  private final java.lang.String exchange;

  private final boolean exchangeBind;

  private final java.lang.String routingKey;

  private final boolean requeueInvalid;

  private com.rabbitmq.client.Connection connection;

  private com.rabbitmq.client.Channel channel;

  private final int heartbeatTimeout;

  private final org.graylog2.plugin.inputs.MessageInput sourceInput;

  private final int parallelQueues;

  private final boolean tls;

  private org.graylog2.inputs.transports.AmqpTransport amqpTransport;

  private java.util.concurrent.atomic.AtomicLong totalBytesRead;

  private java.util.concurrent.atomic.AtomicLong lastSecBytesRead;

  private java.util.concurrent.atomic.AtomicLong lastSecBytesReadTmp;

  public org.graylog2.inputs.transports.AmqpConsumer(java.lang.String, int, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, boolean, java.lang.String, int, boolean, boolean, int, org.graylog2.plugin.inputs.MessageInput, java.util.concurrent.ScheduledExecutorService, org.graylog2.inputs.transports.AmqpTransport);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #10                 // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: lconst_0
      10: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      13: putfield      #6                  // Field totalBytesRead:Ljava/util/concurrent/atomic/AtomicLong;
      16: aload_0
      17: new           #10                 // class java/util/concurrent/atomic/AtomicLong
      20: dup
      21: lconst_0
      22: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      25: putfield      #7                  // Field lastSecBytesRead:Ljava/util/concurrent/atomic/AtomicLong;
      28: aload_0
      29: new           #10                 // class java/util/concurrent/atomic/AtomicLong
      32: dup
      33: lconst_0
      34: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      37: putfield      #8                  // Field lastSecBytesReadTmp:Ljava/util/concurrent/atomic/AtomicLong;
      40: aload_0
      41: aload_1
      42: putfield      #12                 // Field hostname:Ljava/lang/String;
      45: aload_0
      46: iload_2
      47: putfield      #13                 // Field port:I
      50: aload_0
      51: aload_3
      52: putfield      #14                 // Field virtualHost:Ljava/lang/String;
      55: aload_0
      56: aload         4
      58: putfield      #15                 // Field username:Ljava/lang/String;
      61: aload_0
      62: aload         5
      64: putfield      #16                 // Field password:Ljava/lang/String;
      67: aload_0
      68: iload         6
      70: putfield      #17                 // Field prefetchCount:I
      73: aload_0
      74: aload         7
      76: putfield      #18                 // Field queue:Ljava/lang/String;
      79: aload_0
      80: aload         8
      82: putfield      #19                 // Field exchange:Ljava/lang/String;
      85: aload_0
      86: iload         9
      88: putfield      #20                 // Field exchangeBind:Z
      91: aload_0
      92: aload         10
      94: putfield      #21                 // Field routingKey:Ljava/lang/String;
      97: aload_0
      98: iload         14
     100: putfield      #22                 // Field heartbeatTimeout:I
     103: aload_0
     104: aload         15
     106: putfield      #4                  // Field sourceInput:Lorg/graylog2/plugin/inputs/MessageInput;
     109: aload_0
     110: iload         11
     112: putfield      #23                 // Field parallelQueues:I
     115: aload_0
     116: iload         12
     118: putfield      #24                 // Field tls:Z
     121: aload_0
     122: iload         13
     124: putfield      #1                  // Field requeueInvalid:Z
     127: aload_0
     128: aload         17
     130: putfield      #5                  // Field amqpTransport:Lorg/graylog2/inputs/transports/AmqpTransport;
     133: aload         16
     135: new           #25                 // class org/graylog2/inputs/transports/AmqpConsumer$1
     138: dup
     139: aload_0
     140: invokespecial #26                 // Method org/graylog2/inputs/transports/AmqpConsumer$1."<init>":(Lorg/graylog2/inputs/transports/AmqpConsumer;)V
     143: lconst_1
     144: lconst_1
     145: getstatic     #27                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
     148: invokeinterface #28,  7           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
     153: pop
     154: return

  public void run() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method isConnected:()Z
       4: ifne          11
       7: aload_0
       8: invokevirtual #30                 // Method connect:()V
      11: iconst_0
      12: istore_1
      13: iload_1
      14: aload_0
      15: getfield      #23                 // Field parallelQueues:I
      18: if_icmpge     114
      21: getstatic     #31                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      24: aload_0
      25: getfield      #18                 // Field queue:Ljava/lang/String;
      28: iconst_1
      29: anewarray     #32                 // class java/lang/Object
      32: dup
      33: iconst_0
      34: iload_1
      35: invokestatic  #33                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: aastore
      39: invokestatic  #34                 // Method java/lang/String.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      42: astore_2
      43: aload_0
      44: getfield      #3                  // Field channel:Lcom/rabbitmq/client/Channel;
      47: aload_2
      48: iconst_1
      49: iconst_0
      50: iconst_0
      51: aconst_null
      52: invokeinterface #35,  6           // InterfaceMethod com/rabbitmq/client/Channel.queueDeclare:(Ljava/lang/String;ZZZLjava/util/Map;)Lcom/rabbitmq/client/AMQP$Queue$DeclareOk;
      57: pop
      58: aload_0
      59: getfield      #20                 // Field exchangeBind:Z
      62: ifeq          84
      65: aload_0
      66: getfield      #3                  // Field channel:Lcom/rabbitmq/client/Channel;
      69: aload_2
      70: aload_0
      71: getfield      #19                 // Field exchange:Ljava/lang/String;
      74: aload_0
      75: getfield      #21                 // Field routingKey:Ljava/lang/String;
      78: invokeinterface #36,  4           // InterfaceMethod com/rabbitmq/client/Channel.queueBind:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/rabbitmq/client/AMQP$Queue$BindOk;
      83: pop
      84: aload_0
      85: getfield      #3                  // Field channel:Lcom/rabbitmq/client/Channel;
      88: aload_2
      89: iconst_0
      90: new           #37                 // class org/graylog2/inputs/transports/AmqpConsumer$2
      93: dup
      94: aload_0
      95: aload_0
      96: getfield      #3                  // Field channel:Lcom/rabbitmq/client/Channel;
      99: invokespecial #38                 // Method org/graylog2/inputs/transports/AmqpConsumer$2."<init>":(Lorg/graylog2/inputs/transports/AmqpConsumer;Lcom/rabbitmq/client/Channel;)V
     102: invokeinterface #39,  4           // InterfaceMethod com/rabbitmq/client/Channel.basicConsume:(Ljava/lang/String;ZLcom/rabbitmq/client/Consumer;)Ljava/lang/String;
     107: pop
     108: iinc          1, 1
     111: goto          13
     114: return

  public void connect() throws java.io.IOException;
    Code:
       0: new           #40                 // class com/rabbitmq/client/ConnectionFactory
       3: dup
       4: invokespecial #41                 // Method com/rabbitmq/client/ConnectionFactory."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #12                 // Field hostname:Ljava/lang/String;
      13: invokevirtual #42                 // Method com/rabbitmq/client/ConnectionFactory.setHost:(Ljava/lang/String;)V
      16: aload_1
      17: aload_0
      18: getfield      #13                 // Field port:I
      21: invokevirtual #43                 // Method com/rabbitmq/client/ConnectionFactory.setPort:(I)V
      24: aload_1
      25: aload_0
      26: getfield      #14                 // Field virtualHost:Ljava/lang/String;
      29: invokevirtual #44                 // Method com/rabbitmq/client/ConnectionFactory.setVirtualHost:(Ljava/lang/String;)V
      32: aload_1
      33: aload_0
      34: getfield      #22                 // Field heartbeatTimeout:I
      37: invokevirtual #45                 // Method com/rabbitmq/client/ConnectionFactory.setRequestedHeartbeat:(I)V
      40: aload_0
      41: getfield      #24                 // Field tls:Z
      44: ifeq          90
      47: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      50: ldc           #46                 // String Enabling TLS for AMQP input [{}/{}].
      52: aload_0
      53: getfield      #4                  // Field sourceInput:Lorg/graylog2/plugin/inputs/MessageInput;
      56: invokevirtual #47                 // Method org/graylog2/plugin/inputs/MessageInput.getName:()Ljava/lang/String;
      59: aload_0
      60: getfield      #4                  // Field sourceInput:Lorg/graylog2/plugin/inputs/MessageInput;
      63: invokevirtual #48                 // Method org/graylog2/plugin/inputs/MessageInput.getId:()Ljava/lang/String;
      66: invokeinterface #49,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      71: aload_1
      72: invokevirtual #50                 // Method com/rabbitmq/client/ConnectionFactory.useSslProtocol:()V
      75: goto          90
      78: astore_2
      79: new           #53                 // class java/io/IOException
      82: dup
      83: ldc           #54                 // String Couldn\'t enable TLS for AMQP input.
      85: aload_2
      86: invokespecial #55                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      89: athrow
      90: aload_0
      91: getfield      #15                 // Field username:Ljava/lang/String;
      94: invokestatic  #56                 // Method com/google/common/base/Strings.isNullOrEmpty:(Ljava/lang/String;)Z
      97: ifne          126
     100: aload_0
     101: getfield      #16                 // Field password:Ljava/lang/String;
     104: invokestatic  #56                 // Method com/google/common/base/Strings.isNullOrEmpty:(Ljava/lang/String;)Z
     107: ifne          126
     110: aload_1
     111: aload_0
     112: getfield      #15                 // Field username:Ljava/lang/String;
     115: invokevirtual #57                 // Method com/rabbitmq/client/ConnectionFactory.setUsername:(Ljava/lang/String;)V
     118: aload_1
     119: aload_0
     120: getfield      #16                 // Field password:Ljava/lang/String;
     123: invokevirtual #58                 // Method com/rabbitmq/client/ConnectionFactory.setPassword:(Ljava/lang/String;)V
     126: aload_0
     127: aload_1
     128: invokevirtual #59                 // Method com/rabbitmq/client/ConnectionFactory.newConnection:()Lcom/rabbitmq/client/Connection;
     131: putfield      #60                 // Field connection:Lcom/rabbitmq/client/Connection;
     134: goto          149
     137: astore_2
     138: new           #53                 // class java/io/IOException
     141: dup
     142: ldc           #62                 // String Timeout while opening new AMQP connection
     144: aload_2
     145: invokespecial #55                 // Method java/io/IOException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     148: athrow
     149: aload_0
     150: aload_0
     151: getfield      #60                 // Field connection:Lcom/rabbitmq/client/Connection;
     154: invokeinterface #63,  1           // InterfaceMethod com/rabbitmq/client/Connection.createChannel:()Lcom/rabbitmq/client/Channel;
     159: putfield      #3                  // Field channel:Lcom/rabbitmq/client/Channel;
     162: aconst_null
     163: aload_0
     164: getfield      #3                  // Field channel:Lcom/rabbitmq/client/Channel;
     167: if_acmpne     180
     170: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     173: ldc           #64                 // String No channel descriptor available!
     175: invokeinterface #65,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
     180: aconst_null
     181: aload_0
     182: getfield      #3                  // Field channel:Lcom/rabbitmq/client/Channel;
     185: if_acmpeq     225
     188: aload_0
     189: getfield      #17                 // Field prefetchCount:I
     192: ifle          225
     195: aload_0
     196: getfield      #3                  // Field channel:Lcom/rabbitmq/client/Channel;
     199: aload_0
     200: getfield      #17                 // Field prefetchCount:I
     203: invokeinterface #66,  2           // InterfaceMethod com/rabbitmq/client/Channel.basicQos:(I)V
     208: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
     211: ldc           #67                 // String AMQP prefetch count overriden to <{}>.
     213: aload_0
     214: getfield      #17                 // Field prefetchCount:I
     217: invokestatic  #33                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     220: invokeinterface #68,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
     225: aload_0
     226: getfield      #60                 // Field connection:Lcom/rabbitmq/client/Connection;
     229: new           #69                 // class org/graylog2/inputs/transports/AmqpConsumer$3
     232: dup
     233: aload_0
     234: invokespecial #70                 // Method org/graylog2/inputs/transports/AmqpConsumer$3."<init>":(Lorg/graylog2/inputs/transports/AmqpConsumer;)V
     237: invokeinterface #71,  2           // InterfaceMethod com/rabbitmq/client/Connection.addShutdownListener:(Lcom/rabbitmq/client/ShutdownListener;)V
     242: return
    Exception table:
       from    to  target type
          47    75    78   Class java/security/NoSuchAlgorithmException
          47    75    78   Class java/security/KeyManagementException
         126   134   137   Class java/util/concurrent/TimeoutException

  public void stop() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field channel:Lcom/rabbitmq/client/Channel;
       4: ifnull        52
       7: aload_0
       8: getfield      #3                  // Field channel:Lcom/rabbitmq/client/Channel;
      11: invokeinterface #72,  1           // InterfaceMethod com/rabbitmq/client/Channel.isOpen:()Z
      16: ifeq          52
      19: aload_0
      20: getfield      #3                  // Field channel:Lcom/rabbitmq/client/Channel;
      23: invokeinterface #73,  1           // InterfaceMethod com/rabbitmq/client/Channel.close:()V
      28: goto          52
      31: astore_1
      32: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
      35: ldc           #74                 // String Timeout when closing AMQP channel
      37: aload_1
      38: invokeinterface #75,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      43: aload_0
      44: getfield      #3                  // Field channel:Lcom/rabbitmq/client/Channel;
      47: invokeinterface #76,  1           // InterfaceMethod com/rabbitmq/client/Channel.abort:()V
      52: aload_0
      53: getfield      #60                 // Field connection:Lcom/rabbitmq/client/Connection;
      56: ifnull        80
      59: aload_0
      60: getfield      #60                 // Field connection:Lcom/rabbitmq/client/Connection;
      63: invokeinterface #77,  1           // InterfaceMethod com/rabbitmq/client/Connection.isOpen:()Z
      68: ifeq          80
      71: aload_0
      72: getfield      #60                 // Field connection:Lcom/rabbitmq/client/Connection;
      75: invokeinterface #78,  1           // InterfaceMethod com/rabbitmq/client/Connection.close:()V
      80: return
    Exception table:
       from    to  target type
          19    28    31   Class java/util/concurrent/TimeoutException

  public boolean isConnected();
    Code:
       0: aload_0
       1: getfield      #60                 // Field connection:Lcom/rabbitmq/client/Connection;
       4: ifnull        42
       7: aload_0
       8: getfield      #60                 // Field connection:Lcom/rabbitmq/client/Connection;
      11: invokeinterface #77,  1           // InterfaceMethod com/rabbitmq/client/Connection.isOpen:()Z
      16: ifeq          42
      19: aload_0
      20: getfield      #3                  // Field channel:Lcom/rabbitmq/client/Channel;
      23: ifnull        42
      26: aload_0
      27: getfield      #3                  // Field channel:Lcom/rabbitmq/client/Channel;
      30: invokeinterface #72,  1           // InterfaceMethod com/rabbitmq/client/Channel.isOpen:()Z
      35: ifeq          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: ireturn

  public java.util.concurrent.atomic.AtomicLong getLastSecBytesRead();
    Code:
       0: aload_0
       1: getfield      #7                  // Field lastSecBytesRead:Ljava/util/concurrent/atomic/AtomicLong;
       4: areturn

  public java.util.concurrent.atomic.AtomicLong getTotalBytesRead();
    Code:
       0: aload_0
       1: getfield      #6                  // Field totalBytesRead:Ljava/util/concurrent/atomic/AtomicLong;
       4: areturn

  static java.util.concurrent.atomic.AtomicLong access$000(org.graylog2.inputs.transports.AmqpConsumer);
    Code:
       0: aload_0
       1: getfield      #8                  // Field lastSecBytesReadTmp:Ljava/util/concurrent/atomic/AtomicLong;
       4: areturn

  static java.util.concurrent.atomic.AtomicLong access$100(org.graylog2.inputs.transports.AmqpConsumer);
    Code:
       0: aload_0
       1: getfield      #7                  // Field lastSecBytesRead:Ljava/util/concurrent/atomic/AtomicLong;
       4: areturn

  static java.util.concurrent.atomic.AtomicLong access$200(org.graylog2.inputs.transports.AmqpConsumer);
    Code:
       0: aload_0
       1: getfield      #6                  // Field totalBytesRead:Ljava/util/concurrent/atomic/AtomicLong;
       4: areturn

  static org.graylog2.inputs.transports.AmqpTransport access$300(org.graylog2.inputs.transports.AmqpConsumer);
    Code:
       0: aload_0
       1: getfield      #5                  // Field amqpTransport:Lorg/graylog2/inputs/transports/AmqpTransport;
       4: areturn

  static org.graylog2.plugin.inputs.MessageInput access$400(org.graylog2.inputs.transports.AmqpConsumer);
    Code:
       0: aload_0
       1: getfield      #4                  // Field sourceInput:Lorg/graylog2/plugin/inputs/MessageInput;
       4: areturn

  static com.rabbitmq.client.Channel access$500(org.graylog2.inputs.transports.AmqpConsumer);
    Code:
       0: aload_0
       1: getfield      #3                  // Field channel:Lcom/rabbitmq/client/Channel;
       4: areturn

  static org.slf4j.Logger access$600();
    Code:
       0: getstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static boolean access$700(org.graylog2.inputs.transports.AmqpConsumer);
    Code:
       0: aload_0
       1: getfield      #1                  // Field requeueInvalid:Z
       4: ireturn

  static {};
    Code:
       0: ldc           #79                 // class org/graylog2/inputs/transports/AmqpConsumer
       2: invokestatic  #80                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #2                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
