Compiled from "GELFMessageChunk.java"
public final class org.graylog2.inputs.codecs.gelf.GELFMessageChunk {
  public static final int HEADER_PART_SEQNUM_START;

  public static final int HEADER_PART_SEQCNT_START;

  public static final int HEADER_PART_HASH_START;

  public static final int HEADER_PART_HASH_LENGTH;

  public static final int HEADER_TOTAL_LENGTH;

  private java.lang.String id;

  private byte[] data;

  private int sequenceNumber;

  private int sequenceCount;

  private long arrival;

  private final io.netty.buffer.ByteBuf payload;

  private final org.graylog2.plugin.inputs.MessageInput sourceInput;

  public org.graylog2.inputs.codecs.gelf.GELFMessageChunk(byte[], org.graylog2.plugin.inputs.MessageInput);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: newarray       byte
       8: putfield      #2                  // Field data:[B
      11: aload_0
      12: iconst_m1
      13: putfield      #3                  // Field sequenceNumber:I
      16: aload_0
      17: iconst_m1
      18: putfield      #4                  // Field sequenceCount:I
      21: aload_0
      22: ldc2_w        #5                  // long -1l
      25: putfield      #7                  // Field arrival:J
      28: aload_1
      29: arraylength
      30: bipush        12
      32: if_icmpge     45
      35: new           #9                  // class java/lang/IllegalArgumentException
      38: dup
      39: ldc           #10                 // String This GELF message chunk is too short. Cannot even contain the required header.
      41: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: aload_1
      47: invokestatic  #12                 // Method io/netty/buffer/Unpooled.wrappedBuffer:([B)Lio/netty/buffer/ByteBuf;
      50: putfield      #13                 // Field payload:Lio/netty/buffer/ByteBuf;
      53: aload_0
      54: aload_2
      55: putfield      #14                 // Field sourceInput:Lorg/graylog2/plugin/inputs/MessageInput;
      58: aload_0
      59: invokespecial #15                 // Method read:()V
      62: return

  public org.graylog2.inputs.codecs.gelf.GELFMessageChunk(org.graylog2.inputs.codecs.gelf.GELFMessage, org.graylog2.plugin.inputs.MessageInput);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method org/graylog2/inputs/codecs/gelf/GELFMessage.getPayload:()[B
       5: aload_2
       6: invokespecial #17                 // Method "<init>":([BLorg/graylog2/plugin/inputs/MessageInput;)V
       9: return

  public long getArrival();
    Code:
       0: aload_0
       1: getfield      #7                  // Field arrival:J
       4: lreturn

  public java.lang.String getId();
    Code:
       0: aload_0
       1: getfield      #18                 // Field id:Ljava/lang/String;
       4: areturn

  public byte[] getData();
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:[B
       4: areturn

  public int getSequenceCount();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sequenceCount:I
       4: ireturn

  public int getSequenceNumber();
    Code:
       0: aload_0
       1: getfield      #3                  // Field sequenceNumber:I
       4: ireturn

  public org.graylog2.plugin.inputs.MessageInput getSourceInput();
    Code:
       0: aload_0
       1: getfield      #14                 // Field sourceInput:Lorg/graylog2/plugin/inputs/MessageInput;
       4: areturn

  private void read();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method extractId:()V
       4: aload_0
       5: invokespecial #20                 // Method extractSequenceCount:()V
       8: aload_0
       9: invokespecial #21                 // Method extractSequenceNumber:()V
      12: aload_0
      13: invokespecial #22                 // Method extractData:()V
      16: aload_0
      17: invokestatic  #23                 // Method org/graylog2/plugin/Tools.nowUTC:()Lorg/joda/time/DateTime;
      20: invokevirtual #24                 // Method org/joda/time/DateTime.getMillis:()J
      23: putfield      #7                  // Field arrival:J
      26: return

  private void extractId();
    Code:
       0: aload_0
       1: getfield      #18                 // Field id:Ljava/lang/String;
       4: ifnonnull     21
       7: aload_0
       8: aload_0
       9: getfield      #13                 // Field payload:Lio/netty/buffer/ByteBuf;
      12: iconst_2
      13: bipush        8
      15: invokestatic  #25                 // Method io/netty/buffer/ByteBufUtil.hexDump:(Lio/netty/buffer/ByteBuf;II)Ljava/lang/String;
      18: putfield      #18                 // Field id:Ljava/lang/String;
      21: return

  private void extractSequenceNumber();
    Code:
       0: aload_0
       1: getfield      #3                  // Field sequenceNumber:I
       4: iconst_m1
       5: if_icmpne     40
       8: aload_0
       9: getfield      #13                 // Field payload:Lio/netty/buffer/ByteBuf;
      12: bipush        10
      14: invokevirtual #26                 // Method io/netty/buffer/ByteBuf.getUnsignedByte:(I)S
      17: istore_1
      18: iload_1
      19: iflt          30
      22: aload_0
      23: iload_1
      24: putfield      #3                  // Field sequenceNumber:I
      27: goto          40
      30: new           #27                 // class java/lang/IllegalStateException
      33: dup
      34: ldc           #28                 // String Could not extract sequence number
      36: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: return

  private void extractSequenceCount();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sequenceCount:I
       4: iconst_m1
       5: if_icmpne     40
       8: aload_0
       9: getfield      #13                 // Field payload:Lio/netty/buffer/ByteBuf;
      12: bipush        11
      14: invokevirtual #26                 // Method io/netty/buffer/ByteBuf.getUnsignedByte:(I)S
      17: istore_1
      18: iload_1
      19: iflt          30
      22: aload_0
      23: iload_1
      24: putfield      #4                  // Field sequenceCount:I
      27: goto          40
      30: new           #27                 // class java/lang/IllegalStateException
      33: dup
      34: ldc           #30                 // String Could not extract sequence count
      36: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: return

  private void extractData();
    Code:
       0: aload_0
       1: getfield      #13                 // Field payload:Lio/netty/buffer/ByteBuf;
       4: invokevirtual #31                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       7: bipush        12
       9: isub
      10: istore_1
      11: iload_1
      12: newarray       byte
      14: astore_2
      15: aload_0
      16: getfield      #13                 // Field payload:Lio/netty/buffer/ByteBuf;
      19: bipush        12
      21: aload_2
      22: iconst_0
      23: iload_1
      24: invokevirtual #32                 // Method io/netty/buffer/ByteBuf.getBytes:(I[BII)Lio/netty/buffer/ByteBuf;
      27: pop
      28: aload_0
      29: aload_2
      30: putfield      #2                  // Field data:[B
      33: return

  public java.lang.String toString();
    Code:
       0: new           #33                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #35                 // String ID:
       9: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #18                 // Field id:Ljava/lang/String;
      16: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #37                 // String \tSequence:
      21: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #3                  // Field sequenceNumber:I
      28: iconst_1
      29: iadd
      30: invokevirtual #38                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      33: ldc           #39                 // String /
      35: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: getfield      #4                  // Field sequenceCount:I
      42: invokevirtual #38                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      45: ldc           #40                 // String \tArrival:
      47: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_0
      51: getfield      #7                  // Field arrival:J
      54: invokevirtual #41                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      57: ldc           #42                 // String \tData size:
      59: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: getfield      #13                 // Field payload:Lio/netty/buffer/ByteBuf;
      66: invokevirtual #31                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      69: invokevirtual #38                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      72: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: areturn
}
