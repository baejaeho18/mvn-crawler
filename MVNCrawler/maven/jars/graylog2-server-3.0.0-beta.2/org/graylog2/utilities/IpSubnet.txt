Compiled from "IpSubnet.java"
public class org.graylog2.utilities.IpSubnet {
  private static final byte[] MASK_IPV4;

  private static final byte[] MASK_IPV6;

  private final java.net.InetAddress inetAddress;

  private java.net.InetAddress startAddress;

  private java.net.InetAddress endAddress;

  private final int prefixLength;

  public org.graylog2.utilities.IpSubnet(java.lang.String) throws java.net.UnknownHostException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String CIDR must not be null
       7: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: aload_1
      12: ldc           #4                  // String /
      14: invokevirtual #5                  // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      17: ifeq          67
      20: aload_1
      21: ldc           #4                  // String /
      23: invokevirtual #6                  // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      26: istore_2
      27: aload_1
      28: iconst_0
      29: iload_2
      30: invokevirtual #7                  // Method java/lang/String.substring:(II)Ljava/lang/String;
      33: astore_3
      34: aload_1
      35: iload_2
      36: iconst_1
      37: iadd
      38: invokevirtual #8                  // Method java/lang/String.substring:(I)Ljava/lang/String;
      41: astore        4
      43: aload_0
      44: aload_3
      45: invokestatic  #9                  // Method java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
      48: putfield      #10                 // Field inetAddress:Ljava/net/InetAddress;
      51: aload_0
      52: aload         4
      54: invokestatic  #11                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      57: putfield      #12                 // Field prefixLength:I
      60: aload_0
      61: invokespecial #13                 // Method calculate:()V
      64: goto          94
      67: new           #14                 // class java/net/UnknownHostException
      70: dup
      71: new           #15                 // class java/lang/StringBuilder
      74: dup
      75: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      78: ldc           #17                 // String Invalid subnet:
      80: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: aload_1
      84: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokespecial #20                 // Method java/net/UnknownHostException."<init>":(Ljava/lang/String;)V
      93: athrow
      94: return

  private void calculate() throws java.net.UnknownHostException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field inetAddress:Ljava/net/InetAddress;
       4: invokevirtual #21                 // Method java/net/InetAddress.getAddress:()[B
       7: arraylength
       8: iconst_4
       9: if_icmpne     39
      12: iconst_4
      13: istore_1
      14: new           #22                 // class java/math/BigInteger
      17: dup
      18: iconst_1
      19: getstatic     #23                 // Field MASK_IPV4:[B
      22: invokespecial #24                 // Method java/math/BigInteger."<init>":(I[B)V
      25: invokevirtual #25                 // Method java/math/BigInteger.not:()Ljava/math/BigInteger;
      28: aload_0
      29: getfield      #12                 // Field prefixLength:I
      32: invokevirtual #26                 // Method java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
      35: astore_2
      36: goto          64
      39: bipush        16
      41: istore_1
      42: new           #22                 // class java/math/BigInteger
      45: dup
      46: iconst_1
      47: getstatic     #27                 // Field MASK_IPV6:[B
      50: invokespecial #24                 // Method java/math/BigInteger."<init>":(I[B)V
      53: invokevirtual #25                 // Method java/math/BigInteger.not:()Ljava/math/BigInteger;
      56: aload_0
      57: getfield      #12                 // Field prefixLength:I
      60: invokevirtual #26                 // Method java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
      63: astore_2
      64: new           #22                 // class java/math/BigInteger
      67: dup
      68: iconst_1
      69: aload_0
      70: getfield      #10                 // Field inetAddress:Ljava/net/InetAddress;
      73: invokevirtual #21                 // Method java/net/InetAddress.getAddress:()[B
      76: invokespecial #24                 // Method java/math/BigInteger."<init>":(I[B)V
      79: astore_3
      80: aload_3
      81: aload_2
      82: invokevirtual #28                 // Method java/math/BigInteger.and:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      85: astore        4
      87: aload         4
      89: aload_2
      90: invokevirtual #25                 // Method java/math/BigInteger.not:()Ljava/math/BigInteger;
      93: invokevirtual #29                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      96: astore        5
      98: aload_0
      99: aload         4
     101: invokevirtual #30                 // Method java/math/BigInteger.toByteArray:()[B
     104: iload_1
     105: invokespecial #31                 // Method toBytes:([BI)[B
     108: astore        6
     110: aload_0
     111: aload         5
     113: invokevirtual #30                 // Method java/math/BigInteger.toByteArray:()[B
     116: iload_1
     117: invokespecial #31                 // Method toBytes:([BI)[B
     120: astore        7
     122: aload_0
     123: aload         6
     125: invokestatic  #32                 // Method java/net/InetAddress.getByAddress:([B)Ljava/net/InetAddress;
     128: putfield      #33                 // Field startAddress:Ljava/net/InetAddress;
     131: aload_0
     132: aload         7
     134: invokestatic  #32                 // Method java/net/InetAddress.getByAddress:([B)Ljava/net/InetAddress;
     137: putfield      #34                 // Field endAddress:Ljava/net/InetAddress;
     140: return

  private byte[] toBytes(byte[], int);
    Code:
       0: iload_2
       1: newarray       byte
       3: astore_3
       4: iload_2
       5: aload_1
       6: arraylength
       7: if_icmple     15
      10: aload_1
      11: arraylength
      12: goto          16
      15: iload_2
      16: istore        4
      18: aload_1
      19: arraylength
      20: iload_2
      21: if_icmple     31
      24: aload_1
      25: arraylength
      26: iload_2
      27: isub
      28: goto          32
      31: iconst_0
      32: istore        5
      34: iload_2
      35: aload_1
      36: arraylength
      37: if_icmple     47
      40: iload_2
      41: aload_1
      42: arraylength
      43: isub
      44: goto          48
      47: iconst_0
      48: istore        6
      50: aload_1
      51: iload         5
      53: aload_3
      54: iload         6
      56: iload         4
      58: invokestatic  #35                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      61: aload_3
      62: areturn

  public java.lang.String getNetworkAddress();
    Code:
       0: aload_0
       1: getfield      #33                 // Field startAddress:Ljava/net/InetAddress;
       4: invokevirtual #36                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
       7: areturn

  public java.lang.String getBroadcastAddress();
    Code:
       0: aload_0
       1: getfield      #34                 // Field endAddress:Ljava/net/InetAddress;
       4: invokevirtual #36                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
       7: areturn

  public boolean contains(java.lang.String) throws java.net.UnknownHostException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #9                  // Method java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
       5: invokevirtual #37                 // Method contains:(Ljava/net/InetAddress;)Z
       8: ireturn

  public boolean contains(java.net.InetAddress);
    Code:
       0: new           #22                 // class java/math/BigInteger
       3: dup
       4: iconst_1
       5: aload_0
       6: getfield      #33                 // Field startAddress:Ljava/net/InetAddress;
       9: invokevirtual #21                 // Method java/net/InetAddress.getAddress:()[B
      12: invokespecial #24                 // Method java/math/BigInteger."<init>":(I[B)V
      15: astore_2
      16: new           #22                 // class java/math/BigInteger
      19: dup
      20: iconst_1
      21: aload_0
      22: getfield      #34                 // Field endAddress:Ljava/net/InetAddress;
      25: invokevirtual #21                 // Method java/net/InetAddress.getAddress:()[B
      28: invokespecial #24                 // Method java/math/BigInteger."<init>":(I[B)V
      31: astore_3
      32: new           #22                 // class java/math/BigInteger
      35: dup
      36: iconst_1
      37: aload_1
      38: invokevirtual #21                 // Method java/net/InetAddress.getAddress:()[B
      41: invokespecial #24                 // Method java/math/BigInteger."<init>":(I[B)V
      44: astore        4
      46: aload_2
      47: aload         4
      49: invokevirtual #38                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      52: istore        5
      54: aload         4
      56: aload_3
      57: invokevirtual #38                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      60: istore        6
      62: iload         5
      64: iconst_m1
      65: if_icmpeq     73
      68: iload         5
      70: ifne          88
      73: iload         6
      75: iconst_m1
      76: if_icmpeq     84
      79: iload         6
      81: ifne          88
      84: iconst_1
      85: goto          89
      88: iconst_0
      89: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #40                 // class org/graylog2/utilities/IpSubnet
      28: astore_2
      29: aload_0
      30: getfield      #33                 // Field startAddress:Ljava/net/InetAddress;
      33: aload_2
      34: getfield      #33                 // Field startAddress:Ljava/net/InetAddress;
      37: invokestatic  #41                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      40: ifeq          81
      43: aload_0
      44: getfield      #34                 // Field endAddress:Ljava/net/InetAddress;
      47: aload_2
      48: getfield      #34                 // Field endAddress:Ljava/net/InetAddress;
      51: invokestatic  #41                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      54: ifeq          81
      57: aload_0
      58: getfield      #12                 // Field prefixLength:I
      61: invokestatic  #42                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      64: aload_2
      65: getfield      #12                 // Field prefixLength:I
      68: invokestatic  #42                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      71: invokestatic  #41                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      74: ifeq          81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: ireturn

  public int hashCode();
    Code:
       0: iconst_3
       1: anewarray     #43                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #33                 // Field startAddress:Ljava/net/InetAddress;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #34                 // Field endAddress:Ljava/net/InetAddress;
      17: aastore
      18: dup
      19: iconst_2
      20: aload_0
      21: getfield      #12                 // Field prefixLength:I
      24: invokestatic  #42                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: aastore
      28: invokestatic  #44                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      31: ireturn

  public java.lang.String toString();
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #10                 // Field inetAddress:Ljava/net/InetAddress;
      11: invokevirtual #36                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
      14: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #4                  // String /
      19: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #12                 // Field prefixLength:I
      26: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: areturn

  static {};
    Code:
       0: iconst_4
       1: newarray       byte
       3: dup
       4: iconst_0
       5: iconst_m1
       6: bastore
       7: dup
       8: iconst_1
       9: iconst_m1
      10: bastore
      11: dup
      12: iconst_2
      13: iconst_m1
      14: bastore
      15: dup
      16: iconst_3
      17: iconst_m1
      18: bastore
      19: putstatic     #23                 // Field MASK_IPV4:[B
      22: bipush        16
      24: newarray       byte
      26: dup
      27: iconst_0
      28: iconst_m1
      29: bastore
      30: dup
      31: iconst_1
      32: iconst_m1
      33: bastore
      34: dup
      35: iconst_2
      36: iconst_m1
      37: bastore
      38: dup
      39: iconst_3
      40: iconst_m1
      41: bastore
      42: dup
      43: iconst_4
      44: iconst_m1
      45: bastore
      46: dup
      47: iconst_5
      48: iconst_m1
      49: bastore
      50: dup
      51: bipush        6
      53: iconst_m1
      54: bastore
      55: dup
      56: bipush        7
      58: iconst_m1
      59: bastore
      60: dup
      61: bipush        8
      63: iconst_m1
      64: bastore
      65: dup
      66: bipush        9
      68: iconst_m1
      69: bastore
      70: dup
      71: bipush        10
      73: iconst_m1
      74: bastore
      75: dup
      76: bipush        11
      78: iconst_m1
      79: bastore
      80: dup
      81: bipush        12
      83: iconst_m1
      84: bastore
      85: dup
      86: bipush        13
      88: iconst_m1
      89: bastore
      90: dup
      91: bipush        14
      93: iconst_m1
      94: bastore
      95: dup
      96: bipush        15
      98: iconst_m1
      99: bastore
     100: putstatic     #27                 // Field MASK_IPV6:[B
     103: return
}
