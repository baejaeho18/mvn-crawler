Compiled from "ServerStatus.java"
public class org.graylog2.plugin.ServerStatus {
  private static final org.slf4j.Logger LOG;

  private final com.google.common.eventbus.EventBus eventBus;

  private final org.graylog2.plugin.system.NodeId nodeId;

  private final com.google.inject.Provider<org.graylog2.audit.AuditEventSender> auditEventSenderProvider;

  private final java.lang.String clusterId;

  private final org.joda.time.DateTime startedAt;

  private final java.util.Set<org.graylog2.plugin.ServerStatus$Capability> capabilitySet;

  private org.graylog2.plugin.ServerStatus$MessageDetailRecordingStrategy messageDetailRecordingStrategy;

  private final java.util.concurrent.atomic.AtomicBoolean isProcessing;

  private final java.util.concurrent.atomic.AtomicBoolean processingPauseLocked;

  private final java.util.concurrent.CountDownLatch runningLatch;

  private volatile org.graylog2.plugin.lifecycles.Lifecycle lifecycle;

  public org.graylog2.plugin.ServerStatus$MessageDetailRecordingStrategy getDetailedMessageRecordingStrategy();
    Code:
       0: aload_0
       1: getfield      #2                  // Field messageDetailRecordingStrategy:Lorg/graylog2/plugin/ServerStatus$MessageDetailRecordingStrategy;
       4: areturn

  public org.graylog2.plugin.ServerStatus(org.graylog2.plugin.BaseConfiguration, java.util.Set<org.graylog2.plugin.ServerStatus$Capability>, com.google.common.eventbus.EventBus, com.google.inject.Provider<org.graylog2.audit.AuditEventSender>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #4                  // Field org/graylog2/plugin/ServerStatus$MessageDetailRecordingStrategy.NEVER:Lorg/graylog2/plugin/ServerStatus$MessageDetailRecordingStrategy;
       8: putfield      #2                  // Field messageDetailRecordingStrategy:Lorg/graylog2/plugin/ServerStatus$MessageDetailRecordingStrategy;
      11: aload_0
      12: new           #5                  // class java/util/concurrent/atomic/AtomicBoolean
      15: dup
      16: iconst_0
      17: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      20: putfield      #7                  // Field isProcessing:Ljava/util/concurrent/atomic/AtomicBoolean;
      23: aload_0
      24: new           #5                  // class java/util/concurrent/atomic/AtomicBoolean
      27: dup
      28: iconst_0
      29: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      32: putfield      #8                  // Field processingPauseLocked:Ljava/util/concurrent/atomic/AtomicBoolean;
      35: aload_0
      36: new           #9                  // class java/util/concurrent/CountDownLatch
      39: dup
      40: iconst_1
      41: invokespecial #10                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      44: putfield      #11                 // Field runningLatch:Ljava/util/concurrent/CountDownLatch;
      47: aload_0
      48: getstatic     #12                 // Field org/graylog2/plugin/lifecycles/Lifecycle.UNINITIALIZED:Lorg/graylog2/plugin/lifecycles/Lifecycle;
      51: putfield      #13                 // Field lifecycle:Lorg/graylog2/plugin/lifecycles/Lifecycle;
      54: aload_0
      55: aload_3
      56: putfield      #14                 // Field eventBus:Lcom/google/common/eventbus/EventBus;
      59: aload_0
      60: new           #15                 // class org/graylog2/plugin/system/NodeId
      63: dup
      64: aload_1
      65: invokevirtual #16                 // Method org/graylog2/plugin/BaseConfiguration.getNodeIdFile:()Ljava/lang/String;
      68: invokespecial #17                 // Method org/graylog2/plugin/system/NodeId."<init>":(Ljava/lang/String;)V
      71: putfield      #18                 // Field nodeId:Lorg/graylog2/plugin/system/NodeId;
      74: aload_0
      75: aload         4
      77: putfield      #19                 // Field auditEventSenderProvider:Lcom/google/inject/Provider;
      80: aload_0
      81: ldc           #20                 // String
      83: putfield      #21                 // Field clusterId:Ljava/lang/String;
      86: aload_0
      87: invokestatic  #22                 // Method org/graylog2/plugin/Tools.nowUTC:()Lorg/joda/time/DateTime;
      90: putfield      #23                 // Field startedAt:Lorg/joda/time/DateTime;
      93: aload_0
      94: aload_2
      95: invokestatic  #24                 // Method com/google/common/collect/Sets.newHashSet:(Ljava/lang/Iterable;)Ljava/util/HashSet;
      98: putfield      #25                 // Field capabilitySet:Ljava/util/Set;
     101: aload_0
     102: aload_1
     103: invokevirtual #26                 // Method org/graylog2/plugin/BaseConfiguration.isMessageRecordingsEnabled:()Z
     106: ifeq          115
     109: getstatic     #27                 // Field org/graylog2/plugin/ServerStatus$MessageDetailRecordingStrategy.ALWAYS:Lorg/graylog2/plugin/ServerStatus$MessageDetailRecordingStrategy;
     112: goto          118
     115: getstatic     #4                  // Field org/graylog2/plugin/ServerStatus$MessageDetailRecordingStrategy.NEVER:Lorg/graylog2/plugin/ServerStatus$MessageDetailRecordingStrategy;
     118: putfield      #2                  // Field messageDetailRecordingStrategy:Lorg/graylog2/plugin/ServerStatus$MessageDetailRecordingStrategy;
     121: return

  public org.graylog2.plugin.system.NodeId getNodeId();
    Code:
       0: aload_0
       1: getfield      #18                 // Field nodeId:Lorg/graylog2/plugin/system/NodeId;
       4: areturn

  public java.lang.String getClusterId();
    Code:
       0: aload_0
       1: getfield      #21                 // Field clusterId:Ljava/lang/String;
       4: areturn

  public org.graylog2.plugin.lifecycles.Lifecycle getLifecycle();
    Code:
       0: aload_0
       1: getfield      #13                 // Field lifecycle:Lorg/graylog2/plugin/lifecycles/Lifecycle;
       4: areturn

  private void publishLifecycle(org.graylog2.plugin.lifecycles.Lifecycle);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #28                 // Method setLifecycle:(Lorg/graylog2/plugin/lifecycles/Lifecycle;)V
       5: aload_0
       6: getfield      #14                 // Field eventBus:Lcom/google/common/eventbus/EventBus;
       9: aload_1
      10: invokevirtual #29                 // Method com/google/common/eventbus/EventBus.post:(Ljava/lang/Object;)V
      13: return

  private void setLifecycle(org.graylog2.plugin.lifecycles.Lifecycle);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field lifecycle:Lorg/graylog2/plugin/lifecycles/Lifecycle;
       5: return

  public void initialize();
    Code:
       0: aload_0
       1: getstatic     #30                 // Field org/graylog2/plugin/lifecycles/Lifecycle.STARTING:Lorg/graylog2/plugin/lifecycles/Lifecycle;
       4: invokespecial #31                 // Method publishLifecycle:(Lorg/graylog2/plugin/lifecycles/Lifecycle;)V
       7: return

  public void start();
    Code:
       0: aload_0
       1: getfield      #7                  // Field isProcessing:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: aload_0
       9: getfield      #11                 // Field runningLatch:Ljava/util/concurrent/CountDownLatch;
      12: invokevirtual #33                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      15: aload_0
      16: getstatic     #34                 // Field org/graylog2/plugin/lifecycles/Lifecycle.RUNNING:Lorg/graylog2/plugin/lifecycles/Lifecycle;
      19: invokespecial #31                 // Method publishLifecycle:(Lorg/graylog2/plugin/lifecycles/Lifecycle;)V
      22: return

  public void shutdown(boolean);
    Code:
       0: iload_1
       1: ifeq          16
       4: aload_0
       5: invokevirtual #35                 // Method unlockProcessingPause:()V
       8: aload_0
       9: getfield      #7                  // Field isProcessing:Ljava/util/concurrent/atomic/AtomicBoolean;
      12: iconst_1
      13: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      16: aload_0
      17: getstatic     #36                 // Field org/graylog2/plugin/lifecycles/Lifecycle.HALTING:Lorg/graylog2/plugin/lifecycles/Lifecycle;
      20: invokespecial #31                 // Method publishLifecycle:(Lorg/graylog2/plugin/lifecycles/Lifecycle;)V
      23: return

  public void shutdown();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #37                 // Method shutdown:(Z)V
       5: return

  public void fail();
    Code:
       0: aload_0
       1: getfield      #7                  // Field isProcessing:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: aload_0
       9: getstatic     #38                 // Field org/graylog2/plugin/lifecycles/Lifecycle.FAILED:Lorg/graylog2/plugin/lifecycles/Lifecycle;
      12: invokespecial #31                 // Method publishLifecycle:(Lorg/graylog2/plugin/lifecycles/Lifecycle;)V
      15: return

  public void throttle();
    Code:
       0: aload_0
       1: getstatic     #39                 // Field org/graylog2/plugin/lifecycles/Lifecycle.THROTTLED:Lorg/graylog2/plugin/lifecycles/Lifecycle;
       4: invokespecial #31                 // Method publishLifecycle:(Lorg/graylog2/plugin/lifecycles/Lifecycle;)V
       7: return

  public void running();
    Code:
       0: aload_0
       1: getstatic     #34                 // Field org/graylog2/plugin/lifecycles/Lifecycle.RUNNING:Lorg/graylog2/plugin/lifecycles/Lifecycle;
       4: invokespecial #31                 // Method publishLifecycle:(Lorg/graylog2/plugin/lifecycles/Lifecycle;)V
       7: return

  public void overrideLoadBalancerDead();
    Code:
       0: aload_0
       1: getstatic     #40                 // Field org/graylog2/plugin/lifecycles/Lifecycle.OVERRIDE_LB_DEAD:Lorg/graylog2/plugin/lifecycles/Lifecycle;
       4: invokespecial #31                 // Method publishLifecycle:(Lorg/graylog2/plugin/lifecycles/Lifecycle;)V
       7: return

  public void overrideLoadBalancerAlive();
    Code:
       0: aload_0
       1: getstatic     #41                 // Field org/graylog2/plugin/lifecycles/Lifecycle.OVERRIDE_LB_ALIVE:Lorg/graylog2/plugin/lifecycles/Lifecycle;
       4: invokespecial #31                 // Method publishLifecycle:(Lorg/graylog2/plugin/lifecycles/Lifecycle;)V
       7: return

  public void overrideLoadBalancerThrottled();
    Code:
       0: aload_0
       1: getstatic     #42                 // Field org/graylog2/plugin/lifecycles/Lifecycle.OVERRIDE_LB_THROTTLED:Lorg/graylog2/plugin/lifecycles/Lifecycle;
       4: invokespecial #31                 // Method publishLifecycle:(Lorg/graylog2/plugin/lifecycles/Lifecycle;)V
       7: return

  public void awaitRunning(java.lang.Runnable);
    Code:
       0: getstatic     #43                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #44                 // String Waiting for server to enter RUNNING state
       5: invokeinterface #45,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      10: aload_0
      11: getfield      #11                 // Field runningLatch:Ljava/util/concurrent/CountDownLatch;
      14: invokestatic  #46                 // Method com/google/common/util/concurrent/Uninterruptibles.awaitUninterruptibly:(Ljava/util/concurrent/CountDownLatch;)V
      17: getstatic     #43                 // Field LOG:Lorg/slf4j/Logger;
      20: ldc           #47                 // String Server entered RUNNING state
      22: invokeinterface #45,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      27: getstatic     #43                 // Field LOG:Lorg/slf4j/Logger;
      30: ldc           #48                 // String Executing awaitRunning callback
      32: invokeinterface #45,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      37: aload_1
      38: invokeinterface #49,  1           // InterfaceMethod java/lang/Runnable.run:()V
      43: goto          58
      46: astore_2
      47: getstatic     #43                 // Field LOG:Lorg/slf4j/Logger;
      50: ldc           #51                 // String awaitRunning callback failed
      52: aload_2
      53: invokeinterface #52,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      58: return
    Exception table:
       from    to  target type
          27    43    46   Class java/lang/Exception

  public org.joda.time.DateTime getStartedAt();
    Code:
       0: aload_0
       1: getfield      #23                 // Field startedAt:Lorg/joda/time/DateTime;
       4: areturn

  public org.joda.time.DateTimeZone getTimezone();
    Code:
       0: invokestatic  #53                 // Method org/joda/time/DateTimeZone.getDefault:()Lorg/joda/time/DateTimeZone;
       3: areturn

  public org.graylog2.plugin.ServerStatus addCapability(org.graylog2.plugin.ServerStatus$Capability);
    Code:
       0: aload_0
       1: getfield      #25                 // Field capabilitySet:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #54,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public org.graylog2.plugin.ServerStatus addCapabilities(org.graylog2.plugin.ServerStatus$Capability...);
    Code:
       0: aload_0
       1: getfield      #25                 // Field capabilitySet:Ljava/util/Set;
       4: aload_1
       5: invokestatic  #55                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       8: invokeinterface #56,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      13: pop
      14: aload_0
      15: areturn

  public boolean hasCapability(org.graylog2.plugin.ServerStatus$Capability);
    Code:
       0: aload_0
       1: getfield      #25                 // Field capabilitySet:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #57,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean hasCapabilities(org.graylog2.plugin.ServerStatus$Capability...);
    Code:
       0: aload_0
       1: getfield      #25                 // Field capabilitySet:Ljava/util/Set;
       4: aload_1
       5: invokestatic  #55                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       8: invokeinterface #58,  2           // InterfaceMethod java/util/Set.containsAll:(Ljava/util/Collection;)Z
      13: ireturn

  public boolean isProcessing();
    Code:
       0: aload_0
       1: getfield      #7                  // Field isProcessing:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public void pauseMessageProcessing();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #60                 // Method pauseMessageProcessing:(Z)V
       5: return

  public void pauseMessageProcessing(boolean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field processingPauseLocked:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iload_1
       6: invokevirtual #61                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          45
      12: iload_1
      13: ifeq          45
      16: aload_0
      17: getfield      #19                 // Field auditEventSenderProvider:Lcom/google/inject/Provider;
      20: invokeinterface #62,  1           // InterfaceMethod com/google/inject/Provider.get:()Ljava/lang/Object;
      25: checkcast     #63                 // class org/graylog2/audit/AuditEventSender
      28: aload_0
      29: getfield      #18                 // Field nodeId:Lorg/graylog2/plugin/system/NodeId;
      32: invokestatic  #64                 // Method org/graylog2/audit/AuditActor.system:(Lorg/graylog2/plugin/system/NodeId;)Lorg/graylog2/audit/AuditActor;
      35: ldc           #65                 // String server:message_processing:lock
      37: invokeinterface #66,  3           // InterfaceMethod org/graylog2/audit/AuditEventSender.success:(Lorg/graylog2/audit/AuditActor;Ljava/lang/String;)V
      42: goto          75
      45: iload_1
      46: ifeq          75
      49: aload_0
      50: getfield      #19                 // Field auditEventSenderProvider:Lcom/google/inject/Provider;
      53: invokeinterface #62,  1           // InterfaceMethod com/google/inject/Provider.get:()Ljava/lang/Object;
      58: checkcast     #63                 // class org/graylog2/audit/AuditEventSender
      61: aload_0
      62: getfield      #18                 // Field nodeId:Lorg/graylog2/plugin/system/NodeId;
      65: invokestatic  #64                 // Method org/graylog2/audit/AuditActor.system:(Lorg/graylog2/plugin/system/NodeId;)Lorg/graylog2/audit/AuditActor;
      68: ldc           #65                 // String server:message_processing:lock
      70: invokeinterface #67,  3           // InterfaceMethod org/graylog2/audit/AuditEventSender.failure:(Lorg/graylog2/audit/AuditActor;Ljava/lang/String;)V
      75: aload_0
      76: getfield      #7                  // Field isProcessing:Ljava/util/concurrent/atomic/AtomicBoolean;
      79: iconst_0
      80: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      83: aload_0
      84: getstatic     #68                 // Field org/graylog2/plugin/lifecycles/Lifecycle.PAUSED:Lorg/graylog2/plugin/lifecycles/Lifecycle;
      87: invokespecial #31                 // Method publishLifecycle:(Lorg/graylog2/plugin/lifecycles/Lifecycle;)V
      90: return

  public void resumeMessageProcessing() throws org.graylog2.plugin.ProcessingPauseLockedException;
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method processingPauseLocked:()Z
       4: ifeq          17
       7: new           #70                 // class org/graylog2/plugin/ProcessingPauseLockedException
      10: dup
      11: ldc           #71                 // String Processing pause is locked. Wait until the locking task has finished or manually unlock if you know what you are doing.
      13: invokespecial #72                 // Method org/graylog2/plugin/ProcessingPauseLockedException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #73                 // Method start:()V
      21: return

  public boolean processingPauseLocked();
    Code:
       0: aload_0
       1: getfield      #8                  // Field processingPauseLocked:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #59                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public void unlockProcessingPause();
    Code:
       0: aload_0
       1: getfield      #8                  // Field processingPauseLocked:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: return

  private org.graylog2.plugin.ServerStatus removeCapability(org.graylog2.plugin.ServerStatus$Capability);
    Code:
       0: aload_0
       1: getfield      #25                 // Field capabilitySet:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #74,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public void setLocalMode(boolean);
    Code:
       0: iload_1
       1: ifeq          15
       4: aload_0
       5: getstatic     #75                 // Field org/graylog2/plugin/ServerStatus$Capability.LOCALMODE:Lorg/graylog2/plugin/ServerStatus$Capability;
       8: invokevirtual #76                 // Method addCapability:(Lorg/graylog2/plugin/ServerStatus$Capability;)Lorg/graylog2/plugin/ServerStatus;
      11: pop
      12: goto          23
      15: aload_0
      16: getstatic     #75                 // Field org/graylog2/plugin/ServerStatus$Capability.LOCALMODE:Lorg/graylog2/plugin/ServerStatus$Capability;
      19: invokespecial #77                 // Method removeCapability:(Lorg/graylog2/plugin/ServerStatus$Capability;)Lorg/graylog2/plugin/ServerStatus;
      22: pop
      23: return

  static {};
    Code:
       0: ldc           #78                 // class org/graylog2/plugin/ServerStatus
       2: invokestatic  #79                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #43                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
