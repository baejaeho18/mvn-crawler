Compiled from "ThrottleableTransport.java"
public abstract class org.graylog2.plugin.inputs.transports.ThrottleableTransport implements org.graylog2.plugin.inputs.transports.Transport {
  private static final org.slf4j.Logger log;

  public static final java.lang.String CK_THROTTLING_ALLOWED;

  private final boolean throttlingAllowed;

  private final java.util.concurrent.atomic.AtomicBoolean currentlyThrottled;

  private final com.google.common.eventbus.EventBus eventBus;

  private volatile java.util.concurrent.CountDownLatch blockLatch;

  private long lastUncommitted;

  public org.graylog2.plugin.inputs.transports.ThrottleableTransport(com.google.common.eventbus.EventBus, org.graylog2.plugin.configuration.Configuration);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #4                  // Field currentlyThrottled:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: aload_0
      17: aconst_null
      18: putfield      #5                  // Field blockLatch:Ljava/util/concurrent/CountDownLatch;
      21: aload_0
      22: aload_1
      23: putfield      #6                  // Field eventBus:Lcom/google/common/eventbus/EventBus;
      26: aload_0
      27: aload_2
      28: ldc           #8                  // String throttling_allowed
      30: invokevirtual #9                  // Method org/graylog2/plugin/configuration/Configuration.getBoolean:(Ljava/lang/String;)Z
      33: putfield      #10                 // Field throttlingAllowed:Z
      36: return

  public void launch(org.graylog2.plugin.inputs.MessageInput) throws org.graylog2.plugin.inputs.MisfireException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method doLaunch:(Lorg/graylog2/plugin/inputs/MessageInput;)V
       5: aload_0
       6: getfield      #10                 // Field throttlingAllowed:Z
       9: ifeq          20
      12: aload_0
      13: getfield      #6                  // Field eventBus:Lcom/google/common/eventbus/EventBus;
      16: aload_0
      17: invokevirtual #12                 // Method com/google/common/eventbus/EventBus.register:(Ljava/lang/Object;)V
      20: return

  protected abstract void doLaunch(org.graylog2.plugin.inputs.MessageInput) throws org.graylog2.plugin.inputs.MisfireException;

  public void stop();
    Code:
       0: aload_0
       1: getfield      #4                  // Field currentlyThrottled:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          17
      10: aload_0
      11: getfield      #5                  // Field blockLatch:Ljava/util/concurrent/CountDownLatch;
      14: invokevirtual #14                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      17: aload_0
      18: invokevirtual #15                 // Method doStop:()V
      21: aload_0
      22: getfield      #10                 // Field throttlingAllowed:Z
      25: ifeq          40
      28: aload_0
      29: getfield      #6                  // Field eventBus:Lcom/google/common/eventbus/EventBus;
      32: aload_0
      33: invokevirtual #16                 // Method com/google/common/eventbus/EventBus.unregister:(Ljava/lang/Object;)V
      36: goto          40
      39: astore_1
      40: return
    Exception table:
       from    to  target type
          28    36    39   Class java/lang/IllegalArgumentException

  protected abstract void doStop();

  public void updateThrottleState(org.graylog2.plugin.ThrottleState);
    Code:
       0: aload_0
       1: getfield      #10                 // Field throttlingAllowed:Z
       4: ifne          8
       7: return
       8: aload_0
       9: aload_1
      10: invokevirtual #18                 // Method determineIfThrottled:(Lorg/graylog2/plugin/ThrottleState;)Z
      13: istore_2
      14: aload_0
      15: getfield      #4                  // Field currentlyThrottled:Ljava/util/concurrent/atomic/AtomicBoolean;
      18: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      21: ifeq          70
      24: iload_2
      25: ifeq          29
      28: return
      29: aload_0
      30: getfield      #5                  // Field blockLatch:Ljava/util/concurrent/CountDownLatch;
      33: ifnonnull     47
      36: getstatic     #19                 // Field log:Lorg/slf4j/Logger;
      39: ldc           #20                 // String Expected to see a transport throttle latch, but it is missing. This is a bug, continuing anyway.
      41: invokeinterface #21,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
      46: return
      47: aload_0
      48: getfield      #4                  // Field currentlyThrottled:Ljava/util/concurrent/atomic/AtomicBoolean;
      51: iconst_0
      52: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      55: aload_0
      56: iconst_0
      57: invokevirtual #23                 // Method handleChangedThrottledState:(Z)V
      60: aload_0
      61: getfield      #5                  // Field blockLatch:Ljava/util/concurrent/CountDownLatch;
      64: invokevirtual #14                 // Method java/util/concurrent/CountDownLatch.countDown:()V
      67: goto          99
      70: iload_2
      71: ifeq          99
      74: aload_0
      75: getfield      #4                  // Field currentlyThrottled:Ljava/util/concurrent/atomic/AtomicBoolean;
      78: iconst_1
      79: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      82: aload_0
      83: iconst_1
      84: invokevirtual #23                 // Method handleChangedThrottledState:(Z)V
      87: aload_0
      88: new           #24                 // class java/util/concurrent/CountDownLatch
      91: dup
      92: iconst_1
      93: invokespecial #25                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      96: putfield      #5                  // Field blockLatch:Ljava/util/concurrent/CountDownLatch;
      99: return

  public void handleChangedThrottledState(boolean);
    Code:
       0: return

  public boolean isThrottled();
    Code:
       0: aload_0
       1: getfield      #10                 // Field throttlingAllowed:Z
       4: ifeq          21
       7: aload_0
       8: getfield      #4                  // Field currentlyThrottled:Ljava/util/concurrent/atomic/AtomicBoolean;
      11: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  protected boolean determineIfThrottled(org.graylog2.plugin.ThrottleState);
    Code:
       0: aload_0
       1: getfield      #26                 // Field lastUncommitted:J
       4: lstore_2
       5: aload_0
       6: aload_1
       7: getfield      #27                 // Field org/graylog2/plugin/ThrottleState.uncommittedJournalEntries:J
      10: putfield      #26                 // Field lastUncommitted:J
      13: aload_0
      14: invokevirtual #28                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: invokevirtual #29                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      20: astore        4
      22: getstatic     #19                 // Field log:Lorg/slf4j/Logger;
      25: ldc           #30                 // String Checking if transport {} should be throttled {}
      27: aload         4
      29: aload_1
      30: invokeinterface #31,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      35: aload_1
      36: getfield      #27                 // Field org/graylog2/plugin/ThrottleState.uncommittedJournalEntries:J
      39: lconst_0
      40: lcmp
      41: ifne          58
      44: getstatic     #19                 // Field log:Lorg/slf4j/Logger;
      47: ldc           #32                 // String [{}] [unthrottled] journal empty
      49: aload         4
      51: invokeinterface #33,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      56: iconst_0
      57: ireturn
      58: aload_1
      59: getfield      #27                 // Field org/graylog2/plugin/ThrottleState.uncommittedJournalEntries:J
      62: ldc2_w        #34                 // long 100000l
      65: lcmp
      66: ifle          90
      69: getstatic     #19                 // Field log:Lorg/slf4j/Logger;
      72: ldc           #36                 // String [{}] [throttled] number of unread journal entries is larger than 100.000 entries: {}
      74: aload         4
      76: aload_1
      77: getfield      #27                 // Field org/graylog2/plugin/ThrottleState.uncommittedJournalEntries:J
      80: invokestatic  #37                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      83: invokeinterface #31,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      88: iconst_1
      89: ireturn
      90: aload_1
      91: getfield      #27                 // Field org/graylog2/plugin/ThrottleState.uncommittedJournalEntries:J
      94: lload_2
      95: lsub
      96: ldc2_w        #38                 // long 20000l
      99: lcmp
     100: ifle          126
     103: getstatic     #19                 // Field log:Lorg/slf4j/Logger;
     106: ldc           #40                 // String [{}] [throttled] number of unread journal entries is growing by more than 20.000 entries: {}
     108: aload         4
     110: aload_1
     111: getfield      #27                 // Field org/graylog2/plugin/ThrottleState.uncommittedJournalEntries:J
     114: lload_2
     115: lsub
     116: invokestatic  #37                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     119: invokeinterface #31,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     124: iconst_1
     125: ireturn
     126: aload_1
     127: getfield      #41                 // Field org/graylog2/plugin/ThrottleState.processBufferCapacity:J
     130: lconst_0
     131: lcmp
     132: ifne          149
     135: getstatic     #19                 // Field log:Lorg/slf4j/Logger;
     138: ldc           #42                 // String [{}] [throttled] no capacity in process buffer
     140: aload         4
     142: invokeinterface #33,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     147: iconst_1
     148: ireturn
     149: aload_1
     150: getfield      #43                 // Field org/graylog2/plugin/ThrottleState.appendEventsPerSec:J
     153: lconst_0
     154: lcmp
     155: ifne          190
     158: aload_1
     159: getfield      #44                 // Field org/graylog2/plugin/ThrottleState.readEventsPerSec:J
     162: lconst_0
     163: lcmp
     164: ifne          190
     167: aload_1
     168: getfield      #41                 // Field org/graylog2/plugin/ThrottleState.processBufferCapacity:J
     171: lconst_0
     172: lcmp
     173: ifle          190
     176: getstatic     #19                 // Field log:Lorg/slf4j/Logger;
     179: ldc           #45                 // String [{}] [unthrottled] no incoming messages and nothing read from journal even if we could
     181: aload         4
     183: invokeinterface #33,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     188: iconst_0
     189: ireturn
     190: aload_1
     191: getfield      #46                 // Field org/graylog2/plugin/ThrottleState.journalSize:J
     194: l2d
     195: aload_1
     196: getfield      #47                 // Field org/graylog2/plugin/ThrottleState.journalSizeLimit:J
     199: l2d
     200: ddiv
     201: ldc2_w        #48                 // double 100.0d
     204: dmul
     205: ldc2_w        #50                 // double 90.0d
     208: dcmpl
     209: ifle          226
     212: getstatic     #19                 // Field log:Lorg/slf4j/Logger;
     215: ldc           #52                 // String [{}] [throttled] journal more than 90% full
     217: aload         4
     219: invokeinterface #33,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     224: iconst_1
     225: ireturn
     226: aload_1
     227: getfield      #44                 // Field org/graylog2/plugin/ThrottleState.readEventsPerSec:J
     230: l2d
     231: aload_1
     232: getfield      #43                 // Field org/graylog2/plugin/ThrottleState.appendEventsPerSec:J
     235: l2d
     236: ddiv
     237: ldc2_w        #48                 // double 100.0d
     240: dmul
     241: ldc2_w        #53                 // double 50.0d
     244: dcmpg
     245: ifge          262
     248: getstatic     #19                 // Field log:Lorg/slf4j/Logger;
     251: ldc           #55                 // String [{}] [throttled] write rate is more than twice as high than read rate
     253: aload         4
     255: invokeinterface #33,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     260: iconst_1
     261: ireturn
     262: getstatic     #19                 // Field log:Lorg/slf4j/Logger;
     265: ldc           #56                 // String [{}] [unthrottled] fall through
     267: aload         4
     269: invokeinterface #33,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     274: iconst_0
     275: ireturn

  public void blockUntilUnthrottled();
    Code:
       0: aload_0
       1: getfield      #5                  // Field blockLatch:Ljava/util/concurrent/CountDownLatch;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #5                  // Field blockLatch:Ljava/util/concurrent/CountDownLatch;
      12: invokevirtual #57                 // Method java/util/concurrent/CountDownLatch.await:()V
      15: goto          19
      18: astore_1
      19: return
    Exception table:
       from    to  target type
           8    15    18   Class java/lang/InterruptedException

  public boolean blockUntilUnthrottled(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #5                  // Field blockLatch:Ljava/util/concurrent/CountDownLatch;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #5                  // Field blockLatch:Ljava/util/concurrent/CountDownLatch;
      13: lload_1
      14: aload_3
      15: invokevirtual #59                 // Method java/util/concurrent/CountDownLatch.await:(JLjava/util/concurrent/TimeUnit;)Z
      18: ireturn
      19: astore        4
      21: iconst_0
      22: ireturn
    Exception table:
       from    to  target type
           9    18    19   Class java/lang/InterruptedException

  static {};
    Code:
       0: ldc           #7                  // class org/graylog2/plugin/inputs/transports/ThrottleableTransport
       2: invokestatic  #60                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #19                 // Field log:Lorg/slf4j/Logger;
       8: return
}
