Compiled from "KafkaJournal.java"
class org.graylog2.shared.journal.KafkaJournal$LogRetentionCleaner$2 extends scala.runtime.AbstractFunction1<kafka.log.LogSegment, java.lang.Object> {
  final long[] val$diff;

  final long val$retentionSize;

  final org.graylog2.shared.journal.KafkaJournal$LogRetentionCleaner this$1;

  org.graylog2.shared.journal.KafkaJournal$LogRetentionCleaner$2(org.graylog2.shared.journal.KafkaJournal$LogRetentionCleaner, long[], long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Lorg/graylog2/shared/journal/KafkaJournal$LogRetentionCleaner;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$diff:[J
      10: aload_0
      11: lload_3
      12: putfield      #3                  // Field val$retentionSize:J
      15: aload_0
      16: invokespecial #4                  // Method scala/runtime/AbstractFunction1."<init>":()V
      19: return

  public java.lang.Object apply(kafka.log.LogSegment);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$diff:[J
       4: iconst_0
       5: laload
       6: aload_1
       7: invokevirtual #5                  // Method kafka/log/LogSegment.size:()J
      10: lsub
      11: lconst_0
      12: lcmp
      13: iflt          94
      16: aload_0
      17: getfield      #2                  // Field val$diff:[J
      20: iconst_0
      21: dup2
      22: laload
      23: aload_1
      24: invokevirtual #5                  // Method kafka/log/LogSegment.size:()J
      27: lsub
      28: lastore
      29: aload_0
      30: getfield      #1                  // Field this$1:Lorg/graylog2/shared/journal/KafkaJournal$LogRetentionCleaner;
      33: invokestatic  #6                  // Method org/graylog2/shared/journal/KafkaJournal$LogRetentionCleaner.access$600:(Lorg/graylog2/shared/journal/KafkaJournal$LogRetentionCleaner;)Lorg/slf4j/Logger;
      36: ldc           #7                  // String [cleanup-size] Removing segment starting at offset {}, size {} bytes, to shrink log to new size {}, target size {}
      38: iconst_4
      39: anewarray     #8                  // class java/lang/Object
      42: dup
      43: iconst_0
      44: aload_1
      45: invokevirtual #9                  // Method kafka/log/LogSegment.baseOffset:()J
      48: invokestatic  #10                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      51: aastore
      52: dup
      53: iconst_1
      54: aload_1
      55: invokevirtual #5                  // Method kafka/log/LogSegment.size:()J
      58: invokestatic  #10                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      61: aastore
      62: dup
      63: iconst_2
      64: aload_0
      65: getfield      #2                  // Field val$diff:[J
      68: iconst_0
      69: laload
      70: invokestatic  #10                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      73: aastore
      74: dup
      75: iconst_3
      76: aload_0
      77: getfield      #3                  // Field val$retentionSize:J
      80: invokestatic  #10                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      83: aastore
      84: invokeinterface #11,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      89: iconst_1
      90: invokestatic  #12                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      93: areturn
      94: iconst_0
      95: invokestatic  #12                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      98: areturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #13                 // class kafka/log/LogSegment
       5: invokevirtual #14                 // Method apply:(Lkafka/log/LogSegment;)Ljava/lang/Object;
       8: areturn
}
