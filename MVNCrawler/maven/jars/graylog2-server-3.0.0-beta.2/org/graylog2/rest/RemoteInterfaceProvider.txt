Compiled from "RemoteInterfaceProvider.java"
public class org.graylog2.rest.RemoteInterfaceProvider {
  private final com.fasterxml.jackson.databind.ObjectMapper objectMapper;

  private final okhttp3.OkHttpClient okHttpClient;

  public org.graylog2.rest.RemoteInterfaceProvider(com.fasterxml.jackson.databind.ObjectMapper, okhttp3.OkHttpClient);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field okHttpClient:Lokhttp3/OkHttpClient;
      14: return

  public <T> T get(org.graylog2.cluster.Node, java.lang.String, java.lang.Class<T>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field okHttpClient:Lokhttp3/OkHttpClient;
       4: invokevirtual #4                  // Method okhttp3/OkHttpClient.newBuilder:()Lokhttp3/OkHttpClient$Builder;
       7: aload_2
       8: invokedynamic #5,  0              // InvokeDynamic #0:intercept:(Ljava/lang/String;)Lokhttp3/Interceptor;
      13: invokevirtual #6                  // Method okhttp3/OkHttpClient$Builder.addInterceptor:(Lokhttp3/Interceptor;)Lokhttp3/OkHttpClient$Builder;
      16: invokevirtual #7                  // Method okhttp3/OkHttpClient$Builder.build:()Lokhttp3/OkHttpClient;
      19: astore        4
      21: new           #8                  // class retrofit2/Retrofit$Builder
      24: dup
      25: invokespecial #9                  // Method retrofit2/Retrofit$Builder."<init>":()V
      28: aload_1
      29: invokeinterface #10,  1           // InterfaceMethod org/graylog2/cluster/Node.getTransportAddress:()Ljava/lang/String;
      34: invokevirtual #11                 // Method retrofit2/Retrofit$Builder.baseUrl:(Ljava/lang/String;)Lretrofit2/Retrofit$Builder;
      37: aload_0
      38: getfield      #2                  // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      41: invokestatic  #12                 // Method retrofit2/converter/jackson/JacksonConverterFactory.create:(Lcom/fasterxml/jackson/databind/ObjectMapper;)Lretrofit2/converter/jackson/JacksonConverterFactory;
      44: invokevirtual #13                 // Method retrofit2/Retrofit$Builder.addConverterFactory:(Lretrofit2/Converter$Factory;)Lretrofit2/Retrofit$Builder;
      47: aload         4
      49: invokevirtual #14                 // Method retrofit2/Retrofit$Builder.client:(Lokhttp3/OkHttpClient;)Lretrofit2/Retrofit$Builder;
      52: invokevirtual #15                 // Method retrofit2/Retrofit$Builder.build:()Lretrofit2/Retrofit;
      55: astore        5
      57: aload         5
      59: aload_3
      60: invokevirtual #16                 // Method retrofit2/Retrofit.create:(Ljava/lang/Class;)Ljava/lang/Object;
      63: areturn

  public <T> T get(org.graylog2.cluster.Node, java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: invokevirtual #17                 // Method get:(Lorg/graylog2/cluster/Node;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
       7: areturn

  private static okhttp3.Response lambda$get$0(java.lang.String, okhttp3.Interceptor$Chain) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #18,  1           // InterfaceMethod okhttp3/Interceptor$Chain.request:()Lokhttp3/Request;
       6: astore_2
       7: aload_2
       8: invokevirtual #19                 // Method okhttp3/Request.newBuilder:()Lokhttp3/Request$Builder;
      11: ldc           #21                 // String Accept
      13: getstatic     #22                 // Field com/google/common/net/MediaType.JSON_UTF_8:Lcom/google/common/net/MediaType;
      16: invokevirtual #23                 // Method com/google/common/net/MediaType.toString:()Ljava/lang/String;
      19: invokevirtual #24                 // Method okhttp3/Request$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
      22: ldc           #26                 // String X-Requested-By
      24: ldc           #27                 // String Graylog Server
      26: invokevirtual #24                 // Method okhttp3/Request$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
      29: aload_2
      30: invokevirtual #28                 // Method okhttp3/Request.method:()Ljava/lang/String;
      33: aload_2
      34: invokevirtual #29                 // Method okhttp3/Request.body:()Lokhttp3/RequestBody;
      37: invokevirtual #30                 // Method okhttp3/Request$Builder.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;
      40: astore_3
      41: aload_0
      42: ifnull        60
      45: aload_3
      46: ldc           #31                 // String Authorization
      48: aload_0
      49: invokevirtual #24                 // Method okhttp3/Request$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
      52: ldc           #33                 // String X-Graylog-No-Session-Extension
      54: ldc           #34                 // String true
      56: invokevirtual #24                 // Method okhttp3/Request$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
      59: astore_3
      60: aload_1
      61: aload_3
      62: invokevirtual #35                 // Method okhttp3/Request$Builder.build:()Lokhttp3/Request;
      65: invokeinterface #36,  2           // InterfaceMethod okhttp3/Interceptor$Chain.proceed:(Lokhttp3/Request;)Lokhttp3/Response;
      70: areturn
}
