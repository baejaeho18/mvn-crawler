Compiled from "HttpConfiguration.java"
public class org.graylog2.configuration.HttpConfiguration {
  private static final org.slf4j.Logger LOG;

  private static final int GRAYLOG_DEFAULT_PORT;

  public static final java.lang.String OVERRIDE_HEADER;

  public static final java.lang.String PATH_WEB;

  public static final java.lang.String PATH_API;

  private com.google.common.net.HostAndPort httpBindAddress;

  private java.net.URI httpPublishUri;

  private boolean httpEnableCors;

  private boolean httpEnableGzip;

  private int httpMaxHeaderSize;

  private int httpThreadPoolSize;

  private int httpSelectorRunnersCount;

  private boolean httpEnableTls;

  private java.nio.file.Path httpTlsCertFile;

  private java.nio.file.Path httpTlsKeyFile;

  private java.lang.String httpTlsKeyPassword;

  private java.net.URI httpExternalUri;

  public org.graylog2.configuration.HttpConfiguration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // String 127.0.0.1
       7: sipush        9000
      10: invokestatic  #4                  // Method com/google/common/net/HostAndPort.fromParts:(Ljava/lang/String;I)Lcom/google/common/net/HostAndPort;
      13: putfield      #5                  // Field httpBindAddress:Lcom/google/common/net/HostAndPort;
      16: aload_0
      17: iconst_1
      18: putfield      #6                  // Field httpEnableCors:Z
      21: aload_0
      22: iconst_1
      23: putfield      #7                  // Field httpEnableGzip:Z
      26: aload_0
      27: sipush        8192
      30: putfield      #8                  // Field httpMaxHeaderSize:I
      33: aload_0
      34: bipush        16
      36: putfield      #9                  // Field httpThreadPoolSize:I
      39: aload_0
      40: iconst_1
      41: putfield      #10                 // Field httpSelectorRunnersCount:I
      44: aload_0
      45: iconst_0
      46: putfield      #11                 // Field httpEnableTls:Z
      49: return

  public com.google.common.net.HostAndPort getHttpBindAddress();
    Code:
       0: aload_0
       1: getfield      #5                  // Field httpBindAddress:Lcom/google/common/net/HostAndPort;
       4: invokevirtual #12                 // Method com/google/common/net/HostAndPort.requireBracketsForIPv6:()Lcom/google/common/net/HostAndPort;
       7: sipush        9000
      10: invokevirtual #13                 // Method com/google/common/net/HostAndPort.withDefaultPort:(I)Lcom/google/common/net/HostAndPort;
      13: areturn

  public java.lang.String getUriScheme();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method isHttpEnableTls:()Z
       4: ifeq          12
       7: ldc           #15                 // String https
       9: goto          14
      12: ldc           #16                 // String http
      14: areturn

  private java.net.InetAddress toInetAddress(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #17                 // Method java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
       4: areturn
       5: astore_2
       6: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
       9: ldc           #20                 // String Couldn\'t resolve \"{}\"
      11: aload_1
      12: aload_2
      13: invokeinterface #21,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      18: aconst_null
      19: areturn
    Exception table:
       from    to  target type
           0     4     5   Class java/net/UnknownHostException

  public java.net.URI getHttpPublishUri();
    Code:
       0: aload_0
       1: getfield      #22                 // Field httpPublishUri:Ljava/net/URI;
       4: ifnonnull     25
       7: aload_0
       8: invokevirtual #23                 // Method getDefaultHttpUri:()Ljava/net/URI;
      11: astore_1
      12: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
      15: ldc           #24                 // String No \"http_publish_uri\" set. Using default <{}>.
      17: aload_1
      18: invokeinterface #25,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      23: aload_1
      24: areturn
      25: aload_0
      26: aload_0
      27: getfield      #22                 // Field httpPublishUri:Ljava/net/URI;
      30: invokevirtual #26                 // Method java/net/URI.getHost:()Ljava/lang/String;
      33: invokespecial #27                 // Method toInetAddress:(Ljava/lang/String;)Ljava/net/InetAddress;
      36: astore_1
      37: aload_1
      38: invokestatic  #28                 // Method org/graylog2/plugin/Tools.isWildcardInetAddress:(Ljava/net/InetAddress;)Z
      41: ifeq          73
      44: aload_0
      45: aload_0
      46: getfield      #22                 // Field httpPublishUri:Ljava/net/URI;
      49: invokevirtual #29                 // Method java/net/URI.getPath:()Ljava/lang/String;
      52: invokespecial #30                 // Method getDefaultHttpUri:(Ljava/lang/String;)Ljava/net/URI;
      55: astore_2
      56: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
      59: ldc           #31                 // String \"{}\" is not a valid setting for \"http_publish_uri\". Using default <{}>.
      61: aload_0
      62: getfield      #22                 // Field httpPublishUri:Ljava/net/URI;
      65: aload_2
      66: invokeinterface #32,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      71: aload_2
      72: areturn
      73: aload_0
      74: getfield      #22                 // Field httpPublishUri:Ljava/net/URI;
      77: aload_0
      78: getfield      #22                 // Field httpPublishUri:Ljava/net/URI;
      81: invokevirtual #33                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      84: sipush        9000
      87: aload_0
      88: getfield      #22                 // Field httpPublishUri:Ljava/net/URI;
      91: invokevirtual #29                 // Method java/net/URI.getPath:()Ljava/lang/String;
      94: invokestatic  #34                 // Method org/graylog2/plugin/Tools.normalizeURI:(Ljava/net/URI;Ljava/lang/String;ILjava/lang/String;)Ljava/net/URI;
      97: areturn

  java.net.URI getDefaultHttpUri();
    Code:
       0: aload_0
       1: ldc           #35                 // String /
       3: invokespecial #30                 // Method getDefaultHttpUri:(Ljava/lang/String;)Ljava/net/URI;
       6: areturn

  private java.net.URI getDefaultHttpUri(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method getHttpBindAddress:()Lcom/google/common/net/HostAndPort;
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokevirtual #37                 // Method com/google/common/net/HostAndPort.getHost:()Ljava/lang/String;
      10: invokespecial #27                 // Method toInetAddress:(Ljava/lang/String;)Ljava/net/InetAddress;
      13: astore        4
      15: aload         4
      17: ifnull        132
      20: aload         4
      22: invokestatic  #28                 // Method org/graylog2/plugin/Tools.isWildcardInetAddress:(Ljava/net/InetAddress;)Z
      25: ifeq          132
      28: aload         4
      30: instanceof    #38                 // class java/net/Inet4Address
      33: invokestatic  #39                 // Method org/graylog2/plugin/Tools.guessPrimaryNetworkAddress:(Z)Ljava/net/InetAddress;
      36: astore        5
      38: aload         5
      40: invokevirtual #40                 // Method java/net/InetAddress.isLoopbackAddress:()Z
      43: ifeq          58
      46: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
      49: ldc           #41                 // String Using loopback address {}
      51: aload         5
      53: invokeinterface #25,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      58: goto          87
      61: astore        6
      63: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
      66: ldc           #43                 // String Could not guess primary network address for \"http_publish_uri\". Please configure it in your Graylog configuration.
      68: aload         6
      70: invokeinterface #44,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      75: new           #45                 // class com/github/joschi/jadconfig/ParameterException
      78: dup
      79: ldc           #46                 // String No http_publish_uri.
      81: aload         6
      83: invokespecial #47                 // Method com/github/joschi/jadconfig/ParameterException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      86: athrow
      87: new           #48                 // class java/net/URI
      90: dup
      91: aload_0
      92: invokevirtual #49                 // Method getUriScheme:()Ljava/lang/String;
      95: aconst_null
      96: aload         5
      98: invokevirtual #50                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
     101: aload_2
     102: invokevirtual #51                 // Method com/google/common/net/HostAndPort.getPort:()I
     105: aload_1
     106: aconst_null
     107: aconst_null
     108: invokespecial #52                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     111: astore_3
     112: goto          129
     115: astore        6
     117: new           #54                 // class java/lang/RuntimeException
     120: dup
     121: ldc           #55                 // String Invalid http_publish_uri.
     123: aload         6
     125: invokespecial #56                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     128: athrow
     129: goto          179
     132: new           #48                 // class java/net/URI
     135: dup
     136: aload_0
     137: invokevirtual #49                 // Method getUriScheme:()Ljava/lang/String;
     140: aconst_null
     141: aload_0
     142: invokevirtual #36                 // Method getHttpBindAddress:()Lcom/google/common/net/HostAndPort;
     145: invokevirtual #37                 // Method com/google/common/net/HostAndPort.getHost:()Ljava/lang/String;
     148: aload_0
     149: invokevirtual #36                 // Method getHttpBindAddress:()Lcom/google/common/net/HostAndPort;
     152: invokevirtual #51                 // Method com/google/common/net/HostAndPort.getPort:()I
     155: aload_1
     156: aconst_null
     157: aconst_null
     158: invokespecial #52                 // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     161: astore_3
     162: goto          179
     165: astore        5
     167: new           #54                 // class java/lang/RuntimeException
     170: dup
     171: ldc           #55                 // String Invalid http_publish_uri.
     173: aload         5
     175: invokespecial #56                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     178: athrow
     179: aload_3
     180: areturn
    Exception table:
       from    to  target type
          28    58    61   Class java/lang/Exception
          87   112   115   Class java/net/URISyntaxException
         132   162   165   Class java/net/URISyntaxException

  public boolean isHttpEnableCors();
    Code:
       0: aload_0
       1: getfield      #6                  // Field httpEnableCors:Z
       4: ireturn

  public boolean isHttpEnableGzip();
    Code:
       0: aload_0
       1: getfield      #7                  // Field httpEnableGzip:Z
       4: ireturn

  public int getHttpMaxHeaderSize();
    Code:
       0: aload_0
       1: getfield      #8                  // Field httpMaxHeaderSize:I
       4: ireturn

  public int getHttpThreadPoolSize();
    Code:
       0: aload_0
       1: getfield      #9                  // Field httpThreadPoolSize:I
       4: ireturn

  public int getHttpSelectorRunnersCount();
    Code:
       0: aload_0
       1: getfield      #10                 // Field httpSelectorRunnersCount:I
       4: ireturn

  public boolean isHttpEnableTls();
    Code:
       0: aload_0
       1: getfield      #11                 // Field httpEnableTls:Z
       4: ireturn

  public java.nio.file.Path getHttpTlsCertFile();
    Code:
       0: aload_0
       1: getfield      #57                 // Field httpTlsCertFile:Ljava/nio/file/Path;
       4: areturn

  public java.nio.file.Path getHttpTlsKeyFile();
    Code:
       0: aload_0
       1: getfield      #58                 // Field httpTlsKeyFile:Ljava/nio/file/Path;
       4: areturn

  public java.lang.String getHttpTlsKeyPassword();
    Code:
       0: aload_0
       1: getfield      #59                 // Field httpTlsKeyPassword:Ljava/lang/String;
       4: areturn

  public java.net.URI getHttpExternalUri();
    Code:
       0: aload_0
       1: getfield      #60                 // Field httpExternalUri:Ljava/net/URI;
       4: ifnonnull     14
       7: aload_0
       8: invokevirtual #61                 // Method getHttpPublishUri:()Ljava/net/URI;
      11: goto          18
      14: aload_0
      15: getfield      #60                 // Field httpExternalUri:Ljava/net/URI;
      18: areturn

  public void validateHttpBindAddress() throws com.github.joschi.jadconfig.ValidationException;
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method getHttpBindAddress:()Lcom/google/common/net/HostAndPort;
       4: invokevirtual #37                 // Method com/google/common/net/HostAndPort.getHost:()Ljava/lang/String;
       7: astore_1
       8: aload_1
       9: invokestatic  #62                 // Method com/google/common/net/InetAddresses.isInetAddress:(Ljava/lang/String;)Z
      12: ifne          20
      15: aload_1
      16: invokestatic  #17                 // Method java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
      19: astore_2
      20: goto          33
      23: astore_1
      24: new           #64                 // class com/github/joschi/jadconfig/ValidationException
      27: dup
      28: aload_1
      29: invokespecial #65                 // Method com/github/joschi/jadconfig/ValidationException."<init>":(Ljava/lang/Throwable;)V
      32: athrow
      33: return
    Exception table:
       from    to  target type
           0    20    23   Class java/lang/IllegalArgumentException
           0    20    23   Class java/net/UnknownHostException

  public void validateHttpPublishUriPathEndsWithSlash() throws com.github.joschi.jadconfig.ValidationException;
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method getHttpPublishUri:()Ljava/net/URI;
       4: invokevirtual #29                 // Method java/net/URI.getPath:()Ljava/lang/String;
       7: ldc           #35                 // String /
       9: invokevirtual #66                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      12: ifne          25
      15: new           #64                 // class com/github/joschi/jadconfig/ValidationException
      18: dup
      19: ldc           #67                 // String \"http_publish_uri\" must end with a slash (\"/\")
      21: invokespecial #68                 // Method com/github/joschi/jadconfig/ValidationException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: return

  public void validateHttpExternalUriPathEndsWithSlash() throws com.github.joschi.jadconfig.ValidationException;
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method getHttpExternalUri:()Ljava/net/URI;
       4: invokevirtual #29                 // Method java/net/URI.getPath:()Ljava/lang/String;
       7: ldc           #35                 // String /
       9: invokevirtual #66                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      12: ifne          25
      15: new           #64                 // class com/github/joschi/jadconfig/ValidationException
      18: dup
      19: ldc           #70                 // String \"http_external_uri\" must end with a slash (\"/\")
      21: invokespecial #68                 // Method com/github/joschi/jadconfig/ValidationException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: return

  public void validateTlsConfig() throws com.github.joschi.jadconfig.ValidationException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method isHttpEnableTls:()Z
       4: ifeq          89
       7: aload_0
       8: aload_0
       9: invokevirtual #71                 // Method getHttpTlsKeyFile:()Ljava/nio/file/Path;
      12: invokespecial #72                 // Method isRegularFileAndReadable:(Ljava/nio/file/Path;)Z
      15: ifne          48
      18: new           #64                 // class com/github/joschi/jadconfig/ValidationException
      21: dup
      22: new           #73                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #75                 // String Unreadable or missing HTTP private key:
      31: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: invokevirtual #71                 // Method getHttpTlsKeyFile:()Ljava/nio/file/Path;
      38: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #68                 // Method com/github/joschi/jadconfig/ValidationException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_0
      49: aload_0
      50: invokevirtual #79                 // Method getHttpTlsCertFile:()Ljava/nio/file/Path;
      53: invokespecial #72                 // Method isRegularFileAndReadable:(Ljava/nio/file/Path;)Z
      56: ifne          89
      59: new           #64                 // class com/github/joschi/jadconfig/ValidationException
      62: dup
      63: new           #73                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #80                 // String Unreadable or missing HTTP X.509 certificate:
      72: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_0
      76: invokevirtual #79                 // Method getHttpTlsCertFile:()Ljava/nio/file/Path;
      79: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      82: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokespecial #68                 // Method com/github/joschi/jadconfig/ValidationException."<init>":(Ljava/lang/String;)V
      88: athrow
      89: return

  private boolean isRegularFileAndReadable(java.nio.file.Path);
    Code:
       0: aload_1
       1: ifnull        26
       4: aload_1
       5: iconst_0
       6: anewarray     #81                 // class java/nio/file/LinkOption
       9: invokestatic  #82                 // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
      12: ifeq          26
      15: aload_1
      16: invokestatic  #83                 // Method java/nio/file/Files.isReadable:(Ljava/nio/file/Path;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  static {};
    Code:
       0: ldc           #3                  // class org/graylog2/configuration/HttpConfiguration
       2: invokestatic  #84                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
