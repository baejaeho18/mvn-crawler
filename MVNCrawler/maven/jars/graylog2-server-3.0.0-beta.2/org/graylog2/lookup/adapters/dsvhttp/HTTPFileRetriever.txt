Compiled from "HTTPFileRetriever.java"
public class org.graylog2.lookup.adapters.dsvhttp.HTTPFileRetriever {
  private final java.util.concurrent.atomic.AtomicReference<java.util.Map<java.lang.String, java.lang.String>> lastLastModified;

  private final okhttp3.OkHttpClient client;

  public org.graylog2.lookup.adapters.dsvhttp.HTTPFileRetriever(okhttp3.OkHttpClient);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokestatic  #3                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      12: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      15: putfield      #5                  // Field lastLastModified:Ljava/util/concurrent/atomic/AtomicReference;
      18: aload_0
      19: aload_1
      20: invokevirtual #6                  // Method okhttp3/OkHttpClient.newBuilder:()Lokhttp3/OkHttpClient$Builder;
      23: iconst_1
      24: invokevirtual #7                  // Method okhttp3/OkHttpClient$Builder.followRedirects:(Z)Lokhttp3/OkHttpClient$Builder;
      27: iconst_1
      28: invokevirtual #8                  // Method okhttp3/OkHttpClient$Builder.followSslRedirects:(Z)Lokhttp3/OkHttpClient$Builder;
      31: invokevirtual #9                  // Method okhttp3/OkHttpClient$Builder.build:()Lokhttp3/OkHttpClient;
      34: putfield      #10                 // Field client:Lokhttp3/OkHttpClient;
      37: return

  public java.util.Optional<java.lang.String> fetchFileIfNotModified(java.lang.String) throws java.io.IOException;
    Code:
       0: new           #11                 // class okhttp3/Request$Builder
       3: dup
       4: invokespecial #12                 // Method okhttp3/Request$Builder."<init>":()V
       7: invokevirtual #13                 // Method okhttp3/Request$Builder.get:()Lokhttp3/Request$Builder;
      10: aload_1
      11: invokevirtual #14                 // Method okhttp3/Request$Builder.url:(Ljava/lang/String;)Lokhttp3/Request$Builder;
      14: ldc           #15                 // String User-Agent
      16: ldc           #16                 // String Graylog (server)
      18: invokevirtual #17                 // Method okhttp3/Request$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
      21: astore_2
      22: aload_0
      23: getfield      #5                  // Field lastLastModified:Ljava/util/concurrent/atomic/AtomicReference;
      26: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      29: checkcast     #19                 // class java/util/Map
      32: aload_1
      33: invokeinterface #20,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #21                 // class java/lang/String
      41: astore_3
      42: aload_3
      43: ifnull        54
      46: aload_2
      47: ldc           #22                 // String If-Modified-Since
      49: aload_3
      50: invokevirtual #17                 // Method okhttp3/Request$Builder.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
      53: pop
      54: aload_0
      55: getfield      #10                 // Field client:Lokhttp3/OkHttpClient;
      58: aload_2
      59: invokevirtual #23                 // Method okhttp3/Request$Builder.build:()Lokhttp3/Request;
      62: invokevirtual #24                 // Method okhttp3/OkHttpClient.newCall:(Lokhttp3/Request;)Lokhttp3/Call;
      65: astore        4
      67: aload         4
      69: invokeinterface #25,  1           // InterfaceMethod okhttp3/Call.execute:()Lokhttp3/Response;
      74: astore        5
      76: aconst_null
      77: astore        6
      79: aload         5
      81: invokevirtual #26                 // Method okhttp3/Response.isSuccessful:()Z
      84: ifeq          213
      87: aload         5
      89: ldc           #27                 // String Last-Modified
      91: getstatic     #28                 // Field org/joda/time/DateTimeZone.UTC:Lorg/joda/time/DateTimeZone;
      94: invokestatic  #29                 // Method org/joda/time/DateTime.now:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;
      97: invokevirtual #30                 // Method org/joda/time/DateTime.toString:()Ljava/lang/String;
     100: invokevirtual #31                 // Method okhttp3/Response.header:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     103: astore        7
     105: new           #32                 // class java/util/HashMap
     108: dup
     109: aload_0
     110: getfield      #5                  // Field lastLastModified:Ljava/util/concurrent/atomic/AtomicReference;
     113: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     116: checkcast     #19                 // class java/util/Map
     119: invokespecial #33                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
     122: astore        8
     124: aload         8
     126: aload_1
     127: aload         7
     129: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     134: pop
     135: aload_0
     136: getfield      #5                  // Field lastLastModified:Ljava/util/concurrent/atomic/AtomicReference;
     139: aload         8
     141: invokestatic  #35                 // Method com/google/common/collect/ImmutableMap.copyOf:(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;
     144: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
     147: aload         5
     149: invokevirtual #37                 // Method okhttp3/Response.body:()Lokhttp3/ResponseBody;
     152: ifnull        210
     155: aload         5
     157: invokevirtual #37                 // Method okhttp3/Response.body:()Lokhttp3/ResponseBody;
     160: invokevirtual #38                 // Method okhttp3/ResponseBody.string:()Ljava/lang/String;
     163: astore        9
     165: aload         9
     167: invokestatic  #39                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
     170: astore        10
     172: aload         5
     174: ifnull        207
     177: aload         6
     179: ifnull        202
     182: aload         5
     184: invokevirtual #40                 // Method okhttp3/Response.close:()V
     187: goto          207
     190: astore        11
     192: aload         6
     194: aload         11
     196: invokevirtual #42                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     199: goto          207
     202: aload         5
     204: invokevirtual #40                 // Method okhttp3/Response.close:()V
     207: aload         10
     209: areturn
     210: goto          255
     213: aload         5
     215: invokevirtual #43                 // Method okhttp3/Response.code:()I
     218: sipush        304
     221: if_icmpeq     255
     224: new           #44                 // class java/io/IOException
     227: dup
     228: new           #45                 // class java/lang/StringBuilder
     231: dup
     232: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
     235: ldc           #47                 // String Request failed:
     237: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     240: aload         5
     242: invokevirtual #49                 // Method okhttp3/Response.message:()Ljava/lang/String;
     245: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     251: invokespecial #51                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     254: athrow
     255: aload         5
     257: ifnull        342
     260: aload         6
     262: ifnull        285
     265: aload         5
     267: invokevirtual #40                 // Method okhttp3/Response.close:()V
     270: goto          342
     273: astore        7
     275: aload         6
     277: aload         7
     279: invokevirtual #42                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     282: goto          342
     285: aload         5
     287: invokevirtual #40                 // Method okhttp3/Response.close:()V
     290: goto          342
     293: astore        7
     295: aload         7
     297: astore        6
     299: aload         7
     301: athrow
     302: astore        12
     304: aload         5
     306: ifnull        339
     309: aload         6
     311: ifnull        334
     314: aload         5
     316: invokevirtual #40                 // Method okhttp3/Response.close:()V
     319: goto          339
     322: astore        13
     324: aload         6
     326: aload         13
     328: invokevirtual #42                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     331: goto          339
     334: aload         5
     336: invokevirtual #40                 // Method okhttp3/Response.close:()V
     339: aload         12
     341: athrow
     342: invokestatic  #52                 // Method java/util/Optional.empty:()Ljava/util/Optional;
     345: areturn
    Exception table:
       from    to  target type
         182   187   190   Class java/lang/Throwable
         265   270   273   Class java/lang/Throwable
          79   172   293   Class java/lang/Throwable
         210   255   293   Class java/lang/Throwable
          79   172   302   any
         210   255   302   any
         314   319   322   Class java/lang/Throwable
         293   304   302   any
}
