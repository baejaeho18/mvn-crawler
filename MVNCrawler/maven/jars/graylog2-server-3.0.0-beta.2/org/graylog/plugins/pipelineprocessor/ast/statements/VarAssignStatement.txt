Compiled from "VarAssignStatement.java"
public class org.graylog.plugins.pipelineprocessor.ast.statements.VarAssignStatement implements org.graylog.plugins.pipelineprocessor.ast.statements.Statement {
  private final java.lang.String name;

  private final org.graylog.plugins.pipelineprocessor.ast.expressions.Expression expr;

  public org.graylog.plugins.pipelineprocessor.ast.statements.VarAssignStatement(java.lang.String, org.graylog.plugins.pipelineprocessor.ast.expressions.Expression);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field name:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field expr:Lorg/graylog/plugins/pipelineprocessor/ast/expressions/Expression;
      14: return

  public java.lang.Void evaluate(org.graylog.plugins.pipelineprocessor.EvaluationContext);
    Code:
       0: aload_0
       1: getfield      #3                  // Field expr:Lorg/graylog/plugins/pipelineprocessor/ast/expressions/Expression;
       4: aload_1
       5: invokeinterface #4,  2            // InterfaceMethod org/graylog/plugins/pipelineprocessor/ast/expressions/Expression.evaluate:(Lorg/graylog/plugins/pipelineprocessor/EvaluationContext;)Ljava/lang/Object;
      10: astore_2
      11: aload_1
      12: aload_0
      13: getfield      #2                  // Field name:Ljava/lang/String;
      16: aload_0
      17: getfield      #3                  // Field expr:Lorg/graylog/plugins/pipelineprocessor/ast/expressions/Expression;
      20: invokeinterface #5,  1            // InterfaceMethod org/graylog/plugins/pipelineprocessor/ast/expressions/Expression.getType:()Ljava/lang/Class;
      25: aload_2
      26: invokevirtual #6                  // Method org/graylog/plugins/pipelineprocessor/EvaluationContext.define:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)V
      29: aconst_null
      30: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field name:Ljava/lang/String;
       4: areturn

  public org.graylog.plugins.pipelineprocessor.ast.expressions.Expression getValueExpression();
    Code:
       0: aload_0
       1: getfield      #3                  // Field expr:Lorg/graylog/plugins/pipelineprocessor/ast/expressions/Expression;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #7                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #9                  // String let
       9: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field name:Ljava/lang/String;
      16: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #11                 // String  =
      21: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #3                  // Field expr:Lorg/graylog/plugins/pipelineprocessor/ast/expressions/Expression;
      28: invokevirtual #12                 // Method java/lang/Object.toString:()Ljava/lang/String;
      31: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: areturn

  public java.lang.Object evaluate(org.graylog.plugins.pipelineprocessor.EvaluationContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method evaluate:(Lorg/graylog/plugins/pipelineprocessor/EvaluationContext;)Ljava/lang/Void;
       5: areturn
}
