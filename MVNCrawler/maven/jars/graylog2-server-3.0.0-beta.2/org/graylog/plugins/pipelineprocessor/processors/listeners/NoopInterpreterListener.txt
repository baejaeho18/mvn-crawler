Compiled from "NoopInterpreterListener.java"
public class org.graylog.plugins.pipelineprocessor.processors.listeners.NoopInterpreterListener implements org.graylog.plugins.pipelineprocessor.processors.listeners.InterpreterListener {
  public org.graylog.plugins.pipelineprocessor.processors.listeners.NoopInterpreterListener();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void startProcessing();
    Code:
       0: return

  public void finishProcessing();
    Code:
       0: return

  public void processStreams(org.graylog2.plugin.Message, java.util.Set<org.graylog.plugins.pipelineprocessor.ast.Pipeline>, java.util.Set<java.lang.String>);
    Code:
       0: return

  public void enterStage(org.graylog.plugins.pipelineprocessor.ast.Stage);
    Code:
       0: return

  public void exitStage(org.graylog.plugins.pipelineprocessor.ast.Stage);
    Code:
       0: return

  public void evaluateRule(org.graylog.plugins.pipelineprocessor.ast.Rule, org.graylog.plugins.pipelineprocessor.ast.Pipeline);
    Code:
       0: return

  public void failEvaluateRule(org.graylog.plugins.pipelineprocessor.ast.Rule, org.graylog.plugins.pipelineprocessor.ast.Pipeline);
    Code:
       0: return

  public void satisfyRule(org.graylog.plugins.pipelineprocessor.ast.Rule, org.graylog.plugins.pipelineprocessor.ast.Pipeline);
    Code:
       0: return

  public void dissatisfyRule(org.graylog.plugins.pipelineprocessor.ast.Rule, org.graylog.plugins.pipelineprocessor.ast.Pipeline);
    Code:
       0: return

  public void executeRule(org.graylog.plugins.pipelineprocessor.ast.Rule, org.graylog.plugins.pipelineprocessor.ast.Pipeline);
    Code:
       0: return

  public void failExecuteRule(org.graylog.plugins.pipelineprocessor.ast.Rule, org.graylog.plugins.pipelineprocessor.ast.Pipeline);
    Code:
       0: return

  public void continuePipelineExecution(org.graylog.plugins.pipelineprocessor.ast.Pipeline, org.graylog.plugins.pipelineprocessor.ast.Stage);
    Code:
       0: return

  public void stopPipelineExecution(org.graylog.plugins.pipelineprocessor.ast.Pipeline, org.graylog.plugins.pipelineprocessor.ast.Stage);
    Code:
       0: return
}
