Compiled from "RuleLangBaseListener.java"
public class org.graylog.plugins.pipelineprocessor.parser.RuleLangBaseListener implements org.graylog.plugins.pipelineprocessor.parser.RuleLangListener {
  public org.graylog.plugins.pipelineprocessor.parser.RuleLangBaseListener();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void enterFile(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$FileContext);
    Code:
       0: return

  public void exitFile(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$FileContext);
    Code:
       0: return

  public void enterPipelineDecls(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$PipelineDeclsContext);
    Code:
       0: return

  public void exitPipelineDecls(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$PipelineDeclsContext);
    Code:
       0: return

  public void enterPipeline(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$PipelineContext);
    Code:
       0: return

  public void exitPipeline(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$PipelineContext);
    Code:
       0: return

  public void enterPipelineDeclaration(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$PipelineDeclarationContext);
    Code:
       0: return

  public void exitPipelineDeclaration(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$PipelineDeclarationContext);
    Code:
       0: return

  public void enterStageDeclaration(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$StageDeclarationContext);
    Code:
       0: return

  public void exitStageDeclaration(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$StageDeclarationContext);
    Code:
       0: return

  public void enterRuleRef(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$RuleRefContext);
    Code:
       0: return

  public void exitRuleRef(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$RuleRefContext);
    Code:
       0: return

  public void enterRuleDecls(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$RuleDeclsContext);
    Code:
       0: return

  public void exitRuleDecls(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$RuleDeclsContext);
    Code:
       0: return

  public void enterRuleDeclaration(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$RuleDeclarationContext);
    Code:
       0: return

  public void exitRuleDeclaration(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$RuleDeclarationContext);
    Code:
       0: return

  public void enterMultiplication(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$MultiplicationContext);
    Code:
       0: return

  public void exitMultiplication(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$MultiplicationContext);
    Code:
       0: return

  public void enterAddition(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$AdditionContext);
    Code:
       0: return

  public void exitAddition(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$AdditionContext);
    Code:
       0: return

  public void enterOr(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$OrContext);
    Code:
       0: return

  public void exitOr(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$OrContext);
    Code:
       0: return

  public void enterFunc(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$FuncContext);
    Code:
       0: return

  public void exitFunc(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$FuncContext);
    Code:
       0: return

  public void enterMessageRef(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$MessageRefContext);
    Code:
       0: return

  public void exitMessageRef(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$MessageRefContext);
    Code:
       0: return

  public void enterNested(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$NestedContext);
    Code:
       0: return

  public void exitNested(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$NestedContext);
    Code:
       0: return

  public void enterNot(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$NotContext);
    Code:
       0: return

  public void exitNot(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$NotContext);
    Code:
       0: return

  public void enterIndexedAccess(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$IndexedAccessContext);
    Code:
       0: return

  public void exitIndexedAccess(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$IndexedAccessContext);
    Code:
       0: return

  public void enterIdentifier(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$IdentifierContext);
    Code:
       0: return

  public void exitIdentifier(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$IdentifierContext);
    Code:
       0: return

  public void enterComparison(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$ComparisonContext);
    Code:
       0: return

  public void exitComparison(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$ComparisonContext);
    Code:
       0: return

  public void enterLiteralPrimary(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$LiteralPrimaryContext);
    Code:
       0: return

  public void exitLiteralPrimary(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$LiteralPrimaryContext);
    Code:
       0: return

  public void enterAnd(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$AndContext);
    Code:
       0: return

  public void exitAnd(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$AndContext);
    Code:
       0: return

  public void enterArrayLiteralExpr(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$ArrayLiteralExprContext);
    Code:
       0: return

  public void exitArrayLiteralExpr(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$ArrayLiteralExprContext);
    Code:
       0: return

  public void enterMapLiteralExpr(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$MapLiteralExprContext);
    Code:
       0: return

  public void exitMapLiteralExpr(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$MapLiteralExprContext);
    Code:
       0: return

  public void enterEquality(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$EqualityContext);
    Code:
       0: return

  public void exitEquality(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$EqualityContext);
    Code:
       0: return

  public void enterParenExpr(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$ParenExprContext);
    Code:
       0: return

  public void exitParenExpr(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$ParenExprContext);
    Code:
       0: return

  public void enterSignedExpression(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$SignedExpressionContext);
    Code:
       0: return

  public void exitSignedExpression(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$SignedExpressionContext);
    Code:
       0: return

  public void enterPropAssignment(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$PropAssignmentContext);
    Code:
       0: return

  public void exitPropAssignment(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$PropAssignmentContext);
    Code:
       0: return

  public void enterFuncStmt(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$FuncStmtContext);
    Code:
       0: return

  public void exitFuncStmt(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$FuncStmtContext);
    Code:
       0: return

  public void enterVarAssignStmt(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$VarAssignStmtContext);
    Code:
       0: return

  public void exitVarAssignStmt(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$VarAssignStmtContext);
    Code:
       0: return

  public void enterEmptyStmt(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$EmptyStmtContext);
    Code:
       0: return

  public void exitEmptyStmt(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$EmptyStmtContext);
    Code:
       0: return

  public void enterFunctionCall(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$FunctionCallContext);
    Code:
       0: return

  public void exitFunctionCall(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$FunctionCallContext);
    Code:
       0: return

  public void enterNamedArgs(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$NamedArgsContext);
    Code:
       0: return

  public void exitNamedArgs(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$NamedArgsContext);
    Code:
       0: return

  public void enterPositionalArgs(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$PositionalArgsContext);
    Code:
       0: return

  public void exitPositionalArgs(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$PositionalArgsContext);
    Code:
       0: return

  public void enterInteger(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$IntegerContext);
    Code:
       0: return

  public void exitInteger(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$IntegerContext);
    Code:
       0: return

  public void enterFloat(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$FloatContext);
    Code:
       0: return

  public void exitFloat(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$FloatContext);
    Code:
       0: return

  public void enterChar(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$CharContext);
    Code:
       0: return

  public void exitChar(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$CharContext);
    Code:
       0: return

  public void enterString(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$StringContext);
    Code:
       0: return

  public void exitString(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$StringContext);
    Code:
       0: return

  public void enterBoolean(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$BooleanContext);
    Code:
       0: return

  public void exitBoolean(org.graylog.plugins.pipelineprocessor.parser.RuleLangParser$BooleanContext);
    Code:
       0: return

  public void enterEveryRule(org.antlr.v4.runtime.ParserRuleContext);
    Code:
       0: return

  public void exitEveryRule(org.antlr.v4.runtime.ParserRuleContext);
    Code:
       0: return

  public void visitTerminal(org.antlr.v4.runtime.tree.TerminalNode);
    Code:
       0: return

  public void visitErrorNode(org.antlr.v4.runtime.tree.ErrorNode);
    Code:
       0: return
}
