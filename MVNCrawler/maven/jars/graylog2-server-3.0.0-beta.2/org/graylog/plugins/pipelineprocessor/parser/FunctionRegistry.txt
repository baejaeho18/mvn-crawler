Compiled from "FunctionRegistry.java"
public class org.graylog.plugins.pipelineprocessor.parser.FunctionRegistry {
  private final java.util.Map<java.lang.String, org.graylog.plugins.pipelineprocessor.ast.functions.Function<?>> functions;

  public org.graylog.plugins.pipelineprocessor.parser.FunctionRegistry(java.util.Map<java.lang.String, org.graylog.plugins.pipelineprocessor.ast.functions.Function<?>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field functions:Ljava/util/Map;
       9: return

  public org.graylog.plugins.pipelineprocessor.ast.functions.Function<?> resolve(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field functions:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #3,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #4                  // class org/graylog/plugins/pipelineprocessor/ast/functions/Function
      13: areturn

  public org.graylog.plugins.pipelineprocessor.ast.functions.Function<?> resolveOrError(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method resolve:(Ljava/lang/String;)Lorg/graylog/plugins/pipelineprocessor/ast/functions/Function;
       5: astore_2
       6: aload_2
       7: ifnonnull     14
      10: getstatic     #6                  // Field org/graylog/plugins/pipelineprocessor/ast/functions/Function.ERROR_FUNCTION:Lorg/graylog/plugins/pipelineprocessor/ast/functions/Function;
      13: areturn
      14: aload_2
      15: areturn

  public java.util.Collection<org.graylog.plugins.pipelineprocessor.ast.functions.Function<?>> all();
    Code:
       0: aload_0
       1: getfield      #2                  // Field functions:Ljava/util/Map;
       4: invokeinterface #7,  1            // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #8,  1            // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      14: invokestatic  #9                  // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      17: invokeinterface #10,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      22: checkcast     #11                 // class java/util/Collection
      25: areturn
}
