Compiled from "InterpreterListener.java"
public interface org.graylog.plugins.pipelineprocessor.processors.listeners.InterpreterListener {
  public abstract void startProcessing();

  public abstract void finishProcessing();

  public abstract void processStreams(org.graylog2.plugin.Message, java.util.Set<org.graylog.plugins.pipelineprocessor.ast.Pipeline>, java.util.Set<java.lang.String>);

  public abstract void enterStage(org.graylog.plugins.pipelineprocessor.ast.Stage);

  public abstract void exitStage(org.graylog.plugins.pipelineprocessor.ast.Stage);

  public abstract void evaluateRule(org.graylog.plugins.pipelineprocessor.ast.Rule, org.graylog.plugins.pipelineprocessor.ast.Pipeline);

  public abstract void failEvaluateRule(org.graylog.plugins.pipelineprocessor.ast.Rule, org.graylog.plugins.pipelineprocessor.ast.Pipeline);

  public abstract void satisfyRule(org.graylog.plugins.pipelineprocessor.ast.Rule, org.graylog.plugins.pipelineprocessor.ast.Pipeline);

  public abstract void dissatisfyRule(org.graylog.plugins.pipelineprocessor.ast.Rule, org.graylog.plugins.pipelineprocessor.ast.Pipeline);

  public abstract void executeRule(org.graylog.plugins.pipelineprocessor.ast.Rule, org.graylog.plugins.pipelineprocessor.ast.Pipeline);

  public abstract void failExecuteRule(org.graylog.plugins.pipelineprocessor.ast.Rule, org.graylog.plugins.pipelineprocessor.ast.Pipeline);

  public abstract void continuePipelineExecution(org.graylog.plugins.pipelineprocessor.ast.Pipeline, org.graylog.plugins.pipelineprocessor.ast.Stage);

  public abstract void stopPipelineExecution(org.graylog.plugins.pipelineprocessor.ast.Pipeline, org.graylog.plugins.pipelineprocessor.ast.Stage);
}
