Compiled from "DoubleExpression.java"
public class org.graylog.plugins.pipelineprocessor.ast.expressions.DoubleExpression extends org.graylog.plugins.pipelineprocessor.ast.expressions.ConstantExpression implements org.graylog.plugins.pipelineprocessor.ast.expressions.NumericExpression {
  private final double value;

  public org.graylog.plugins.pipelineprocessor.ast.expressions.DoubleExpression(org.antlr.v4.runtime.Token, double);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #1                  // class java/lang/Double
       4: invokespecial #2                  // Method org/graylog/plugins/pipelineprocessor/ast/expressions/ConstantExpression."<init>":(Lorg/antlr/v4/runtime/Token;Ljava/lang/Class;)V
       7: aload_0
       8: dload_2
       9: putfield      #3                  // Field value:D
      12: return

  public java.lang.Object evaluateUnsafe(org.graylog.plugins.pipelineprocessor.EvaluationContext);
    Code:
       0: aload_0
       1: getfield      #3                  // Field value:D
       4: invokestatic  #4                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
       7: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #3                  // Field value:D
       4: invokestatic  #5                  // Method java/lang/Double.toString:(D)Ljava/lang/String;
       7: areturn

  public boolean isIntegral();
    Code:
       0: iconst_0
       1: ireturn

  public long evaluateLong(org.graylog.plugins.pipelineprocessor.EvaluationContext);
    Code:
       0: aload_0
       1: getfield      #3                  // Field value:D
       4: d2l
       5: lreturn

  public double evaluateDouble(org.graylog.plugins.pipelineprocessor.EvaluationContext);
    Code:
       0: aload_0
       1: getfield      #3                  // Field value:D
       4: dreturn
}
