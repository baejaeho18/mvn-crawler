Compiled from "RateLimiter.scala"
public class io.youi.client.intercept.RateLimiter extends io.youi.client.intercept.InterceptorAdapter implements scala.Product,java.io.Serializable {
  private final scala.concurrent.duration.FiniteDuration perRequestDelay;

  private final long maxDelay;

  private volatile long _lastTime;

  private scala.concurrent.Future<?> future;

  public static scala.Option<scala.concurrent.duration.FiniteDuration> unapply(io.youi.client.intercept.RateLimiter);
    Code:
       0: getstatic     #40                 // Field io/youi/client/intercept/RateLimiter$.MODULE$:Lio/youi/client/intercept/RateLimiter$;
       3: aload_0
       4: invokevirtual #42                 // Method io/youi/client/intercept/RateLimiter$.unapply:(Lio/youi/client/intercept/RateLimiter;)Lscala/Option;
       7: areturn

  public static io.youi.client.intercept.RateLimiter apply(scala.concurrent.duration.FiniteDuration);
    Code:
       0: getstatic     #40                 // Field io/youi/client/intercept/RateLimiter$.MODULE$:Lio/youi/client/intercept/RateLimiter$;
       3: aload_0
       4: invokevirtual #46                 // Method io/youi/client/intercept/RateLimiter$.apply:(Lscala/concurrent/duration/FiniteDuration;)Lio/youi/client/intercept/RateLimiter;
       7: areturn

  public static <T> scala.concurrent.Future<T> delayedFuture(scala.concurrent.duration.FiniteDuration, scala.Function0<scala.concurrent.Future<T>>);
    Code:
       0: getstatic     #40                 // Field io/youi/client/intercept/RateLimiter$.MODULE$:Lio/youi/client/intercept/RateLimiter$;
       3: aload_0
       4: aload_1
       5: invokevirtual #53                 // Method io/youi/client/intercept/RateLimiter$.delayedFuture:(Lscala/concurrent/duration/FiniteDuration;Lscala/Function0;)Lscala/concurrent/Future;
       8: areturn

  public scala.collection.Iterator<java.lang.String> productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #60                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.concurrent.duration.FiniteDuration perRequestDelay();
    Code:
       0: aload_0
       1: getfield      #65                 // Field perRequestDelay:Lscala/concurrent/duration/FiniteDuration;
       4: areturn

  private long maxDelay();
    Code:
       0: aload_0
       1: getfield      #68                 // Field maxDelay:J
       4: lreturn

  private long _lastTime();
    Code:
       0: aload_0
       1: getfield      #70                 // Field _lastTime:J
       4: lreturn

  private void _lastTime_$eq(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #70                 // Field _lastTime:J
       5: return

  private scala.concurrent.Future<?> future();
    Code:
       0: aload_0
       1: getfield      #77                 // Field future:Lscala/concurrent/Future;
       4: areturn

  private void future_$eq(scala.concurrent.Future<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #77                 // Field future:Lscala/concurrent/Future;
       5: return

  public synchronized scala.concurrent.Future<io.youi.http.HttpRequest> before(io.youi.http.HttpRequest);
    Code:
       0: getstatic     #89                 // Field scala/concurrent/Promise$.MODULE$:Lscala/concurrent/Promise$;
       3: invokevirtual #92                 // Method scala/concurrent/Promise$.apply:()Lscala/concurrent/Promise;
       6: astore_2
       7: aload_0
       8: invokespecial #94                 // Method future:()Lscala/concurrent/Future;
      11: aload_0
      12: aload_1
      13: aload_2
      14: invokedynamic #115,  0            // InvokeDynamic #0:apply:(Lio/youi/client/intercept/RateLimiter;Lio/youi/http/HttpRequest;Lscala/concurrent/Promise;)Lscala/Function1;
      19: new           #117                // class scribe/LoggingExecutionContext
      22: dup
      23: getstatic     #122                // Field scala/concurrent/ExecutionContext$.MODULE$:Lscala/concurrent/ExecutionContext$;
      26: invokevirtual #126                // Method scala/concurrent/ExecutionContext$.global:()Lscala/concurrent/ExecutionContextExecutor;
      29: new           #128                // class scala/collection/immutable/$colon$colon
      32: dup
      33: new           #130                // class scribe/Position
      36: dup
      37: ldc           #132                // String io.youi.client.intercept.RateLimiter
      39: new           #134                // class scala/Some
      42: dup
      43: ldc           #135                // String before
      45: invokespecial #139                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      48: new           #134                // class scala/Some
      51: dup
      52: bipush        20
      54: invokestatic  #145                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      57: invokespecial #139                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      60: new           #134                // class scala/Some
      63: dup
      64: bipush        23
      66: invokestatic  #145                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      69: invokespecial #139                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      72: ldc           #147                // String /home/mhicks/projects/open/youi/client/shared/src/main/scala/io/youi/client/intercept/RateLimiter.scala
      74: invokespecial #150                // Method scribe/Position."<init>":(Ljava/lang/String;Lscala/Option;Lscala/Option;Lscala/Option;Ljava/lang/String;)V
      77: getstatic     #155                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      80: invokespecial #158                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
      83: checkcast     #160                // class scala/collection/immutable/List
      86: invokespecial #163                // Method scribe/LoggingExecutionContext."<init>":(Lscala/concurrent/ExecutionContext;Lscala/collection/immutable/List;)V
      89: invokeinterface #169,  3          // InterfaceMethod scala/concurrent/Future.onComplete:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)V
      94: aload_2
      95: invokeinterface #172,  1          // InterfaceMethod scala/concurrent/Promise.future:()Lscala/concurrent/Future;
     100: astore_3
     101: aload_0
     102: aload_3
     103: invokespecial #174                // Method future_$eq:(Lscala/concurrent/Future;)V
     106: aload_3
     107: areturn

  public scala.concurrent.Future<io.youi.http.HttpResponse> after(io.youi.http.HttpRequest, io.youi.http.HttpResponse);
    Code:
       0: aload_0
       1: invokestatic  #187                // Method java/lang/System.currentTimeMillis:()J
       4: invokespecial #189                // Method _lastTime_$eq:(J)V
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokespecial #191                // Method io/youi/client/intercept/InterceptorAdapter.after:(Lio/youi/http/HttpRequest;Lio/youi/http/HttpResponse;)Lscala/concurrent/Future;
      13: areturn

  public io.youi.client.intercept.RateLimiter copy(scala.concurrent.duration.FiniteDuration);
    Code:
       0: new           #2                  // class io/youi/client/intercept/RateLimiter
       3: dup
       4: aload_1
       5: invokespecial #196                // Method "<init>":(Lscala/concurrent/duration/FiniteDuration;)V
       8: areturn

  public scala.concurrent.duration.FiniteDuration copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #199                // Method perRequestDelay:()Lscala/concurrent/duration/FiniteDuration;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #203                // String RateLimiter
       2: areturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 0
                     0: 20
               default: 27
          }
      20: aload_0
      21: invokevirtual #199                // Method perRequestDelay:()Lscala/concurrent/duration/FiniteDuration;
      24: goto          34
      27: iload_1
      28: invokestatic  #212                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
      31: goto          34
      34: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #222                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #225                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class io/youi/client/intercept/RateLimiter
       4: ireturn

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 0
                     0: 20
               default: 25
          }
      20: ldc           #231                // String perRequestDelay
      22: goto          35
      25: iload_1
      26: invokestatic  #212                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
      29: checkcast     #233                // class java/lang/String
      32: goto          35
      35: areturn

  public int hashCode();
    Code:
       0: getstatic     #222                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #238                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #222                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #243                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     86
       5: aload_1
       6: astore_3
       7: aload_3
       8: instanceof    #2                  // class io/youi/client/intercept/RateLimiter
      11: ifeq          19
      14: iconst_1
      15: istore_2
      16: goto          27
      19: goto          22
      22: iconst_0
      23: istore_2
      24: goto          27
      27: iload_2
      28: ifeq          90
      31: aload_1
      32: checkcast     #2                  // class io/youi/client/intercept/RateLimiter
      35: astore        4
      37: aload_0
      38: invokevirtual #199                // Method perRequestDelay:()Lscala/concurrent/duration/FiniteDuration;
      41: aload         4
      43: invokevirtual #199                // Method perRequestDelay:()Lscala/concurrent/duration/FiniteDuration;
      46: astore        5
      48: dup
      49: ifnonnull     61
      52: pop
      53: aload         5
      55: ifnull        69
      58: goto          82
      61: aload         5
      63: invokevirtual #246                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      66: ifeq          82
      69: aload         4
      71: aload_0
      72: invokevirtual #248                // Method canEqual:(Ljava/lang/Object;)Z
      75: ifeq          82
      78: iconst_1
      79: goto          83
      82: iconst_0
      83: ifeq          90
      86: iconst_1
      87: goto          91
      90: iconst_0
      91: ireturn

  public static final scala.concurrent.Future $anonfun$before$2(io.youi.http.HttpRequest);
    Code:
       0: getstatic     #257                // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
       3: aload_0
       4: invokevirtual #261                // Method scala/concurrent/Future$.successful:(Ljava/lang/Object;)Lscala/concurrent/Future;
       7: areturn

  public static final scala.concurrent.Promise $anonfun$before$3(scala.concurrent.Promise, scala.util.Try);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: instanceof    #267                // class scala/util/Success
       6: ifeq          37
       9: aload_3
      10: checkcast     #267                // class scala/util/Success
      13: astore        4
      15: aload         4
      17: invokevirtual #271                // Method scala/util/Success.value:()Ljava/lang/Object;
      20: checkcast     #273                // class io/youi/http/HttpRequest
      23: astore        5
      25: aload_0
      26: aload         5
      28: invokeinterface #277,  2          // InterfaceMethod scala/concurrent/Promise.success:(Ljava/lang/Object;)Lscala/concurrent/Promise;
      33: astore_2
      34: goto          84
      37: goto          40
      40: aload_3
      41: instanceof    #279                // class scala/util/Failure
      44: ifeq          72
      47: aload_3
      48: checkcast     #279                // class scala/util/Failure
      51: astore        6
      53: aload         6
      55: invokevirtual #283                // Method scala/util/Failure.exception:()Ljava/lang/Throwable;
      58: astore        7
      60: aload_0
      61: aload         7
      63: invokeinterface #287,  2          // InterfaceMethod scala/concurrent/Promise.failure:(Ljava/lang/Throwable;)Lscala/concurrent/Promise;
      68: astore_2
      69: goto          84
      72: goto          75
      75: new           #289                // class scala/MatchError
      78: dup
      79: aload_3
      80: invokespecial #290                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      83: athrow
      84: aload_2
      85: areturn

  public static final java.lang.Object $anonfun$before$1(io.youi.client.intercept.RateLimiter, io.youi.http.HttpRequest, scala.concurrent.Promise, scala.util.Try);
    Code:
       0: invokestatic  #187                // Method java/lang/System.currentTimeMillis:()J
       3: lstore        4
       5: lload         4
       7: aload_0
       8: invokespecial #298                // Method _lastTime:()J
      11: lsub
      12: lstore        6
      14: aload_0
      15: invokespecial #300                // Method maxDelay:()J
      18: lload         6
      20: lsub
      21: lstore        8
      23: lload         8
      25: lconst_0
      26: lcmp
      27: ifle          147
      30: getstatic     #40                 // Field io/youi/client/intercept/RateLimiter$.MODULE$:Lio/youi/client/intercept/RateLimiter$;
      33: new           #19                 // class scala/concurrent/duration/package$DurationLong
      36: dup
      37: getstatic     #305                // Field scala/concurrent/duration/package$.MODULE$:Lscala/concurrent/duration/package$;
      40: lload         8
      42: invokevirtual #308                // Method scala/concurrent/duration/package$.DurationLong:(J)J
      45: invokespecial #310                // Method scala/concurrent/duration/package$DurationLong."<init>":(J)V
      48: invokevirtual #313                // Method scala/concurrent/duration/package$DurationLong.millis:()Lscala/concurrent/duration/FiniteDuration;
      51: aload_1
      52: invokedynamic #321,  0            // InvokeDynamic #1:apply:(Lio/youi/http/HttpRequest;)Lscala/Function0;
      57: invokevirtual #53                 // Method io/youi/client/intercept/RateLimiter$.delayedFuture:(Lscala/concurrent/duration/FiniteDuration;Lscala/Function0;)Lscala/concurrent/Future;
      60: aload_2
      61: invokedynamic #329,  0            // InvokeDynamic #2:apply:(Lscala/concurrent/Promise;)Lscala/Function1;
      66: new           #117                // class scribe/LoggingExecutionContext
      69: dup
      70: getstatic     #122                // Field scala/concurrent/ExecutionContext$.MODULE$:Lscala/concurrent/ExecutionContext$;
      73: invokevirtual #126                // Method scala/concurrent/ExecutionContext$.global:()Lscala/concurrent/ExecutionContextExecutor;
      76: new           #128                // class scala/collection/immutable/$colon$colon
      79: dup
      80: new           #130                // class scribe/Position
      83: dup
      84: ldc           #132                // String io.youi.client.intercept.RateLimiter
      86: new           #134                // class scala/Some
      89: dup
      90: ldc           #135                // String before
      92: invokespecial #139                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      95: new           #134                // class scala/Some
      98: dup
      99: bipush        25
     101: invokestatic  #145                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     104: invokespecial #139                // Method scala/Some."<init>":(Ljava/lang/Object;)V
     107: new           #134                // class scala/Some
     110: dup
     111: bipush        88
     113: invokestatic  #145                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     116: invokespecial #139                // Method scala/Some."<init>":(Ljava/lang/Object;)V
     119: ldc           #147                // String /home/mhicks/projects/open/youi/client/shared/src/main/scala/io/youi/client/intercept/RateLimiter.scala
     121: invokespecial #150                // Method scribe/Position."<init>":(Ljava/lang/String;Lscala/Option;Lscala/Option;Lscala/Option;Ljava/lang/String;)V
     124: getstatic     #155                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
     127: invokespecial #158                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
     130: checkcast     #160                // class scala/collection/immutable/List
     133: invokespecial #163                // Method scribe/LoggingExecutionContext."<init>":(Lscala/concurrent/ExecutionContext;Lscala/collection/immutable/List;)V
     136: invokeinterface #169,  3          // InterfaceMethod scala/concurrent/Future.onComplete:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)V
     141: getstatic     #335                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     144: goto          154
     147: aload_2
     148: aload_1
     149: invokeinterface #277,  2          // InterfaceMethod scala/concurrent/Promise.success:(Ljava/lang/Object;)Lscala/concurrent/Promise;
     154: areturn

  public io.youi.client.intercept.RateLimiter(scala.concurrent.duration.FiniteDuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #65                 // Field perRequestDelay:Lscala/concurrent/duration/FiniteDuration;
       5: aload_0
       6: invokespecial #340                // Method io/youi/client/intercept/InterceptorAdapter."<init>":()V
       9: aload_0
      10: invokestatic  #344                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      13: aload_0
      14: aload_1
      15: invokevirtual #347                // Method scala/concurrent/duration/FiniteDuration.toMillis:()J
      18: putfield      #68                 // Field maxDelay:J
      21: aload_0
      22: lconst_0
      23: putfield      #70                 // Field _lastTime:J
      26: aload_0
      27: getstatic     #257                // Field scala/concurrent/Future$.MODULE$:Lscala/concurrent/Future$;
      30: getstatic     #335                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      33: invokevirtual #261                // Method scala/concurrent/Future$.successful:(Ljava/lang/Object;)Lscala/concurrent/Future;
      36: putfield      #77                 // Field future:Lscala/concurrent/Future;
      39: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #359,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
