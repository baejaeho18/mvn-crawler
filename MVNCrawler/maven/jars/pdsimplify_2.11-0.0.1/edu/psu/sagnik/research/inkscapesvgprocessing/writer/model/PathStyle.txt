Compiled from "JSONDataModel.scala"
public class edu.psu.sagnik.research.inkscapesvgprocessing.writer.model.PathStyle implements scala.Product,scala.Serializable {
  private final java.lang.String fill;

  private final java.lang.String stroke;

  private final float strokeWidth;

  private final java.lang.String strokeLinecap;

  private final java.lang.String strokeLinejoin;

  private final java.lang.String strokeMiterlimit;

  private final java.lang.String strokeDasharray;

  private final float strokeOpacity;

  public static scala.Option<scala.Tuple8<java.lang.String, java.lang.String, java.lang.Object, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Object>> unapply(edu.psu.sagnik.research.inkscapesvgprocessing.writer.model.PathStyle);
    Code:
       0: getstatic     #20                 // Field edu/psu/sagnik/research/inkscapesvgprocessing/writer/model/PathStyle$.MODULE$:Ledu/psu/sagnik/research/inkscapesvgprocessing/writer/model/PathStyle$;
       3: aload_0
       4: invokevirtual #22                 // Method edu/psu/sagnik/research/inkscapesvgprocessing/writer/model/PathStyle$.unapply:(Ledu/psu/sagnik/research/inkscapesvgprocessing/writer/model/PathStyle;)Lscala/Option;
       7: areturn

  public static edu.psu.sagnik.research.inkscapesvgprocessing.writer.model.PathStyle apply(java.lang.String, java.lang.String, float, java.lang.String, java.lang.String, java.lang.String, java.lang.String, float);
    Code:
       0: getstatic     #20                 // Field edu/psu/sagnik/research/inkscapesvgprocessing/writer/model/PathStyle$.MODULE$:Ledu/psu/sagnik/research/inkscapesvgprocessing/writer/model/PathStyle$;
       3: aload_0
       4: aload_1
       5: fload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: fload         7
      15: invokevirtual #26                 // Method edu/psu/sagnik/research/inkscapesvgprocessing/writer/model/PathStyle$.apply:(Ljava/lang/String;Ljava/lang/String;FLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;F)Ledu/psu/sagnik/research/inkscapesvgprocessing/writer/model/PathStyle;
      18: areturn

  public static scala.Function1<scala.Tuple8<java.lang.String, java.lang.String, java.lang.Object, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Object>, edu.psu.sagnik.research.inkscapesvgprocessing.writer.model.PathStyle> tupled();
    Code:
       0: getstatic     #20                 // Field edu/psu/sagnik/research/inkscapesvgprocessing/writer/model/PathStyle$.MODULE$:Ledu/psu/sagnik/research/inkscapesvgprocessing/writer/model/PathStyle$;
       3: invokevirtual #30                 // Method edu/psu/sagnik/research/inkscapesvgprocessing/writer/model/PathStyle$.tupled:()Lscala/Function1;
       6: areturn

  public static scala.Function1<java.lang.String, scala.Function1<java.lang.String, scala.Function1<java.lang.Object, scala.Function1<java.lang.String, scala.Function1<java.lang.String, scala.Function1<java.lang.String, scala.Function1<java.lang.String, scala.Function1<java.lang.Object, edu.psu.sagnik.research.inkscapesvgprocessing.writer.model.PathStyle>>>>>>>> curried();
    Code:
       0: getstatic     #20                 // Field edu/psu/sagnik/research/inkscapesvgprocessing/writer/model/PathStyle$.MODULE$:Ledu/psu/sagnik/research/inkscapesvgprocessing/writer/model/PathStyle$;
       3: invokevirtual #33                 // Method edu/psu/sagnik/research/inkscapesvgprocessing/writer/model/PathStyle$.curried:()Lscala/Function1;
       6: areturn

  public java.lang.String fill();
    Code:
       0: aload_0
       1: getfield      #46                 // Field fill:Ljava/lang/String;
       4: areturn

  public java.lang.String stroke();
    Code:
       0: aload_0
       1: getfield      #50                 // Field stroke:Ljava/lang/String;
       4: areturn

  public float strokeWidth();
    Code:
       0: aload_0
       1: getfield      #53                 // Field strokeWidth:F
       4: freturn

  public java.lang.String strokeLinecap();
    Code:
       0: aload_0
       1: getfield      #55                 // Field strokeLinecap:Ljava/lang/String;
       4: areturn

  public java.lang.String strokeLinejoin();
    Code:
       0: aload_0
       1: getfield      #57                 // Field strokeLinejoin:Ljava/lang/String;
       4: areturn

  public java.lang.String strokeMiterlimit();
    Code:
       0: aload_0
       1: getfield      #59                 // Field strokeMiterlimit:Ljava/lang/String;
       4: areturn

  public java.lang.String strokeDasharray();
    Code:
       0: aload_0
       1: getfield      #61                 // Field strokeDasharray:Ljava/lang/String;
       4: areturn

  public float strokeOpacity();
    Code:
       0: aload_0
       1: getfield      #63                 // Field strokeOpacity:F
       4: freturn

  public edu.psu.sagnik.research.inkscapesvgprocessing.writer.model.PathStyle copy(java.lang.String, java.lang.String, float, java.lang.String, java.lang.String, java.lang.String, java.lang.String, float);
    Code:
       0: new           #2                  // class edu/psu/sagnik/research/inkscapesvgprocessing/writer/model/PathStyle
       3: dup
       4: aload_1
       5: aload_2
       6: fload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: aload         7
      15: fload         8
      17: invokespecial #68                 // Method "<init>":(Ljava/lang/String;Ljava/lang/String;FLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;F)V
      20: areturn

  public java.lang.String copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method fill:()Ljava/lang/String;
       4: areturn

  public java.lang.String copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method stroke:()Ljava/lang/String;
       4: areturn

  public float copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #77                 // Method strokeWidth:()F
       4: freturn

  public java.lang.String copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method strokeLinecap:()Ljava/lang/String;
       4: areturn

  public java.lang.String copy$default$5();
    Code:
       0: aload_0
       1: invokevirtual #83                 // Method strokeLinejoin:()Ljava/lang/String;
       4: areturn

  public java.lang.String copy$default$6();
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method strokeMiterlimit:()Ljava/lang/String;
       4: areturn

  public java.lang.String copy$default$7();
    Code:
       0: aload_0
       1: invokevirtual #89                 // Method strokeDasharray:()Ljava/lang/String;
       4: areturn

  public float copy$default$8();
    Code:
       0: aload_0
       1: invokevirtual #92                 // Method strokeOpacity:()F
       4: freturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #95                 // String PathStyle
       2: areturn

  public int productArity();
    Code:
       0: bipush        8
       2: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 7
                     0: 118
                     1: 111
                     2: 101
                     3: 94
                     4: 87
                     5: 80
                     6: 73
                     7: 63
               default: 48
          }
      48: new           #101                // class java/lang/IndexOutOfBoundsException
      51: dup
      52: iload_1
      53: invokestatic  #107                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      56: invokevirtual #110                // Method java/lang/Object.toString:()Ljava/lang/String;
      59: invokespecial #113                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: aload_0
      64: invokevirtual #92                 // Method strokeOpacity:()F
      67: invokestatic  #117                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      70: goto          122
      73: aload_0
      74: invokevirtual #89                 // Method strokeDasharray:()Ljava/lang/String;
      77: goto          122
      80: aload_0
      81: invokevirtual #86                 // Method strokeMiterlimit:()Ljava/lang/String;
      84: goto          122
      87: aload_0
      88: invokevirtual #83                 // Method strokeLinejoin:()Ljava/lang/String;
      91: goto          122
      94: aload_0
      95: invokevirtual #80                 // Method strokeLinecap:()Ljava/lang/String;
      98: goto          122
     101: aload_0
     102: invokevirtual #77                 // Method strokeWidth:()F
     105: invokestatic  #117                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
     108: goto          122
     111: aload_0
     112: invokevirtual #74                 // Method stroke:()Ljava/lang/String;
     115: goto          122
     118: aload_0
     119: invokevirtual #71                 // Method fill:()Ljava/lang/String;
     122: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #130                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class edu/psu/sagnik/research/inkscapesvgprocessing/writer/model/PathStyle
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #135                // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #71                 // Method fill:()Ljava/lang/String;
       8: invokestatic  #141                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      11: invokestatic  #145                // Method scala/runtime/Statics.mix:(II)I
      14: istore_1
      15: iload_1
      16: aload_0
      17: invokevirtual #74                 // Method stroke:()Ljava/lang/String;
      20: invokestatic  #141                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      23: invokestatic  #145                // Method scala/runtime/Statics.mix:(II)I
      26: istore_1
      27: iload_1
      28: aload_0
      29: invokevirtual #77                 // Method strokeWidth:()F
      32: invokestatic  #149                // Method scala/runtime/Statics.floatHash:(F)I
      35: invokestatic  #145                // Method scala/runtime/Statics.mix:(II)I
      38: istore_1
      39: iload_1
      40: aload_0
      41: invokevirtual #80                 // Method strokeLinecap:()Ljava/lang/String;
      44: invokestatic  #141                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      47: invokestatic  #145                // Method scala/runtime/Statics.mix:(II)I
      50: istore_1
      51: iload_1
      52: aload_0
      53: invokevirtual #83                 // Method strokeLinejoin:()Ljava/lang/String;
      56: invokestatic  #141                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      59: invokestatic  #145                // Method scala/runtime/Statics.mix:(II)I
      62: istore_1
      63: iload_1
      64: aload_0
      65: invokevirtual #86                 // Method strokeMiterlimit:()Ljava/lang/String;
      68: invokestatic  #141                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      71: invokestatic  #145                // Method scala/runtime/Statics.mix:(II)I
      74: istore_1
      75: iload_1
      76: aload_0
      77: invokevirtual #89                 // Method strokeDasharray:()Ljava/lang/String;
      80: invokestatic  #141                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      83: invokestatic  #145                // Method scala/runtime/Statics.mix:(II)I
      86: istore_1
      87: iload_1
      88: aload_0
      89: invokevirtual #92                 // Method strokeOpacity:()F
      92: invokestatic  #149                // Method scala/runtime/Statics.floatHash:(F)I
      95: invokestatic  #145                // Method scala/runtime/Statics.mix:(II)I
      98: istore_1
      99: iload_1
     100: bipush        8
     102: invokestatic  #152                // Method scala/runtime/Statics.finalizeHash:(II)I
     105: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #126                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #156                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     266
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class edu/psu/sagnik/research/inkscapesvgprocessing/writer/model/PathStyle
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          270
      25: aload_1
      26: checkcast     #2                  // class edu/psu/sagnik/research/inkscapesvgprocessing/writer/model/PathStyle
      29: astore        4
      31: aload_0
      32: invokevirtual #71                 // Method fill:()Ljava/lang/String;
      35: aload         4
      37: invokevirtual #71                 // Method fill:()Ljava/lang/String;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          262
      55: aload         5
      57: invokevirtual #159                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          262
      63: aload_0
      64: invokevirtual #74                 // Method stroke:()Ljava/lang/String;
      67: aload         4
      69: invokevirtual #74                 // Method stroke:()Ljava/lang/String;
      72: astore        6
      74: dup
      75: ifnonnull     87
      78: pop
      79: aload         6
      81: ifnull        95
      84: goto          262
      87: aload         6
      89: invokevirtual #159                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      92: ifeq          262
      95: aload_0
      96: invokevirtual #77                 // Method strokeWidth:()F
      99: aload         4
     101: invokevirtual #77                 // Method strokeWidth:()F
     104: fcmpl
     105: ifne          262
     108: aload_0
     109: invokevirtual #80                 // Method strokeLinecap:()Ljava/lang/String;
     112: aload         4
     114: invokevirtual #80                 // Method strokeLinecap:()Ljava/lang/String;
     117: astore        7
     119: dup
     120: ifnonnull     132
     123: pop
     124: aload         7
     126: ifnull        140
     129: goto          262
     132: aload         7
     134: invokevirtual #159                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     137: ifeq          262
     140: aload_0
     141: invokevirtual #83                 // Method strokeLinejoin:()Ljava/lang/String;
     144: aload         4
     146: invokevirtual #83                 // Method strokeLinejoin:()Ljava/lang/String;
     149: astore        8
     151: dup
     152: ifnonnull     164
     155: pop
     156: aload         8
     158: ifnull        172
     161: goto          262
     164: aload         8
     166: invokevirtual #159                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     169: ifeq          262
     172: aload_0
     173: invokevirtual #86                 // Method strokeMiterlimit:()Ljava/lang/String;
     176: aload         4
     178: invokevirtual #86                 // Method strokeMiterlimit:()Ljava/lang/String;
     181: astore        9
     183: dup
     184: ifnonnull     196
     187: pop
     188: aload         9
     190: ifnull        204
     193: goto          262
     196: aload         9
     198: invokevirtual #159                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     201: ifeq          262
     204: aload_0
     205: invokevirtual #89                 // Method strokeDasharray:()Ljava/lang/String;
     208: aload         4
     210: invokevirtual #89                 // Method strokeDasharray:()Ljava/lang/String;
     213: astore        10
     215: dup
     216: ifnonnull     228
     219: pop
     220: aload         10
     222: ifnull        236
     225: goto          262
     228: aload         10
     230: invokevirtual #159                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     233: ifeq          262
     236: aload_0
     237: invokevirtual #92                 // Method strokeOpacity:()F
     240: aload         4
     242: invokevirtual #92                 // Method strokeOpacity:()F
     245: fcmpl
     246: ifne          262
     249: aload         4
     251: aload_0
     252: invokevirtual #161                // Method canEqual:(Ljava/lang/Object;)Z
     255: ifeq          262
     258: iconst_1
     259: goto          263
     262: iconst_0
     263: ifeq          270
     266: iconst_1
     267: goto          271
     270: iconst_0
     271: ireturn

  public edu.psu.sagnik.research.inkscapesvgprocessing.writer.model.PathStyle(java.lang.String, java.lang.String, float, java.lang.String, java.lang.String, java.lang.String, java.lang.String, float);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #46                 // Field fill:Ljava/lang/String;
       5: aload_0
       6: aload_2
       7: putfield      #50                 // Field stroke:Ljava/lang/String;
      10: aload_0
      11: fload_3
      12: putfield      #53                 // Field strokeWidth:F
      15: aload_0
      16: aload         4
      18: putfield      #55                 // Field strokeLinecap:Ljava/lang/String;
      21: aload_0
      22: aload         5
      24: putfield      #57                 // Field strokeLinejoin:Ljava/lang/String;
      27: aload_0
      28: aload         6
      30: putfield      #59                 // Field strokeMiterlimit:Ljava/lang/String;
      33: aload_0
      34: aload         7
      36: putfield      #61                 // Field strokeDasharray:Ljava/lang/String;
      39: aload_0
      40: fload         8
      42: putfield      #63                 // Field strokeOpacity:F
      45: aload_0
      46: invokespecial #166                // Method java/lang/Object."<init>":()V
      49: aload_0
      50: invokestatic  #172                // Method scala/Product$class.$init$:(Lscala/Product;)V
      53: return
}
