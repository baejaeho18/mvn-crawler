Compiled from "TransformOps.scala"
public class edu.psu.sagnik.research.inkscapesvgprocessing.transformparser.model.TranslateOpArg implements scala.Product,scala.Serializable {
  private final float tX;

  private final scala.Option<java.lang.Object> tY;

  public static scala.Option<scala.Tuple2<java.lang.Object, scala.Option<java.lang.Object>>> unapply(edu.psu.sagnik.research.inkscapesvgprocessing.transformparser.model.TranslateOpArg);
    Code:
       0: getstatic     #20                 // Field edu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/TranslateOpArg$.MODULE$:Ledu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/TranslateOpArg$;
       3: aload_0
       4: invokevirtual #22                 // Method edu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/TranslateOpArg$.unapply:(Ledu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/TranslateOpArg;)Lscala/Option;
       7: areturn

  public static edu.psu.sagnik.research.inkscapesvgprocessing.transformparser.model.TranslateOpArg apply(float, scala.Option<java.lang.Object>);
    Code:
       0: getstatic     #20                 // Field edu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/TranslateOpArg$.MODULE$:Ledu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/TranslateOpArg$;
       3: fload_0
       4: aload_1
       5: invokevirtual #26                 // Method edu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/TranslateOpArg$.apply:(FLscala/Option;)Ledu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/TranslateOpArg;
       8: areturn

  public static scala.Function1<scala.Tuple2<java.lang.Object, scala.Option<java.lang.Object>>, edu.psu.sagnik.research.inkscapesvgprocessing.transformparser.model.TranslateOpArg> tupled();
    Code:
       0: getstatic     #20                 // Field edu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/TranslateOpArg$.MODULE$:Ledu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/TranslateOpArg$;
       3: invokevirtual #30                 // Method edu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/TranslateOpArg$.tupled:()Lscala/Function1;
       6: areturn

  public static scala.Function1<java.lang.Object, scala.Function1<scala.Option<java.lang.Object>, edu.psu.sagnik.research.inkscapesvgprocessing.transformparser.model.TranslateOpArg>> curried();
    Code:
       0: getstatic     #20                 // Field edu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/TranslateOpArg$.MODULE$:Ledu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/TranslateOpArg$;
       3: invokevirtual #33                 // Method edu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/TranslateOpArg$.curried:()Lscala/Function1;
       6: areturn

  public float tX();
    Code:
       0: aload_0
       1: getfield      #41                 // Field tX:F
       4: freturn

  public scala.Option<java.lang.Object> tY();
    Code:
       0: aload_0
       1: getfield      #46                 // Field tY:Lscala/Option;
       4: areturn

  public edu.psu.sagnik.research.inkscapesvgprocessing.transformparser.model.TranslateOpArg copy(float, scala.Option<java.lang.Object>);
    Code:
       0: new           #2                  // class edu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/TranslateOpArg
       3: dup
       4: fload_1
       5: aload_2
       6: invokespecial #51                 // Method "<init>":(FLscala/Option;)V
       9: areturn

  public float copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method tX:()F
       4: freturn

  public scala.Option<java.lang.Object> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method tY:()Lscala/Option;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #61                 // String TranslateOpArg
       2: areturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 1
                     0: 46
                     1: 39
               default: 24
          }
      24: new           #67                 // class java/lang/IndexOutOfBoundsException
      27: dup
      28: iload_1
      29: invokestatic  #73                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      32: invokevirtual #76                 // Method java/lang/Object.toString:()Ljava/lang/String;
      35: invokespecial #79                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: invokevirtual #57                 // Method tY:()Lscala/Option;
      43: goto          53
      46: aload_0
      47: invokevirtual #54                 // Method tX:()F
      50: invokestatic  #83                 // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      53: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #92                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #96                 // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class edu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/TranslateOpArg
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #101                // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #54                 // Method tX:()F
       8: invokestatic  #107                // Method scala/runtime/Statics.floatHash:(F)I
      11: invokestatic  #111                // Method scala/runtime/Statics.mix:(II)I
      14: istore_1
      15: iload_1
      16: aload_0
      17: invokevirtual #57                 // Method tY:()Lscala/Option;
      20: invokestatic  #115                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      23: invokestatic  #111                // Method scala/runtime/Statics.mix:(II)I
      26: istore_1
      27: iload_1
      28: iconst_2
      29: invokestatic  #118                // Method scala/runtime/Statics.finalizeHash:(II)I
      32: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #92                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #122                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     93
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class edu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/TranslateOpArg
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          97
      25: aload_1
      26: checkcast     #2                  // class edu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/TranslateOpArg
      29: astore        4
      31: aload_0
      32: invokevirtual #54                 // Method tX:()F
      35: aload         4
      37: invokevirtual #54                 // Method tX:()F
      40: fcmpl
      41: ifne          89
      44: aload_0
      45: invokevirtual #57                 // Method tY:()Lscala/Option;
      48: aload         4
      50: invokevirtual #57                 // Method tY:()Lscala/Option;
      53: astore        5
      55: dup
      56: ifnonnull     68
      59: pop
      60: aload         5
      62: ifnull        76
      65: goto          89
      68: aload         5
      70: invokevirtual #125                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      73: ifeq          89
      76: aload         4
      78: aload_0
      79: invokevirtual #127                // Method canEqual:(Ljava/lang/Object;)Z
      82: ifeq          89
      85: iconst_1
      86: goto          90
      89: iconst_0
      90: ifeq          97
      93: iconst_1
      94: goto          98
      97: iconst_0
      98: ireturn

  public edu.psu.sagnik.research.inkscapesvgprocessing.transformparser.model.TranslateOpArg(float, scala.Option<java.lang.Object>);
    Code:
       0: aload_0
       1: fload_1
       2: putfield      #41                 // Field tX:F
       5: aload_0
       6: aload_2
       7: putfield      #46                 // Field tY:Lscala/Option;
      10: aload_0
      11: invokespecial #132                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #138                // Method scala/Product$class.$init$:(Lscala/Product;)V
      18: return
}
