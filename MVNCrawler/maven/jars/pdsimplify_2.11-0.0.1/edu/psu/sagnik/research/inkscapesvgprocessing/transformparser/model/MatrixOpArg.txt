Compiled from "TransformOps.scala"
public class edu.psu.sagnik.research.inkscapesvgprocessing.transformparser.model.MatrixOpArg implements scala.Product,scala.Serializable {
  private final float a;

  private final float b;

  private final float c;

  private final float d;

  private final float e;

  private final float f;

  public static scala.Option<scala.Tuple6<java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object>> unapply(edu.psu.sagnik.research.inkscapesvgprocessing.transformparser.model.MatrixOpArg);
    Code:
       0: getstatic     #20                 // Field edu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/MatrixOpArg$.MODULE$:Ledu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/MatrixOpArg$;
       3: aload_0
       4: invokevirtual #22                 // Method edu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/MatrixOpArg$.unapply:(Ledu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/MatrixOpArg;)Lscala/Option;
       7: areturn

  public static edu.psu.sagnik.research.inkscapesvgprocessing.transformparser.model.MatrixOpArg apply(float, float, float, float, float, float);
    Code:
       0: getstatic     #20                 // Field edu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/MatrixOpArg$.MODULE$:Ledu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/MatrixOpArg$;
       3: fload_0
       4: fload_1
       5: fload_2
       6: fload_3
       7: fload         4
       9: fload         5
      11: invokevirtual #26                 // Method edu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/MatrixOpArg$.apply:(FFFFFF)Ledu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/MatrixOpArg;
      14: areturn

  public static scala.Function1<scala.Tuple6<java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object>, edu.psu.sagnik.research.inkscapesvgprocessing.transformparser.model.MatrixOpArg> tupled();
    Code:
       0: getstatic     #20                 // Field edu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/MatrixOpArg$.MODULE$:Ledu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/MatrixOpArg$;
       3: invokevirtual #30                 // Method edu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/MatrixOpArg$.tupled:()Lscala/Function1;
       6: areturn

  public static scala.Function1<java.lang.Object, scala.Function1<java.lang.Object, scala.Function1<java.lang.Object, scala.Function1<java.lang.Object, scala.Function1<java.lang.Object, scala.Function1<java.lang.Object, edu.psu.sagnik.research.inkscapesvgprocessing.transformparser.model.MatrixOpArg>>>>>> curried();
    Code:
       0: getstatic     #20                 // Field edu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/MatrixOpArg$.MODULE$:Ledu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/MatrixOpArg$;
       3: invokevirtual #33                 // Method edu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/MatrixOpArg$.curried:()Lscala/Function1;
       6: areturn

  public float a();
    Code:
       0: aload_0
       1: getfield      #43                 // Field a:F
       4: freturn

  public float b();
    Code:
       0: aload_0
       1: getfield      #47                 // Field b:F
       4: freturn

  public float c();
    Code:
       0: aload_0
       1: getfield      #49                 // Field c:F
       4: freturn

  public float copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method a:()F
       4: freturn

  public float copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method b:()F
       4: freturn

  public float copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method c:()F
       4: freturn

  public float copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method d:()F
       4: freturn

  public float copy$default$5();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method e:()F
       4: freturn

  public float copy$default$6();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method f:()F
       4: freturn

  public float d();
    Code:
       0: aload_0
       1: getfield      #69                 // Field d:F
       4: freturn

  public float e();
    Code:
       0: aload_0
       1: getfield      #71                 // Field e:F
       4: freturn

  public float f();
    Code:
       0: aload_0
       1: getfield      #73                 // Field f:F
       4: freturn

  public edu.psu.sagnik.research.inkscapesvgprocessing.transformparser.model.MatrixOpArg copy(float, float, float, float, float, float);
    Code:
       0: new           #2                  // class edu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/MatrixOpArg
       3: dup
       4: fload_1
       5: fload_2
       6: fload_3
       7: fload         4
       9: fload         5
      11: fload         6
      13: invokespecial #78                 // Method "<init>":(FFFFFF)V
      16: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #82                 // String MatrixOpArg
       2: areturn

  public int productArity();
    Code:
       0: bipush        6
       2: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 5
                     0: 105
                     1: 95
                     2: 85
                     3: 75
                     4: 65
                     5: 55
               default: 40
          }
      40: new           #88                 // class java/lang/IndexOutOfBoundsException
      43: dup
      44: iload_1
      45: invokestatic  #94                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      48: invokevirtual #97                 // Method java/lang/Object.toString:()Ljava/lang/String;
      51: invokespecial #100                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_0
      56: invokevirtual #67                 // Method f:()F
      59: invokestatic  #104                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      62: goto          112
      65: aload_0
      66: invokevirtual #64                 // Method e:()F
      69: invokestatic  #104                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      72: goto          112
      75: aload_0
      76: invokevirtual #61                 // Method d:()F
      79: invokestatic  #104                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      82: goto          112
      85: aload_0
      86: invokevirtual #58                 // Method c:()F
      89: invokestatic  #104                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      92: goto          112
      95: aload_0
      96: invokevirtual #55                 // Method b:()F
      99: invokestatic  #104                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
     102: goto          112
     105: aload_0
     106: invokevirtual #52                 // Method a:()F
     109: invokestatic  #104                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
     112: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #115                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #119                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class edu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/MatrixOpArg
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #124                // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #52                 // Method a:()F
       8: invokestatic  #130                // Method scala/runtime/Statics.floatHash:(F)I
      11: invokestatic  #134                // Method scala/runtime/Statics.mix:(II)I
      14: istore_1
      15: iload_1
      16: aload_0
      17: invokevirtual #55                 // Method b:()F
      20: invokestatic  #130                // Method scala/runtime/Statics.floatHash:(F)I
      23: invokestatic  #134                // Method scala/runtime/Statics.mix:(II)I
      26: istore_1
      27: iload_1
      28: aload_0
      29: invokevirtual #58                 // Method c:()F
      32: invokestatic  #130                // Method scala/runtime/Statics.floatHash:(F)I
      35: invokestatic  #134                // Method scala/runtime/Statics.mix:(II)I
      38: istore_1
      39: iload_1
      40: aload_0
      41: invokevirtual #61                 // Method d:()F
      44: invokestatic  #130                // Method scala/runtime/Statics.floatHash:(F)I
      47: invokestatic  #134                // Method scala/runtime/Statics.mix:(II)I
      50: istore_1
      51: iload_1
      52: aload_0
      53: invokevirtual #64                 // Method e:()F
      56: invokestatic  #130                // Method scala/runtime/Statics.floatHash:(F)I
      59: invokestatic  #134                // Method scala/runtime/Statics.mix:(II)I
      62: istore_1
      63: iload_1
      64: aload_0
      65: invokevirtual #67                 // Method f:()F
      68: invokestatic  #130                // Method scala/runtime/Statics.floatHash:(F)I
      71: invokestatic  #134                // Method scala/runtime/Statics.mix:(II)I
      74: istore_1
      75: iload_1
      76: bipush        6
      78: invokestatic  #137                // Method scala/runtime/Statics.finalizeHash:(II)I
      81: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #115                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #141                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     126
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class edu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/MatrixOpArg
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          130
      25: aload_1
      26: checkcast     #2                  // class edu/psu/sagnik/research/inkscapesvgprocessing/transformparser/model/MatrixOpArg
      29: astore        4
      31: aload_0
      32: invokevirtual #52                 // Method a:()F
      35: aload         4
      37: invokevirtual #52                 // Method a:()F
      40: fcmpl
      41: ifne          122
      44: aload_0
      45: invokevirtual #55                 // Method b:()F
      48: aload         4
      50: invokevirtual #55                 // Method b:()F
      53: fcmpl
      54: ifne          122
      57: aload_0
      58: invokevirtual #58                 // Method c:()F
      61: aload         4
      63: invokevirtual #58                 // Method c:()F
      66: fcmpl
      67: ifne          122
      70: aload_0
      71: invokevirtual #61                 // Method d:()F
      74: aload         4
      76: invokevirtual #61                 // Method d:()F
      79: fcmpl
      80: ifne          122
      83: aload_0
      84: invokevirtual #64                 // Method e:()F
      87: aload         4
      89: invokevirtual #64                 // Method e:()F
      92: fcmpl
      93: ifne          122
      96: aload_0
      97: invokevirtual #67                 // Method f:()F
     100: aload         4
     102: invokevirtual #67                 // Method f:()F
     105: fcmpl
     106: ifne          122
     109: aload         4
     111: aload_0
     112: invokevirtual #144                // Method canEqual:(Ljava/lang/Object;)Z
     115: ifeq          122
     118: iconst_1
     119: goto          123
     122: iconst_0
     123: ifeq          130
     126: iconst_1
     127: goto          131
     130: iconst_0
     131: ireturn

  public edu.psu.sagnik.research.inkscapesvgprocessing.transformparser.model.MatrixOpArg(float, float, float, float, float, float);
    Code:
       0: aload_0
       1: fload_1
       2: putfield      #43                 // Field a:F
       5: aload_0
       6: fload_2
       7: putfield      #47                 // Field b:F
      10: aload_0
      11: fload_3
      12: putfield      #49                 // Field c:F
      15: aload_0
      16: fload         4
      18: putfield      #69                 // Field d:F
      21: aload_0
      22: fload         5
      24: putfield      #71                 // Field e:F
      27: aload_0
      28: fload         6
      30: putfield      #73                 // Field f:F
      33: aload_0
      34: invokespecial #147                // Method java/lang/Object."<init>":()V
      37: aload_0
      38: invokestatic  #153                // Method scala/Product$class.$init$:(Lscala/Product;)V
      41: return
}
