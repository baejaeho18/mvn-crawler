Compiled from "JSONDataModel.scala"
public class edu.psu.sagnik.research.inkscapesvgprocessing.writer.model.CharStyle implements scala.Product,scala.Serializable {
  private final java.lang.String fontVariant;

  private final java.lang.String fontWeight;

  private final float fontSize;

  private final java.lang.String fontFamily;

  private final java.lang.String inkscapeFontSpecification;

  private final java.lang.String writingMode;

  private final java.lang.String fill;

  private final float fillOpacity;

  private final java.lang.String fillRule;

  private final java.lang.String stroke;

  public static scala.Option<scala.Tuple10<java.lang.String, java.lang.String, java.lang.Object, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Object, java.lang.String, java.lang.String>> unapply(edu.psu.sagnik.research.inkscapesvgprocessing.writer.model.CharStyle);
    Code:
       0: getstatic     #20                 // Field edu/psu/sagnik/research/inkscapesvgprocessing/writer/model/CharStyle$.MODULE$:Ledu/psu/sagnik/research/inkscapesvgprocessing/writer/model/CharStyle$;
       3: aload_0
       4: invokevirtual #22                 // Method edu/psu/sagnik/research/inkscapesvgprocessing/writer/model/CharStyle$.unapply:(Ledu/psu/sagnik/research/inkscapesvgprocessing/writer/model/CharStyle;)Lscala/Option;
       7: areturn

  public static edu.psu.sagnik.research.inkscapesvgprocessing.writer.model.CharStyle apply(java.lang.String, java.lang.String, float, java.lang.String, java.lang.String, java.lang.String, java.lang.String, float, java.lang.String, java.lang.String);
    Code:
       0: getstatic     #20                 // Field edu/psu/sagnik/research/inkscapesvgprocessing/writer/model/CharStyle$.MODULE$:Ledu/psu/sagnik/research/inkscapesvgprocessing/writer/model/CharStyle$;
       3: aload_0
       4: aload_1
       5: fload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: fload         7
      15: aload         8
      17: aload         9
      19: invokevirtual #26                 // Method edu/psu/sagnik/research/inkscapesvgprocessing/writer/model/CharStyle$.apply:(Ljava/lang/String;Ljava/lang/String;FLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;FLjava/lang/String;Ljava/lang/String;)Ledu/psu/sagnik/research/inkscapesvgprocessing/writer/model/CharStyle;
      22: areturn

  public static scala.Function1<scala.Tuple10<java.lang.String, java.lang.String, java.lang.Object, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Object, java.lang.String, java.lang.String>, edu.psu.sagnik.research.inkscapesvgprocessing.writer.model.CharStyle> tupled();
    Code:
       0: getstatic     #20                 // Field edu/psu/sagnik/research/inkscapesvgprocessing/writer/model/CharStyle$.MODULE$:Ledu/psu/sagnik/research/inkscapesvgprocessing/writer/model/CharStyle$;
       3: invokevirtual #30                 // Method edu/psu/sagnik/research/inkscapesvgprocessing/writer/model/CharStyle$.tupled:()Lscala/Function1;
       6: areturn

  public static scala.Function1<java.lang.String, scala.Function1<java.lang.String, scala.Function1<java.lang.Object, scala.Function1<java.lang.String, scala.Function1<java.lang.String, scala.Function1<java.lang.String, scala.Function1<java.lang.String, scala.Function1<java.lang.Object, scala.Function1<java.lang.String, scala.Function1<java.lang.String, edu.psu.sagnik.research.inkscapesvgprocessing.writer.model.CharStyle>>>>>>>>>> curried();
    Code:
       0: getstatic     #20                 // Field edu/psu/sagnik/research/inkscapesvgprocessing/writer/model/CharStyle$.MODULE$:Ledu/psu/sagnik/research/inkscapesvgprocessing/writer/model/CharStyle$;
       3: invokevirtual #33                 // Method edu/psu/sagnik/research/inkscapesvgprocessing/writer/model/CharStyle$.curried:()Lscala/Function1;
       6: areturn

  public java.lang.String fontVariant();
    Code:
       0: aload_0
       1: getfield      #48                 // Field fontVariant:Ljava/lang/String;
       4: areturn

  public java.lang.String fontWeight();
    Code:
       0: aload_0
       1: getfield      #52                 // Field fontWeight:Ljava/lang/String;
       4: areturn

  public float fontSize();
    Code:
       0: aload_0
       1: getfield      #55                 // Field fontSize:F
       4: freturn

  public java.lang.String fontFamily();
    Code:
       0: aload_0
       1: getfield      #57                 // Field fontFamily:Ljava/lang/String;
       4: areturn

  public java.lang.String inkscapeFontSpecification();
    Code:
       0: aload_0
       1: getfield      #59                 // Field inkscapeFontSpecification:Ljava/lang/String;
       4: areturn

  public java.lang.String writingMode();
    Code:
       0: aload_0
       1: getfield      #61                 // Field writingMode:Ljava/lang/String;
       4: areturn

  public java.lang.String fill();
    Code:
       0: aload_0
       1: getfield      #63                 // Field fill:Ljava/lang/String;
       4: areturn

  public float fillOpacity();
    Code:
       0: aload_0
       1: getfield      #65                 // Field fillOpacity:F
       4: freturn

  public java.lang.String fillRule();
    Code:
       0: aload_0
       1: getfield      #67                 // Field fillRule:Ljava/lang/String;
       4: areturn

  public java.lang.String stroke();
    Code:
       0: aload_0
       1: getfield      #69                 // Field stroke:Ljava/lang/String;
       4: areturn

  public edu.psu.sagnik.research.inkscapesvgprocessing.writer.model.CharStyle copy(java.lang.String, java.lang.String, float, java.lang.String, java.lang.String, java.lang.String, java.lang.String, float, java.lang.String, java.lang.String);
    Code:
       0: new           #2                  // class edu/psu/sagnik/research/inkscapesvgprocessing/writer/model/CharStyle
       3: dup
       4: aload_1
       5: aload_2
       6: fload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: aload         7
      15: fload         8
      17: aload         9
      19: aload         10
      21: invokespecial #74                 // Method "<init>":(Ljava/lang/String;Ljava/lang/String;FLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;FLjava/lang/String;Ljava/lang/String;)V
      24: areturn

  public java.lang.String copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #77                 // Method fontVariant:()Ljava/lang/String;
       4: areturn

  public java.lang.String copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method fontWeight:()Ljava/lang/String;
       4: areturn

  public float copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #83                 // Method fontSize:()F
       4: freturn

  public java.lang.String copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method fontFamily:()Ljava/lang/String;
       4: areturn

  public java.lang.String copy$default$5();
    Code:
       0: aload_0
       1: invokevirtual #89                 // Method inkscapeFontSpecification:()Ljava/lang/String;
       4: areturn

  public java.lang.String copy$default$6();
    Code:
       0: aload_0
       1: invokevirtual #92                 // Method writingMode:()Ljava/lang/String;
       4: areturn

  public java.lang.String copy$default$7();
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method fill:()Ljava/lang/String;
       4: areturn

  public float copy$default$8();
    Code:
       0: aload_0
       1: invokevirtual #98                 // Method fillOpacity:()F
       4: freturn

  public java.lang.String copy$default$9();
    Code:
       0: aload_0
       1: invokevirtual #101                // Method fillRule:()Ljava/lang/String;
       4: areturn

  public java.lang.String copy$default$10();
    Code:
       0: aload_0
       1: invokevirtual #104                // Method stroke:()Ljava/lang/String;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #107                // String CharStyle
       2: areturn

  public int productArity();
    Code:
       0: bipush        10
       2: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 9
                     0: 140
                     1: 133
                     2: 123
                     3: 116
                     4: 109
                     5: 102
                     6: 95
                     7: 85
                     8: 78
                     9: 71
               default: 56
          }
      56: new           #113                // class java/lang/IndexOutOfBoundsException
      59: dup
      60: iload_1
      61: invokestatic  #119                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      64: invokevirtual #122                // Method java/lang/Object.toString:()Ljava/lang/String;
      67: invokespecial #125                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: aload_0
      72: invokevirtual #104                // Method stroke:()Ljava/lang/String;
      75: goto          144
      78: aload_0
      79: invokevirtual #101                // Method fillRule:()Ljava/lang/String;
      82: goto          144
      85: aload_0
      86: invokevirtual #98                 // Method fillOpacity:()F
      89: invokestatic  #129                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      92: goto          144
      95: aload_0
      96: invokevirtual #95                 // Method fill:()Ljava/lang/String;
      99: goto          144
     102: aload_0
     103: invokevirtual #92                 // Method writingMode:()Ljava/lang/String;
     106: goto          144
     109: aload_0
     110: invokevirtual #89                 // Method inkscapeFontSpecification:()Ljava/lang/String;
     113: goto          144
     116: aload_0
     117: invokevirtual #86                 // Method fontFamily:()Ljava/lang/String;
     120: goto          144
     123: aload_0
     124: invokevirtual #83                 // Method fontSize:()F
     127: invokestatic  #129                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
     130: goto          144
     133: aload_0
     134: invokevirtual #80                 // Method fontWeight:()Ljava/lang/String;
     137: goto          144
     140: aload_0
     141: invokevirtual #77                 // Method fontVariant:()Ljava/lang/String;
     144: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #138                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #142                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class edu/psu/sagnik/research/inkscapesvgprocessing/writer/model/CharStyle
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #147                // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #77                 // Method fontVariant:()Ljava/lang/String;
       8: invokestatic  #153                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      11: invokestatic  #157                // Method scala/runtime/Statics.mix:(II)I
      14: istore_1
      15: iload_1
      16: aload_0
      17: invokevirtual #80                 // Method fontWeight:()Ljava/lang/String;
      20: invokestatic  #153                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      23: invokestatic  #157                // Method scala/runtime/Statics.mix:(II)I
      26: istore_1
      27: iload_1
      28: aload_0
      29: invokevirtual #83                 // Method fontSize:()F
      32: invokestatic  #161                // Method scala/runtime/Statics.floatHash:(F)I
      35: invokestatic  #157                // Method scala/runtime/Statics.mix:(II)I
      38: istore_1
      39: iload_1
      40: aload_0
      41: invokevirtual #86                 // Method fontFamily:()Ljava/lang/String;
      44: invokestatic  #153                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      47: invokestatic  #157                // Method scala/runtime/Statics.mix:(II)I
      50: istore_1
      51: iload_1
      52: aload_0
      53: invokevirtual #89                 // Method inkscapeFontSpecification:()Ljava/lang/String;
      56: invokestatic  #153                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      59: invokestatic  #157                // Method scala/runtime/Statics.mix:(II)I
      62: istore_1
      63: iload_1
      64: aload_0
      65: invokevirtual #92                 // Method writingMode:()Ljava/lang/String;
      68: invokestatic  #153                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      71: invokestatic  #157                // Method scala/runtime/Statics.mix:(II)I
      74: istore_1
      75: iload_1
      76: aload_0
      77: invokevirtual #95                 // Method fill:()Ljava/lang/String;
      80: invokestatic  #153                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      83: invokestatic  #157                // Method scala/runtime/Statics.mix:(II)I
      86: istore_1
      87: iload_1
      88: aload_0
      89: invokevirtual #98                 // Method fillOpacity:()F
      92: invokestatic  #161                // Method scala/runtime/Statics.floatHash:(F)I
      95: invokestatic  #157                // Method scala/runtime/Statics.mix:(II)I
      98: istore_1
      99: iload_1
     100: aload_0
     101: invokevirtual #101                // Method fillRule:()Ljava/lang/String;
     104: invokestatic  #153                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
     107: invokestatic  #157                // Method scala/runtime/Statics.mix:(II)I
     110: istore_1
     111: iload_1
     112: aload_0
     113: invokevirtual #104                // Method stroke:()Ljava/lang/String;
     116: invokestatic  #153                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
     119: invokestatic  #157                // Method scala/runtime/Statics.mix:(II)I
     122: istore_1
     123: iload_1
     124: bipush        10
     126: invokestatic  #164                // Method scala/runtime/Statics.finalizeHash:(II)I
     129: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #138                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #168                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     330
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class edu/psu/sagnik/research/inkscapesvgprocessing/writer/model/CharStyle
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          334
      25: aload_1
      26: checkcast     #2                  // class edu/psu/sagnik/research/inkscapesvgprocessing/writer/model/CharStyle
      29: astore        4
      31: aload_0
      32: invokevirtual #77                 // Method fontVariant:()Ljava/lang/String;
      35: aload         4
      37: invokevirtual #77                 // Method fontVariant:()Ljava/lang/String;
      40: astore        5
      42: dup
      43: ifnonnull     55
      46: pop
      47: aload         5
      49: ifnull        63
      52: goto          326
      55: aload         5
      57: invokevirtual #171                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifeq          326
      63: aload_0
      64: invokevirtual #80                 // Method fontWeight:()Ljava/lang/String;
      67: aload         4
      69: invokevirtual #80                 // Method fontWeight:()Ljava/lang/String;
      72: astore        6
      74: dup
      75: ifnonnull     87
      78: pop
      79: aload         6
      81: ifnull        95
      84: goto          326
      87: aload         6
      89: invokevirtual #171                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      92: ifeq          326
      95: aload_0
      96: invokevirtual #83                 // Method fontSize:()F
      99: aload         4
     101: invokevirtual #83                 // Method fontSize:()F
     104: fcmpl
     105: ifne          326
     108: aload_0
     109: invokevirtual #86                 // Method fontFamily:()Ljava/lang/String;
     112: aload         4
     114: invokevirtual #86                 // Method fontFamily:()Ljava/lang/String;
     117: astore        7
     119: dup
     120: ifnonnull     132
     123: pop
     124: aload         7
     126: ifnull        140
     129: goto          326
     132: aload         7
     134: invokevirtual #171                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     137: ifeq          326
     140: aload_0
     141: invokevirtual #89                 // Method inkscapeFontSpecification:()Ljava/lang/String;
     144: aload         4
     146: invokevirtual #89                 // Method inkscapeFontSpecification:()Ljava/lang/String;
     149: astore        8
     151: dup
     152: ifnonnull     164
     155: pop
     156: aload         8
     158: ifnull        172
     161: goto          326
     164: aload         8
     166: invokevirtual #171                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     169: ifeq          326
     172: aload_0
     173: invokevirtual #92                 // Method writingMode:()Ljava/lang/String;
     176: aload         4
     178: invokevirtual #92                 // Method writingMode:()Ljava/lang/String;
     181: astore        9
     183: dup
     184: ifnonnull     196
     187: pop
     188: aload         9
     190: ifnull        204
     193: goto          326
     196: aload         9
     198: invokevirtual #171                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     201: ifeq          326
     204: aload_0
     205: invokevirtual #95                 // Method fill:()Ljava/lang/String;
     208: aload         4
     210: invokevirtual #95                 // Method fill:()Ljava/lang/String;
     213: astore        10
     215: dup
     216: ifnonnull     228
     219: pop
     220: aload         10
     222: ifnull        236
     225: goto          326
     228: aload         10
     230: invokevirtual #171                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     233: ifeq          326
     236: aload_0
     237: invokevirtual #98                 // Method fillOpacity:()F
     240: aload         4
     242: invokevirtual #98                 // Method fillOpacity:()F
     245: fcmpl
     246: ifne          326
     249: aload_0
     250: invokevirtual #101                // Method fillRule:()Ljava/lang/String;
     253: aload         4
     255: invokevirtual #101                // Method fillRule:()Ljava/lang/String;
     258: astore        11
     260: dup
     261: ifnonnull     273
     264: pop
     265: aload         11
     267: ifnull        281
     270: goto          326
     273: aload         11
     275: invokevirtual #171                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     278: ifeq          326
     281: aload_0
     282: invokevirtual #104                // Method stroke:()Ljava/lang/String;
     285: aload         4
     287: invokevirtual #104                // Method stroke:()Ljava/lang/String;
     290: astore        12
     292: dup
     293: ifnonnull     305
     296: pop
     297: aload         12
     299: ifnull        313
     302: goto          326
     305: aload         12
     307: invokevirtual #171                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     310: ifeq          326
     313: aload         4
     315: aload_0
     316: invokevirtual #173                // Method canEqual:(Ljava/lang/Object;)Z
     319: ifeq          326
     322: iconst_1
     323: goto          327
     326: iconst_0
     327: ifeq          334
     330: iconst_1
     331: goto          335
     334: iconst_0
     335: ireturn

  public edu.psu.sagnik.research.inkscapesvgprocessing.writer.model.CharStyle(java.lang.String, java.lang.String, float, java.lang.String, java.lang.String, java.lang.String, java.lang.String, float, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #48                 // Field fontVariant:Ljava/lang/String;
       5: aload_0
       6: aload_2
       7: putfield      #52                 // Field fontWeight:Ljava/lang/String;
      10: aload_0
      11: fload_3
      12: putfield      #55                 // Field fontSize:F
      15: aload_0
      16: aload         4
      18: putfield      #57                 // Field fontFamily:Ljava/lang/String;
      21: aload_0
      22: aload         5
      24: putfield      #59                 // Field inkscapeFontSpecification:Ljava/lang/String;
      27: aload_0
      28: aload         6
      30: putfield      #61                 // Field writingMode:Ljava/lang/String;
      33: aload_0
      34: aload         7
      36: putfield      #63                 // Field fill:Ljava/lang/String;
      39: aload_0
      40: fload         8
      42: putfield      #65                 // Field fillOpacity:F
      45: aload_0
      46: aload         9
      48: putfield      #67                 // Field fillRule:Ljava/lang/String;
      51: aload_0
      52: aload         10
      54: putfield      #69                 // Field stroke:Ljava/lang/String;
      57: aload_0
      58: invokespecial #178                // Method java/lang/Object."<init>":()V
      61: aload_0
      62: invokestatic  #184                // Method scala/Product$class.$init$:(Lscala/Product;)V
      65: return
}
