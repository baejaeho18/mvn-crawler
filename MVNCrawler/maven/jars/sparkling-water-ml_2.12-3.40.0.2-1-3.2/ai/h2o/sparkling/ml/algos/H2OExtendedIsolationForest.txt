Compiled from "H2OExtendedIsolationForest.scala"
public class ai.h2o.sparkling.ml.algos.H2OExtendedIsolationForest extends ai.h2o.sparkling.ml.algos.H2OTreeBasedUnsupervisedAlgorithm<hex.tree.isoforextended.ExtendedIsolationForestModel$ExtendedIsolationForestParameters> implements ai.h2o.sparkling.ml.params.H2OExtendedIsolationForestParams {
  private final java.lang.String uid;

  private final org.apache.spark.ml.param.IntParam ntrees;

  private final org.apache.spark.ml.param.IntParam sampleSize;

  private final org.apache.spark.ml.param.IntParam extensionLevel;

  private final org.apache.spark.ml.param.LongParam seed;

  private final ai.h2o.sparkling.ml.params.NullableStringParam modelId;

  private final org.apache.spark.ml.param.Param<java.lang.String> categoricalEncoding;

  private final org.apache.spark.ml.param.BooleanParam ignoreConstCols;

  private final ai.h2o.sparkling.ml.params.NullableStringArrayParam ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols;

  public static org.apache.spark.ml.util.MLReader<ai.h2o.sparkling.ml.algos.H2OExtendedIsolationForest> read();
    Code:
       0: getstatic     #42                 // Field ai/h2o/sparkling/ml/algos/H2OExtendedIsolationForest$.MODULE$:Lai/h2o/sparkling/ml/algos/H2OExtendedIsolationForest$;
       3: invokevirtual #44                 // Method ai/h2o/sparkling/ml/algos/H2OExtendedIsolationForest$.read:()Lorg/apache/spark/ml/util/MLReader;
       6: areturn

  public static java.lang.Object load(java.lang.String);
    Code:
       0: getstatic     #42                 // Field ai/h2o/sparkling/ml/algos/H2OExtendedIsolationForest$.MODULE$:Lai/h2o/sparkling/ml/algos/H2OExtendedIsolationForest$;
       3: aload_0
       4: invokevirtual #49                 // Method ai/h2o/sparkling/ml/algos/H2OExtendedIsolationForest$.load:(Ljava/lang/String;)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OExtendedIsolationForestParams$$super$getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #58                 // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.getH2OAlgorithmParams$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OExtendedIsolationForestParams$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #69                 // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;)Lscala/collection/immutable/Map;
       4: areturn

  public scala.reflect.ClassTag<hex.tree.isoforextended.ExtendedIsolationForestModel$ExtendedIsolationForestParameters> paramTag();
    Code:
       0: aload_0
       1: invokestatic  #76                 // InterfaceMethod ai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams.paramTag$:(Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;)Lscala/reflect/ClassTag;
       4: areturn

  public int getNtrees();
    Code:
       0: aload_0
       1: invokestatic  #82                 // InterfaceMethod ai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams.getNtrees$:(Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;)I
       4: ireturn

  public int getSampleSize();
    Code:
       0: aload_0
       1: invokestatic  #86                 // InterfaceMethod ai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams.getSampleSize$:(Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;)I
       4: ireturn

  public int getExtensionLevel();
    Code:
       0: aload_0
       1: invokestatic  #90                 // InterfaceMethod ai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams.getExtensionLevel$:(Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;)I
       4: ireturn

  public long getSeed();
    Code:
       0: aload_0
       1: invokestatic  #96                 // InterfaceMethod ai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams.getSeed$:(Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;)J
       4: lreturn

  public java.lang.String getModelId();
    Code:
       0: aload_0
       1: invokestatic  #102                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams.getModelId$:(Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getCategoricalEncoding();
    Code:
       0: aload_0
       1: invokestatic  #106                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams.getCategoricalEncoding$:(Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;)Ljava/lang/String;
       4: areturn

  public boolean getIgnoreConstCols();
    Code:
       0: aload_0
       1: invokestatic  #112                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams.getIgnoreConstCols$:(Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;)Z
       4: ireturn

  public ai.h2o.sparkling.ml.params.H2OExtendedIsolationForestParams setNtrees(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #119                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams.setNtrees$:(Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;I)Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OExtendedIsolationForestParams setSampleSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #124                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams.setSampleSize$:(Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;I)Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OExtendedIsolationForestParams setExtensionLevel(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #128                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams.setExtensionLevel$:(Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;I)Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OExtendedIsolationForestParams setSeed(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #134                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams.setSeed$:(Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;J)Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OExtendedIsolationForestParams setModelId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #141                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams.setModelId$:(Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OExtendedIsolationForestParams setCategoricalEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #145                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams.setCategoricalEncoding$:(Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OExtendedIsolationForestParams setIgnoreConstCols(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #151                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams.setIgnoreConstCols$:(Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;Z)Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #157                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams.getH2OAlgorithmParams$:(Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OExtendedIsolationForestParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #161                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams.getH2OExtendedIsolationForestParams$:(Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.String> getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #166                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;)Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$HasIgnoredCols$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #170                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;)Lscala/collection/immutable/Map;
       4: areturn

  public java.lang.String[] getIgnoredCols();
    Code:
       0: aload_0
       1: invokestatic  #176                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.getIgnoredCols$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;)[Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.params.HasIgnoredCols setIgnoredCols(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #182                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.setIgnoredCols$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;[Ljava/lang/String;)Lai/h2o/sparkling/ml/params/HasIgnoredCols;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getIgnoredColsParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #188                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.getIgnoredColsParam$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public org.apache.spark.ml.param.IntParam ntrees();
    Code:
       0: aload_0
       1: getfield      #191                // Field ntrees:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam sampleSize();
    Code:
       0: aload_0
       1: getfield      #193                // Field sampleSize:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam extensionLevel();
    Code:
       0: aload_0
       1: getfield      #195                // Field extensionLevel:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.LongParam seed();
    Code:
       0: aload_0
       1: getfield      #198                // Field seed:Lorg/apache/spark/ml/param/LongParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam modelId();
    Code:
       0: aload_0
       1: getfield      #201                // Field modelId:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> categoricalEncoding();
    Code:
       0: aload_0
       1: getfield      #205                // Field categoricalEncoding:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam ignoreConstCols();
    Code:
       0: aload_0
       1: getfield      #208                // Field ignoreConstCols:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public void ai$h2o$sparkling$ml$params$H2OExtendedIsolationForestParams$_setter_$ntrees_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #191                // Field ntrees:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OExtendedIsolationForestParams$_setter_$sampleSize_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #193                // Field sampleSize:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OExtendedIsolationForestParams$_setter_$extensionLevel_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #195                // Field extensionLevel:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OExtendedIsolationForestParams$_setter_$seed_$eq(org.apache.spark.ml.param.LongParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #198                // Field seed:Lorg/apache/spark/ml/param/LongParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OExtendedIsolationForestParams$_setter_$modelId_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #201                // Field modelId:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OExtendedIsolationForestParams$_setter_$categoricalEncoding_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #205                // Field categoricalEncoding:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OExtendedIsolationForestParams$_setter_$ignoreConstCols_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #208                // Field ignoreConstCols:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public ai.h2o.sparkling.ml.params.NullableStringArrayParam ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols();
    Code:
       0: aload_0
       1: getfield      #225                // Field ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$HasIgnoredCols$_setter_$ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols_$eq(ai.h2o.sparkling.ml.params.NullableStringArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #225                // Field ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       5: return

  public java.lang.String uid();
    Code:
       0: aload_0
       1: getfield      #229                // Field uid:Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.models.H2OExtendedIsolationForestMOJOModel fit(org.apache.spark.sql.Dataset<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #236                // Method ai/h2o/sparkling/ml/algos/H2OTreeBasedUnsupervisedAlgorithm.fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OTreeBasedUnsupervisedMOJOModel;
       5: checkcast     #238                // class ai/h2o/sparkling/ml/models/H2OExtendedIsolationForestMOJOModel
       8: areturn

  public ai.h2o.sparkling.ml.algos.H2OTreeBasedUnsupervisedAlgorithm setNtrees(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #242                // Method setNtrees:(I)Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;
       5: checkcast     #5                  // class ai/h2o/sparkling/ml/algos/H2OTreeBasedUnsupervisedAlgorithm
       8: areturn

  public org.apache.spark.ml.Model fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #245                // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OExtendedIsolationForestMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2OMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #245                // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OExtendedIsolationForestMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2OAlgorithmMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #245                // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OExtendedIsolationForestMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2OUnsupervisedMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #245                // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OExtendedIsolationForestMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2OTreeBasedUnsupervisedMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #245                // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OExtendedIsolationForestMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.algos.H2OExtendedIsolationForest(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #229                // Field uid:Ljava/lang/String;
       5: aload_0
       6: getstatic     #255                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       9: ldc           #13                 // class hex/tree/isoforextended/ExtendedIsolationForestModel$ExtendedIsolationForestParameters
      11: invokevirtual #259                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      14: invokespecial #262                // Method ai/h2o/sparkling/ml/algos/H2OTreeBasedUnsupervisedAlgorithm."<init>":(Lscala/reflect/ClassTag;)V
      17: aload_0
      18: invokestatic  #266                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.$init$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;)V
      21: aload_0
      22: invokestatic  #269                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams.$init$:(Lai/h2o/sparkling/ml/params/H2OExtendedIsolationForestParams;)V
      25: return

  public ai.h2o.sparkling.ml.algos.H2OExtendedIsolationForest();
    Code:
       0: aload_0
       1: getstatic     #275                // Field org/apache/spark/ml/util/Identifiable$.MODULE$:Lorg/apache/spark/ml/util/Identifiable$;
       4: ldc           #2                  // class ai/h2o/sparkling/ml/algos/H2OExtendedIsolationForest
       6: invokevirtual #280                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       9: invokevirtual #284                // Method org/apache/spark/ml/util/Identifiable$.randomUID:(Ljava/lang/String;)Ljava/lang/String;
      12: invokespecial #286                // Method "<init>":(Ljava/lang/String;)V
      15: return
}
