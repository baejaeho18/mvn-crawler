Compiled from "H2OBinaryModel.scala"
public final class ai.h2o.sparkling.ml.models.H2OBinaryModel$ implements ai.h2o.sparkling.backend.utils.RestCommunication {
  public static ai.h2o.sparkling.ml.models.H2OBinaryModel$ MODULE$;

  private volatile ai.h2o.sparkling.backend.utils.RestCommunication$LoggingLevel$ LoggingLevel$module;

  private transient org.slf4j.Logger org$apache$spark$internal$Logging$$log_;

  public static {};
    Code:
       0: new           #2                  // class ai/h2o/sparkling/ml/models/H2OBinaryModel$
       3: invokespecial #46                 // Method "<init>":()V
       6: return

  public <ResultType> ResultType query(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, scala.Enumeration$Value, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #60                 // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;Lscala/Enumeration$Value;Lscala/reflect/ClassTag;)Ljava/lang/Object;
      15: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> query$default$4();
    Code:
       0: aload_0
       1: invokestatic  #75                 // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> query$default$5();
    Code:
       0: aload_0
       1: invokestatic  #82                 // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> scala.Enumeration$Value query$default$6();
    Code:
       0: aload_0
       1: invokestatic  #89                 // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public <ResultType> ResultType update(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, boolean, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aload         7
      12: invokestatic  #98                 // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;ZLscala/reflect/ClassTag;)Ljava/lang/Object;
      15: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> update$default$4();
    Code:
       0: aload_0
       1: invokestatic  #103                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> update$default$5();
    Code:
       0: aload_0
       1: invokestatic  #107                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> boolean update$default$6();
    Code:
       0: aload_0
       1: invokestatic  #114                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public <ResultType> ResultType delete(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, boolean, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aload         7
      12: invokestatic  #119                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;ZLscala/reflect/ClassTag;)Ljava/lang/Object;
      15: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> delete$default$4();
    Code:
       0: aload_0
       1: invokestatic  #123                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> delete$default$5();
    Code:
       0: aload_0
       1: invokestatic  #127                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> boolean delete$default$6();
    Code:
       0: aload_0
       1: invokestatic  #131                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public java.io.OutputStream insertToNode(ai.h2o.sparkling.backend.NodeDesc, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #139                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insertToNode$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Lai/h2o/sparkling/backend/NodeDesc;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;)Ljava/io/OutputStream;
       9: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> insertToNode$default$4();
    Code:
       0: aload_0
       1: invokestatic  #145                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insertToNode$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public java.io.OutputStream insert(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.Function1<java.io.OutputStream, java.io.OutputStream>, scala.collection.immutable.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #153                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insert$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/Function1;Lscala/collection/immutable/Map;)Ljava/io/OutputStream;
      11: areturn

  public scala.Function1<java.io.OutputStream, java.io.OutputStream> insert$default$4();
    Code:
       0: aload_0
       1: invokestatic  #161                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insert$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Function1;
       4: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> insert$default$5();
    Code:
       0: aload_0
       1: invokestatic  #165                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insert$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public void delete(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #169                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;)V
       7: return

  public <ResultType> ResultType request(java.net.URI, java.lang.String, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, boolean, scala.Enumeration$Value, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: iload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #178                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;ZLscala/Enumeration$Value;Lscala/reflect/ClassTag;)Ljava/lang/Object;
      19: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> request$default$5();
    Code:
       0: aload_0
       1: invokestatic  #182                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> request$default$6();
    Code:
       0: aload_0
       1: invokestatic  #186                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> boolean request$default$7();
    Code:
       0: aload_0
       1: invokestatic  #190                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$7$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public <ResultType> scala.Enumeration$Value request$default$8();
    Code:
       0: aload_0
       1: invokestatic  #194                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$8$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public <ResultType> ResultType deserialize(java.lang.String, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #203                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.deserialize$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/lang/String;Lscala/collection/Seq;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       7: areturn

  public <ResultType> ResultType deserialize(com.google.gson.JsonElement, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #209                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.deserialize$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Lcom/google/gson/JsonElement;Lscala/collection/Seq;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       7: areturn

  public com.google.gson.JsonObject deserializeAsJsonObject(java.lang.String, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #217                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.deserializeAsJsonObject$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/lang/String;Lscala/collection/Seq;)Lcom/google/gson/JsonObject;
       6: areturn

  public void downloadBinaryURLContent(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #224                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.downloadBinaryURLContent$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Ljava/io/File;)V
       9: return

  public void downloadStringURLContent(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #229                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.downloadStringURLContent$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Ljava/io/File;)V
       9: return

  public java.io.InputStream readURLContent(java.net.URI, java.lang.String, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, boolean, scala.Option<java.lang.String>, scala.Enumeration$Value);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #236                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;ZLscala/Option;Lscala/Enumeration$Value;)Ljava/io/InputStream;
      17: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> readURLContent$default$5();
    Code:
       0: aload_0
       1: invokestatic  #241                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public boolean readURLContent$default$6();
    Code:
       0: aload_0
       1: invokestatic  #245                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public scala.Option<java.lang.String> readURLContent$default$7();
    Code:
       0: aload_0
       1: invokestatic  #252                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$7$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Option;
       4: areturn

  public scala.Enumeration$Value readURLContent$default$8();
    Code:
       0: aload_0
       1: invokestatic  #256                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$8$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public void checkResponseCode(java.net.HttpURLConnection, scala.Enumeration$Value);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #263                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.checkResponseCode$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/HttpURLConnection;Lscala/Enumeration$Value;)V
       6: return

  public scala.Enumeration$Value checkResponseCode$default$2();
    Code:
       0: aload_0
       1: invokestatic  #268                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.checkResponseCode$default$2$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public java.lang.String stringifyPrimitiveParam(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #277                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyPrimitiveParam$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  public boolean isPrimitiveType(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #284                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.isPrimitiveType$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Z
       5: ireturn

  public java.lang.String stringifyArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #289                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyArray$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringifyMap(scala.collection.immutable.Map<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #297                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyMap$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Lscala/collection/immutable/Map;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringifyPair(scala.Tuple2<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #305                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyPair$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Lscala/Tuple2;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringify(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #310                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringify$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringifyParams(scala.collection.immutable.Map<java.lang.String, java.lang.Object>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #317                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyParams$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Lscala/collection/immutable/Map;Z)Ljava/lang/String;
       6: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> stringifyParams$default$1();
    Code:
       0: aload_0
       1: invokestatic  #322                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyParams$default$1$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;)Lscala/collection/immutable/Map;
       4: areturn

  public boolean stringifyParams$default$2();
    Code:
       0: aload_0
       1: invokestatic  #327                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyParams$default$2$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;)Z
       4: ireturn

  public java.lang.String logName();
    Code:
       0: aload_0
       1: invokestatic  #335                // InterfaceMethod org/apache/spark/internal/Logging.logName$:(Lorg/apache/spark/internal/Logging;)Ljava/lang/String;
       4: areturn

  public org.slf4j.Logger log();
    Code:
       0: aload_0
       1: invokestatic  #341                // InterfaceMethod org/apache/spark/internal/Logging.log$:(Lorg/apache/spark/internal/Logging;)Lorg/slf4j/Logger;
       4: areturn

  public void logInfo(scala.Function0<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #349                // InterfaceMethod org/apache/spark/internal/Logging.logInfo$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;)V
       5: return

  public void logDebug(scala.Function0<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #354                // InterfaceMethod org/apache/spark/internal/Logging.logDebug$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;)V
       5: return

  public void logTrace(scala.Function0<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #358                // InterfaceMethod org/apache/spark/internal/Logging.logTrace$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;)V
       5: return

  public void logWarning(scala.Function0<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #362                // InterfaceMethod org/apache/spark/internal/Logging.logWarning$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;)V
       5: return

  public void logError(scala.Function0<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #366                // InterfaceMethod org/apache/spark/internal/Logging.logError$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;)V
       5: return

  public void logInfo(scala.Function0<java.lang.String>, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #372                // InterfaceMethod org/apache/spark/internal/Logging.logInfo$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;Ljava/lang/Throwable;)V
       6: return

  public void logDebug(scala.Function0<java.lang.String>, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #375                // InterfaceMethod org/apache/spark/internal/Logging.logDebug$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;Ljava/lang/Throwable;)V
       6: return

  public void logTrace(scala.Function0<java.lang.String>, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #377                // InterfaceMethod org/apache/spark/internal/Logging.logTrace$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;Ljava/lang/Throwable;)V
       6: return

  public void logWarning(scala.Function0<java.lang.String>, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #379                // InterfaceMethod org/apache/spark/internal/Logging.logWarning$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;Ljava/lang/Throwable;)V
       6: return

  public void logError(scala.Function0<java.lang.String>, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #381                // InterfaceMethod org/apache/spark/internal/Logging.logError$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;Ljava/lang/Throwable;)V
       6: return

  public boolean isTraceEnabled();
    Code:
       0: aload_0
       1: invokestatic  #386                // InterfaceMethod org/apache/spark/internal/Logging.isTraceEnabled$:(Lorg/apache/spark/internal/Logging;)Z
       4: ireturn

  public void initializeLogIfNecessary(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #393                // InterfaceMethod org/apache/spark/internal/Logging.initializeLogIfNecessary$:(Lorg/apache/spark/internal/Logging;Z)V
       5: return

  public boolean initializeLogIfNecessary(boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #398                // InterfaceMethod org/apache/spark/internal/Logging.initializeLogIfNecessary$:(Lorg/apache/spark/internal/Logging;ZZ)Z
       6: ireturn

  public boolean initializeLogIfNecessary$default$2();
    Code:
       0: aload_0
       1: invokestatic  #402                // InterfaceMethod org/apache/spark/internal/Logging.initializeLogIfNecessary$default$2$:(Lorg/apache/spark/internal/Logging;)Z
       4: ireturn

  public void initializeForcefully(boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #408                // InterfaceMethod org/apache/spark/internal/Logging.initializeForcefully$:(Lorg/apache/spark/internal/Logging;ZZ)V
       6: return

  public ai.h2o.sparkling.backend.utils.RestCommunication$LoggingLevel$ LoggingLevel();
    Code:
       0: aload_0
       1: getfield      #412                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #415                // Method LoggingLevel$lzycompute$2:()V
      11: aload_0
      12: getfield      #412                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
      15: areturn

  public org.slf4j.Logger org$apache$spark$internal$Logging$$log_();
    Code:
       0: aload_0
       1: getfield      #417                // Field org$apache$spark$internal$Logging$$log_:Lorg/slf4j/Logger;
       4: areturn

  public void org$apache$spark$internal$Logging$$log__$eq(org.slf4j.Logger);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #417                // Field org$apache$spark$internal$Logging$$log_:Lorg/slf4j/Logger;
       5: return

  public boolean exists(java.lang.String);
    Code:
       0: getstatic     #428                // Field ai/h2o/sparkling/H2OContext$.MODULE$:Lai/h2o/sparkling/H2OContext$;
       3: invokedynamic #450,  0            // InvokeDynamic #0:apply:()Lscala/Function0;
       8: invokevirtual #454                // Method ai/h2o/sparkling/H2OContext$.ensure:(Lscala/Function0;)Lai/h2o/sparkling/H2OContext;
      11: invokevirtual #460                // Method ai/h2o/sparkling/H2OContext.getConf:()Lai/h2o/sparkling/H2OConf;
      14: astore_2
      15: getstatic     #465                // Field ai/h2o/sparkling/backend/utils/RestApiUtils$.MODULE$:Lai/h2o/sparkling/backend/utils/RestApiUtils$;
      18: aload_2
      19: invokevirtual #469                // Method ai/h2o/sparkling/backend/utils/RestApiUtils$.getClusterEndpoint:(Lai/h2o/sparkling/H2OConf;)Ljava/net/URI;
      22: astore_3
      23: aload_0
      24: aload_3
      25: ldc_w         #471                // String /3/Models
      28: aload_2
      29: aload_0
      30: invokevirtual #473                // Method query$default$4:()Lscala/collection/immutable/Map;
      33: aload_0
      34: invokevirtual #475                // Method query$default$5:()Lscala/collection/Seq;
      37: aload_0
      38: invokevirtual #477                // Method query$default$6:()Lscala/Enumeration$Value;
      41: getstatic     #482                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      44: ldc_w         #484                // class water/api/schemas3/ModelsV3
      47: invokevirtual #487                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      50: invokevirtual #489                // Method query:(Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;Lscala/Enumeration$Value;Lscala/reflect/ClassTag;)Ljava/lang/Object;
      53: checkcast     #484                // class water/api/schemas3/ModelsV3
      56: astore        4
      58: new           #27                 // class scala/collection/mutable/ArrayOps$ofRef
      61: dup
      62: getstatic     #494                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      65: aload         4
      67: getfield      #498                // Field water/api/schemas3/ModelsV3.models:[Lwater/api/schemas3/ModelSchemaBaseV3;
      70: checkcast     #500                // class "[Ljava/lang/Object;"
      73: invokevirtual #504                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
      76: invokespecial #507                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
      79: aload_1
      80: invokedynamic #519,  0            // InvokeDynamic #1:apply:(Ljava/lang/String;)Lscala/Function1;
      85: invokevirtual #522                // Method scala/collection/mutable/ArrayOps$ofRef.exists:(Lscala/Function1;)Z
      88: ireturn

  public ai.h2o.sparkling.ml.models.H2OBinaryModel read(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #531                // Field scala/None$.MODULE$:Lscala/None$;
       5: invokevirtual #534                // Method read:(Ljava/lang/String;Lscala/Option;)Lai/h2o/sparkling/ml/models/H2OBinaryModel;
       8: areturn

  private java.lang.String extractVersionFromModel(java.lang.String);
    Code:
       0: getstatic     #541                // Field ai/h2o/sparkling/utils/ScalaUtils$.MODULE$:Lai/h2o/sparkling/utils/ScalaUtils$;
       3: getstatic     #546                // Field ai/h2o/sparkling/utils/SparkSessionUtils$.MODULE$:Lai/h2o/sparkling/utils/SparkSessionUtils$;
       6: aload_1
       7: invokevirtual #550                // Method ai/h2o/sparkling/utils/SparkSessionUtils$.readHDFSFile:(Ljava/lang/String;)Ljava/io/InputStream;
      10: invokedynamic #558,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
      15: invokevirtual #562                // Method ai/h2o/sparkling/utils/ScalaUtils$.withResource:(Ljava/lang/AutoCloseable;Lscala/Function1;)Ljava/lang/Object;
      18: checkcast     #564                // class java/lang/String
      21: areturn

  private void checkVersion(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: astore_3
       3: dup
       4: ifnonnull     15
       7: pop
       8: aload_3
       9: ifnull        95
      12: goto          22
      15: aload_3
      16: invokevirtual #571                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      19: ifne          95
      22: aload_2
      23: ldc_w         #573                // String 99999
      26: invokevirtual #576                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      29: ifne          95
      32: new           #578                // class java/lang/IllegalArgumentException
      35: dup
      36: new           #580                // class scala/collection/immutable/StringOps
      39: dup
      40: getstatic     #494                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      43: new           #582                // class java/lang/StringBuilder
      46: dup
      47: ldc_w         #583                // int 278
      50: invokespecial #586                // Method java/lang/StringBuilder."<init>":(I)V
      53: ldc_w         #588                // String \n           | The binary model has been trained in H2O of version\n           |
      56: invokevirtual #592                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_2
      60: invokevirtual #592                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: ldc_w         #594                // String  but you are currently running H2O version of
      66: invokevirtual #592                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_1
      70: invokevirtual #592                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: ldc_w         #596                // String .\n           | Please make sure that running Sparkling Water/H2O-3 cluster and the loaded binary\n           | model correspond to the same H2O-3 version.
      76: invokevirtual #592                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: invokevirtual #599                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: invokevirtual #602                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
      85: invokespecial #605                // Method scala/collection/immutable/StringOps."<init>":(Ljava/lang/String;)V
      88: invokevirtual #608                // Method scala/collection/immutable/StringOps.stripMargin:()Ljava/lang/String;
      91: invokespecial #609                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      94: athrow
      95: return

  public ai.h2o.sparkling.ml.models.H2OBinaryModel read(java.lang.String, scala.Option<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #614                // Method verifyH2OIsRunning:()V
       4: aload_0
       5: aload_1
       6: invokespecial #616                // Method extractVersionFromModel:(Ljava/lang/String;)Ljava/lang/String;
       9: astore_3
      10: aload_0
      11: getstatic     #621                // Field ai/h2o/sparkling/backend/BuildInfo$.MODULE$:Lai/h2o/sparkling/backend/BuildInfo$;
      14: invokevirtual #624                // Method ai/h2o/sparkling/backend/BuildInfo$.H2OVersion:()Ljava/lang/String;
      17: aload_3
      18: invokespecial #626                // Method checkVersion:(Ljava/lang/String;Ljava/lang/String;)V
      21: aload_2
      22: invokevirtual #631                // Method scala/Option.isDefined:()Z
      25: ifeq          38
      28: aload_2
      29: invokevirtual #634                // Method scala/Option.get:()Ljava/lang/Object;
      32: checkcast     #564                // class java/lang/String
      35: goto          211
      38: getstatic     #428                // Field ai/h2o/sparkling/H2OContext$.MODULE$:Lai/h2o/sparkling/H2OContext$;
      41: invokedynamic #639,  0            // InvokeDynamic #3:apply:()Lscala/Function0;
      46: invokevirtual #454                // Method ai/h2o/sparkling/H2OContext$.ensure:(Lscala/Function0;)Lai/h2o/sparkling/H2OContext;
      49: invokevirtual #460                // Method ai/h2o/sparkling/H2OContext.getConf:()Lai/h2o/sparkling/H2OConf;
      52: astore        5
      54: getstatic     #465                // Field ai/h2o/sparkling/backend/utils/RestApiUtils$.MODULE$:Lai/h2o/sparkling/backend/utils/RestApiUtils$;
      57: aload         5
      59: invokevirtual #469                // Method ai/h2o/sparkling/backend/utils/RestApiUtils$.getClusterEndpoint:(Lai/h2o/sparkling/H2OConf;)Ljava/net/URI;
      62: astore        6
      64: getstatic     #494                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      67: invokevirtual #643                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
      70: getstatic     #494                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      73: iconst_2
      74: anewarray     #645                // class scala/Tuple2
      77: dup
      78: iconst_0
      79: getstatic     #648                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      82: getstatic     #494                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      85: ldc_w         #650                // String dir
      88: invokevirtual #653                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      91: getstatic     #546                // Field ai/h2o/sparkling/utils/SparkSessionUtils$.MODULE$:Lai/h2o/sparkling/utils/SparkSessionUtils$;
      94: aload_1
      95: invokevirtual #656                // Method ai/h2o/sparkling/utils/SparkSessionUtils$.hdfsQualifiedPath:(Ljava/lang/String;)Ljava/lang/String;
      98: invokevirtual #660                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     101: aastore
     102: dup
     103: iconst_1
     104: getstatic     #648                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     107: getstatic     #494                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     110: ldc_w         #662                // String model_id
     113: invokevirtual #653                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     116: ldc_w         #664                // String test
     119: invokevirtual #660                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     122: aastore
     123: checkcast     #500                // class "[Ljava/lang/Object;"
     126: invokevirtual #668                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     129: invokevirtual #673                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
     132: checkcast     #675                // class scala/collection/immutable/Map
     135: astore        7
     137: getstatic     #465                // Field ai/h2o/sparkling/backend/utils/RestApiUtils$.MODULE$:Lai/h2o/sparkling/backend/utils/RestApiUtils$;
     140: aload         6
     142: ldc_w         #677                // String /99/Models.bin/
     145: aload         5
     147: aload         7
     149: getstatic     #465                // Field ai/h2o/sparkling/backend/utils/RestApiUtils$.MODULE$:Lai/h2o/sparkling/backend/utils/RestApiUtils$;
     152: invokevirtual #679                // Method ai/h2o/sparkling/backend/utils/RestApiUtils$.update$default$5:()Lscala/collection/Seq;
     155: getstatic     #465                // Field ai/h2o/sparkling/backend/utils/RestApiUtils$.MODULE$:Lai/h2o/sparkling/backend/utils/RestApiUtils$;
     158: invokevirtual #681                // Method ai/h2o/sparkling/backend/utils/RestApiUtils$.update$default$6:()Z
     161: getstatic     #482                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     164: ldc_w         #484                // class water/api/schemas3/ModelsV3
     167: invokevirtual #487                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     170: invokevirtual #683                // Method ai/h2o/sparkling/backend/utils/RestApiUtils$.update:(Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;ZLscala/reflect/ClassTag;)Ljava/lang/Object;
     173: checkcast     #484                // class water/api/schemas3/ModelsV3
     176: astore        8
     178: new           #27                 // class scala/collection/mutable/ArrayOps$ofRef
     181: dup
     182: getstatic     #494                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     185: aload         8
     187: getfield      #498                // Field water/api/schemas3/ModelsV3.models:[Lwater/api/schemas3/ModelSchemaBaseV3;
     190: checkcast     #500                // class "[Ljava/lang/Object;"
     193: invokevirtual #504                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     196: invokespecial #507                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     199: invokevirtual #686                // Method scala/collection/mutable/ArrayOps$ofRef.head:()Ljava/lang/Object;
     202: checkcast     #688                // class water/api/schemas3/ModelSchemaBaseV3
     205: getfield      #691                // Field water/api/schemas3/ModelSchemaBaseV3.model_id:Lwater/api/schemas3/KeyV3$ModelKeyV3;
     208: getfield      #694                // Field water/api/schemas3/KeyV3$ModelKeyV3.name:Ljava/lang/String;
     211: astore        4
     213: new           #696                // class ai/h2o/sparkling/ml/models/H2OBinaryModel
     216: dup
     217: aload         4
     219: invokespecial #697                // Method ai/h2o/sparkling/ml/models/H2OBinaryModel."<init>":(Ljava/lang/String;)V
     222: astore        9
     224: aload         9
     226: getstatic     #546                // Field ai/h2o/sparkling/utils/SparkSessionUtils$.MODULE$:Lai/h2o/sparkling/utils/SparkSessionUtils$;
     229: aload_1
     230: invokevirtual #550                // Method ai/h2o/sparkling/utils/SparkSessionUtils$.readHDFSFile:(Ljava/lang/String;)Ljava/io/InputStream;
     233: invokevirtual #701                // Method ai/h2o/sparkling/ml/models/H2OBinaryModel.setBinaryModel:(Ljava/io/InputStream;)Lai/h2o/sparkling/ml/models/HasBinaryModel;
     236: checkcast     #696                // class ai/h2o/sparkling/ml/models/H2OBinaryModel
     239: areturn

  private void verifyH2OIsRunning();
    Code:
       0: getstatic     #428                // Field ai/h2o/sparkling/H2OContext$.MODULE$:Lai/h2o/sparkling/H2OContext$;
       3: invokevirtual #706                // Method ai/h2o/sparkling/H2OContext$.get:()Lscala/Option;
       6: invokevirtual #709                // Method scala/Option.isEmpty:()Z
       9: ifeq          23
      12: new           #578                // class java/lang/IllegalArgumentException
      15: dup
      16: ldc_w         #711                // String To use features available on a binary model, H2O Context has to be running!
      19: invokespecial #609                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: return

  private java.lang.Object readResolve();
    Code:
       0: getstatic     #714                // Field MODULE$:Lai/h2o/sparkling/ml/models/H2OBinaryModel$;
       3: areturn

  private final void LoggingLevel$lzycompute$2();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #412                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
       8: ifnonnull     23
      11: aload_0
      12: new           #9                  // class ai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$
      15: dup
      16: aload_0
      17: invokespecial #717                // Method ai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$."<init>":(Lai/h2o/sparkling/backend/utils/RestCommunication;)V
      20: putfield      #412                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
      23: aload_1
      24: monitorexit
      25: goto          31
      28: aload_1
      29: monitorexit
      30: athrow
      31: return
    Exception table:
       from    to  target type
           4    23    28   any

  public static final java.lang.String $anonfun$exists$1();
    Code:
       0: getstatic     #428                // Field ai/h2o/sparkling/H2OContext$.MODULE$:Lai/h2o/sparkling/H2OContext$;
       3: invokevirtual #722                // Method ai/h2o/sparkling/H2OContext$.ensure$default$1:()Ljava/lang/String;
       6: areturn

  public static final boolean $anonfun$exists$2(java.lang.String, water.api.schemas3.ModelSchemaBaseV3);
    Code:
       0: aload_1
       1: getfield      #691                // Field water/api/schemas3/ModelSchemaBaseV3.model_id:Lwater/api/schemas3/KeyV3$ModelKeyV3;
       4: getfield      #694                // Field water/api/schemas3/KeyV3$ModelKeyV3.name:Ljava/lang/String;
       7: aload_0
       8: astore_2
       9: dup
      10: ifnonnull     21
      13: pop
      14: aload_2
      15: ifnull        28
      18: goto          32
      21: aload_2
      22: invokevirtual #571                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public static final java.lang.String $anonfun$extractVersionFromModel$2(java.io.DataInputStream);
    Code:
       0: bipush        20
       2: newarray       byte
       4: astore_1
       5: aload_0
       6: aload_1
       7: invokevirtual #735                // Method java/io/DataInputStream.readFully:([B)V
      10: new           #737                // class water/AutoBuffer
      13: dup
      14: aload_1
      15: invokespecial #739                // Method water/AutoBuffer."<init>":([B)V
      18: astore_2
      19: aload_2
      20: invokevirtual #743                // Method water/AutoBuffer.get1U:()I
      23: istore_3
      24: aload_2
      25: invokevirtual #743                // Method water/AutoBuffer.get1U:()I
      28: istore        4
      30: iload_3
      31: bipush        28
      33: if_icmpne     44
      36: iload         4
      38: sipush        237
      41: if_icmpeq     55
      44: new           #745                // class java/lang/RuntimeException
      47: dup
      48: ldc_w         #747                // String Invalid binary model
      51: invokespecial #748                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_2
      56: invokevirtual #751                // Method water/AutoBuffer.getStr:()Ljava/lang/String;
      59: areturn

  public static final java.lang.String $anonfun$extractVersionFromModel$1(java.io.InputStream);
    Code:
       0: getstatic     #541                // Field ai/h2o/sparkling/utils/ScalaUtils$.MODULE$:Lai/h2o/sparkling/utils/ScalaUtils$;
       3: new           #731                // class java/io/DataInputStream
       6: dup
       7: aload_0
       8: invokespecial #763                // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
      11: invokedynamic #768,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
      16: invokevirtual #562                // Method ai/h2o/sparkling/utils/ScalaUtils$.withResource:(Ljava/lang/AutoCloseable;Lscala/Function1;)Ljava/lang/Object;
      19: checkcast     #564                // class java/lang/String
      22: areturn

  public static final java.lang.String $anonfun$read$1();
    Code:
       0: getstatic     #428                // Field ai/h2o/sparkling/H2OContext$.MODULE$:Lai/h2o/sparkling/H2OContext$;
       3: invokevirtual #722                // Method ai/h2o/sparkling/H2OContext$.ensure$default$1:()Ljava/lang/String;
       6: areturn

  private ai.h2o.sparkling.ml.models.H2OBinaryModel$();
    Code:
       0: aload_0
       1: invokespecial #770                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: putstatic     #714                // Field MODULE$:Lai/h2o/sparkling/ml/models/H2OBinaryModel$;
       8: aload_0
       9: invokestatic  #774                // InterfaceMethod org/apache/spark/internal/Logging.$init$:(Lorg/apache/spark/internal/Logging;)V
      12: aload_0
      13: invokestatic  #777                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.$init$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;)V
      16: aload_0
      17: invokestatic  #779                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.$init$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)V
      20: return

  public static final java.lang.Object $anonfun$exists$2$adapted(java.lang.String, water.api.schemas3.ModelSchemaBaseV3);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #781                // Method $anonfun$exists$2:(Ljava/lang/String;Lwater/api/schemas3/ModelSchemaBaseV3;)Z
       5: invokestatic  #787                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       8: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #799,  0            // InvokeDynamic #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
