Compiled from "H2OTargetEncoderModel.scala"
public class ai.h2o.sparkling.ml.models.H2OTargetEncoderModel extends org.apache.spark.ml.Model<ai.h2o.sparkling.ml.models.H2OTargetEncoderModel> implements ai.h2o.sparkling.ml.models.H2OTargetEncoderBase, org.apache.spark.ml.util.MLWritable, ai.h2o.sparkling.backend.utils.RestCommunication {
  private ai.h2o.sparkling.ml.models.H2OTargetEncoderMOJOModel mojoModel;

  private final java.lang.String uid;

  private final scala.Option<ai.h2o.sparkling.ml.internals.H2OModel> targetEncoderModel;

  private volatile ai.h2o.sparkling.backend.utils.RestCommunication$LoggingLevel$ LoggingLevel$module;

  private final java.lang.String groupColumnsSeparator;

  private final ai.h2o.sparkling.ml.params.NullableStringParam foldCol;

  private final org.apache.spark.ml.param.Param<java.lang.String> labelCol;

  private final ai.h2o.sparkling.ml.params.NullableStringArrayArrayParam inputCols;

  private final org.apache.spark.ml.param.StringArrayParam outputCols;

  private final org.apache.spark.ml.param.Param<java.lang.String> holdoutStrategy;

  private final org.apache.spark.ml.param.BooleanParam blendedAvgEnabled;

  private final org.apache.spark.ml.param.DoubleParam blendedAvgInflectionPoint;

  private final org.apache.spark.ml.param.DoubleParam blendedAvgSmoothing;

  private final org.apache.spark.ml.param.DoubleParam noise;

  private final org.apache.spark.ml.param.LongParam noiseSeed;

  private final org.apache.spark.ml.param.Param<java.lang.String> problemType;

  private volatile boolean bitmap$0;

  public <ResultType> ResultType query(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, scala.Enumeration$Value, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #96                 // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;Lscala/Enumeration$Value;Lscala/reflect/ClassTag;)Ljava/lang/Object;
      15: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> query$default$4();
    Code:
       0: aload_0
       1: invokestatic  #111                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> query$default$5();
    Code:
       0: aload_0
       1: invokestatic  #118                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> scala.Enumeration$Value query$default$6();
    Code:
       0: aload_0
       1: invokestatic  #125                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public <ResultType> ResultType update(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, boolean, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aload         7
      12: invokestatic  #134                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;ZLscala/reflect/ClassTag;)Ljava/lang/Object;
      15: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> update$default$4();
    Code:
       0: aload_0
       1: invokestatic  #138                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> update$default$5();
    Code:
       0: aload_0
       1: invokestatic  #142                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> boolean update$default$6();
    Code:
       0: aload_0
       1: invokestatic  #149                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public <ResultType> ResultType delete(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, boolean, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aload         7
      12: invokestatic  #154                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;ZLscala/reflect/ClassTag;)Ljava/lang/Object;
      15: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> delete$default$4();
    Code:
       0: aload_0
       1: invokestatic  #158                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> delete$default$5();
    Code:
       0: aload_0
       1: invokestatic  #162                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> boolean delete$default$6();
    Code:
       0: aload_0
       1: invokestatic  #166                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public java.io.OutputStream insertToNode(ai.h2o.sparkling.backend.NodeDesc, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #174                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insertToNode$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Lai/h2o/sparkling/backend/NodeDesc;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;)Ljava/io/OutputStream;
       9: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> insertToNode$default$4();
    Code:
       0: aload_0
       1: invokestatic  #180                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insertToNode$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public java.io.OutputStream insert(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.Function1<java.io.OutputStream, java.io.OutputStream>, scala.collection.immutable.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #188                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insert$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/Function1;Lscala/collection/immutable/Map;)Ljava/io/OutputStream;
      11: areturn

  public scala.Function1<java.io.OutputStream, java.io.OutputStream> insert$default$4();
    Code:
       0: aload_0
       1: invokestatic  #196                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insert$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Function1;
       4: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> insert$default$5();
    Code:
       0: aload_0
       1: invokestatic  #200                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insert$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public void delete(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #204                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;)V
       7: return

  public <ResultType> ResultType request(java.net.URI, java.lang.String, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, boolean, scala.Enumeration$Value, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: iload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #213                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;ZLscala/Enumeration$Value;Lscala/reflect/ClassTag;)Ljava/lang/Object;
      19: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> request$default$5();
    Code:
       0: aload_0
       1: invokestatic  #217                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> request$default$6();
    Code:
       0: aload_0
       1: invokestatic  #221                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> boolean request$default$7();
    Code:
       0: aload_0
       1: invokestatic  #225                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$7$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public <ResultType> scala.Enumeration$Value request$default$8();
    Code:
       0: aload_0
       1: invokestatic  #229                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$8$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public <ResultType> ResultType deserialize(java.lang.String, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #238                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.deserialize$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/lang/String;Lscala/collection/Seq;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       7: areturn

  public <ResultType> ResultType deserialize(com.google.gson.JsonElement, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #244                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.deserialize$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Lcom/google/gson/JsonElement;Lscala/collection/Seq;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       7: areturn

  public com.google.gson.JsonObject deserializeAsJsonObject(java.lang.String, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #252                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.deserializeAsJsonObject$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/lang/String;Lscala/collection/Seq;)Lcom/google/gson/JsonObject;
       6: areturn

  public void downloadBinaryURLContent(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #259                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.downloadBinaryURLContent$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Ljava/io/File;)V
       9: return

  public void downloadStringURLContent(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #264                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.downloadStringURLContent$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Ljava/io/File;)V
       9: return

  public java.io.InputStream readURLContent(java.net.URI, java.lang.String, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, boolean, scala.Option<java.lang.String>, scala.Enumeration$Value);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #271                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;ZLscala/Option;Lscala/Enumeration$Value;)Ljava/io/InputStream;
      17: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> readURLContent$default$5();
    Code:
       0: aload_0
       1: invokestatic  #275                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public boolean readURLContent$default$6();
    Code:
       0: aload_0
       1: invokestatic  #279                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public scala.Option<java.lang.String> readURLContent$default$7();
    Code:
       0: aload_0
       1: invokestatic  #286                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$7$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Option;
       4: areturn

  public scala.Enumeration$Value readURLContent$default$8();
    Code:
       0: aload_0
       1: invokestatic  #290                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$8$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public void checkResponseCode(java.net.HttpURLConnection, scala.Enumeration$Value);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #297                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.checkResponseCode$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/HttpURLConnection;Lscala/Enumeration$Value;)V
       6: return

  public scala.Enumeration$Value checkResponseCode$default$2();
    Code:
       0: aload_0
       1: invokestatic  #302                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.checkResponseCode$default$2$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public java.lang.String stringifyPrimitiveParam(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #311                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyPrimitiveParam$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  public boolean isPrimitiveType(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #318                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.isPrimitiveType$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Z
       5: ireturn

  public java.lang.String stringifyArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #323                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyArray$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringifyMap(scala.collection.immutable.Map<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #331                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyMap$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Lscala/collection/immutable/Map;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringifyPair(scala.Tuple2<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #339                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyPair$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Lscala/Tuple2;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringify(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #344                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringify$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringifyParams(scala.collection.immutable.Map<java.lang.String, java.lang.Object>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #351                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyParams$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Lscala/collection/immutable/Map;Z)Ljava/lang/String;
       6: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> stringifyParams$default$1();
    Code:
       0: aload_0
       1: invokestatic  #356                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyParams$default$1$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;)Lscala/collection/immutable/Map;
       4: areturn

  public boolean stringifyParams$default$2();
    Code:
       0: aload_0
       1: invokestatic  #361                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyParams$default$2$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;)Z
       4: ireturn

  public void save(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #370                // InterfaceMethod org/apache/spark/ml/util/MLWritable.save$:(Lorg/apache/spark/ml/util/MLWritable;Ljava/lang/String;)V
       5: return

  public org.apache.spark.sql.types.StructType transformSchema(org.apache.spark.sql.types.StructType);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #377                // InterfaceMethod ai/h2o/sparkling/ml/models/H2OTargetEncoderBase.transformSchema$:(Lai/h2o/sparkling/ml/models/H2OTargetEncoderBase;Lorg/apache/spark/sql/types/StructType;)Lorg/apache/spark/sql/types/StructType;
       5: areturn

  public org.apache.spark.sql.Dataset<org.apache.spark.sql.Row> createVectorColumn(org.apache.spark.sql.Dataset<org.apache.spark.sql.Row>, java.lang.String, java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #388                // InterfaceMethod ai/h2o/sparkling/ml/models/H2OTargetEncoderBase.createVectorColumn$:(Lai/h2o/sparkling/ml/models/H2OTargetEncoderBase;Lorg/apache/spark/sql/Dataset;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/spark/sql/Dataset;
       7: areturn

  public java.lang.String getFoldCol();
    Code:
       0: aload_0
       1: invokestatic  #398                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams.getFoldCol$:(Lai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getLabelCol();
    Code:
       0: aload_0
       1: invokestatic  #402                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams.getLabelCol$:(Lai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String[][] getInputCols();
    Code:
       0: aload_0
       1: invokestatic  #408                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams.getInputCols$:(Lai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams;)[[Ljava/lang/String;
       4: areturn

  public java.lang.String[] getOutputCols();
    Code:
       0: aload_0
       1: invokestatic  #414                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams.getOutputCols$:(Lai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams;)[Ljava/lang/String;
       4: areturn

  public java.lang.String getHoldoutStrategy();
    Code:
       0: aload_0
       1: invokestatic  #418                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams.getHoldoutStrategy$:(Lai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams;)Ljava/lang/String;
       4: areturn

  public boolean getBlendedAvgEnabled();
    Code:
       0: aload_0
       1: invokestatic  #423                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams.getBlendedAvgEnabled$:(Lai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams;)Z
       4: ireturn

  public double getBlendedAvgInflectionPoint();
    Code:
       0: aload_0
       1: invokestatic  #429                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams.getBlendedAvgInflectionPoint$:(Lai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams;)D
       4: dreturn

  public double getBlendedAvgSmoothing();
    Code:
       0: aload_0
       1: invokestatic  #433                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams.getBlendedAvgSmoothing$:(Lai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams;)D
       4: dreturn

  public double getNoise();
    Code:
       0: aload_0
       1: invokestatic  #437                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams.getNoise$:(Lai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams;)D
       4: dreturn

  public long getNoiseSeed();
    Code:
       0: aload_0
       1: invokestatic  #443                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams.getNoiseSeed$:(Lai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams;)J
       4: lreturn

  public java.lang.String getProblemType();
    Code:
       0: aload_0
       1: invokestatic  #447                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams.getProblemType$:(Lai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams;)Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.backend.utils.RestCommunication$LoggingLevel$ LoggingLevel();
    Code:
       0: aload_0
       1: getfield      #451                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #455                // Method LoggingLevel$lzycompute$1:()V
      11: aload_0
      12: getfield      #451                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
      15: areturn

  public java.lang.String groupColumnsSeparator();
    Code:
       0: aload_0
       1: getfield      #457                // Field groupColumnsSeparator:Ljava/lang/String;
       4: areturn

  public final ai.h2o.sparkling.ml.params.NullableStringParam foldCol();
    Code:
       0: aload_0
       1: getfield      #460                // Field foldCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public final org.apache.spark.ml.param.Param<java.lang.String> labelCol();
    Code:
       0: aload_0
       1: getfield      #464                // Field labelCol:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public final ai.h2o.sparkling.ml.params.NullableStringArrayArrayParam inputCols();
    Code:
       0: aload_0
       1: getfield      #467                // Field inputCols:Lai/h2o/sparkling/ml/params/NullableStringArrayArrayParam;
       4: areturn

  public final org.apache.spark.ml.param.StringArrayParam outputCols();
    Code:
       0: aload_0
       1: getfield      #470                // Field outputCols:Lorg/apache/spark/ml/param/StringArrayParam;
       4: areturn

  public final org.apache.spark.ml.param.Param<java.lang.String> holdoutStrategy();
    Code:
       0: aload_0
       1: getfield      #472                // Field holdoutStrategy:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public final org.apache.spark.ml.param.BooleanParam blendedAvgEnabled();
    Code:
       0: aload_0
       1: getfield      #475                // Field blendedAvgEnabled:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public final org.apache.spark.ml.param.DoubleParam blendedAvgInflectionPoint();
    Code:
       0: aload_0
       1: getfield      #478                // Field blendedAvgInflectionPoint:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public final org.apache.spark.ml.param.DoubleParam blendedAvgSmoothing();
    Code:
       0: aload_0
       1: getfield      #480                // Field blendedAvgSmoothing:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public final org.apache.spark.ml.param.DoubleParam noise();
    Code:
       0: aload_0
       1: getfield      #482                // Field noise:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public final org.apache.spark.ml.param.LongParam noiseSeed();
    Code:
       0: aload_0
       1: getfield      #485                // Field noiseSeed:Lorg/apache/spark/ml/param/LongParam;
       4: areturn

  public final org.apache.spark.ml.param.Param<java.lang.String> problemType();
    Code:
       0: aload_0
       1: getfield      #487                // Field problemType:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public void ai$h2o$sparkling$ml$params$H2OTargetEncoderMOJOParams$_setter_$groupColumnsSeparator_$eq(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #457                // Field groupColumnsSeparator:Ljava/lang/String;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OTargetEncoderMOJOParams$_setter_$foldCol_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #460                // Field foldCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OTargetEncoderMOJOParams$_setter_$labelCol_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #464                // Field labelCol:Lorg/apache/spark/ml/param/Param;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OTargetEncoderMOJOParams$_setter_$inputCols_$eq(ai.h2o.sparkling.ml.params.NullableStringArrayArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #467                // Field inputCols:Lai/h2o/sparkling/ml/params/NullableStringArrayArrayParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OTargetEncoderMOJOParams$_setter_$outputCols_$eq(org.apache.spark.ml.param.StringArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #470                // Field outputCols:Lorg/apache/spark/ml/param/StringArrayParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OTargetEncoderMOJOParams$_setter_$holdoutStrategy_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #472                // Field holdoutStrategy:Lorg/apache/spark/ml/param/Param;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OTargetEncoderMOJOParams$_setter_$blendedAvgEnabled_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #475                // Field blendedAvgEnabled:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OTargetEncoderMOJOParams$_setter_$blendedAvgInflectionPoint_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #478                // Field blendedAvgInflectionPoint:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OTargetEncoderMOJOParams$_setter_$blendedAvgSmoothing_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #480                // Field blendedAvgSmoothing:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OTargetEncoderMOJOParams$_setter_$noise_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #482                // Field noise:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OTargetEncoderMOJOParams$_setter_$noiseSeed_$eq(org.apache.spark.ml.param.LongParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #485                // Field noiseSeed:Lorg/apache/spark/ml/param/LongParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OTargetEncoderMOJOParams$_setter_$problemType_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #487                // Field problemType:Lorg/apache/spark/ml/param/Param;
       5: return

  public java.lang.String uid();
    Code:
       0: aload_0
       1: getfield      #510                // Field uid:Ljava/lang/String;
       4: areturn

  private ai.h2o.sparkling.ml.models.H2OTargetEncoderMOJOModel mojoModel$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #514                // Field bitmap$0:Z
       8: ifne          146
      11: aload_0
      12: new           #516                // class ai/h2o/sparkling/ml/models/H2OTargetEncoderMOJOModel
      15: dup
      16: invokespecial #519                // Method ai/h2o/sparkling/ml/models/H2OTargetEncoderMOJOModel."<init>":()V
      19: astore_3
      20: aload_0
      21: aload_3
      22: aload_0
      23: invokevirtual #523                // Method copyValues$default$2:()Lorg/apache/spark/ml/param/ParamMap;
      26: invokevirtual #527                // Method copyValues:(Lorg/apache/spark/ml/param/Params;Lorg/apache/spark/ml/param/ParamMap;)Lorg/apache/spark/ml/param/Params;
      29: pop
      30: aload_0
      31: getfield      #529                // Field targetEncoderModel:Lscala/Option;
      34: astore        4
      36: aload         4
      38: instanceof    #531                // class scala/Some
      41: ifeq          81
      44: aload         4
      46: checkcast     #531                // class scala/Some
      49: astore        5
      51: aload         5
      53: invokevirtual #534                // Method scala/Some.value:()Ljava/lang/Object;
      56: checkcast     #536                // class ai/h2o/sparkling/ml/internals/H2OModel
      59: astore        6
      61: aload         6
      63: invokevirtual #540                // Method ai/h2o/sparkling/ml/internals/H2OModel.downloadMojo:()Ljava/io/File;
      66: astore        7
      68: aload_3
      69: aload         7
      71: invokevirtual #544                // Method ai/h2o/sparkling/ml/models/H2OTargetEncoderMOJOModel.setMojo:(Ljava/io/File;)Lai/h2o/sparkling/ml/models/HasMojo;
      74: checkcast     #516                // class ai/h2o/sparkling/ml/models/H2OTargetEncoderMOJOModel
      77: astore_1
      78: goto          137
      81: goto          84
      84: getstatic     #550                // Field scala/None$.MODULE$:Lscala/None$;
      87: aload         4
      89: invokevirtual #555                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      92: ifeq          124
      95: ldc_w         #557                // String emptyTargetEncoder
      98: ldc_w         #559                // String .mojo
     101: invokestatic  #565                // Method java/io/File.createTempFile:(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
     104: astore        8
     106: aload         8
     108: invokevirtual #568                // Method java/io/File.deleteOnExit:()V
     111: aload_3
     112: aload         8
     114: invokevirtual #544                // Method ai/h2o/sparkling/ml/models/H2OTargetEncoderMOJOModel.setMojo:(Ljava/io/File;)Lai/h2o/sparkling/ml/models/HasMojo;
     117: checkcast     #516                // class ai/h2o/sparkling/ml/models/H2OTargetEncoderMOJOModel
     120: astore_1
     121: goto          137
     124: goto          127
     127: new           #570                // class scala/MatchError
     130: dup
     131: aload         4
     133: invokespecial #573                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     136: athrow
     137: aload_1
     138: putfield      #575                // Field mojoModel:Lai/h2o/sparkling/ml/models/H2OTargetEncoderMOJOModel;
     141: aload_0
     142: iconst_1
     143: putfield      #514                // Field bitmap$0:Z
     146: aload_2
     147: monitorexit
     148: goto          154
     151: aload_2
     152: monitorexit
     153: athrow
     154: aload_0
     155: getfield      #575                // Field mojoModel:Lai/h2o/sparkling/ml/models/H2OTargetEncoderMOJOModel;
     158: areturn
    Exception table:
       from    to  target type
           4   146   151   any

  public ai.h2o.sparkling.ml.models.H2OTargetEncoderMOJOModel mojoModel();
    Code:
       0: aload_0
       1: getfield      #514                // Field bitmap$0:Z
       4: ifne          14
       7: aload_0
       8: invokespecial #585                // Method mojoModel$lzycompute:()Lai/h2o/sparkling/ml/models/H2OTargetEncoderMOJOModel;
      11: goto          18
      14: aload_0
      15: getfield      #575                // Field mojoModel:Lai/h2o/sparkling/ml/models/H2OTargetEncoderMOJOModel;
      18: areturn

  public org.apache.spark.sql.Dataset<org.apache.spark.sql.Row> transform(org.apache.spark.sql.Dataset<?>);
    Code:
       0: aload_0
       1: invokespecial #592                // Method inTrainingMode:()Z
       4: ifeq          15
       7: aload_0
       8: aload_1
       9: invokevirtual #595                // Method transformTrainingDataset:(Lorg/apache/spark/sql/Dataset;)Lorg/apache/spark/sql/Dataset;
      12: goto          23
      15: aload_0
      16: invokevirtual #597                // Method mojoModel:()Lai/h2o/sparkling/ml/models/H2OTargetEncoderMOJOModel;
      19: aload_1
      20: invokevirtual #599                // Method ai/h2o/sparkling/ml/models/H2OTargetEncoderMOJOModel.transform:(Lorg/apache/spark/sql/Dataset;)Lorg/apache/spark/sql/Dataset;
      23: areturn

  public org.apache.spark.sql.Dataset<org.apache.spark.sql.Row> transformTrainingDataset(org.apache.spark.sql.Dataset<?>);
    Code:
       0: new           #43                 // class scala/collection/mutable/ArrayOps$ofRef
       3: dup
       4: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: aload_0
       8: invokevirtual #608                // Method getInputCols:()[[Ljava/lang/String;
      11: checkcast     #610                // class "[Ljava/lang/Object;"
      14: invokevirtual #614                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
      17: invokespecial #617                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
      20: invokevirtual #620                // Method scala/collection/mutable/ArrayOps$ofRef.isEmpty:()Z
      23: ifeq          33
      26: aload_1
      27: invokevirtual #624                // Method org/apache/spark/sql/Dataset.toDF:()Lorg/apache/spark/sql/Dataset;
      30: goto          1057
      33: getstatic     #629                // Field ai/h2o/sparkling/H2OContext$.MODULE$:Lai/h2o/sparkling/H2OContext$;
      36: invokedynamic #650,  0            // InvokeDynamic #0:apply:()Lscala/Function0;
      41: invokevirtual #654                // Method ai/h2o/sparkling/H2OContext$.ensure:(Lscala/Function0;)Lai/h2o/sparkling/H2OContext;
      44: astore_2
      45: new           #656                // class java/lang/StringBuilder
      48: dup
      49: ldc_w         #657                // int 13
      52: invokespecial #660                // Method java/lang/StringBuilder."<init>":(I)V
      55: aload_0
      56: invokevirtual #664                // Method getClass:()Ljava/lang/Class;
      59: invokevirtual #669                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      62: invokevirtual #673                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: ldc_w         #675                // String _temporary_id
      68: invokevirtual #673                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: invokevirtual #678                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: astore_3
      75: aload_1
      76: aload_3
      77: getstatic     #683                // Field org/apache/spark/sql/functions$.MODULE$:Lorg/apache/spark/sql/functions$;
      80: invokevirtual #687                // Method org/apache/spark/sql/functions$.monotonically_increasing_id:()Lorg/apache/spark/sql/Column;
      83: invokevirtual #691                // Method org/apache/spark/sql/Dataset.withColumn:(Ljava/lang/String;Lorg/apache/spark/sql/Column;)Lorg/apache/spark/sql/Dataset;
      86: astore        4
      88: getstatic     #696                // Field ai/h2o/sparkling/ml/utils/SchemaUtils$.MODULE$:Lai/h2o/sparkling/ml/utils/SchemaUtils$;
      91: aload         4
      93: invokevirtual #699                // Method ai/h2o/sparkling/ml/utils/SchemaUtils$.flattenDataFrame:(Lorg/apache/spark/sql/Dataset;)Lorg/apache/spark/sql/Dataset;
      96: astore        5
      98: new           #43                 // class scala/collection/mutable/ArrayOps$ofRef
     101: dup
     102: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     105: new           #43                 // class scala/collection/mutable/ArrayOps$ofRef
     108: dup
     109: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     112: aload_0
     113: invokevirtual #608                // Method getInputCols:()[[Ljava/lang/String;
     116: checkcast     #610                // class "[Ljava/lang/Object;"
     119: invokevirtual #614                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     122: invokespecial #617                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     125: invokedynamic #709,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
     130: getstatic     #714                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     133: ldc_w         #716                // class java/lang/String
     136: invokevirtual #719                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     139: invokevirtual #723                // Method scala/collection/mutable/ArrayOps$ofRef.flatten:(Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
     142: checkcast     #610                // class "[Ljava/lang/Object;"
     145: invokevirtual #614                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     148: invokespecial #617                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     151: invokevirtual #726                // Method scala/collection/mutable/ArrayOps$ofRef.distinct:()Ljava/lang/Object;
     154: checkcast     #727                // class "[Ljava/lang/String;"
     157: astore        6
     159: new           #43                 // class scala/collection/mutable/ArrayOps$ofRef
     162: dup
     163: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     166: aload         6
     168: checkcast     #610                // class "[Ljava/lang/Object;"
     171: invokevirtual #614                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     174: invokespecial #617                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     177: new           #43                 // class scala/collection/mutable/ArrayOps$ofRef
     180: dup
     181: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     184: new           #43                 // class scala/collection/mutable/ArrayOps$ofRef
     187: dup
     188: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     191: iconst_3
     192: anewarray     #716                // class java/lang/String
     195: dup
     196: iconst_0
     197: aload_0
     198: invokevirtual #729                // Method getLabelCol:()Ljava/lang/String;
     201: aastore
     202: dup
     203: iconst_1
     204: aload_0
     205: invokevirtual #731                // Method getFoldCol:()Ljava/lang/String;
     208: aastore
     209: dup
     210: iconst_2
     211: aload_3
     212: aastore
     213: checkcast     #610                // class "[Ljava/lang/Object;"
     216: checkcast     #610                // class "[Ljava/lang/Object;"
     219: invokevirtual #614                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     222: invokespecial #617                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     225: invokedynamic #738,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
     230: getstatic     #743                // Field scala/Array$.MODULE$:Lscala/Array$;
     233: getstatic     #714                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     236: ldc_w         #716                // class java/lang/String
     239: invokevirtual #719                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     242: invokevirtual #747                // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
     245: invokevirtual #751                // Method scala/collection/mutable/ArrayOps$ofRef.flatMap:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     248: checkcast     #610                // class "[Ljava/lang/Object;"
     251: invokevirtual #614                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     254: invokespecial #617                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     257: getstatic     #743                // Field scala/Array$.MODULE$:Lscala/Array$;
     260: getstatic     #714                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     263: ldc_w         #716                // class java/lang/String
     266: invokevirtual #719                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     269: invokevirtual #747                // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
     272: invokevirtual #755                // Method scala/collection/mutable/ArrayOps$ofRef.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     275: checkcast     #727                // class "[Ljava/lang/String;"
     278: astore        7
     280: aload         5
     282: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     285: new           #43                 // class scala/collection/mutable/ArrayOps$ofRef
     288: dup
     289: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     292: aload         7
     294: checkcast     #610                // class "[Ljava/lang/Object;"
     297: invokevirtual #614                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     300: invokespecial #617                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     303: invokedynamic #762,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
     308: getstatic     #743                // Field scala/Array$.MODULE$:Lscala/Array$;
     311: getstatic     #714                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     314: ldc_w         #764                // class org/apache/spark/sql/Column
     317: invokevirtual #719                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     320: invokevirtual #747                // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
     323: invokevirtual #766                // Method scala/collection/mutable/ArrayOps$ofRef.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     326: checkcast     #610                // class "[Ljava/lang/Object;"
     329: invokevirtual #770                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     332: invokevirtual #774                // Method org/apache/spark/sql/Dataset.select:(Lscala/collection/Seq;)Lorg/apache/spark/sql/Dataset;
     335: astore        8
     337: aload_2
     338: aload         8
     340: invokevirtual #780                // Method ai/h2o/sparkling/H2OContext.asH2OFrame:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/H2OFrame;
     343: astore        9
     345: aload_0
     346: invokevirtual #782                // Method getProblemType:()Ljava/lang/String;
     349: getstatic     #788                // Field ai/h2o/sparkling/ml/params/H2OTargetEncoderProblemType.Regression:Lai/h2o/sparkling/ml/params/H2OTargetEncoderProblemType;
     352: invokevirtual #790                // Method ai/h2o/sparkling/ml/params/H2OTargetEncoderProblemType.name:()Ljava/lang/String;
     355: astore        11
     357: dup
     358: ifnonnull     370
     361: pop
     362: aload         11
     364: ifnull        378
     367: goto          383
     370: aload         11
     372: invokevirtual #555                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     375: ifeq          383
     378: aload         6
     380: goto          436
     383: new           #43                 // class scala/collection/mutable/ArrayOps$ofRef
     386: dup
     387: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     390: aload         6
     392: checkcast     #610                // class "[Ljava/lang/Object;"
     395: invokevirtual #614                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     398: invokespecial #617                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     401: new           #792                // class scala/collection/immutable/$colon$colon
     404: dup
     405: aload_0
     406: invokevirtual #729                // Method getLabelCol:()Ljava/lang/String;
     409: getstatic     #797                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
     412: invokespecial #800                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
     415: getstatic     #743                // Field scala/Array$.MODULE$:Lscala/Array$;
     418: getstatic     #714                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     421: ldc_w         #716                // class java/lang/String
     424: invokevirtual #719                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     427: invokevirtual #747                // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
     430: invokevirtual #755                // Method scala/collection/mutable/ArrayOps$ofRef.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     433: checkcast     #727                // class "[Ljava/lang/String;"
     436: astore        10
     438: aload         9
     440: aload         10
     442: invokevirtual #806                // Method ai/h2o/sparkling/H2OFrame.convertColumnsToCategorical:([Ljava/lang/String;)Lai/h2o/sparkling/H2OFrame;
     445: pop
     446: aload_2
     447: invokevirtual #810                // Method ai/h2o/sparkling/H2OContext.getConf:()Lai/h2o/sparkling/H2OConf;
     450: astore        12
     452: getstatic     #815                // Field ai/h2o/sparkling/backend/utils/RestApiUtils$.MODULE$:Lai/h2o/sparkling/backend/utils/RestApiUtils$;
     455: aload         12
     457: invokevirtual #819                // Method ai/h2o/sparkling/backend/utils/RestApiUtils$.getClusterEndpoint:(Lai/h2o/sparkling/H2OConf;)Ljava/net/URI;
     460: astore        13
     462: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     465: invokevirtual #823                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
     468: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     471: bipush        7
     473: anewarray     #825                // class scala/Tuple2
     476: dup
     477: iconst_0
     478: getstatic     #828                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     481: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     484: ldc_w         #829                // String model
     487: invokevirtual #832                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     490: aload_0
     491: getfield      #529                // Field targetEncoderModel:Lscala/Option;
     494: invokevirtual #835                // Method scala/Option.get:()Ljava/lang/Object;
     497: checkcast     #536                // class ai/h2o/sparkling/ml/internals/H2OModel
     500: invokevirtual #838                // Method ai/h2o/sparkling/ml/internals/H2OModel.modelId:()Ljava/lang/String;
     503: invokevirtual #842                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     506: aastore
     507: dup
     508: iconst_1
     509: getstatic     #828                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     512: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     515: ldc_w         #844                // String frame
     518: invokevirtual #832                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     521: aload         9
     523: invokevirtual #847                // Method ai/h2o/sparkling/H2OFrame.frameId:()Ljava/lang/String;
     526: invokevirtual #842                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     529: aastore
     530: dup
     531: iconst_2
     532: getstatic     #828                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     535: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     538: ldc_w         #848                // String noise
     541: invokevirtual #832                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     544: aload_0
     545: invokevirtual #850                // Method getNoise:()D
     548: invokestatic  #856                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
     551: invokevirtual #842                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     554: aastore
     555: dup
     556: iconst_3
     557: getstatic     #828                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     560: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     563: ldc_w         #858                // String blending
     566: invokevirtual #832                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     569: aload_0
     570: invokevirtual #860                // Method getBlendedAvgEnabled:()Z
     573: invokestatic  #864                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
     576: invokevirtual #842                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     579: aastore
     580: dup
     581: iconst_4
     582: getstatic     #828                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     585: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     588: ldc_w         #866                // String inflection_point
     591: invokevirtual #832                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     594: aload_0
     595: invokevirtual #868                // Method getBlendedAvgInflectionPoint:()D
     598: invokestatic  #856                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
     601: invokevirtual #842                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     604: aastore
     605: dup
     606: iconst_5
     607: getstatic     #828                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     610: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     613: ldc_w         #870                // String smoothing
     616: invokevirtual #832                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     619: aload_0
     620: invokevirtual #872                // Method getBlendedAvgSmoothing:()D
     623: invokestatic  #856                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
     626: invokevirtual #842                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     629: aastore
     630: dup
     631: bipush        6
     633: getstatic     #828                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     636: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     639: ldc_w         #874                // String as_training
     642: invokevirtual #832                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     645: iconst_1
     646: invokestatic  #864                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
     649: invokevirtual #842                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     652: aastore
     653: checkcast     #610                // class "[Ljava/lang/Object;"
     656: invokevirtual #770                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     659: invokevirtual #879                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
     662: checkcast     #881                // class scala/collection/immutable/Map
     665: astore        14
     667: aload_0
     668: aload         13
     670: ldc_w         #883                // String GET
     673: ldc_w         #885                // String /3/TargetEncoderTransform
     676: aload         12
     678: aload         14
     680: aload_0
     681: invokevirtual #887                // Method request$default$6:()Lscala/collection/Seq;
     684: aload_0
     685: invokevirtual #889                // Method request$default$7:()Z
     688: aload_0
     689: invokevirtual #891                // Method request$default$8:()Lscala/Enumeration$Value;
     692: getstatic     #714                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     695: ldc           #48                 // class water/api/schemas3/KeyV3$FrameKeyV3
     697: invokevirtual #719                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     700: invokevirtual #893                // Method request:(Ljava/net/URI;Ljava/lang/String;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;ZLscala/Enumeration$Value;Lscala/reflect/ClassTag;)Ljava/lang/Object;
     703: checkcast     #48                 // class water/api/schemas3/KeyV3$FrameKeyV3
     706: astore        15
     708: getstatic     #898                // Field ai/h2o/sparkling/H2OFrame$.MODULE$:Lai/h2o/sparkling/H2OFrame$;
     711: aload         15
     713: getfield      #900                // Field water/api/schemas3/KeyV3$FrameKeyV3.name:Ljava/lang/String;
     716: invokevirtual #903                // Method ai/h2o/sparkling/H2OFrame$.apply:(Ljava/lang/String;)Lai/h2o/sparkling/H2OFrame;
     719: astore        16
     721: aload_0
     722: aload_0
     723: getfield      #529                // Field targetEncoderModel:Lscala/Option;
     726: invokevirtual #835                // Method scala/Option.get:()Ljava/lang/Object;
     729: checkcast     #536                // class ai/h2o/sparkling/ml/internals/H2OModel
     732: invokevirtual #838                // Method ai/h2o/sparkling/ml/internals/H2OModel.modelId:()Ljava/lang/String;
     735: invokespecial #907                // Method getInOutMapping:(Ljava/lang/String;)Lscala/collection/immutable/Map;
     738: astore        17
     740: new           #43                 // class scala/collection/mutable/ArrayOps$ofRef
     743: dup
     744: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     747: aload_0
     748: invokevirtual #608                // Method getInputCols:()[[Ljava/lang/String;
     751: checkcast     #610                // class "[Ljava/lang/Object;"
     754: invokevirtual #614                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     757: invokespecial #617                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     760: aload         17
     762: invokedynamic #917,  0            // InvokeDynamic #4:apply:(Lscala/collection/immutable/Map;)Lscala/Function1;
     767: getstatic     #743                // Field scala/Array$.MODULE$:Lscala/Array$;
     770: getstatic     #714                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     773: ldc_w         #919                // class scala/collection/Seq
     776: invokevirtual #719                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     779: invokevirtual #747                // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
     782: invokevirtual #766                // Method scala/collection/mutable/ArrayOps$ofRef.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     785: checkcast     #921                // class "[Lscala/collection/Seq;"
     788: astore        18
     790: new           #43                 // class scala/collection/mutable/ArrayOps$ofRef
     793: dup
     794: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     797: new           #43                 // class scala/collection/mutable/ArrayOps$ofRef
     800: dup
     801: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     804: aload         18
     806: checkcast     #610                // class "[Ljava/lang/Object;"
     809: invokevirtual #614                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     812: invokespecial #617                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     815: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     818: invokevirtual #925                // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
     821: getstatic     #714                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     824: ldc_w         #716                // class java/lang/String
     827: invokevirtual #719                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     830: invokevirtual #723                // Method scala/collection/mutable/ArrayOps$ofRef.flatten:(Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
     833: checkcast     #610                // class "[Ljava/lang/Object;"
     836: invokevirtual #614                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     839: invokespecial #617                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     842: invokevirtual #726                // Method scala/collection/mutable/ArrayOps$ofRef.distinct:()Ljava/lang/Object;
     845: checkcast     #727                // class "[Ljava/lang/String;"
     848: astore        19
     850: new           #43                 // class scala/collection/mutable/ArrayOps$ofRef
     853: dup
     854: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     857: aload         19
     859: checkcast     #610                // class "[Ljava/lang/Object;"
     862: invokevirtual #614                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     865: invokespecial #617                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     868: new           #43                 // class scala/collection/mutable/ArrayOps$ofRef
     871: dup
     872: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     875: iconst_1
     876: anewarray     #716                // class java/lang/String
     879: dup
     880: iconst_0
     881: aload_3
     882: aastore
     883: checkcast     #610                // class "[Ljava/lang/Object;"
     886: checkcast     #610                // class "[Ljava/lang/Object;"
     889: invokevirtual #614                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     892: invokespecial #617                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     895: getstatic     #743                // Field scala/Array$.MODULE$:Lscala/Array$;
     898: getstatic     #714                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     901: ldc_w         #716                // class java/lang/String
     904: invokevirtual #719                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     907: invokevirtual #747                // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
     910: invokevirtual #755                // Method scala/collection/mutable/ArrayOps$ofRef.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     913: checkcast     #727                // class "[Ljava/lang/String;"
     916: astore        20
     918: aload         16
     920: aload         20
     922: invokevirtual #928                // Method ai/h2o/sparkling/H2OFrame.subframe:([Ljava/lang/String;)Lai/h2o/sparkling/H2OFrame;
     925: astore        21
     927: aload_2
     928: aload         21
     930: invokevirtual #847                // Method ai/h2o/sparkling/H2OFrame.frameId:()Ljava/lang/String;
     933: invokevirtual #932                // Method ai/h2o/sparkling/H2OContext.asSparkFrame:(Ljava/lang/String;)Lorg/apache/spark/sql/Dataset;
     936: astore        22
     938: aload         9
     940: invokevirtual #934                // Method ai/h2o/sparkling/H2OFrame.delete:()V
     943: aload         16
     945: invokevirtual #934                // Method ai/h2o/sparkling/H2OFrame.delete:()V
     948: new           #43                 // class scala/collection/mutable/ArrayOps$ofRef
     951: dup
     952: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     955: new           #43                 // class scala/collection/mutable/ArrayOps$ofRef
     958: dup
     959: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     962: aload_0
     963: invokevirtual #936                // Method getOutputCols:()[Ljava/lang/String;
     966: checkcast     #610                // class "[Ljava/lang/Object;"
     969: invokevirtual #614                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     972: invokespecial #617                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     975: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     978: aload         18
     980: checkcast     #610                // class "[Ljava/lang/Object;"
     983: invokevirtual #770                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     986: getstatic     #743                // Field scala/Array$.MODULE$:Lscala/Array$;
     989: getstatic     #714                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     992: ldc_w         #825                // class scala/Tuple2
     995: invokevirtual #719                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     998: invokevirtual #747                // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
    1001: invokevirtual #940                // Method scala/collection/mutable/ArrayOps$ofRef.zip:(Lscala/collection/GenIterable;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
    1004: checkcast     #610                // class "[Ljava/lang/Object;"
    1007: invokevirtual #614                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
    1010: invokespecial #617                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
    1013: aload         22
    1015: aload_0
    1016: invokedynamic #952,  0            // InvokeDynamic #5:apply:(Lai/h2o/sparkling/ml/models/H2OTargetEncoderModel;)Lscala/Function2;
    1021: invokevirtual #956                // Method scala/collection/mutable/ArrayOps$ofRef.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
    1024: checkcast     #601                // class org/apache/spark/sql/Dataset
    1027: astore        23
    1029: aload         4
    1031: aload         23
    1033: new           #792                // class scala/collection/immutable/$colon$colon
    1036: dup
    1037: aload_3
    1038: getstatic     #797                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
    1041: invokespecial #800                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
    1044: checkcast     #919                // class scala/collection/Seq
    1047: ldc_w         #958                // String left
    1050: invokevirtual #962                // Method org/apache/spark/sql/Dataset.join:(Lorg/apache/spark/sql/Dataset;Lscala/collection/Seq;Ljava/lang/String;)Lorg/apache/spark/sql/Dataset;
    1053: aload_3
    1054: invokevirtual #965                // Method org/apache/spark/sql/Dataset.drop:(Ljava/lang/String;)Lorg/apache/spark/sql/Dataset;
    1057: areturn

  private scala.collection.immutable.Map<scala.collection.Seq<java.lang.String>, scala.collection.Seq<java.lang.String>> getInOutMapping(java.lang.String);
    Code:
       0: getstatic     #992                // Field ai/h2o/sparkling/ml/internals/H2OModel$.MODULE$:Lai/h2o/sparkling/ml/internals/H2OModel$;
       3: aload_1
       4: invokevirtual #995                // Method ai/h2o/sparkling/ml/internals/H2OModel$.apply:(Ljava/lang/String;)Lai/h2o/sparkling/ml/internals/H2OModel;
       7: invokevirtual #999                // Method ai/h2o/sparkling/ml/internals/H2OModel.getDetails:()Lcom/google/gson/JsonObject;
      10: astore_2
      11: getstatic     #1004               // Field scala/collection/JavaConverters$.MODULE$:Lscala/collection/JavaConverters$;
      14: aload_2
      15: ldc_w         #1005               // String output
      18: invokevirtual #1011               // Method com/google/gson/JsonObject.getAsJsonObject:(Ljava/lang/String;)Lcom/google/gson/JsonObject;
      21: ldc_w         #1013               // String input_to_output_columns
      24: invokevirtual #1017               // Method com/google/gson/JsonObject.getAsJsonArray:(Ljava/lang/String;)Lcom/google/gson/JsonArray;
      27: invokevirtual #1023               // Method com/google/gson/JsonArray.iterator:()Ljava/util/Iterator;
      30: invokevirtual #1027               // Method scala/collection/JavaConverters$.asScalaIteratorConverter:(Ljava/util/Iterator;)Lscala/collection/convert/Decorators$AsScala;
      33: invokevirtual #1030               // Method scala/collection/convert/Decorators$AsScala.asScala:()Ljava/lang/Object;
      36: checkcast     #1032               // class scala/collection/Iterator
      39: invokedynamic #1039,  0           // InvokeDynamic #6:apply:()Lscala/Function1;
      44: invokeinterface #1042,  2         // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
      49: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      52: invokevirtual #925                // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
      55: invokeinterface #1046,  2         // InterfaceMethod scala/collection/Iterator.toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
      60: astore_3
      61: aload_3
      62: areturn

  private boolean inTrainingMode();
    Code:
       0: invokestatic  #1055               // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: invokevirtual #1059               // Method java/lang/Thread.getStackTrace:()[Ljava/lang/StackTraceElement;
       6: astore_1
       7: new           #43                 // class scala/collection/mutable/ArrayOps$ofRef
      10: dup
      11: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      14: aload_1
      15: checkcast     #610                // class "[Ljava/lang/Object;"
      18: invokevirtual #614                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
      21: invokespecial #617                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
      24: invokedynamic #1066,  0           // InvokeDynamic #7:apply:()Lscala/Function1;
      29: invokevirtual #1070               // Method scala/collection/mutable/ArrayOps$ofRef.exists:(Lscala/Function1;)Z
      32: ireturn

  public ai.h2o.sparkling.ml.models.H2OTargetEncoderModel copy(org.apache.spark.ml.param.ParamMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1079               // Method defaultCopy:(Lorg/apache/spark/ml/param/ParamMap;)Lorg/apache/spark/ml/param/Params;
       5: checkcast     #5                  // class org/apache/spark/ml/Model
       8: aload_0
       9: invokevirtual #1083               // Method parent:()Lorg/apache/spark/ml/Estimator;
      12: invokevirtual #1087               // Method org/apache/spark/ml/Model.setParent:(Lorg/apache/spark/ml/Estimator;)Lorg/apache/spark/ml/Model;
      15: checkcast     #2                  // class ai/h2o/sparkling/ml/models/H2OTargetEncoderModel
      18: areturn

  public org.apache.spark.ml.util.MLWriter write();
    Code:
       0: aload_0
       1: invokevirtual #597                // Method mojoModel:()Lai/h2o/sparkling/ml/models/H2OTargetEncoderMOJOModel;
       4: invokevirtual #1092               // Method ai/h2o/sparkling/ml/models/H2OTargetEncoderMOJOModel.write:()Lorg/apache/spark/ml/util/MLWriter;
       7: areturn

  public org.apache.spark.ml.param.Params copy(org.apache.spark.ml.param.ParamMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1094               // Method copy:(Lorg/apache/spark/ml/param/ParamMap;)Lai/h2o/sparkling/ml/models/H2OTargetEncoderModel;
       5: areturn

  public org.apache.spark.ml.PipelineStage copy(org.apache.spark.ml.param.ParamMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1094               // Method copy:(Lorg/apache/spark/ml/param/ParamMap;)Lai/h2o/sparkling/ml/models/H2OTargetEncoderModel;
       5: areturn

  public org.apache.spark.ml.Transformer copy(org.apache.spark.ml.param.ParamMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1094               // Method copy:(Lorg/apache/spark/ml/param/ParamMap;)Lai/h2o/sparkling/ml/models/H2OTargetEncoderModel;
       5: areturn

  public org.apache.spark.ml.Model copy(org.apache.spark.ml.param.ParamMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1094               // Method copy:(Lorg/apache/spark/ml/param/ParamMap;)Lai/h2o/sparkling/ml/models/H2OTargetEncoderModel;
       5: areturn

  private final void LoggingLevel$lzycompute$1();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #451                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
       8: ifnonnull     23
      11: aload_0
      12: new           #17                 // class ai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$
      15: dup
      16: aload_0
      17: invokespecial #1100               // Method ai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$."<init>":(Lai/h2o/sparkling/backend/utils/RestCommunication;)V
      20: putfield      #451                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
      23: aload_1
      24: monitorexit
      25: goto          31
      28: aload_1
      29: monitorexit
      30: athrow
      31: return
    Exception table:
       from    to  target type
           4    23    28   any

  public static final java.lang.String $anonfun$transformTrainingDataset$1();
    Code:
       0: ldc_w         #1102               // String H2OContext needs to be created in order to use target encoding. Please create one as H2OContext.getOrCreate().
       3: areturn

  public static final scala.collection.mutable.WrappedArray $anonfun$transformTrainingDataset$2(java.lang.String[]);
    Code:
       0: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: checkcast     #610                // class "[Ljava/lang/Object;"
       7: invokevirtual #770                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      10: areturn

  public static final scala.collection.Iterable $anonfun$transformTrainingDataset$3(java.lang.String);
    Code:
       0: getstatic     #1108               // Field scala/Option$.MODULE$:Lscala/Option$;
       3: getstatic     #1108               // Field scala/Option$.MODULE$:Lscala/Option$;
       6: aload_0
       7: invokevirtual #1111               // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      10: invokevirtual #1115               // Method scala/Option$.option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
      13: areturn

  public static final org.apache.spark.sql.Column $anonfun$transformTrainingDataset$4(java.lang.String);
    Code:
       0: getstatic     #683                // Field org/apache/spark/sql/functions$.MODULE$:Lorg/apache/spark/sql/functions$;
       3: aload_0
       4: invokevirtual #1119               // Method org/apache/spark/sql/functions$.col:(Ljava/lang/String;)Lorg/apache/spark/sql/Column;
       7: areturn

  public static final scala.collection.Seq $anonfun$transformTrainingDataset$5(scala.collection.immutable.Map, java.lang.String[]);
    Code:
       0: aload_0
       1: new           #43                 // class scala/collection/mutable/ArrayOps$ofRef
       4: dup
       5: getstatic     #606                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       8: aload_1
       9: checkcast     #610                // class "[Ljava/lang/Object;"
      12: invokevirtual #614                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
      15: invokespecial #617                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
      18: invokevirtual #1124               // Method scala/collection/mutable/ArrayOps$ofRef.toSeq:()Lscala/collection/Seq;
      21: invokeinterface #1126,  2         // InterfaceMethod scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
      26: invokevirtual #835                // Method scala/Option.get:()Ljava/lang/Object;
      29: checkcast     #919                // class scala/collection/Seq
      32: areturn

  public static final org.apache.spark.sql.Dataset $anonfun$transformTrainingDataset$6(ai.h2o.sparkling.ml.models.H2OTargetEncoderModel, org.apache.spark.sql.Dataset, scala.Tuple2);
    Code:
       0: new           #825                // class scala/Tuple2
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #1132               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       9: astore        4
      11: aload         4
      13: ifnull        201
      16: aload         4
      18: invokevirtual #1135               // Method scala/Tuple2._1:()Ljava/lang/Object;
      21: checkcast     #601                // class org/apache/spark/sql/Dataset
      24: astore        5
      26: aload         4
      28: invokevirtual #1138               // Method scala/Tuple2._2:()Ljava/lang/Object;
      31: checkcast     #825                // class scala/Tuple2
      34: astore        6
      36: aload         6
      38: ifnull        198
      41: aload         6
      43: invokevirtual #1135               // Method scala/Tuple2._1:()Ljava/lang/Object;
      46: checkcast     #716                // class java/lang/String
      49: astore        7
      51: aload         6
      53: invokevirtual #1138               // Method scala/Tuple2._2:()Ljava/lang/Object;
      56: checkcast     #919                // class scala/collection/Seq
      59: astore        8
      61: getstatic     #1143               // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      64: aload         8
      66: invokevirtual #1147               // Method scala/collection/Seq$.unapplySeq:(Lscala/collection/Seq;)Lscala/Some;
      69: astore        9
      71: aload         9
      73: invokevirtual #1148               // Method scala/Some.isEmpty:()Z
      76: ifne          195
      79: aload         9
      81: invokevirtual #1149               // Method scala/Some.get:()Ljava/lang/Object;
      84: ifnull        195
      87: aload         9
      89: invokevirtual #1149               // Method scala/Some.get:()Ljava/lang/Object;
      92: checkcast     #1151               // class scala/collection/SeqLike
      95: iconst_1
      96: invokeinterface #1155,  2         // InterfaceMethod scala/collection/SeqLike.lengthCompare:(I)I
     101: iconst_0
     102: if_icmpne     195
     105: aload         9
     107: invokevirtual #1149               // Method scala/Some.get:()Ljava/lang/Object;
     110: checkcast     #1151               // class scala/collection/SeqLike
     113: iconst_0
     114: invokeinterface #1158,  2         // InterfaceMethod scala/collection/SeqLike.apply:(I)Ljava/lang/Object;
     119: checkcast     #716                // class java/lang/String
     122: astore        10
     124: new           #656                // class java/lang/StringBuilder
     127: dup
     128: ldc_w         #637                // int 1
     131: invokespecial #660                // Method java/lang/StringBuilder."<init>":(I)V
     134: aload         7
     136: invokevirtual #673                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: ldc_w         #1160               // String _
     142: invokevirtual #673                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: aload_0
     146: invokevirtual #1162               // Method uid:()Ljava/lang/String;
     149: invokevirtual #673                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: invokevirtual #678                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     155: astore        11
     157: aload         5
     159: aload         10
     161: aload         11
     163: invokevirtual #1166               // Method org/apache/spark/sql/Dataset.withColumnRenamed:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/sql/Dataset;
     166: astore        12
     168: aload_0
     169: aload         12
     171: aload         7
     173: iconst_1
     174: anewarray     #716                // class java/lang/String
     177: dup
     178: iconst_0
     179: aload         11
     181: aastore
     182: checkcast     #610                // class "[Ljava/lang/Object;"
     185: checkcast     #727                // class "[Ljava/lang/String;"
     188: invokevirtual #1168               // Method createVectorColumn:(Lorg/apache/spark/sql/Dataset;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/spark/sql/Dataset;
     191: astore_3
     192: goto          301
     195: goto          204
     198: goto          204
     201: goto          204
     204: aload         4
     206: ifnull        288
     209: aload         4
     211: invokevirtual #1135               // Method scala/Tuple2._1:()Ljava/lang/Object;
     214: checkcast     #601                // class org/apache/spark/sql/Dataset
     217: astore        13
     219: aload         4
     221: invokevirtual #1138               // Method scala/Tuple2._2:()Ljava/lang/Object;
     224: checkcast     #825                // class scala/Tuple2
     227: astore        14
     229: aload         14
     231: ifnull        285
     234: aload         14
     236: invokevirtual #1135               // Method scala/Tuple2._1:()Ljava/lang/Object;
     239: checkcast     #716                // class java/lang/String
     242: astore        15
     244: aload         14
     246: invokevirtual #1138               // Method scala/Tuple2._2:()Ljava/lang/Object;
     249: checkcast     #919                // class scala/collection/Seq
     252: astore        16
     254: aload_0
     255: aload         13
     257: aload         15
     259: aload         16
     261: getstatic     #714                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     264: ldc_w         #716                // class java/lang/String
     267: invokevirtual #719                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     270: invokeinterface #1172,  2         // InterfaceMethod scala/collection/Seq.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
     275: checkcast     #727                // class "[Ljava/lang/String;"
     278: invokevirtual #1168               // Method createVectorColumn:(Lorg/apache/spark/sql/Dataset;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/spark/sql/Dataset;
     281: astore_3
     282: goto          301
     285: goto          291
     288: goto          291
     291: new           #570                // class scala/MatchError
     294: dup
     295: aload         4
     297: invokespecial #573                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     300: athrow
     301: aload_3
     302: areturn

  public static final java.lang.String $anonfun$getInOutMapping$2(com.google.gson.JsonElement);
    Code:
       0: aload_0
       1: invokevirtual #1184               // Method com/google/gson/JsonElement.getAsString:()Ljava/lang/String;
       4: areturn

  public static final java.lang.String $anonfun$getInOutMapping$3(com.google.gson.JsonElement);
    Code:
       0: aload_0
       1: invokevirtual #1184               // Method com/google/gson/JsonElement.getAsString:()Ljava/lang/String;
       4: areturn

  public static final scala.Tuple2 $anonfun$getInOutMapping$1(com.google.gson.JsonElement);
    Code:
       0: aload_0
       1: invokevirtual #1189               // Method com/google/gson/JsonElement.getAsJsonObject:()Lcom/google/gson/JsonObject;
       4: astore_1
       5: getstatic     #1004               // Field scala/collection/JavaConverters$.MODULE$:Lscala/collection/JavaConverters$;
       8: aload_1
       9: ldc_w         #1190               // String from
      12: invokevirtual #1017               // Method com/google/gson/JsonObject.getAsJsonArray:(Ljava/lang/String;)Lcom/google/gson/JsonArray;
      15: invokevirtual #1194               // Method scala/collection/JavaConverters$.iterableAsScalaIterableConverter:(Ljava/lang/Iterable;)Lscala/collection/convert/Decorators$AsScala;
      18: invokevirtual #1030               // Method scala/collection/convert/Decorators$AsScala.asScala:()Ljava/lang/Object;
      21: checkcast     #1196               // class scala/collection/TraversableLike
      24: invokedynamic #1201,  0           // InvokeDynamic #8:apply:()Lscala/Function1;
      29: getstatic     #1206               // Field scala/collection/Iterable$.MODULE$:Lscala/collection/Iterable$;
      32: invokevirtual #1209               // Method scala/collection/Iterable$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      35: invokeinterface #1210,  3         // InterfaceMethod scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      40: checkcast     #1212               // class scala/collection/TraversableOnce
      43: invokeinterface #1213,  1         // InterfaceMethod scala/collection/TraversableOnce.toSeq:()Lscala/collection/Seq;
      48: astore_2
      49: getstatic     #1004               // Field scala/collection/JavaConverters$.MODULE$:Lscala/collection/JavaConverters$;
      52: aload_1
      53: ldc_w         #1214               // String to
      56: invokevirtual #1017               // Method com/google/gson/JsonObject.getAsJsonArray:(Ljava/lang/String;)Lcom/google/gson/JsonArray;
      59: invokevirtual #1194               // Method scala/collection/JavaConverters$.iterableAsScalaIterableConverter:(Ljava/lang/Iterable;)Lscala/collection/convert/Decorators$AsScala;
      62: invokevirtual #1030               // Method scala/collection/convert/Decorators$AsScala.asScala:()Ljava/lang/Object;
      65: checkcast     #1196               // class scala/collection/TraversableLike
      68: invokedynamic #1218,  0           // InvokeDynamic #9:apply:()Lscala/Function1;
      73: getstatic     #1206               // Field scala/collection/Iterable$.MODULE$:Lscala/collection/Iterable$;
      76: invokevirtual #1209               // Method scala/collection/Iterable$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      79: invokeinterface #1210,  3         // InterfaceMethod scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      84: checkcast     #1212               // class scala/collection/TraversableOnce
      87: invokeinterface #1213,  1         // InterfaceMethod scala/collection/TraversableOnce.toSeq:()Lscala/collection/Seq;
      92: astore_3
      93: new           #825                // class scala/Tuple2
      96: dup
      97: aload_2
      98: aload_3
      99: invokespecial #1132               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     102: areturn

  public static final boolean $anonfun$inTrainingMode$1(java.lang.StackTraceElement);
    Code:
       0: aload_0
       1: invokevirtual #1227               // Method java/lang/StackTraceElement.getMethodName:()Ljava/lang/String;
       4: ldc_w         #1229               // String fit
       7: astore_1
       8: dup
       9: ifnonnull     20
      12: pop
      13: aload_1
      14: ifnull        27
      17: goto          58
      20: aload_1
      21: invokevirtual #555                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      24: ifeq          58
      27: aload_0
      28: invokevirtual #1232               // Method java/lang/StackTraceElement.getClassName:()Ljava/lang/String;
      31: ldc_w         #1234               // String org.apache.spark.ml.Pipeline
      34: astore_2
      35: dup
      36: ifnonnull     47
      39: pop
      40: aload_2
      41: ifnull        54
      44: goto          58
      47: aload_2
      48: invokevirtual #555                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      51: ifeq          58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: ireturn

  public ai.h2o.sparkling.ml.models.H2OTargetEncoderModel(java.lang.String, scala.Option<ai.h2o.sparkling.ml.internals.H2OModel>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #510                // Field uid:Ljava/lang/String;
       5: aload_0
       6: aload_2
       7: putfield      #529                // Field targetEncoderModel:Lscala/Option;
      10: aload_0
      11: invokespecial #1238               // Method org/apache/spark/ml/Model."<init>":()V
      14: aload_0
      15: invokestatic  #1242               // InterfaceMethod ai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams.$init$:(Lai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams;)V
      18: aload_0
      19: invokestatic  #1245               // InterfaceMethod ai/h2o/sparkling/ml/models/H2OTargetEncoderBase.$init$:(Lai/h2o/sparkling/ml/models/H2OTargetEncoderBase;)V
      22: aload_0
      23: invokestatic  #1248               // InterfaceMethod org/apache/spark/ml/util/MLWritable.$init$:(Lorg/apache/spark/ml/util/MLWritable;)V
      26: aload_0
      27: invokestatic  #1251               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.$init$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;)V
      30: aload_0
      31: invokestatic  #1253               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.$init$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)V
      34: return

  public static final java.lang.Object $anonfun$inTrainingMode$1$adapted(java.lang.StackTraceElement);
    Code:
       0: aload_0
       1: invokestatic  #1255               // Method $anonfun$inTrainingMode$1:(Ljava/lang/StackTraceElement;)Z
       4: invokestatic  #864                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #1267,  0           // InvokeDynamic #10:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
