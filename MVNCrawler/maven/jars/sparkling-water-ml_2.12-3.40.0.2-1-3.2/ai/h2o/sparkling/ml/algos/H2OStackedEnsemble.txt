Compiled from "H2OStackedEnsemble.scala"
public class ai.h2o.sparkling.ml.algos.H2OStackedEnsemble extends ai.h2o.sparkling.ml.algos.H2OSupervisedAlgorithm<hex.ensemble.StackedEnsembleModel$StackedEnsembleParameters> implements ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams {
  private final java.lang.String uid;

  private final org.apache.spark.ml.param.Param<java.lang.String> metalearnerAlgorithm;

  private final org.apache.spark.ml.param.IntParam metalearnerNfolds;

  private final org.apache.spark.ml.param.Param<java.lang.String> metalearnerFoldAssignment;

  private final ai.h2o.sparkling.ml.params.NullableStringParam metalearnerFoldCol;

  private final org.apache.spark.ml.param.Param<java.lang.String> metalearnerTransform;

  private final org.apache.spark.ml.param.BooleanParam keepLeveloneFrame;

  private final org.apache.spark.ml.param.Param<java.lang.String> metalearnerParams;

  private final org.apache.spark.ml.param.LongParam seed;

  private final org.apache.spark.ml.param.LongParam scoreTrainingSamples;

  private final ai.h2o.sparkling.ml.params.NullableStringParam modelId;

  private final org.apache.spark.ml.param.IntParam nfolds;

  private final org.apache.spark.ml.param.BooleanParam keepCrossValidationModels;

  private final org.apache.spark.ml.param.BooleanParam keepCrossValidationPredictions;

  private final org.apache.spark.ml.param.BooleanParam keepCrossValidationFoldAssignment;

  private final org.apache.spark.ml.param.BooleanParam parallelizeCrossValidation;

  private final org.apache.spark.ml.param.Param<java.lang.String> distribution;

  private final org.apache.spark.ml.param.DoubleParam tweediePower;

  private final org.apache.spark.ml.param.DoubleParam quantileAlpha;

  private final org.apache.spark.ml.param.DoubleParam huberAlpha;

  private final ai.h2o.sparkling.ml.params.NullableStringParam labelCol;

  private final ai.h2o.sparkling.ml.params.NullableStringParam weightCol;

  private final ai.h2o.sparkling.ml.params.NullableStringParam offsetCol;

  private final ai.h2o.sparkling.ml.params.NullableStringParam foldCol;

  private final org.apache.spark.ml.param.Param<java.lang.String> foldAssignment;

  private final org.apache.spark.ml.param.Param<java.lang.String> categoricalEncoding;

  private final org.apache.spark.ml.param.IntParam maxCategoricalLevels;

  private final ai.h2o.sparkling.ml.params.NullableStringArrayParam ignoredCols;

  private final org.apache.spark.ml.param.BooleanParam ignoreConstCols;

  private final org.apache.spark.ml.param.BooleanParam scoreEachIteration;

  private final ai.h2o.sparkling.ml.params.NullableStringParam checkpoint;

  private final org.apache.spark.ml.param.IntParam stoppingRounds;

  private final org.apache.spark.ml.param.DoubleParam maxRuntimeSecs;

  private final org.apache.spark.ml.param.Param<java.lang.String> stoppingMetric;

  private final org.apache.spark.ml.param.DoubleParam stoppingTolerance;

  private final org.apache.spark.ml.param.IntParam gainsliftBins;

  private final ai.h2o.sparkling.ml.params.NullableStringParam customMetricFunc;

  private final ai.h2o.sparkling.ml.params.NullableStringParam customDistributionFunc;

  private final ai.h2o.sparkling.ml.params.NullableStringParam exportCheckpointsDir;

  private final org.apache.spark.ml.param.Param<java.lang.String> aucType;

  private final ai.h2o.sparkling.ml.params.NullableAlgoArrayParam ai$h2o$sparkling$ml$params$HasBaseAlgorithms$$base_algorithms;

  private final ai.h2o.sparkling.ml.params.NonSerializableNullableDataFrameParam ai$h2o$sparkling$ml$params$HasBlendingDataFrame$$blendingDataFrame;

  public static org.apache.spark.ml.util.MLReader<ai.h2o.sparkling.ml.algos.H2OStackedEnsemble> read();
    Code:
       0: getstatic     #98                 // Field ai/h2o/sparkling/ml/algos/H2OStackedEnsemble$.MODULE$:Lai/h2o/sparkling/ml/algos/H2OStackedEnsemble$;
       3: invokevirtual #100                // Method ai/h2o/sparkling/ml/algos/H2OStackedEnsemble$.read:()Lorg/apache/spark/ml/util/MLReader;
       6: areturn

  public static java.lang.Object load(java.lang.String);
    Code:
       0: getstatic     #98                 // Field ai/h2o/sparkling/ml/algos/H2OStackedEnsemble$.MODULE$:Lai/h2o/sparkling/ml/algos/H2OStackedEnsemble$;
       3: aload_0
       4: invokevirtual #105                // Method ai/h2o/sparkling/ml/algos/H2OStackedEnsemble$.load:(Ljava/lang/String;)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$$super$getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #114                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.getH2OAlgorithmParams$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #125                // InterfaceMethod ai/h2o/sparkling/ml/params/HasBlendingDataFrame.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/HasBlendingDataFrame;)Lscala/collection/immutable/Map;
       4: areturn

  public java.lang.String getMetalearnerAlgorithm();
    Code:
       0: aload_0
       1: invokestatic  #131                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getMetalearnerAlgorithm$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Ljava/lang/String;
       4: areturn

  public int getMetalearnerNfolds();
    Code:
       0: aload_0
       1: invokestatic  #137                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getMetalearnerNfolds$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)I
       4: ireturn

  public java.lang.String getMetalearnerFoldAssignment();
    Code:
       0: aload_0
       1: invokestatic  #141                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getMetalearnerFoldAssignment$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getMetalearnerFoldCol();
    Code:
       0: aload_0
       1: invokestatic  #145                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getMetalearnerFoldCol$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getMetalearnerTransform();
    Code:
       0: aload_0
       1: invokestatic  #149                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getMetalearnerTransform$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Ljava/lang/String;
       4: areturn

  public boolean getKeepLeveloneFrame();
    Code:
       0: aload_0
       1: invokestatic  #155                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getKeepLeveloneFrame$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Z
       4: ireturn

  public java.lang.String getMetalearnerParams();
    Code:
       0: aload_0
       1: invokestatic  #159                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getMetalearnerParams$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Ljava/lang/String;
       4: areturn

  public long getSeed();
    Code:
       0: aload_0
       1: invokestatic  #165                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getSeed$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)J
       4: lreturn

  public long getScoreTrainingSamples();
    Code:
       0: aload_0
       1: invokestatic  #169                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getScoreTrainingSamples$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)J
       4: lreturn

  public java.lang.String getModelId();
    Code:
       0: aload_0
       1: invokestatic  #173                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getModelId$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Ljava/lang/String;
       4: areturn

  public int getNfolds();
    Code:
       0: aload_0
       1: invokestatic  #177                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getNfolds$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)I
       4: ireturn

  public boolean getKeepCrossValidationModels();
    Code:
       0: aload_0
       1: invokestatic  #181                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getKeepCrossValidationModels$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Z
       4: ireturn

  public boolean getKeepCrossValidationPredictions();
    Code:
       0: aload_0
       1: invokestatic  #185                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getKeepCrossValidationPredictions$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Z
       4: ireturn

  public boolean getKeepCrossValidationFoldAssignment();
    Code:
       0: aload_0
       1: invokestatic  #189                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getKeepCrossValidationFoldAssignment$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Z
       4: ireturn

  public boolean getParallelizeCrossValidation();
    Code:
       0: aload_0
       1: invokestatic  #193                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getParallelizeCrossValidation$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Z
       4: ireturn

  public java.lang.String getDistribution();
    Code:
       0: aload_0
       1: invokestatic  #197                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getDistribution$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Ljava/lang/String;
       4: areturn

  public double getTweediePower();
    Code:
       0: aload_0
       1: invokestatic  #203                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getTweediePower$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)D
       4: dreturn

  public double getQuantileAlpha();
    Code:
       0: aload_0
       1: invokestatic  #207                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getQuantileAlpha$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)D
       4: dreturn

  public double getHuberAlpha();
    Code:
       0: aload_0
       1: invokestatic  #211                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getHuberAlpha$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)D
       4: dreturn

  public java.lang.String getLabelCol();
    Code:
       0: aload_0
       1: invokestatic  #215                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getLabelCol$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getWeightCol();
    Code:
       0: aload_0
       1: invokestatic  #219                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getWeightCol$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getOffsetCol();
    Code:
       0: aload_0
       1: invokestatic  #223                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getOffsetCol$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getFoldCol();
    Code:
       0: aload_0
       1: invokestatic  #227                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getFoldCol$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getFoldAssignment();
    Code:
       0: aload_0
       1: invokestatic  #231                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getFoldAssignment$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getCategoricalEncoding();
    Code:
       0: aload_0
       1: invokestatic  #235                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getCategoricalEncoding$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Ljava/lang/String;
       4: areturn

  public int getMaxCategoricalLevels();
    Code:
       0: aload_0
       1: invokestatic  #239                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getMaxCategoricalLevels$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)I
       4: ireturn

  public java.lang.String[] getIgnoredCols();
    Code:
       0: aload_0
       1: invokestatic  #245                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getIgnoredCols$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)[Ljava/lang/String;
       4: areturn

  public boolean getIgnoreConstCols();
    Code:
       0: aload_0
       1: invokestatic  #249                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getIgnoreConstCols$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Z
       4: ireturn

  public boolean getScoreEachIteration();
    Code:
       0: aload_0
       1: invokestatic  #253                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getScoreEachIteration$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Z
       4: ireturn

  public java.lang.String getCheckpoint();
    Code:
       0: aload_0
       1: invokestatic  #257                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getCheckpoint$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Ljava/lang/String;
       4: areturn

  public int getStoppingRounds();
    Code:
       0: aload_0
       1: invokestatic  #261                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getStoppingRounds$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)I
       4: ireturn

  public double getMaxRuntimeSecs();
    Code:
       0: aload_0
       1: invokestatic  #265                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getMaxRuntimeSecs$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)D
       4: dreturn

  public java.lang.String getStoppingMetric();
    Code:
       0: aload_0
       1: invokestatic  #269                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getStoppingMetric$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Ljava/lang/String;
       4: areturn

  public double getStoppingTolerance();
    Code:
       0: aload_0
       1: invokestatic  #273                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getStoppingTolerance$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)D
       4: dreturn

  public int getGainsliftBins();
    Code:
       0: aload_0
       1: invokestatic  #277                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getGainsliftBins$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)I
       4: ireturn

  public java.lang.String getCustomMetricFunc();
    Code:
       0: aload_0
       1: invokestatic  #281                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getCustomMetricFunc$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getCustomDistributionFunc();
    Code:
       0: aload_0
       1: invokestatic  #285                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getCustomDistributionFunc$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getExportCheckpointsDir();
    Code:
       0: aload_0
       1: invokestatic  #289                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getExportCheckpointsDir$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getAucType();
    Code:
       0: aload_0
       1: invokestatic  #293                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getAucType$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setMetalearnerAlgorithm(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #300                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setMetalearnerAlgorithm$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setMetalearnerNfolds(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #306                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setMetalearnerNfolds$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;I)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setMetalearnerFoldAssignment(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #311                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setMetalearnerFoldAssignment$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setMetalearnerFoldCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #315                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setMetalearnerFoldCol$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setMetalearnerTransform(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #319                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setMetalearnerTransform$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setKeepLeveloneFrame(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #325                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setKeepLeveloneFrame$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Z)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setMetalearnerParams(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #330                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setMetalearnerParams$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setSeed(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #336                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setSeed$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;J)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setScoreTrainingSamples(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #341                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setScoreTrainingSamples$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;J)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setModelId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #345                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setModelId$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setNfolds(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #349                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setNfolds$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;I)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setKeepCrossValidationModels(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #353                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setKeepCrossValidationModels$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Z)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setKeepCrossValidationPredictions(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #357                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setKeepCrossValidationPredictions$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Z)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setKeepCrossValidationFoldAssignment(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #361                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setKeepCrossValidationFoldAssignment$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Z)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setParallelizeCrossValidation(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #365                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setParallelizeCrossValidation$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Z)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setDistribution(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #369                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setDistribution$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setTweediePower(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #375                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setTweediePower$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;D)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setQuantileAlpha(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #380                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setQuantileAlpha$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;D)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setHuberAlpha(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #384                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setHuberAlpha$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;D)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setLabelCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #388                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setLabelCol$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setWeightCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #392                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setWeightCol$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setOffsetCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #396                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setOffsetCol$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setFoldCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #400                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setFoldCol$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setFoldAssignment(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #404                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setFoldAssignment$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setCategoricalEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #408                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setCategoricalEncoding$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setMaxCategoricalLevels(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #412                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setMaxCategoricalLevels$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;I)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setIgnoredCols(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #418                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setIgnoredCols$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;[Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setIgnoreConstCols(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #423                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setIgnoreConstCols$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Z)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setScoreEachIteration(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #427                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setScoreEachIteration$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Z)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setCheckpoint(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #431                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setCheckpoint$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setStoppingRounds(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #435                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setStoppingRounds$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;I)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setMaxRuntimeSecs(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #439                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setMaxRuntimeSecs$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;D)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setStoppingMetric(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #443                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setStoppingMetric$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setStoppingTolerance(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #447                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setStoppingTolerance$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;D)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setGainsliftBins(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #451                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setGainsliftBins$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;I)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setCustomMetricFunc(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #455                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setCustomMetricFunc$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setCustomDistributionFunc(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #459                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setCustomDistributionFunc$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setExportCheckpointsDir(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #463                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setExportCheckpointsDir$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OStackedEnsembleParams setAucType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #467                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.setAucType$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #472                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getH2OAlgorithmParams$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OStackedEnsembleParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #476                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getH2OStackedEnsembleParams$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.String> getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #481                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)Lscala/collection/immutable/Map;
       4: areturn

  public ai.h2o.sparkling.ml.algos.H2OAlgorithm<? extends hex.Model$Parameters>[] getBaseAlgorithms();
    Code:
       0: aload_0
       1: invokestatic  #490                // InterfaceMethod ai/h2o/sparkling/ml/params/HasBaseAlgorithms.getBaseAlgorithms$:(Lai/h2o/sparkling/ml/params/HasBaseAlgorithms;)[Lai/h2o/sparkling/ml/algos/H2OAlgorithm;
       4: areturn

  public ai.h2o.sparkling.ml.params.HasBaseAlgorithms setBaseAlgorithms(ai.h2o.sparkling.ml.algos.H2OAlgorithm<? extends hex.Model$Parameters>[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #497                // InterfaceMethod ai/h2o/sparkling/ml/params/HasBaseAlgorithms.setBaseAlgorithms$:(Lai/h2o/sparkling/ml/params/HasBaseAlgorithms;[Lai/h2o/sparkling/ml/algos/H2OAlgorithm;)Lai/h2o/sparkling/ml/params/HasBaseAlgorithms;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getBaseAlgorithmsParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #503                // InterfaceMethod ai/h2o/sparkling/ml/params/HasBaseAlgorithms.getBaseAlgorithmsParam$:(Lai/h2o/sparkling/ml/params/HasBaseAlgorithms;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$HasBlendingDataFrame$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #507                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;)Lscala/collection/immutable/Map;
       4: areturn

  public org.apache.spark.sql.Dataset<org.apache.spark.sql.Row> getBlendingDataFrame();
    Code:
       0: aload_0
       1: invokestatic  #514                // InterfaceMethod ai/h2o/sparkling/ml/params/HasBlendingDataFrame.getBlendingDataFrame$:(Lai/h2o/sparkling/ml/params/HasBlendingDataFrame;)Lorg/apache/spark/sql/Dataset;
       4: areturn

  public ai.h2o.sparkling.ml.params.HasBlendingDataFrame setBlendingDataFrame(org.apache.spark.sql.Dataset<org.apache.spark.sql.Row>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #521                // InterfaceMethod ai/h2o/sparkling/ml/params/HasBlendingDataFrame.setBlendingDataFrame$:(Lai/h2o/sparkling/ml/params/HasBlendingDataFrame;Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/params/HasBlendingDataFrame;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getBlendingDataFrameParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #527                // InterfaceMethod ai/h2o/sparkling/ml/params/HasBlendingDataFrame.getBlendingDataFrameParam$:(Lai/h2o/sparkling/ml/params/HasBlendingDataFrame;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> metalearnerAlgorithm();
    Code:
       0: aload_0
       1: getfield      #531                // Field metalearnerAlgorithm:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.IntParam metalearnerNfolds();
    Code:
       0: aload_0
       1: getfield      #534                // Field metalearnerNfolds:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> metalearnerFoldAssignment();
    Code:
       0: aload_0
       1: getfield      #536                // Field metalearnerFoldAssignment:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam metalearnerFoldCol();
    Code:
       0: aload_0
       1: getfield      #539                // Field metalearnerFoldCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> metalearnerTransform();
    Code:
       0: aload_0
       1: getfield      #541                // Field metalearnerTransform:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam keepLeveloneFrame();
    Code:
       0: aload_0
       1: getfield      #544                // Field keepLeveloneFrame:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> metalearnerParams();
    Code:
       0: aload_0
       1: getfield      #546                // Field metalearnerParams:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.LongParam seed();
    Code:
       0: aload_0
       1: getfield      #549                // Field seed:Lorg/apache/spark/ml/param/LongParam;
       4: areturn

  public org.apache.spark.ml.param.LongParam scoreTrainingSamples();
    Code:
       0: aload_0
       1: getfield      #551                // Field scoreTrainingSamples:Lorg/apache/spark/ml/param/LongParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam modelId();
    Code:
       0: aload_0
       1: getfield      #553                // Field modelId:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam nfolds();
    Code:
       0: aload_0
       1: getfield      #555                // Field nfolds:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam keepCrossValidationModels();
    Code:
       0: aload_0
       1: getfield      #557                // Field keepCrossValidationModels:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam keepCrossValidationPredictions();
    Code:
       0: aload_0
       1: getfield      #559                // Field keepCrossValidationPredictions:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam keepCrossValidationFoldAssignment();
    Code:
       0: aload_0
       1: getfield      #561                // Field keepCrossValidationFoldAssignment:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam parallelizeCrossValidation();
    Code:
       0: aload_0
       1: getfield      #563                // Field parallelizeCrossValidation:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> distribution();
    Code:
       0: aload_0
       1: getfield      #565                // Field distribution:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam tweediePower();
    Code:
       0: aload_0
       1: getfield      #568                // Field tweediePower:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam quantileAlpha();
    Code:
       0: aload_0
       1: getfield      #570                // Field quantileAlpha:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam huberAlpha();
    Code:
       0: aload_0
       1: getfield      #572                // Field huberAlpha:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam labelCol();
    Code:
       0: aload_0
       1: getfield      #574                // Field labelCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam weightCol();
    Code:
       0: aload_0
       1: getfield      #576                // Field weightCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam offsetCol();
    Code:
       0: aload_0
       1: getfield      #578                // Field offsetCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam foldCol();
    Code:
       0: aload_0
       1: getfield      #580                // Field foldCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> foldAssignment();
    Code:
       0: aload_0
       1: getfield      #582                // Field foldAssignment:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> categoricalEncoding();
    Code:
       0: aload_0
       1: getfield      #584                // Field categoricalEncoding:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.IntParam maxCategoricalLevels();
    Code:
       0: aload_0
       1: getfield      #586                // Field maxCategoricalLevels:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringArrayParam ignoredCols();
    Code:
       0: aload_0
       1: getfield      #589                // Field ignoredCols:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam ignoreConstCols();
    Code:
       0: aload_0
       1: getfield      #591                // Field ignoreConstCols:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam scoreEachIteration();
    Code:
       0: aload_0
       1: getfield      #593                // Field scoreEachIteration:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam checkpoint();
    Code:
       0: aload_0
       1: getfield      #595                // Field checkpoint:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam stoppingRounds();
    Code:
       0: aload_0
       1: getfield      #597                // Field stoppingRounds:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam maxRuntimeSecs();
    Code:
       0: aload_0
       1: getfield      #599                // Field maxRuntimeSecs:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> stoppingMetric();
    Code:
       0: aload_0
       1: getfield      #601                // Field stoppingMetric:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam stoppingTolerance();
    Code:
       0: aload_0
       1: getfield      #603                // Field stoppingTolerance:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam gainsliftBins();
    Code:
       0: aload_0
       1: getfield      #605                // Field gainsliftBins:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam customMetricFunc();
    Code:
       0: aload_0
       1: getfield      #607                // Field customMetricFunc:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam customDistributionFunc();
    Code:
       0: aload_0
       1: getfield      #609                // Field customDistributionFunc:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam exportCheckpointsDir();
    Code:
       0: aload_0
       1: getfield      #611                // Field exportCheckpointsDir:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> aucType();
    Code:
       0: aload_0
       1: getfield      #613                // Field aucType:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$metalearnerAlgorithm_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #531                // Field metalearnerAlgorithm:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$metalearnerNfolds_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #534                // Field metalearnerNfolds:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$metalearnerFoldAssignment_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #536                // Field metalearnerFoldAssignment:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$metalearnerFoldCol_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #539                // Field metalearnerFoldCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$metalearnerTransform_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #541                // Field metalearnerTransform:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$keepLeveloneFrame_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #544                // Field keepLeveloneFrame:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$metalearnerParams_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #546                // Field metalearnerParams:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$seed_$eq(org.apache.spark.ml.param.LongParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #549                // Field seed:Lorg/apache/spark/ml/param/LongParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$scoreTrainingSamples_$eq(org.apache.spark.ml.param.LongParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #551                // Field scoreTrainingSamples:Lorg/apache/spark/ml/param/LongParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$modelId_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #553                // Field modelId:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$nfolds_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #555                // Field nfolds:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$keepCrossValidationModels_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #557                // Field keepCrossValidationModels:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$keepCrossValidationPredictions_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #559                // Field keepCrossValidationPredictions:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$keepCrossValidationFoldAssignment_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #561                // Field keepCrossValidationFoldAssignment:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$parallelizeCrossValidation_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #563                // Field parallelizeCrossValidation:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$distribution_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #565                // Field distribution:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$tweediePower_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #568                // Field tweediePower:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$quantileAlpha_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #570                // Field quantileAlpha:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$huberAlpha_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #572                // Field huberAlpha:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$labelCol_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #574                // Field labelCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$weightCol_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #576                // Field weightCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$offsetCol_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #578                // Field offsetCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$foldCol_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #580                // Field foldCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$foldAssignment_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #582                // Field foldAssignment:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$categoricalEncoding_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #584                // Field categoricalEncoding:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$maxCategoricalLevels_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #586                // Field maxCategoricalLevels:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$ignoredCols_$eq(ai.h2o.sparkling.ml.params.NullableStringArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #589                // Field ignoredCols:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$ignoreConstCols_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #591                // Field ignoreConstCols:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$scoreEachIteration_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #593                // Field scoreEachIteration:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$checkpoint_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #595                // Field checkpoint:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$stoppingRounds_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #597                // Field stoppingRounds:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$maxRuntimeSecs_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #599                // Field maxRuntimeSecs:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$stoppingMetric_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #601                // Field stoppingMetric:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$stoppingTolerance_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #603                // Field stoppingTolerance:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$gainsliftBins_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #605                // Field gainsliftBins:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$customMetricFunc_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #607                // Field customMetricFunc:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$customDistributionFunc_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #609                // Field customDistributionFunc:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$exportCheckpointsDir_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #611                // Field exportCheckpointsDir:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OStackedEnsembleParams$_setter_$aucType_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #613                // Field aucType:Lorg/apache/spark/ml/param/Param;
       5: return

  public ai.h2o.sparkling.ml.params.NullableAlgoArrayParam ai$h2o$sparkling$ml$params$HasBaseAlgorithms$$base_algorithms();
    Code:
       0: aload_0
       1: getfield      #664                // Field ai$h2o$sparkling$ml$params$HasBaseAlgorithms$$base_algorithms:Lai/h2o/sparkling/ml/params/NullableAlgoArrayParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$HasBaseAlgorithms$_setter_$ai$h2o$sparkling$ml$params$HasBaseAlgorithms$$base_algorithms_$eq(ai.h2o.sparkling.ml.params.NullableAlgoArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #664                // Field ai$h2o$sparkling$ml$params$HasBaseAlgorithms$$base_algorithms:Lai/h2o/sparkling/ml/params/NullableAlgoArrayParam;
       5: return

  public ai.h2o.sparkling.ml.params.NonSerializableNullableDataFrameParam ai$h2o$sparkling$ml$params$HasBlendingDataFrame$$blendingDataFrame();
    Code:
       0: aload_0
       1: getfield      #669                // Field ai$h2o$sparkling$ml$params$HasBlendingDataFrame$$blendingDataFrame:Lai/h2o/sparkling/ml/params/NonSerializableNullableDataFrameParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$HasBlendingDataFrame$_setter_$ai$h2o$sparkling$ml$params$HasBlendingDataFrame$$blendingDataFrame_$eq(ai.h2o.sparkling.ml.params.NonSerializableNullableDataFrameParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #669                // Field ai$h2o$sparkling$ml$params$HasBlendingDataFrame$$blendingDataFrame:Lai/h2o/sparkling/ml/params/NonSerializableNullableDataFrameParam;
       5: return

  public java.lang.String uid();
    Code:
       0: aload_0
       1: getfield      #673                // Field uid:Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.models.H2OStackedEnsembleMOJOModel fit(org.apache.spark.sql.Dataset<?>);
    Code:
       0: aload_0
       1: invokevirtual #679                // Method getBaseAlgorithms:()[Lai/h2o/sparkling/ml/algos/H2OAlgorithm;
       4: arraylength
       5: iconst_2
       6: if_icmpge     20
       9: new           #681                // class java/lang/IllegalArgumentException
      12: dup
      13: ldc_w         #683                // String Stacked Ensemble needs at least two base algorithms to operate.
      16: invokespecial #687                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: aload_1
      22: invokevirtual #691                // Method prepareDatasetForFitting:(Lorg/apache/spark/sql/Dataset;)Lscala/Tuple2;
      25: astore        4
      27: aload         4
      29: ifnull        67
      32: aload         4
      34: invokevirtual #697                // Method scala/Tuple2._1:()Ljava/lang/Object;
      37: checkcast     #699                // class ai/h2o/sparkling/H2OFrame
      40: astore        5
      42: aload         4
      44: invokevirtual #702                // Method scala/Tuple2._2:()Ljava/lang/Object;
      47: checkcast     #704                // class scala/Option
      50: astore        6
      52: new           #693                // class scala/Tuple2
      55: dup
      56: aload         5
      58: aload         6
      60: invokespecial #707                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      63: astore_2
      64: goto          80
      67: goto          70
      70: new           #709                // class scala/MatchError
      73: dup
      74: aload         4
      76: invokespecial #712                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      79: athrow
      80: aload_2
      81: astore_3
      82: aload_3
      83: invokevirtual #697                // Method scala/Tuple2._1:()Ljava/lang/Object;
      86: checkcast     #699                // class ai/h2o/sparkling/H2OFrame
      89: astore        7
      91: aload_3
      92: invokevirtual #702                // Method scala/Tuple2._2:()Ljava/lang/Object;
      95: checkcast     #704                // class scala/Option
      98: astore        8
     100: aload_0
     101: aload         7
     103: invokevirtual #716                // Method prepareH2OTrainFrameForFitting:(Lai/h2o/sparkling/H2OFrame;)V
     106: new           #33                 // class scala/collection/mutable/ArrayOps$ofRef
     109: dup
     110: getstatic     #721                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     113: aload_0
     114: invokevirtual #679                // Method getBaseAlgorithms:()[Lai/h2o/sparkling/ml/algos/H2OAlgorithm;
     117: checkcast     #723                // class "[Ljava/lang/Object;"
     120: invokevirtual #727                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     123: invokespecial #730                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     126: aload         7
     128: aload         8
     130: invokedynamic #754,  0            // InvokeDynamic #0:apply:(Lai/h2o/sparkling/H2OFrame;Lscala/Option;)Lscala/Function1;
     135: getstatic     #759                // Field scala/Array$.MODULE$:Lscala/Array$;
     138: getstatic     #764                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     141: ldc_w         #766                // class ai/h2o/sparkling/ml/models/H2OMOJOModel
     144: invokevirtual #769                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     147: invokevirtual #773                // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
     150: invokevirtual #777                // Method scala/collection/mutable/ArrayOps$ofRef.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     153: checkcast     #779                // class "[Lai/h2o/sparkling/ml/models/H2OMOJOModel;"
     156: astore        9
     158: aload_0
     159: aload         7
     161: invokevirtual #781                // Method getH2OAlgorithmParams:(Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
     164: getstatic     #721                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     167: invokevirtual #785                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
     170: getstatic     #721                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     173: iconst_3
     174: anewarray     #693                // class scala/Tuple2
     177: dup
     178: iconst_0
     179: getstatic     #788                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     182: getstatic     #721                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     185: ldc_w         #790                // String training_frame
     188: invokevirtual #793                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     191: aload         7
     193: invokevirtual #796                // Method ai/h2o/sparkling/H2OFrame.frameId:()Ljava/lang/String;
     196: invokevirtual #800                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     199: aastore
     200: dup
     201: iconst_1
     202: getstatic     #788                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     205: getstatic     #721                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     208: ldc_w         #802                // String model_id
     211: invokevirtual #793                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     214: aload_0
     215: aload_0
     216: invokevirtual #804                // Method getModelId:()Ljava/lang/String;
     219: invokevirtual #808                // Method convertModelIdToKey:(Ljava/lang/String;)Ljava/lang/String;
     222: invokevirtual #800                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     225: aastore
     226: dup
     227: iconst_2
     228: getstatic     #788                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     231: getstatic     #721                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     234: ldc_w         #810                // String base_models
     237: invokevirtual #793                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     240: aload_0
     241: aload         9
     243: invokespecial #814                // Method modelsIdsToString:([Lai/h2o/sparkling/ml/models/H2OMOJOModel;)Ljava/lang/String;
     246: invokevirtual #800                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     249: aastore
     250: checkcast     #723                // class "[Ljava/lang/Object;"
     253: invokevirtual #818                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     256: invokevirtual #823                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
     259: invokeinterface #829,  2          // InterfaceMethod scala/collection/immutable/Map.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/Map;
     264: aload         8
     266: invokedynamic #837,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
     271: invokevirtual #840                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
     274: invokedynamic #849,  0            // InvokeDynamic #2:apply:()Lscala/Function0;
     279: invokevirtual #853                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
     282: checkcast     #855                // class scala/collection/GenTraversableOnce
     285: invokeinterface #829,  2          // InterfaceMethod scala/collection/immutable/Map.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/Map;
     290: astore        10
     292: aload_0
     293: ldc_w         #857                // String /99/ModelBuilders/stackedensemble
     296: aload         10
     298: aload_0
     299: invokevirtual #860                // Method trainAndGetDestinationKey$default$3:()Z
     302: invokevirtual #864                // Method trainAndGetDestinationKey:(Ljava/lang/String;Lscala/collection/immutable/Map;Z)Ljava/lang/String;
     305: astore        11
     307: getstatic     #869                // Field ai/h2o/sparkling/ml/internals/H2OModel$.MODULE$:Lai/h2o/sparkling/ml/internals/H2OModel$;
     310: aload         11
     312: invokevirtual #872                // Method ai/h2o/sparkling/ml/internals/H2OModel$.apply:(Ljava/lang/String;)Lai/h2o/sparkling/ml/internals/H2OModel;
     315: astore        12
     317: aload_0
     318: ldc_w         #873                // String keepCrossValidationModels
     321: invokevirtual #877                // Method hasParam:(Ljava/lang/String;)Z
     324: ifeq          344
     327: aload_0
     328: aload_0
     329: ldc_w         #873                // String keepCrossValidationModels
     332: invokevirtual #881                // Method getParam:(Ljava/lang/String;)Lorg/apache/spark/ml/param/Param;
     335: invokevirtual #885                // Method getOrDefault:(Lorg/apache/spark/ml/param/Param;)Ljava/lang/Object;
     338: invokestatic  #891                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
     341: goto          345
     344: iconst_0
     345: istore        13
     347: aload         12
     349: aload_0
     350: invokevirtual #894                // Method createMOJOUID:()Ljava/lang/String;
     353: aload_0
     354: invokevirtual #898                // Method createMOJOSettings:()Lai/h2o/sparkling/ml/models/H2OMOJOSettings;
     357: iload         13
     359: invokevirtual #904                // Method ai/h2o/sparkling/ml/internals/H2OModel.toMOJOModel:(Ljava/lang/String;Lai/h2o/sparkling/ml/models/H2OMOJOSettings;Z)Lai/h2o/sparkling/ml/models/H2OMOJOModel;
     362: checkcast     #906                // class ai/h2o/sparkling/ml/models/H2OStackedEnsembleMOJOModel
     365: astore        14
     367: getstatic     #911                // Field ai/h2o/sparkling/H2OContext$.MODULE$:Lai/h2o/sparkling/H2OContext$;
     370: invokevirtual #915                // Method ai/h2o/sparkling/H2OContext$.get:()Lscala/Option;
     373: invokedynamic #922,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
     378: invokevirtual #926                // Method scala/Option.forall:(Lscala/Function1;)Z
     381: ifeq          395
     384: getstatic     #721                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     387: aload         14
     389: invokevirtual #929                // Method scala/Predef$.println:(Ljava/lang/Object;)V
     392: goto          395
     395: aload_0
     396: invokevirtual #933                // Method deleteRegisteredH2OFrames:()V
     399: aload_0
     400: invokevirtual #936                // Method getKeepBinaryModels:()Z
     403: ifeq          484
     406: aload_0
     407: aload         11
     409: getstatic     #911                // Field ai/h2o/sparkling/H2OContext$.MODULE$:Lai/h2o/sparkling/H2OContext$;
     412: invokedynamic #942,  0            // InvokeDynamic #4:apply:()Lscala/Function0;
     417: invokevirtual #946                // Method ai/h2o/sparkling/H2OContext$.ensure:(Lscala/Function0;)Lai/h2o/sparkling/H2OContext;
     420: invokevirtual #952                // Method ai/h2o/sparkling/H2OContext.getConf:()Lai/h2o/sparkling/H2OConf;
     423: invokevirtual #956                // Method downloadBinaryModel:(Ljava/lang/String;Lai/h2o/sparkling/H2OConf;)Ljava/io/File;
     426: astore        15
     428: aload_0
     429: new           #958                // class scala/Some
     432: dup
     433: getstatic     #963                // Field ai/h2o/sparkling/ml/models/H2OBinaryModel$.MODULE$:Lai/h2o/sparkling/ml/models/H2OBinaryModel$;
     436: new           #965                // class java/lang/StringBuilder
     439: dup
     440: ldc_w         #740                // int 7
     443: invokespecial #968                // Method java/lang/StringBuilder."<init>":(I)V
     446: ldc_w         #970                // String file://
     449: invokevirtual #974                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     452: aload         15
     454: invokevirtual #979                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     457: invokevirtual #974                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     460: invokevirtual #982                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     463: new           #958                // class scala/Some
     466: dup
     467: aload         11
     469: invokespecial #983                // Method scala/Some."<init>":(Ljava/lang/Object;)V
     472: invokevirtual #986                // Method ai/h2o/sparkling/ml/models/H2OBinaryModel$.read:(Ljava/lang/String;Lscala/Option;)Lai/h2o/sparkling/ml/models/H2OBinaryModel;
     475: invokespecial #983                // Method scala/Some."<init>":(Ljava/lang/Object;)V
     478: invokevirtual #990                // Method binaryModel_$eq:(Lscala/Option;)V
     481: goto          504
     484: aload         12
     486: invokevirtual #993                // Method ai/h2o/sparkling/ml/internals/H2OModel.tryDelete:()V
     489: aload_0
     490: getstatic     #721                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     493: aload         9
     495: checkcast     #723                // class "[Ljava/lang/Object;"
     498: invokevirtual #818                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     501: invokespecial #997                // Method deleteModels:(Lscala/collection/Seq;)V
     504: aload         14
     506: areturn

  private java.lang.String modelsIdsToString(ai.h2o.sparkling.ml.models.H2OMOJOModel[]);
    Code:
       0: aload_0
       1: getstatic     #721                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       4: aload_1
       5: checkcast     #723                // class "[Ljava/lang/Object;"
       8: invokevirtual #818                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      11: invokespecial #1018               // Method modelsIds:(Lscala/collection/Seq;)Lscala/collection/Seq;
      14: ldc_w         #1020               // String [
      17: ldc_w         #1022               // String ,
      20: ldc_w         #1024               // String ]
      23: invokeinterface #1030,  4         // InterfaceMethod scala/collection/Seq.mkString:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      28: areturn

  private scala.collection.Seq<java.lang.String> modelsIds(scala.collection.Seq<ai.h2o.sparkling.ml.models.H2OMOJOModel>);
    Code:
       0: aload_1
       1: invokedynamic #1038,  0           // InvokeDynamic #5:apply:()Lscala/Function1;
       6: getstatic     #1043               // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
       9: invokevirtual #1046               // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      12: invokeinterface #1047,  3         // InterfaceMethod scala/collection/Seq.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      17: checkcast     #1026               // class scala/collection/Seq
      20: areturn

  private void deleteModels(scala.collection.Seq<ai.h2o.sparkling.ml.models.H2OMOJOModel>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1018               // Method modelsIds:(Lscala/collection/Seq;)Lscala/collection/Seq;
       5: invokedynamic #1055,  0           // InvokeDynamic #6:apply:()Lscala/Function1;
      10: invokeinterface #1059,  2         // InterfaceMethod scala/collection/Seq.foreach:(Lscala/Function1;)V
      15: return

  public org.apache.spark.sql.types.StructType transformSchema(org.apache.spark.sql.types.StructType);
    Code:
       0: aload_1
       1: areturn

  public ai.h2o.sparkling.ml.algos.H2OStackedEnsemble copy(org.apache.spark.ml.param.ParamMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1071               // Method defaultCopy:(Lorg/apache/spark/ml/param/ParamMap;)Lorg/apache/spark/ml/param/Params;
       5: checkcast     #2                  // class ai/h2o/sparkling/ml/algos/H2OStackedEnsemble
       8: areturn

  public scala.reflect.ClassTag<hex.ensemble.StackedEnsembleModel$StackedEnsembleParameters> paramTag();
    Code:
       0: getstatic     #1080               // Field scala/reflect/package$.MODULE$:Lscala/reflect/package$;
       3: getstatic     #764                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       6: ldc           #18                 // class hex/ensemble/StackedEnsembleModel$StackedEnsembleParameters
       8: invokevirtual #769                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      11: invokevirtual #1084               // Method scala/reflect/package$.classTag:(Lscala/reflect/ClassTag;)Lscala/reflect/ClassTag;
      14: areturn

  public java.lang.String[] getInputCols();
    Code:
       0: aload_0
       1: invokevirtual #1088               // Method getFeaturesCols:()[Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.algos.H2OStackedEnsemble setInputCols(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1094               // Method setFeaturesCols:([Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams;
       5: checkcast     #2                  // class ai/h2o/sparkling/ml/algos/H2OStackedEnsemble
       8: areturn

  public ai.h2o.sparkling.ml.algos.H2OSupervisedAlgorithm setOffsetCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1097               // Method setOffsetCol:(Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: checkcast     #5                  // class ai/h2o/sparkling/ml/algos/H2OSupervisedAlgorithm
       8: areturn

  public ai.h2o.sparkling.ml.algos.H2OSupervisedAlgorithm setWeightCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1099               // Method setWeightCol:(Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: checkcast     #5                  // class ai/h2o/sparkling/ml/algos/H2OSupervisedAlgorithm
       8: areturn

  public ai.h2o.sparkling.ml.algos.H2OSupervisedAlgorithm setLabelCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1101               // Method setLabelCol:(Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;
       5: checkcast     #5                  // class ai/h2o/sparkling/ml/algos/H2OSupervisedAlgorithm
       8: areturn

  public ai.h2o.sparkling.ml.algos.H2OAlgoCommonUtils setInputCols(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1104               // Method setInputCols:([Ljava/lang/String;)Lai/h2o/sparkling/ml/algos/H2OStackedEnsemble;
       5: areturn

  public ai.h2o.sparkling.ml.algos.H2OAlgorithm setInputCols(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1104               // Method setInputCols:([Ljava/lang/String;)Lai/h2o/sparkling/ml/algos/H2OStackedEnsemble;
       5: areturn

  public org.apache.spark.ml.param.Params copy(org.apache.spark.ml.param.ParamMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1107               // Method copy:(Lorg/apache/spark/ml/param/ParamMap;)Lai/h2o/sparkling/ml/algos/H2OStackedEnsemble;
       5: areturn

  public org.apache.spark.ml.PipelineStage copy(org.apache.spark.ml.param.ParamMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1107               // Method copy:(Lorg/apache/spark/ml/param/ParamMap;)Lai/h2o/sparkling/ml/algos/H2OStackedEnsemble;
       5: areturn

  public org.apache.spark.ml.Estimator copy(org.apache.spark.ml.param.ParamMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1107               // Method copy:(Lorg/apache/spark/ml/param/ParamMap;)Lai/h2o/sparkling/ml/algos/H2OStackedEnsemble;
       5: areturn

  public ai.h2o.sparkling.ml.algos.H2OEstimator copy(org.apache.spark.ml.param.ParamMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1107               // Method copy:(Lorg/apache/spark/ml/param/ParamMap;)Lai/h2o/sparkling/ml/algos/H2OStackedEnsemble;
       5: areturn

  public org.apache.spark.ml.Model fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1113               // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OStackedEnsembleMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2OMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1113               // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OStackedEnsembleMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2OAlgorithmMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1113               // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OStackedEnsembleMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2OSupervisedMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1113               // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OStackedEnsembleMOJOModel;
       5: areturn

  public static final ai.h2o.sparkling.ml.models.H2OMOJOModel $anonfun$fit$1(ai.h2o.sparkling.H2OFrame, scala.Option, ai.h2o.sparkling.ml.algos.H2OAlgorithm);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokevirtual #1125               // Method ai/h2o/sparkling/ml/algos/H2OAlgorithm.trainH2OModel:(Lai/h2o/sparkling/H2OFrame;Lscala/Option;)Lai/h2o/sparkling/ml/models/H2OMOJOModel;
       6: areturn

  public static final scala.collection.immutable.Map $anonfun$fit$2(ai.h2o.sparkling.H2OFrame);
    Code:
       0: getstatic     #721                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: invokevirtual #785                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
       6: getstatic     #721                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       9: iconst_1
      10: anewarray     #693                // class scala/Tuple2
      13: dup
      14: iconst_0
      15: getstatic     #788                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      18: getstatic     #721                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      21: ldc_w         #1129               // String validation_frame
      24: invokevirtual #793                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      27: aload_0
      28: invokevirtual #796                // Method ai/h2o/sparkling/H2OFrame.frameId:()Ljava/lang/String;
      31: invokevirtual #800                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      34: aastore
      35: checkcast     #723                // class "[Ljava/lang/Object;"
      38: invokevirtual #818                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      41: invokevirtual #823                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
      44: checkcast     #825                // class scala/collection/immutable/Map
      47: areturn

  public static final scala.collection.immutable.Map $anonfun$fit$3();
    Code:
       0: getstatic     #721                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: invokevirtual #785                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
       6: getstatic     #1134               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       9: invokevirtual #823                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
      12: checkcast     #825                // class scala/collection/immutable/Map
      15: areturn

  public static final boolean $anonfun$fit$4(ai.h2o.sparkling.H2OContext);
    Code:
       0: aload_0
       1: invokevirtual #952                // Method ai/h2o/sparkling/H2OContext.getConf:()Lai/h2o/sparkling/H2OConf;
       4: invokevirtual #1142               // Method ai/h2o/sparkling/H2OConf.isModelPrintAfterTrainingEnabled:()Z
       7: ireturn

  public static final java.lang.String $anonfun$fit$5();
    Code:
       0: getstatic     #911                // Field ai/h2o/sparkling/H2OContext$.MODULE$:Lai/h2o/sparkling/H2OContext$;
       3: invokevirtual #1146               // Method ai/h2o/sparkling/H2OContext$.ensure$default$1:()Ljava/lang/String;
       6: areturn

  public static final java.lang.String $anonfun$modelsIds$1(ai.h2o.sparkling.ml.models.H2OMOJOModel);
    Code:
       0: aload_0
       1: invokevirtual #1150               // Method ai/h2o/sparkling/ml/models/H2OMOJOModel.mojoFileName:()Ljava/lang/String;
       4: areturn

  public static final void $anonfun$deleteModels$1(java.lang.String);
    Code:
       0: getstatic     #869                // Field ai/h2o/sparkling/ml/internals/H2OModel$.MODULE$:Lai/h2o/sparkling/ml/internals/H2OModel$;
       3: aload_0
       4: invokevirtual #872                // Method ai/h2o/sparkling/ml/internals/H2OModel$.apply:(Ljava/lang/String;)Lai/h2o/sparkling/ml/internals/H2OModel;
       7: invokevirtual #993                // Method ai/h2o/sparkling/ml/internals/H2OModel.tryDelete:()V
      10: return

  public ai.h2o.sparkling.ml.algos.H2OStackedEnsemble(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #673                // Field uid:Ljava/lang/String;
       5: aload_0
       6: getstatic     #764                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       9: ldc           #18                 // class hex/ensemble/StackedEnsembleModel$StackedEnsembleParameters
      11: invokevirtual #769                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      14: invokespecial #1156               // Method ai/h2o/sparkling/ml/algos/H2OSupervisedAlgorithm."<init>":(Lscala/reflect/ClassTag;)V
      17: aload_0
      18: invokestatic  #1160               // InterfaceMethod ai/h2o/sparkling/ml/params/HasBlendingDataFrame.$init$:(Lai/h2o/sparkling/ml/params/HasBlendingDataFrame;)V
      21: aload_0
      22: invokestatic  #1163               // InterfaceMethod ai/h2o/sparkling/ml/params/HasBaseAlgorithms.$init$:(Lai/h2o/sparkling/ml/params/HasBaseAlgorithms;)V
      25: aload_0
      26: invokestatic  #1166               // InterfaceMethod ai/h2o/sparkling/ml/params/H2OStackedEnsembleParams.$init$:(Lai/h2o/sparkling/ml/params/H2OStackedEnsembleParams;)V
      29: return

  public ai.h2o.sparkling.ml.algos.H2OStackedEnsemble();
    Code:
       0: aload_0
       1: getstatic     #1171               // Field org/apache/spark/ml/util/Identifiable$.MODULE$:Lorg/apache/spark/ml/util/Identifiable$;
       4: ldc           #2                  // class ai/h2o/sparkling/ml/algos/H2OStackedEnsemble
       6: invokevirtual #1176               // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       9: invokevirtual #1179               // Method org/apache/spark/ml/util/Identifiable$.randomUID:(Ljava/lang/String;)Ljava/lang/String;
      12: invokespecial #1180               // Method "<init>":(Ljava/lang/String;)V
      15: return

  public static final java.lang.Object $anonfun$fit$4$adapted(ai.h2o.sparkling.H2OContext);
    Code:
       0: aload_0
       1: invokestatic  #1182               // Method $anonfun$fit$4:(Lai/h2o/sparkling/H2OContext;)Z
       4: invokestatic  #1186               // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public static final java.lang.Object $anonfun$deleteModels$1$adapted(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #1188               // Method $anonfun$deleteModels$1:(Ljava/lang/String;)V
       4: getstatic     #1194               // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       7: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #1206,  0           // InvokeDynamic #7:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
