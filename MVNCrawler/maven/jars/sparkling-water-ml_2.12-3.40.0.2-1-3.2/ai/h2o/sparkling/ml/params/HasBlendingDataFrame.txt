Compiled from "HasBlendingDataFrame.scala"
public interface ai.h2o.sparkling.ml.params.HasBlendingDataFrame extends ai.h2o.sparkling.ml.params.H2OAlgoParamsBase,org.apache.spark.expose.Logging,ai.h2o.sparkling.ml.params.HasDataFrameSerializer {
  public abstract void ai$h2o$sparkling$ml$params$HasBlendingDataFrame$_setter_$ai$h2o$sparkling$ml$params$HasBlendingDataFrame$$blendingDataFrame_$eq(ai.h2o.sparkling.ml.params.NonSerializableNullableDataFrameParam);

  public abstract scala.collection.immutable.Map ai$h2o$sparkling$ml$params$HasBlendingDataFrame$$super$getSWtoH2OParamNameMap();

  public abstract java.lang.String uid();

  public abstract ai.h2o.sparkling.ml.params.NonSerializableNullableDataFrameParam ai$h2o$sparkling$ml$params$HasBlendingDataFrame$$blendingDataFrame();

  public static org.apache.spark.sql.Dataset getBlendingDataFrame$(ai.h2o.sparkling.ml.params.HasBlendingDataFrame);
    Code:
       0: aload_0
       1: invokespecial #35                 // InterfaceMethod getBlendingDataFrame:()Lorg/apache/spark/sql/Dataset;
       4: areturn

  public default org.apache.spark.sql.Dataset<org.apache.spark.sql.Row> getBlendingDataFrame();
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #39,  1           // InterfaceMethod ai$h2o$sparkling$ml$params$HasBlendingDataFrame$$blendingDataFrame:()Lai/h2o/sparkling/ml/params/NonSerializableNullableDataFrameParam;
       7: invokeinterface #43,  2           // InterfaceMethod $:(Lorg/apache/spark/ml/param/Param;)Ljava/lang/Object;
      12: checkcast     #45                 // class org/apache/spark/sql/Dataset
      15: areturn

  public static ai.h2o.sparkling.ml.params.HasBlendingDataFrame setBlendingDataFrame$(ai.h2o.sparkling.ml.params.HasBlendingDataFrame, org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #53                 // InterfaceMethod setBlendingDataFrame:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/params/HasBlendingDataFrame;
       5: areturn

  public default ai.h2o.sparkling.ml.params.HasBlendingDataFrame setBlendingDataFrame(org.apache.spark.sql.Dataset<org.apache.spark.sql.Row>);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #39,  1           // InterfaceMethod ai$h2o$sparkling$ml$params$HasBlendingDataFrame$$blendingDataFrame:()Lai/h2o/sparkling/ml/params/NonSerializableNullableDataFrameParam;
       7: aload_1
       8: invokeinterface #59,  3           // InterfaceMethod set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      13: checkcast     #2                  // class ai/h2o/sparkling/ml/params/HasBlendingDataFrame
      16: areturn

  public static scala.collection.immutable.Map getBlendingDataFrameParam$(ai.h2o.sparkling.ml.params.HasBlendingDataFrame, ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #66                 // InterfaceMethod getBlendingDataFrameParam:(Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public default scala.collection.immutable.Map<java.lang.String, java.lang.Object> getBlendingDataFrameParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: getstatic     #74                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: invokevirtual #78                 // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
       6: getstatic     #74                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       9: iconst_1
      10: anewarray     #80                 // class scala/Tuple2
      13: dup
      14: iconst_0
      15: getstatic     #83                 // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      18: getstatic     #74                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      21: ldc           #85                 // String blending_frame
      23: invokevirtual #89                 // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      26: aload_0
      27: aload_0
      28: invokeinterface #35,  1           // InterfaceMethod getBlendingDataFrame:()Lorg/apache/spark/sql/Dataset;
      33: invokeinterface #93,  2           // InterfaceMethod convertDataFrameToH2OFrameKey:(Lorg/apache/spark/sql/Dataset;)Ljava/lang/String;
      38: invokevirtual #97                 // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      41: aastore
      42: checkcast     #99                 // class "[Ljava/lang/Object;"
      45: invokevirtual #103                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      48: invokevirtual #109                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
      51: checkcast     #111                // class scala/collection/immutable/Map
      54: areturn

  public static scala.collection.immutable.Map getSWtoH2OParamNameMap$(ai.h2o.sparkling.ml.params.HasBlendingDataFrame);
    Code:
       0: aload_0
       1: invokespecial #116                // InterfaceMethod getSWtoH2OParamNameMap:()Lscala/collection/immutable/Map;
       4: areturn

  public default scala.collection.immutable.Map<java.lang.String, java.lang.String> getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokeinterface #119,  1          // InterfaceMethod ai$h2o$sparkling$ml$params$HasBlendingDataFrame$$super$getSWtoH2OParamNameMap:()Lscala/collection/immutable/Map;
       6: getstatic     #74                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       9: invokevirtual #78                 // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
      12: getstatic     #74                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      15: iconst_1
      16: anewarray     #80                 // class scala/Tuple2
      19: dup
      20: iconst_0
      21: getstatic     #83                 // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      24: getstatic     #74                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      27: ldc           #121                // String blendingDataFrame
      29: invokevirtual #89                 // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      32: ldc           #85                 // String blending_frame
      34: invokevirtual #97                 // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      37: aastore
      38: checkcast     #99                 // class "[Ljava/lang/Object;"
      41: invokevirtual #103                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      44: invokevirtual #109                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
      47: invokeinterface #125,  2          // InterfaceMethod scala/collection/immutable/Map.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/Map;
      52: areturn

  public static void $init$(ai.h2o.sparkling.ml.params.HasBlendingDataFrame);
    Code:
       0: aload_0
       1: new           #129                // class ai/h2o/sparkling/ml/params/NonSerializableNullableDataFrameParam
       4: dup
       5: aload_0
       6: ldc           #121                // String blendingDataFrame
       8: ldc           #131                // String This parameter is used for  computing the predictions that serve as the training frame for the meta-learner. If provided, this triggers blending mode on the stacked ensemble training stage. Blending mode is faster than cross-validating the base learners (though these ensembles may not perform as well as the Super Learner ensemble).
      10: invokespecial #135                // Method ai/h2o/sparkling/ml/params/NonSerializableNullableDataFrameParam."<init>":(Lai/h2o/sparkling/ml/params/HasDataFrameSerializer;Ljava/lang/String;Ljava/lang/String;)V
      13: invokeinterface #137,  2          // InterfaceMethod ai$h2o$sparkling$ml$params$HasBlendingDataFrame$_setter_$ai$h2o$sparkling$ml$params$HasBlendingDataFrame$$blendingDataFrame_$eq:(Lai/h2o/sparkling/ml/params/NonSerializableNullableDataFrameParam;)V
      18: aload_0
      19: getstatic     #74                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      22: iconst_1
      23: anewarray     #139                // class org/apache/spark/ml/param/ParamPair
      26: dup
      27: iconst_0
      28: aload_0
      29: invokeinterface #39,  1           // InterfaceMethod ai$h2o$sparkling$ml$params$HasBlendingDataFrame$$blendingDataFrame:()Lai/h2o/sparkling/ml/params/NonSerializableNullableDataFrameParam;
      34: aconst_null
      35: invokevirtual #143                // Method ai/h2o/sparkling/ml/params/NonSerializableNullableDataFrameParam.$minus$greater:(Ljava/lang/Object;)Lorg/apache/spark/ml/param/ParamPair;
      38: aastore
      39: checkcast     #99                 // class "[Ljava/lang/Object;"
      42: invokevirtual #103                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      45: invokeinterface #147,  2          // InterfaceMethod setDefault:(Lscala/collection/Seq;)Lorg/apache/spark/ml/param/Params;
      50: pop
      51: return
}
