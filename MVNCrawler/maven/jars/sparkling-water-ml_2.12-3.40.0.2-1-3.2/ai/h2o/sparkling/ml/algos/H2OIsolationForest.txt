Compiled from "H2OIsolationForest.scala"
public class ai.h2o.sparkling.ml.algos.H2OIsolationForest extends ai.h2o.sparkling.ml.algos.H2OTreeBasedUnsupervisedAlgorithm<hex.tree.isofor.IsolationForestModel$IsolationForestParameters> implements ai.h2o.sparkling.ml.params.H2OIsolationForestParams {
  private final java.lang.String uid;

  private final org.apache.spark.ml.param.LongParam sampleSize;

  private final org.apache.spark.ml.param.DoubleParam sampleRate;

  private final org.apache.spark.ml.param.IntParam mtries;

  private final org.apache.spark.ml.param.DoubleParam contamination;

  private final org.apache.spark.ml.param.IntParam ntrees;

  private final org.apache.spark.ml.param.IntParam maxDepth;

  private final org.apache.spark.ml.param.DoubleParam minRows;

  private final org.apache.spark.ml.param.LongParam seed;

  private final org.apache.spark.ml.param.BooleanParam buildTreeOneNode;

  private final org.apache.spark.ml.param.DoubleParam colSampleRatePerTree;

  private final org.apache.spark.ml.param.DoubleParam colSampleRateChangePerLevel;

  private final org.apache.spark.ml.param.IntParam scoreTreeInterval;

  private final ai.h2o.sparkling.ml.params.NullableStringParam modelId;

  private final org.apache.spark.ml.param.Param<java.lang.String> categoricalEncoding;

  private final org.apache.spark.ml.param.BooleanParam ignoreConstCols;

  private final org.apache.spark.ml.param.BooleanParam scoreEachIteration;

  private final org.apache.spark.ml.param.IntParam stoppingRounds;

  private final org.apache.spark.ml.param.DoubleParam maxRuntimeSecs;

  private final org.apache.spark.ml.param.Param<java.lang.String> stoppingMetric;

  private final org.apache.spark.ml.param.DoubleParam stoppingTolerance;

  private final ai.h2o.sparkling.ml.params.NullableStringParam exportCheckpointsDir;

  private final org.apache.spark.ml.param.Param<java.lang.String> validationLabelCol;

  private final ai.h2o.sparkling.ml.params.NullableDataFrameParam ai$h2o$sparkling$ml$params$HasCalibrationDataFrame$$calibrationDataFrame;

  private final ai.h2o.sparkling.ml.params.NullableStringArrayParam ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols;

  public static org.apache.spark.ml.util.MLReader<ai.h2o.sparkling.ml.algos.H2OIsolationForest> read();
    Code:
       0: getstatic     #60                 // Field ai/h2o/sparkling/ml/algos/H2OIsolationForest$.MODULE$:Lai/h2o/sparkling/ml/algos/H2OIsolationForest$;
       3: invokevirtual #62                 // Method ai/h2o/sparkling/ml/algos/H2OIsolationForest$.read:()Lorg/apache/spark/ml/util/MLReader;
       6: areturn

  public static java.lang.Object load(java.lang.String);
    Code:
       0: getstatic     #60                 // Field ai/h2o/sparkling/ml/algos/H2OIsolationForest$.MODULE$:Lai/h2o/sparkling/ml/algos/H2OIsolationForest$;
       3: aload_0
       4: invokevirtual #67                 // Method ai/h2o/sparkling/ml/algos/H2OIsolationForest$.load:(Ljava/lang/String;)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OIsolationForestParams$$super$getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #76                 // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.getH2OAlgorithmParams$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OIsolationForestParams$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #87                 // InterfaceMethod ai/h2o/sparkling/ml/params/HasValidationLabelCol.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/HasValidationLabelCol;)Lscala/collection/immutable/Map;
       4: areturn

  public scala.reflect.ClassTag<hex.tree.isofor.IsolationForestModel$IsolationForestParameters> paramTag();
    Code:
       0: aload_0
       1: invokestatic  #94                 // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.paramTag$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;)Lscala/reflect/ClassTag;
       4: areturn

  public long getSampleSize();
    Code:
       0: aload_0
       1: invokestatic  #100                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.getSampleSize$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;)J
       4: lreturn

  public double getSampleRate();
    Code:
       0: aload_0
       1: invokestatic  #106                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.getSampleRate$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;)D
       4: dreturn

  public int getMtries();
    Code:
       0: aload_0
       1: invokestatic  #112                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.getMtries$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;)I
       4: ireturn

  public double getContamination();
    Code:
       0: aload_0
       1: invokestatic  #116                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.getContamination$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;)D
       4: dreturn

  public int getNtrees();
    Code:
       0: aload_0
       1: invokestatic  #120                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.getNtrees$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;)I
       4: ireturn

  public int getMaxDepth();
    Code:
       0: aload_0
       1: invokestatic  #124                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.getMaxDepth$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;)I
       4: ireturn

  public double getMinRows();
    Code:
       0: aload_0
       1: invokestatic  #128                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.getMinRows$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;)D
       4: dreturn

  public long getSeed();
    Code:
       0: aload_0
       1: invokestatic  #132                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.getSeed$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;)J
       4: lreturn

  public boolean getBuildTreeOneNode();
    Code:
       0: aload_0
       1: invokestatic  #138                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.getBuildTreeOneNode$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;)Z
       4: ireturn

  public double getColSampleRatePerTree();
    Code:
       0: aload_0
       1: invokestatic  #142                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.getColSampleRatePerTree$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;)D
       4: dreturn

  public double getColSampleRateChangePerLevel();
    Code:
       0: aload_0
       1: invokestatic  #146                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.getColSampleRateChangePerLevel$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;)D
       4: dreturn

  public int getScoreTreeInterval();
    Code:
       0: aload_0
       1: invokestatic  #150                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.getScoreTreeInterval$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;)I
       4: ireturn

  public java.lang.String getModelId();
    Code:
       0: aload_0
       1: invokestatic  #156                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.getModelId$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getCategoricalEncoding();
    Code:
       0: aload_0
       1: invokestatic  #160                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.getCategoricalEncoding$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;)Ljava/lang/String;
       4: areturn

  public boolean getIgnoreConstCols();
    Code:
       0: aload_0
       1: invokestatic  #164                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.getIgnoreConstCols$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;)Z
       4: ireturn

  public boolean getScoreEachIteration();
    Code:
       0: aload_0
       1: invokestatic  #168                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.getScoreEachIteration$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;)Z
       4: ireturn

  public int getStoppingRounds();
    Code:
       0: aload_0
       1: invokestatic  #172                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.getStoppingRounds$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;)I
       4: ireturn

  public double getMaxRuntimeSecs();
    Code:
       0: aload_0
       1: invokestatic  #176                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.getMaxRuntimeSecs$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;)D
       4: dreturn

  public java.lang.String getStoppingMetric();
    Code:
       0: aload_0
       1: invokestatic  #180                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.getStoppingMetric$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;)Ljava/lang/String;
       4: areturn

  public double getStoppingTolerance();
    Code:
       0: aload_0
       1: invokestatic  #184                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.getStoppingTolerance$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;)D
       4: dreturn

  public java.lang.String getExportCheckpointsDir();
    Code:
       0: aload_0
       1: invokestatic  #188                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.getExportCheckpointsDir$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;)Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.params.H2OIsolationForestParams setSampleSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #195                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.setSampleSize$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;J)Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OIsolationForestParams setSampleRate(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #202                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.setSampleRate$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;D)Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OIsolationForestParams setMtries(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #209                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.setMtries$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;I)Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OIsolationForestParams setContamination(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #214                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.setContamination$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;D)Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OIsolationForestParams setNtrees(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #218                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.setNtrees$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;I)Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OIsolationForestParams setMaxDepth(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #222                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.setMaxDepth$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;I)Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OIsolationForestParams setMinRows(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #226                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.setMinRows$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;D)Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OIsolationForestParams setSeed(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #230                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.setSeed$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;J)Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OIsolationForestParams setBuildTreeOneNode(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #236                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.setBuildTreeOneNode$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;Z)Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OIsolationForestParams setColSampleRatePerTree(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #241                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.setColSampleRatePerTree$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;D)Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OIsolationForestParams setColSampleRateChangePerLevel(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #245                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.setColSampleRateChangePerLevel$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;D)Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OIsolationForestParams setScoreTreeInterval(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #249                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.setScoreTreeInterval$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;I)Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OIsolationForestParams setModelId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #255                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.setModelId$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OIsolationForestParams setCategoricalEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #259                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.setCategoricalEncoding$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OIsolationForestParams setIgnoreConstCols(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #263                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.setIgnoreConstCols$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;Z)Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OIsolationForestParams setScoreEachIteration(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #267                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.setScoreEachIteration$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;Z)Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OIsolationForestParams setStoppingRounds(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #271                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.setStoppingRounds$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;I)Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OIsolationForestParams setMaxRuntimeSecs(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #275                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.setMaxRuntimeSecs$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;D)Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OIsolationForestParams setStoppingMetric(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #279                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.setStoppingMetric$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OIsolationForestParams setStoppingTolerance(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #283                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.setStoppingTolerance$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;D)Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OIsolationForestParams setExportCheckpointsDir(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #287                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.setExportCheckpointsDir$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #292                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.getH2OAlgorithmParams$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OIsolationForestParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #296                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.getH2OIsolationForestParams$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.String> getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #301                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;)Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$HasValidationLabelCol$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #307                // InterfaceMethod ai/h2o/sparkling/ml/params/HasCalibrationDataFrame.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/HasCalibrationDataFrame;)Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.Seq ai$h2o$sparkling$ml$params$HasValidationLabelCol$$super$getAdditionalValidationCols();
    Code:
       0: aload_0
       1: invokestatic  #315                // InterfaceMethod ai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils.getAdditionalValidationCols$:(Lai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils;)Lscala/collection/Seq;
       4: areturn

  public java.lang.String getValidationLabelCol();
    Code:
       0: aload_0
       1: invokestatic  #320                // InterfaceMethod ai/h2o/sparkling/ml/params/HasValidationLabelCol.getValidationLabelCol$:(Lai/h2o/sparkling/ml/params/HasValidationLabelCol;)Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.params.HasValidationLabelCol setValidationLabelCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #326                // InterfaceMethod ai/h2o/sparkling/ml/params/HasValidationLabelCol.setValidationLabelCol$:(Lai/h2o/sparkling/ml/params/HasValidationLabelCol;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/HasValidationLabelCol;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getValidationLabelColParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #331                // InterfaceMethod ai/h2o/sparkling/ml/params/HasValidationLabelCol.getValidationLabelColParam$:(Lai/h2o/sparkling/ml/params/HasValidationLabelCol;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.Seq<java.lang.String> getAdditionalValidationCols();
    Code:
       0: aload_0
       1: invokestatic  #336                // InterfaceMethod ai/h2o/sparkling/ml/params/HasValidationLabelCol.getAdditionalValidationCols$:(Lai/h2o/sparkling/ml/params/HasValidationLabelCol;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$HasCalibrationDataFrame$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #342                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;)Lscala/collection/immutable/Map;
       4: areturn

  public org.apache.spark.sql.Dataset<org.apache.spark.sql.Row> getCalibrationDataFrame();
    Code:
       0: aload_0
       1: invokestatic  #349                // InterfaceMethod ai/h2o/sparkling/ml/params/HasCalibrationDataFrame.getCalibrationDataFrame$:(Lai/h2o/sparkling/ml/params/HasCalibrationDataFrame;)Lorg/apache/spark/sql/Dataset;
       4: areturn

  public ai.h2o.sparkling.ml.params.HasCalibrationDataFrame setCalibrationDataFrame(org.apache.spark.sql.Dataset<org.apache.spark.sql.Row>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #356                // InterfaceMethod ai/h2o/sparkling/ml/params/HasCalibrationDataFrame.setCalibrationDataFrame$:(Lai/h2o/sparkling/ml/params/HasCalibrationDataFrame;Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/params/HasCalibrationDataFrame;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getCalibrationDataFrameParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #362                // InterfaceMethod ai/h2o/sparkling/ml/params/HasCalibrationDataFrame.getCalibrationDataFrameParam$:(Lai/h2o/sparkling/ml/params/HasCalibrationDataFrame;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$HasIgnoredCols$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #366                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;)Lscala/collection/immutable/Map;
       4: areturn

  public java.lang.String[] getIgnoredCols();
    Code:
       0: aload_0
       1: invokestatic  #372                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.getIgnoredCols$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;)[Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.params.HasIgnoredCols setIgnoredCols(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #378                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.setIgnoredCols$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;[Ljava/lang/String;)Lai/h2o/sparkling/ml/params/HasIgnoredCols;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getIgnoredColsParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #384                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.getIgnoredColsParam$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public org.apache.spark.ml.param.LongParam sampleSize();
    Code:
       0: aload_0
       1: getfield      #387                // Field sampleSize:Lorg/apache/spark/ml/param/LongParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam sampleRate();
    Code:
       0: aload_0
       1: getfield      #390                // Field sampleRate:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam mtries();
    Code:
       0: aload_0
       1: getfield      #393                // Field mtries:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam contamination();
    Code:
       0: aload_0
       1: getfield      #395                // Field contamination:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam ntrees();
    Code:
       0: aload_0
       1: getfield      #397                // Field ntrees:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam maxDepth();
    Code:
       0: aload_0
       1: getfield      #399                // Field maxDepth:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam minRows();
    Code:
       0: aload_0
       1: getfield      #401                // Field minRows:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.LongParam seed();
    Code:
       0: aload_0
       1: getfield      #403                // Field seed:Lorg/apache/spark/ml/param/LongParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam buildTreeOneNode();
    Code:
       0: aload_0
       1: getfield      #406                // Field buildTreeOneNode:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam colSampleRatePerTree();
    Code:
       0: aload_0
       1: getfield      #408                // Field colSampleRatePerTree:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam colSampleRateChangePerLevel();
    Code:
       0: aload_0
       1: getfield      #410                // Field colSampleRateChangePerLevel:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam scoreTreeInterval();
    Code:
       0: aload_0
       1: getfield      #412                // Field scoreTreeInterval:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam modelId();
    Code:
       0: aload_0
       1: getfield      #415                // Field modelId:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> categoricalEncoding();
    Code:
       0: aload_0
       1: getfield      #419                // Field categoricalEncoding:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam ignoreConstCols();
    Code:
       0: aload_0
       1: getfield      #421                // Field ignoreConstCols:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam scoreEachIteration();
    Code:
       0: aload_0
       1: getfield      #423                // Field scoreEachIteration:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam stoppingRounds();
    Code:
       0: aload_0
       1: getfield      #425                // Field stoppingRounds:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam maxRuntimeSecs();
    Code:
       0: aload_0
       1: getfield      #427                // Field maxRuntimeSecs:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> stoppingMetric();
    Code:
       0: aload_0
       1: getfield      #429                // Field stoppingMetric:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam stoppingTolerance();
    Code:
       0: aload_0
       1: getfield      #431                // Field stoppingTolerance:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam exportCheckpointsDir();
    Code:
       0: aload_0
       1: getfield      #433                // Field exportCheckpointsDir:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public void ai$h2o$sparkling$ml$params$H2OIsolationForestParams$_setter_$sampleSize_$eq(org.apache.spark.ml.param.LongParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #387                // Field sampleSize:Lorg/apache/spark/ml/param/LongParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OIsolationForestParams$_setter_$sampleRate_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #390                // Field sampleRate:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OIsolationForestParams$_setter_$mtries_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #393                // Field mtries:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OIsolationForestParams$_setter_$contamination_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #395                // Field contamination:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OIsolationForestParams$_setter_$ntrees_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #397                // Field ntrees:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OIsolationForestParams$_setter_$maxDepth_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #399                // Field maxDepth:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OIsolationForestParams$_setter_$minRows_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #401                // Field minRows:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OIsolationForestParams$_setter_$seed_$eq(org.apache.spark.ml.param.LongParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #403                // Field seed:Lorg/apache/spark/ml/param/LongParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OIsolationForestParams$_setter_$buildTreeOneNode_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #406                // Field buildTreeOneNode:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OIsolationForestParams$_setter_$colSampleRatePerTree_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #408                // Field colSampleRatePerTree:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OIsolationForestParams$_setter_$colSampleRateChangePerLevel_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #410                // Field colSampleRateChangePerLevel:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OIsolationForestParams$_setter_$scoreTreeInterval_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #412                // Field scoreTreeInterval:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OIsolationForestParams$_setter_$modelId_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #415                // Field modelId:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OIsolationForestParams$_setter_$categoricalEncoding_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #419                // Field categoricalEncoding:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OIsolationForestParams$_setter_$ignoreConstCols_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #421                // Field ignoreConstCols:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OIsolationForestParams$_setter_$scoreEachIteration_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #423                // Field scoreEachIteration:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OIsolationForestParams$_setter_$stoppingRounds_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #425                // Field stoppingRounds:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OIsolationForestParams$_setter_$maxRuntimeSecs_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #427                // Field maxRuntimeSecs:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OIsolationForestParams$_setter_$stoppingMetric_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #429                // Field stoppingMetric:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OIsolationForestParams$_setter_$stoppingTolerance_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #431                // Field stoppingTolerance:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OIsolationForestParams$_setter_$exportCheckpointsDir_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #433                // Field exportCheckpointsDir:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public org.apache.spark.ml.param.Param<java.lang.String> validationLabelCol();
    Code:
       0: aload_0
       1: getfield      #464                // Field validationLabelCol:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public void ai$h2o$sparkling$ml$params$HasValidationLabelCol$_setter_$validationLabelCol_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #464                // Field validationLabelCol:Lorg/apache/spark/ml/param/Param;
       5: return

  public ai.h2o.sparkling.ml.params.NullableDataFrameParam ai$h2o$sparkling$ml$params$HasCalibrationDataFrame$$calibrationDataFrame();
    Code:
       0: aload_0
       1: getfield      #468                // Field ai$h2o$sparkling$ml$params$HasCalibrationDataFrame$$calibrationDataFrame:Lai/h2o/sparkling/ml/params/NullableDataFrameParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$HasCalibrationDataFrame$_setter_$ai$h2o$sparkling$ml$params$HasCalibrationDataFrame$$calibrationDataFrame_$eq(ai.h2o.sparkling.ml.params.NullableDataFrameParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #468                // Field ai$h2o$sparkling$ml$params$HasCalibrationDataFrame$$calibrationDataFrame:Lai/h2o/sparkling/ml/params/NullableDataFrameParam;
       5: return

  public ai.h2o.sparkling.ml.params.NullableStringArrayParam ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols();
    Code:
       0: aload_0
       1: getfield      #473                // Field ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$HasIgnoredCols$_setter_$ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols_$eq(ai.h2o.sparkling.ml.params.NullableStringArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #473                // Field ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       5: return

  public java.lang.String uid();
    Code:
       0: aload_0
       1: getfield      #477                // Field uid:Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.models.H2OIsolationForestMOJOModel fit(org.apache.spark.sql.Dataset<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #484                // Method ai/h2o/sparkling/ml/algos/H2OTreeBasedUnsupervisedAlgorithm.fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OTreeBasedUnsupervisedMOJOModel;
       5: checkcast     #486                // class ai/h2o/sparkling/ml/models/H2OIsolationForestMOJOModel
       8: areturn

  public ai.h2o.sparkling.ml.algos.H2OTreeBasedUnsupervisedAlgorithm setNtrees(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #489                // Method setNtrees:(I)Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;
       5: checkcast     #5                  // class ai/h2o/sparkling/ml/algos/H2OTreeBasedUnsupervisedAlgorithm
       8: areturn

  public org.apache.spark.ml.Model fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #492                // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OIsolationForestMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2OMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #492                // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OIsolationForestMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2OAlgorithmMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #492                // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OIsolationForestMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2OUnsupervisedMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #492                // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OIsolationForestMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2OTreeBasedUnsupervisedMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #492                // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OIsolationForestMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.algos.H2OIsolationForest(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #477                // Field uid:Ljava/lang/String;
       5: aload_0
       6: getstatic     #502                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       9: ldc           #13                 // class hex/tree/isofor/IsolationForestModel$IsolationForestParameters
      11: invokevirtual #506                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      14: invokespecial #509                // Method ai/h2o/sparkling/ml/algos/H2OTreeBasedUnsupervisedAlgorithm."<init>":(Lscala/reflect/ClassTag;)V
      17: aload_0
      18: invokestatic  #513                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.$init$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;)V
      21: aload_0
      22: invokestatic  #516                // InterfaceMethod ai/h2o/sparkling/ml/params/HasCalibrationDataFrame.$init$:(Lai/h2o/sparkling/ml/params/HasCalibrationDataFrame;)V
      25: aload_0
      26: invokestatic  #519                // InterfaceMethod ai/h2o/sparkling/ml/params/HasValidationLabelCol.$init$:(Lai/h2o/sparkling/ml/params/HasValidationLabelCol;)V
      29: aload_0
      30: invokestatic  #522                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OIsolationForestParams.$init$:(Lai/h2o/sparkling/ml/params/H2OIsolationForestParams;)V
      33: return

  public ai.h2o.sparkling.ml.algos.H2OIsolationForest();
    Code:
       0: aload_0
       1: getstatic     #528                // Field org/apache/spark/ml/util/Identifiable$.MODULE$:Lorg/apache/spark/ml/util/Identifiable$;
       4: ldc           #2                  // class ai/h2o/sparkling/ml/algos/H2OIsolationForest
       6: invokevirtual #533                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       9: invokevirtual #537                // Method org/apache/spark/ml/util/Identifiable$.randomUID:(Ljava/lang/String;)Ljava/lang/String;
      12: invokespecial #539                // Method "<init>":(Ljava/lang/String;)V
      15: return
}
