Compiled from "H2OAlgoParamsBase.scala"
public interface ai.h2o.sparkling.ml.params.H2OAlgoParamsBase extends ai.h2o.sparkling.ml.params.ParameterConstructorMethods,ai.h2o.sparkling.backend.utils.H2OFrameLifecycle {
  public static scala.collection.immutable.Map getH2OAlgorithmParams$(ai.h2o.sparkling.ml.params.H2OAlgoParamsBase, ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #38                 // InterfaceMethod getH2OAlgorithmParams:(Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public default scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: getstatic     #47                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: invokevirtual #51                 // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
       6: invokevirtual #57                 // Method scala/collection/immutable/Map$.empty:()Lscala/collection/immutable/Map;
       9: areturn

  public static scala.collection.immutable.Map getSWtoH2OParamNameMap$(ai.h2o.sparkling.ml.params.H2OAlgoParamsBase);
    Code:
       0: aload_0
       1: invokespecial #63                 // InterfaceMethod getSWtoH2OParamNameMap:()Lscala/collection/immutable/Map;
       4: areturn

  public default scala.collection.immutable.Map<java.lang.String, java.lang.String> getSWtoH2OParamNameMap();
    Code:
       0: getstatic     #47                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: invokevirtual #51                 // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
       6: invokevirtual #57                 // Method scala/collection/immutable/Map$.empty:()Lscala/collection/immutable/Map;
       9: areturn

  private <TInput, TOutput> TOutput convertWithH2OContext(TInput, scala.Function2<org.apache.spark.sql.SparkSession, ai.h2o.sparkling.H2OContext, TOutput>);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: aconst_null
       5: goto          38
       8: getstatic     #74                 // Field ai/h2o/sparkling/utils/SparkSessionUtils$.MODULE$:Lai/h2o/sparkling/utils/SparkSessionUtils$;
      11: invokevirtual #78                 // Method ai/h2o/sparkling/utils/SparkSessionUtils$.active:()Lorg/apache/spark/sql/SparkSession;
      14: astore_3
      15: getstatic     #83                 // Field ai/h2o/sparkling/H2OContext$.MODULE$:Lai/h2o/sparkling/H2OContext$;
      18: aload_0
      19: invokedynamic #107,  0            // InvokeDynamic #0:apply:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;)Lscala/Function0;
      24: invokevirtual #111                // Method ai/h2o/sparkling/H2OContext$.ensure:(Lscala/Function0;)Lai/h2o/sparkling/H2OContext;
      27: astore        4
      29: aload_2
      30: aload_3
      31: aload         4
      33: invokeinterface #116,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      38: areturn

  public static java.lang.String convert2dArrayToH2OFrame$(ai.h2o.sparkling.ml.params.H2OAlgoParamsBase, double[][]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #128                // InterfaceMethod convert2dArrayToH2OFrame:([[D)Ljava/lang/String;
       5: areturn

  public default java.lang.String convert2dArrayToH2OFrame(double[][]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_1
       4: invokedynamic #140,  0            // InvokeDynamic #1:apply:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;[[D)Lscala/Function2;
       9: invokespecial #142                // InterfaceMethod convertWithH2OContext:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      12: checkcast     #144                // class java/lang/String
      15: areturn

  public static java.lang.String[] convertVectorArrayToH2OFrameKeyArray$(ai.h2o.sparkling.ml.params.H2OAlgoParamsBase, org.apache.spark.ml.linalg.DenseVector[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #151                // InterfaceMethod convertVectorArrayToH2OFrameKeyArray:([Lorg/apache/spark/ml/linalg/DenseVector;)[Ljava/lang/String;
       5: areturn

  public default java.lang.String[] convertVectorArrayToH2OFrameKeyArray(org.apache.spark.ml.linalg.DenseVector[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_1
       4: invokedynamic #162,  0            // InvokeDynamic #2:apply:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;[Lorg/apache/spark/ml/linalg/DenseVector;)Lscala/Function2;
       9: invokespecial #142                // InterfaceMethod convertWithH2OContext:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      12: checkcast     #164                // class "[Ljava/lang/String;"
      15: areturn

  public static java.lang.String[] convertMatrixToH2OFrameKeyArray$(ai.h2o.sparkling.ml.params.H2OAlgoParamsBase, org.apache.spark.ml.linalg.DenseMatrix[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #171                // InterfaceMethod convertMatrixToH2OFrameKeyArray:([Lorg/apache/spark/ml/linalg/DenseMatrix;)[Ljava/lang/String;
       5: areturn

  public default java.lang.String[] convertMatrixToH2OFrameKeyArray(org.apache.spark.ml.linalg.DenseMatrix[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_1
       4: invokedynamic #180,  0            // InvokeDynamic #3:apply:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;[Lorg/apache/spark/ml/linalg/DenseMatrix;)Lscala/Function2;
       9: invokespecial #142                // InterfaceMethod convertWithH2OContext:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      12: checkcast     #164                // class "[Ljava/lang/String;"
      15: areturn

  public static java.lang.String convertDataFrameToH2OFrameKey$(ai.h2o.sparkling.ml.params.H2OAlgoParamsBase, org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #187                // InterfaceMethod convertDataFrameToH2OFrameKey:(Lorg/apache/spark/sql/Dataset;)Ljava/lang/String;
       5: areturn

  public default java.lang.String convertDataFrameToH2OFrameKey(org.apache.spark.sql.Dataset<org.apache.spark.sql.Row>);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: aconst_null
       5: goto          38
       8: getstatic     #83                 // Field ai/h2o/sparkling/H2OContext$.MODULE$:Lai/h2o/sparkling/H2OContext$;
      11: aload_0
      12: invokedynamic #194,  0            // InvokeDynamic #4:apply:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;)Lscala/Function0;
      17: invokevirtual #111                // Method ai/h2o/sparkling/H2OContext$.ensure:(Lscala/Function0;)Lai/h2o/sparkling/H2OContext;
      20: astore_2
      21: aload_2
      22: aload_1
      23: invokevirtual #200                // Method ai/h2o/sparkling/H2OContext.asH2OFrame:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/H2OFrame;
      26: astore_3
      27: aload_0
      28: aload_3
      29: invokeinterface #204,  2          // InterfaceMethod registerH2OFrameForDeletion:(Lai/h2o/sparkling/H2OFrame;)V
      34: aload_3
      35: invokevirtual #209                // Method ai/h2o/sparkling/H2OFrame.frameId:()Ljava/lang/String;
      38: areturn

  public static ai.h2o.sparkling.ml.params.H2OAlgoParamsBase$ParametersExtraMethods ParametersExtraMethods$(ai.h2o.sparkling.ml.params.H2OAlgoParamsBase, scala.collection.immutable.Map);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #216                // InterfaceMethod ParametersExtraMethods:(Lscala/collection/immutable/Map;)Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase$ParametersExtraMethods;
       5: areturn

  public default ai.h2o.sparkling.ml.params.H2OAlgoParamsBase$ParametersExtraMethods ParametersExtraMethods(scala.collection.immutable.Map<java.lang.String, java.lang.Object>);
    Code:
       0: new           #14                 // class ai/h2o/sparkling/ml/params/H2OAlgoParamsBase$ParametersExtraMethods
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #222                // Method ai/h2o/sparkling/ml/params/H2OAlgoParamsBase$ParametersExtraMethods."<init>":(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;Lscala/collection/immutable/Map;)V
       9: areturn

  public static java.lang.String $anonfun$convertWithH2OContext$1(ai.h2o.sparkling.ml.params.H2OAlgoParamsBase);
    Code:
       0: new           #224                // class java/lang/StringBuilder
       3: dup
       4: ldc           #225                // int 107
       6: invokespecial #228                // Method java/lang/StringBuilder."<init>":(I)V
       9: ldc           #230                // String H2OContext needs to be created in order to train the
      11: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: invokevirtual #238                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      18: invokevirtual #243                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      21: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #245                // String  model.
      26: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #247                // String Please create one as H2OContext.getOrCreate().
      31: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #250                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: areturn

  public static java.lang.String $anonfun$convert2dArrayToH2OFrame$1(ai.h2o.sparkling.ml.params.H2OAlgoParamsBase, double[][], org.apache.spark.sql.SparkSession, ai.h2o.sparkling.H2OContext);
    Code:
       0: aload_2
       1: invokevirtual #255                // Method org/apache/spark/sql/SparkSession.implicits:()Lorg/apache/spark/sql/SparkSession$implicits$;
       4: aload_2
       5: invokevirtual #259                // Method org/apache/spark/sql/SparkSession.sparkContext:()Lorg/apache/spark/SparkContext;
       8: getstatic     #47                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      11: aload_1
      12: checkcast     #261                // class "[Ljava/lang/Object;"
      15: invokevirtual #265                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      18: aload_2
      19: invokevirtual #259                // Method org/apache/spark/sql/SparkSession.sparkContext:()Lorg/apache/spark/SparkContext;
      22: invokevirtual #271                // Method org/apache/spark/SparkContext.parallelize$default$2:()I
      25: getstatic     #276                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      28: getstatic     #281                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      31: getstatic     #287                // Field java/lang/Double.TYPE:Ljava/lang/Class;
      34: invokevirtual #291                // Method scala/runtime/ScalaRunTime$.arrayClass:(Ljava/lang/Class;)Ljava/lang/Class;
      37: invokevirtual #294                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      40: invokevirtual #298                // Method org/apache/spark/SparkContext.parallelize:(Lscala/collection/Seq;ILscala/reflect/ClassTag;)Lorg/apache/spark/rdd/RDD;
      43: aload_2
      44: invokevirtual #255                // Method org/apache/spark/sql/SparkSession.implicits:()Lorg/apache/spark/sql/SparkSession$implicits$;
      47: invokevirtual #302                // Method org/apache/spark/sql/SparkSession$implicits$.newDoubleArrayEncoder:()Lorg/apache/spark/sql/Encoder;
      50: invokevirtual #306                // Method org/apache/spark/sql/SparkSession$implicits$.rddToDatasetHolder:(Lorg/apache/spark/rdd/RDD;Lorg/apache/spark/sql/Encoder;)Lorg/apache/spark/sql/DatasetHolder;
      53: invokevirtual #312                // Method org/apache/spark/sql/DatasetHolder.toDF:()Lorg/apache/spark/sql/Dataset;
      56: astore        4
      58: aload_3
      59: aload         4
      61: invokevirtual #200                // Method ai/h2o/sparkling/H2OContext.asH2OFrame:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/H2OFrame;
      64: astore        5
      66: aload_0
      67: aload         5
      69: invokeinterface #204,  2          // InterfaceMethod registerH2OFrameForDeletion:(Lai/h2o/sparkling/H2OFrame;)V
      74: aload         5
      76: invokevirtual #209                // Method ai/h2o/sparkling/H2OFrame.frameId:()Ljava/lang/String;
      79: areturn

  public static java.lang.String $anonfun$convertVectorArrayToH2OFrameKeyArray$2(ai.h2o.sparkling.ml.params.H2OAlgoParamsBase, org.apache.spark.sql.SparkSession, ai.h2o.sparkling.H2OContext, org.apache.spark.ml.linalg.DenseVector);
    Code:
       0: aload_1
       1: invokevirtual #255                // Method org/apache/spark/sql/SparkSession.implicits:()Lorg/apache/spark/sql/SparkSession$implicits$;
       4: aload_1
       5: invokevirtual #259                // Method org/apache/spark/sql/SparkSession.sparkContext:()Lorg/apache/spark/SparkContext;
       8: getstatic     #47                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      11: aload_3
      12: invokevirtual #324                // Method org/apache/spark/ml/linalg/DenseVector.values:()[D
      15: invokevirtual #328                // Method scala/Predef$.wrapDoubleArray:([D)Lscala/collection/mutable/WrappedArray;
      18: aload_1
      19: invokevirtual #259                // Method org/apache/spark/sql/SparkSession.sparkContext:()Lorg/apache/spark/SparkContext;
      22: invokevirtual #271                // Method org/apache/spark/SparkContext.parallelize$default$2:()I
      25: getstatic     #276                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      28: invokevirtual #332                // Method scala/reflect/ClassTag$.Double:()Lscala/reflect/ClassTag;
      31: invokevirtual #298                // Method org/apache/spark/SparkContext.parallelize:(Lscala/collection/Seq;ILscala/reflect/ClassTag;)Lorg/apache/spark/rdd/RDD;
      34: aload_1
      35: invokevirtual #255                // Method org/apache/spark/sql/SparkSession.implicits:()Lorg/apache/spark/sql/SparkSession$implicits$;
      38: invokevirtual #335                // Method org/apache/spark/sql/SparkSession$implicits$.newDoubleEncoder:()Lorg/apache/spark/sql/Encoder;
      41: invokevirtual #306                // Method org/apache/spark/sql/SparkSession$implicits$.rddToDatasetHolder:(Lorg/apache/spark/rdd/RDD;Lorg/apache/spark/sql/Encoder;)Lorg/apache/spark/sql/DatasetHolder;
      44: invokevirtual #312                // Method org/apache/spark/sql/DatasetHolder.toDF:()Lorg/apache/spark/sql/Dataset;
      47: astore        4
      49: aload_2
      50: aload         4
      52: invokevirtual #200                // Method ai/h2o/sparkling/H2OContext.asH2OFrame:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/H2OFrame;
      55: astore        5
      57: aload_0
      58: aload         5
      60: invokeinterface #204,  2          // InterfaceMethod registerH2OFrameForDeletion:(Lai/h2o/sparkling/H2OFrame;)V
      65: aload         5
      67: invokevirtual #209                // Method ai/h2o/sparkling/H2OFrame.frameId:()Ljava/lang/String;
      70: areturn

  public static java.lang.String[] $anonfun$convertVectorArrayToH2OFrameKeyArray$1(ai.h2o.sparkling.ml.params.H2OAlgoParamsBase, org.apache.spark.ml.linalg.DenseVector[], org.apache.spark.sql.SparkSession, ai.h2o.sparkling.H2OContext);
    Code:
       0: new           #27                 // class scala/collection/mutable/ArrayOps$ofRef
       3: dup
       4: getstatic     #47                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: aload_1
       8: checkcast     #261                // class "[Ljava/lang/Object;"
      11: invokevirtual #341                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
      14: invokespecial #344                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
      17: aload_0
      18: aload_2
      19: aload_3
      20: invokedynamic #354,  0            // InvokeDynamic #5:apply:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;Lorg/apache/spark/sql/SparkSession;Lai/h2o/sparkling/H2OContext;)Lscala/Function1;
      25: getstatic     #359                // Field scala/Array$.MODULE$:Lscala/Array$;
      28: getstatic     #276                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      31: ldc           #144                // class java/lang/String
      33: invokevirtual #294                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      36: invokevirtual #363                // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
      39: invokevirtual #367                // Method scala/collection/mutable/ArrayOps$ofRef.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      42: checkcast     #164                // class "[Ljava/lang/String;"
      45: areturn

  public static double[] $anonfun$convertMatrixToH2OFrameKeyArray$3(org.apache.spark.ml.linalg.Vector);
    Code:
       0: aload_0
       1: invokeinterface #375,  1          // InterfaceMethod org/apache/spark/ml/linalg/Vector.toArray:()[D
       6: areturn

  public static java.lang.String $anonfun$convertMatrixToH2OFrameKeyArray$2(ai.h2o.sparkling.ml.params.H2OAlgoParamsBase, org.apache.spark.sql.SparkSession, ai.h2o.sparkling.H2OContext, org.apache.spark.ml.linalg.DenseMatrix);
    Code:
       0: aload_3
       1: invokevirtual #386                // Method org/apache/spark/ml/linalg/DenseMatrix.rowIter:()Lscala/collection/Iterator;
       4: invokedynamic #393,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
       9: invokeinterface #398,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
      14: getstatic     #276                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      17: getstatic     #281                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      20: getstatic     #287                // Field java/lang/Double.TYPE:Ljava/lang/Class;
      23: invokevirtual #291                // Method scala/runtime/ScalaRunTime$.arrayClass:(Ljava/lang/Class;)Ljava/lang/Class;
      26: invokevirtual #294                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      29: invokeinterface #401,  2          // InterfaceMethod scala/collection/Iterator.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
      34: checkcast     #402                // class "[[D"
      37: astore        4
      39: aload_1
      40: invokevirtual #255                // Method org/apache/spark/sql/SparkSession.implicits:()Lorg/apache/spark/sql/SparkSession$implicits$;
      43: aload_1
      44: invokevirtual #259                // Method org/apache/spark/sql/SparkSession.sparkContext:()Lorg/apache/spark/SparkContext;
      47: getstatic     #47                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      50: aload         4
      52: checkcast     #261                // class "[Ljava/lang/Object;"
      55: invokevirtual #265                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      58: aload_1
      59: invokevirtual #259                // Method org/apache/spark/sql/SparkSession.sparkContext:()Lorg/apache/spark/SparkContext;
      62: invokevirtual #271                // Method org/apache/spark/SparkContext.parallelize$default$2:()I
      65: getstatic     #276                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      68: getstatic     #281                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      71: getstatic     #287                // Field java/lang/Double.TYPE:Ljava/lang/Class;
      74: invokevirtual #291                // Method scala/runtime/ScalaRunTime$.arrayClass:(Ljava/lang/Class;)Ljava/lang/Class;
      77: invokevirtual #294                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      80: invokevirtual #298                // Method org/apache/spark/SparkContext.parallelize:(Lscala/collection/Seq;ILscala/reflect/ClassTag;)Lorg/apache/spark/rdd/RDD;
      83: aload_1
      84: invokevirtual #255                // Method org/apache/spark/sql/SparkSession.implicits:()Lorg/apache/spark/sql/SparkSession$implicits$;
      87: invokevirtual #302                // Method org/apache/spark/sql/SparkSession$implicits$.newDoubleArrayEncoder:()Lorg/apache/spark/sql/Encoder;
      90: invokevirtual #306                // Method org/apache/spark/sql/SparkSession$implicits$.rddToDatasetHolder:(Lorg/apache/spark/rdd/RDD;Lorg/apache/spark/sql/Encoder;)Lorg/apache/spark/sql/DatasetHolder;
      93: invokevirtual #312                // Method org/apache/spark/sql/DatasetHolder.toDF:()Lorg/apache/spark/sql/Dataset;
      96: astore        5
      98: aload_2
      99: aload         5
     101: invokevirtual #200                // Method ai/h2o/sparkling/H2OContext.asH2OFrame:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/H2OFrame;
     104: astore        6
     106: aload_0
     107: aload         6
     109: invokeinterface #204,  2          // InterfaceMethod registerH2OFrameForDeletion:(Lai/h2o/sparkling/H2OFrame;)V
     114: aload         6
     116: invokevirtual #209                // Method ai/h2o/sparkling/H2OFrame.frameId:()Ljava/lang/String;
     119: areturn

  public static java.lang.String[] $anonfun$convertMatrixToH2OFrameKeyArray$1(ai.h2o.sparkling.ml.params.H2OAlgoParamsBase, org.apache.spark.ml.linalg.DenseMatrix[], org.apache.spark.sql.SparkSession, ai.h2o.sparkling.H2OContext);
    Code:
       0: new           #27                 // class scala/collection/mutable/ArrayOps$ofRef
       3: dup
       4: getstatic     #47                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: aload_1
       8: checkcast     #261                // class "[Ljava/lang/Object;"
      11: invokevirtual #341                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
      14: invokespecial #344                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
      17: aload_0
      18: aload_2
      19: aload_3
      20: invokedynamic #411,  0            // InvokeDynamic #7:apply:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;Lorg/apache/spark/sql/SparkSession;Lai/h2o/sparkling/H2OContext;)Lscala/Function1;
      25: getstatic     #359                // Field scala/Array$.MODULE$:Lscala/Array$;
      28: getstatic     #276                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      31: ldc           #144                // class java/lang/String
      33: invokevirtual #294                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      36: invokevirtual #363                // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
      39: invokevirtual #367                // Method scala/collection/mutable/ArrayOps$ofRef.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      42: checkcast     #164                // class "[Ljava/lang/String;"
      45: areturn

  public static java.lang.String $anonfun$convertDataFrameToH2OFrameKey$1(ai.h2o.sparkling.ml.params.H2OAlgoParamsBase);
    Code:
       0: new           #224                // class java/lang/StringBuilder
       3: dup
       4: ldc           #225                // int 107
       6: invokespecial #228                // Method java/lang/StringBuilder."<init>":(I)V
       9: ldc           #230                // String H2OContext needs to be created in order to train the
      11: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: invokevirtual #238                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      18: invokevirtual #243                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      21: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #245                // String  model.
      26: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #247                // String Please create one as H2OContext.getOrCreate().
      31: invokevirtual #234                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #250                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: areturn

  public static void $init$(ai.h2o.sparkling.ml.params.H2OAlgoParamsBase);
    Code:
       0: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #425,  0            // InvokeDynamic #8:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
