Compiled from "H2OGridSearch.scala"
public class ai.h2o.sparkling.ml.algos.H2OGridSearch extends org.apache.spark.ml.Estimator<ai.h2o.sparkling.ml.models.H2OMOJOModel> implements ai.h2o.sparkling.ml.utils.EstimatorCommonUtils, org.apache.spark.ml.util.DefaultParamsWritable, ai.h2o.sparkling.ml.params.H2OGridSearchParams {
  private final java.lang.String uid;

  private ai.h2o.sparkling.ml.models.H2OMOJOModel[] gridModels;

  private ai.h2o.sparkling.ml.models.H2OBinaryModel[] gridBinaryModels;

  private final ai.h2o.sparkling.ml.params.AlgoParam ai$h2o$sparkling$ml$params$H2OGridSearchParams$$algo;

  private final ai.h2o.sparkling.ml.params.HyperParamsParam ai$h2o$sparkling$ml$params$H2OGridSearchParams$$hyperParameters;

  private final org.apache.spark.ml.param.Param<java.lang.String> ai$h2o$sparkling$ml$params$H2OGridSearchParams$$selectBestModelBy;

  private final org.apache.spark.ml.param.IntParam ai$h2o$sparkling$ml$params$H2OGridSearchParams$$parallelism;

  private final org.apache.spark.ml.param.Param<java.lang.String> strategy;

  private final org.apache.spark.ml.param.LongParam seed;

  private final org.apache.spark.ml.param.IntParam maxModels;

  private final org.apache.spark.ml.param.DoubleParam maxRuntimeSecs;

  private final org.apache.spark.ml.param.IntParam stoppingRounds;

  private final org.apache.spark.ml.param.Param<java.lang.String> stoppingMetric;

  private final org.apache.spark.ml.param.DoubleParam stoppingTolerance;

  private final scala.collection.mutable.ArrayBuffer<ai.h2o.sparkling.H2OFrame> ai$h2o$sparkling$backend$utils$H2OFrameLifecycle$$h2oFramesToBeDeleted;

  private volatile ai.h2o.sparkling.backend.utils.RestCommunication$LoggingLevel$ LoggingLevel$module;

  public static org.apache.spark.ml.util.MLReader<ai.h2o.sparkling.ml.algos.H2OGridSearch> read();
    Code:
       0: getstatic     #138                // Field ai/h2o/sparkling/ml/algos/H2OGridSearch$.MODULE$:Lai/h2o/sparkling/ml/algos/H2OGridSearch$;
       3: invokevirtual #140                // Method ai/h2o/sparkling/ml/algos/H2OGridSearch$.read:()Lorg/apache/spark/ml/util/MLReader;
       6: areturn

  public static java.lang.Object load(java.lang.String);
    Code:
       0: getstatic     #138                // Field ai/h2o/sparkling/ml/algos/H2OGridSearch$.MODULE$:Lai/h2o/sparkling/ml/algos/H2OGridSearch$;
       3: aload_0
       4: invokevirtual #145                // Method ai/h2o/sparkling/ml/algos/H2OGridSearch$.load:(Ljava/lang/String;)Ljava/lang/Object;
       7: areturn

  public ai.h2o.sparkling.ml.algos.H2OAlgorithm<? extends hex.Model$Parameters> getAlgo();
    Code:
       0: aload_0
       1: invokestatic  #152                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchParams.getAlgo$:(Lai/h2o/sparkling/ml/params/H2OGridSearchParams;)Lai/h2o/sparkling/ml/algos/H2OAlgorithm;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.Object[]> getHyperParameters();
    Code:
       0: aload_0
       1: invokestatic  #161                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchParams.getHyperParameters$:(Lai/h2o/sparkling/ml/params/H2OGridSearchParams;)Ljava/util/Map;
       4: areturn

  public java.lang.String getSelectBestModelBy();
    Code:
       0: aload_0
       1: invokestatic  #167                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchParams.getSelectBestModelBy$:(Lai/h2o/sparkling/ml/params/H2OGridSearchParams;)Ljava/lang/String;
       4: areturn

  public int getParallelism();
    Code:
       0: aload_0
       1: invokestatic  #173                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchParams.getParallelism$:(Lai/h2o/sparkling/ml/params/H2OGridSearchParams;)I
       4: ireturn

  public ai.h2o.sparkling.ml.params.H2OGridSearchParams setAlgo(ai.h2o.sparkling.ml.algos.H2OAlgorithm<? extends hex.Model$Parameters>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #181                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchParams.setAlgo$:(Lai/h2o/sparkling/ml/params/H2OGridSearchParams;Lai/h2o/sparkling/ml/algos/H2OAlgorithm;)Lai/h2o/sparkling/ml/params/H2OGridSearchParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGridSearchParams setHyperParameters(scala.collection.immutable.Map<java.lang.String, java.lang.Object[]>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #189                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchParams.setHyperParameters$:(Lai/h2o/sparkling/ml/params/H2OGridSearchParams;Lscala/collection/immutable/Map;)Lai/h2o/sparkling/ml/params/H2OGridSearchParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGridSearchParams setHyperParameters(scala.collection.mutable.Map<java.lang.String, java.lang.Object[]>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #195                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchParams.setHyperParameters$:(Lai/h2o/sparkling/ml/params/H2OGridSearchParams;Lscala/collection/mutable/Map;)Lai/h2o/sparkling/ml/params/H2OGridSearchParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGridSearchParams setHyperParameters(java.util.Map<java.lang.String, java.lang.Object[]>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #201                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchParams.setHyperParameters$:(Lai/h2o/sparkling/ml/params/H2OGridSearchParams;Ljava/util/Map;)Lai/h2o/sparkling/ml/params/H2OGridSearchParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGridSearchParams setSelectBestModelBy(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #208                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchParams.setSelectBestModelBy$:(Lai/h2o/sparkling/ml/params/H2OGridSearchParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGridSearchParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGridSearchParams setParallelism(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #214                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchParams.setParallelism$:(Lai/h2o/sparkling/ml/params/H2OGridSearchParams;I)Lai/h2o/sparkling/ml/params/H2OGridSearchParams;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OGridSearchCommonCriteriaParams$$super$getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #224                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchCartesianCriteriaParams.getH2OAlgorithmParams$:(Lai/h2o/sparkling/ml/params/H2OGridSearchCartesianCriteriaParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OGridSearchCommonCriteriaParams$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #231                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchCartesianCriteriaParams.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/H2OGridSearchCartesianCriteriaParams;)Lscala/collection/immutable/Map;
       4: areturn

  public java.lang.String getStrategy();
    Code:
       0: aload_0
       1: invokestatic  #238                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchCommonCriteriaParams.getStrategy$:(Lai/h2o/sparkling/ml/params/H2OGridSearchCommonCriteriaParams;)Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.params.H2OGridSearchCommonCriteriaParams setStrategy(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #244                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchCommonCriteriaParams.setStrategy$:(Lai/h2o/sparkling/ml/params/H2OGridSearchCommonCriteriaParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGridSearchCommonCriteriaParams;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #249                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchCommonCriteriaParams.getH2OAlgorithmParams$:(Lai/h2o/sparkling/ml/params/H2OGridSearchCommonCriteriaParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OGridSearchCommonCriteriaParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #253                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchCommonCriteriaParams.getH2OGridSearchCommonCriteriaParams$:(Lai/h2o/sparkling/ml/params/H2OGridSearchCommonCriteriaParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.String> getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #258                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchCommonCriteriaParams.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/H2OGridSearchCommonCriteriaParams;)Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OGridSearchCartesianCriteriaParams$$super$getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #264                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams.getH2OAlgorithmParams$:(Lai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OGridSearchCartesianCriteriaParams$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #268                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams;)Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OGridSearchCartesianCriteriaParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #272                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchCartesianCriteriaParams.getH2OGridSearchCartesianCriteriaParams$:(Lai/h2o/sparkling/ml/params/H2OGridSearchCartesianCriteriaParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OGridSearchRandomDiscreteCriteriaParams$$super$getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #276                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.getH2OAlgorithmParams$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OGridSearchRandomDiscreteCriteriaParams$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #280                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;)Lscala/collection/immutable/Map;
       4: areturn

  public long getSeed();
    Code:
       0: aload_0
       1: invokestatic  #286                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams.getSeed$:(Lai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams;)J
       4: lreturn

  public int getMaxModels();
    Code:
       0: aload_0
       1: invokestatic  #291                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams.getMaxModels$:(Lai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams;)I
       4: ireturn

  public double getMaxRuntimeSecs();
    Code:
       0: aload_0
       1: invokestatic  #297                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams.getMaxRuntimeSecs$:(Lai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams;)D
       4: dreturn

  public int getStoppingRounds();
    Code:
       0: aload_0
       1: invokestatic  #301                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams.getStoppingRounds$:(Lai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams;)I
       4: ireturn

  public java.lang.String getStoppingMetric();
    Code:
       0: aload_0
       1: invokestatic  #306                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams.getStoppingMetric$:(Lai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams;)Ljava/lang/String;
       4: areturn

  public double getStoppingTolerance();
    Code:
       0: aload_0
       1: invokestatic  #310                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams.getStoppingTolerance$:(Lai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams;)D
       4: dreturn

  public ai.h2o.sparkling.ml.params.H2OGridSearchRandomDiscreteCriteriaParams setSeed(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #316                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams.setSeed$:(Lai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams;J)Lai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGridSearchRandomDiscreteCriteriaParams setMaxModels(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #323                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams.setMaxModels$:(Lai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams;I)Lai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGridSearchRandomDiscreteCriteriaParams setMaxRuntimeSecs(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #329                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams.setMaxRuntimeSecs$:(Lai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams;D)Lai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGridSearchRandomDiscreteCriteriaParams setStoppingRounds(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #334                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams.setStoppingRounds$:(Lai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams;I)Lai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGridSearchRandomDiscreteCriteriaParams setStoppingMetric(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #340                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams.setStoppingMetric$:(Lai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGridSearchRandomDiscreteCriteriaParams setStoppingTolerance(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #344                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams.setStoppingTolerance$:(Lai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams;D)Lai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OGridSearchRandomDiscreteCriteriaParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #348                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams.getH2OGridSearchRandomDiscreteCriteriaParams$:(Lai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public java.lang.String convert2dArrayToH2OFrame(double[][]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #355                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.convert2dArrayToH2OFrame$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;[[D)Ljava/lang/String;
       5: areturn

  public java.lang.String[] convertVectorArrayToH2OFrameKeyArray(org.apache.spark.ml.linalg.DenseVector[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #363                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.convertVectorArrayToH2OFrameKeyArray$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;[Lorg/apache/spark/ml/linalg/DenseVector;)[Ljava/lang/String;
       5: areturn

  public java.lang.String[] convertMatrixToH2OFrameKeyArray(org.apache.spark.ml.linalg.DenseMatrix[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #371                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.convertMatrixToH2OFrameKeyArray$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;[Lorg/apache/spark/ml/linalg/DenseMatrix;)[Ljava/lang/String;
       5: areturn

  public java.lang.String convertDataFrameToH2OFrameKey(org.apache.spark.sql.Dataset<org.apache.spark.sql.Row>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #380                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.convertDataFrameToH2OFrameKey$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;Lorg/apache/spark/sql/Dataset;)Ljava/lang/String;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAlgoParamsBase$ParametersExtraMethods ParametersExtraMethods(scala.collection.immutable.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #388                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.ParametersExtraMethods$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;Lscala/collection/immutable/Map;)Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase$ParametersExtraMethods;
       5: areturn

  public final void registerH2OFrameForDeletion(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #397                // InterfaceMethod ai/h2o/sparkling/backend/utils/H2OFrameLifecycle.registerH2OFrameForDeletion$:(Lai/h2o/sparkling/backend/utils/H2OFrameLifecycle;Lai/h2o/sparkling/H2OFrame;)V
       5: return

  public final void registerH2OFrameForDeletion(scala.Option<ai.h2o.sparkling.H2OFrame>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #402                // InterfaceMethod ai/h2o/sparkling/backend/utils/H2OFrameLifecycle.registerH2OFrameForDeletion$:(Lai/h2o/sparkling/backend/utils/H2OFrameLifecycle;Lscala/Option;)V
       5: return

  public final void deleteRegisteredH2OFrames();
    Code:
       0: aload_0
       1: invokestatic  #409                // InterfaceMethod ai/h2o/sparkling/backend/utils/H2OFrameLifecycle.deleteRegisteredH2OFrames$:(Lai/h2o/sparkling/backend/utils/H2OFrameLifecycle;)V
       4: return

  public org.apache.spark.ml.param.BooleanParam booleanParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #419                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.booleanParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/BooleanParam;
       6: areturn

  public org.apache.spark.ml.param.IntParam intParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #425                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.intParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/IntParam;
       6: areturn

  public org.apache.spark.ml.param.LongParam longParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #431                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.longParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/LongParam;
       6: areturn

  public org.apache.spark.ml.param.FloatParam floatParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #437                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.floatParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/FloatParam;
       6: areturn

  public org.apache.spark.ml.param.DoubleParam doubleParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #443                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.doubleParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/DoubleParam;
       6: areturn

  public <T> org.apache.spark.ml.param.Param<T> param(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #450                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.param$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/Param;
       6: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> stringParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #455                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.stringParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/Param;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam nullableStringParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #461                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableStringParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableStringParam;
       6: areturn

  public org.apache.spark.ml.param.StringArrayParam stringArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #467                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.stringArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/StringArrayParam;
       6: areturn

  public org.apache.spark.ml.param.IntArrayParam intArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #473                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.intArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/IntArrayParam;
       6: areturn

  public org.apache.spark.ml.param.DoubleArrayParam doubleArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #479                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.doubleArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/DoubleArrayParam;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableDoubleArrayArrayParam nullableDoubleArrayArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #485                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableDoubleArrayArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableDoubleArrayArrayParam;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableBooleanArrayParam nullableBooleanArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #491                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableBooleanArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableBooleanArrayParam;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableIntArrayParam nullableIntArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #497                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableIntArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableIntArrayParam;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableFloatArrayParam nullableFloatArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #503                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableFloatArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableFloatArrayParam;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableDoubleArrayParam nullableDoubleArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #509                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableDoubleArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableDoubleArrayParam;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableStringArrayParam nullableStringArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #515                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableStringArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableStringPairArrayParam nullableStringPairArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #521                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableStringPairArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableStringPairArrayParam;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableStringArrayArrayParam nullableStringArrayArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #527                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableStringArrayArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableStringArrayArrayParam;
       6: areturn

  public org.apache.spark.ml.util.MLWriter write();
    Code:
       0: aload_0
       1: invokestatic  #533                // InterfaceMethod org/apache/spark/ml/util/DefaultParamsWritable.write$:(Lorg/apache/spark/ml/util/DefaultParamsWritable;)Lorg/apache/spark/ml/util/MLWriter;
       4: areturn

  public void save(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #543                // InterfaceMethod org/apache/spark/ml/util/MLWritable.save$:(Lorg/apache/spark/ml/util/MLWritable;Ljava/lang/String;)V
       5: return

  public java.lang.String trainAndGetDestinationKey(java.lang.String, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #553                // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.trainAndGetDestinationKey$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;Ljava/lang/String;Lscala/collection/immutable/Map;Z)Ljava/lang/String;
       7: areturn

  public boolean trainAndGetDestinationKey$default$3();
    Code:
       0: aload_0
       1: invokestatic  #560                // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.trainAndGetDestinationKey$default$3$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;)Z
       4: ireturn

  public ai.h2o.sparkling.ml.models.H2OMOJOModel trainAndGetMOJOModel(java.lang.String, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #567                // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.trainAndGetMOJOModel$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;Ljava/lang/String;Lscala/collection/immutable/Map;Z)Lai/h2o/sparkling/ml/models/H2OMOJOModel;
       7: areturn

  public boolean trainAndGetMOJOModel$default$3();
    Code:
       0: aload_0
       1: invokestatic  #571                // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.trainAndGetMOJOModel$default$3$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;)Z
       4: ireturn

  public java.io.File downloadBinaryModel(java.lang.String, ai.h2o.sparkling.H2OConf);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #579                // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.downloadBinaryModel$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;)Ljava/io/File;
       6: areturn

  public java.lang.String convertModelIdToKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #587                // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.convertModelIdToKey$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public <ResultType> ResultType query(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, scala.Enumeration$Value, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #599                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;Lscala/Enumeration$Value;Lscala/reflect/ClassTag;)Ljava/lang/Object;
      15: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> query$default$4();
    Code:
       0: aload_0
       1: invokestatic  #609                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> query$default$5();
    Code:
       0: aload_0
       1: invokestatic  #616                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> scala.Enumeration$Value query$default$6();
    Code:
       0: aload_0
       1: invokestatic  #623                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public <ResultType> ResultType update(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, boolean, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aload         7
      12: invokestatic  #631                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;ZLscala/reflect/ClassTag;)Ljava/lang/Object;
      15: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> update$default$4();
    Code:
       0: aload_0
       1: invokestatic  #635                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> update$default$5();
    Code:
       0: aload_0
       1: invokestatic  #639                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> boolean update$default$6();
    Code:
       0: aload_0
       1: invokestatic  #645                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public <ResultType> ResultType delete(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, boolean, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aload         7
      12: invokestatic  #650                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;ZLscala/reflect/ClassTag;)Ljava/lang/Object;
      15: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> delete$default$4();
    Code:
       0: aload_0
       1: invokestatic  #654                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> delete$default$5();
    Code:
       0: aload_0
       1: invokestatic  #658                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> boolean delete$default$6();
    Code:
       0: aload_0
       1: invokestatic  #662                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public java.io.OutputStream insertToNode(ai.h2o.sparkling.backend.NodeDesc, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #670                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insertToNode$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Lai/h2o/sparkling/backend/NodeDesc;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;)Ljava/io/OutputStream;
       9: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> insertToNode$default$4();
    Code:
       0: aload_0
       1: invokestatic  #676                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insertToNode$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public java.io.OutputStream insert(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.Function1<java.io.OutputStream, java.io.OutputStream>, scala.collection.immutable.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #684                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insert$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/Function1;Lscala/collection/immutable/Map;)Ljava/io/OutputStream;
      11: areturn

  public scala.Function1<java.io.OutputStream, java.io.OutputStream> insert$default$4();
    Code:
       0: aload_0
       1: invokestatic  #692                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insert$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Function1;
       4: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> insert$default$5();
    Code:
       0: aload_0
       1: invokestatic  #696                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insert$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public void delete(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #700                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;)V
       7: return

  public <ResultType> ResultType request(java.net.URI, java.lang.String, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, boolean, scala.Enumeration$Value, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: iload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #709                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;ZLscala/Enumeration$Value;Lscala/reflect/ClassTag;)Ljava/lang/Object;
      19: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> request$default$5();
    Code:
       0: aload_0
       1: invokestatic  #713                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> request$default$6();
    Code:
       0: aload_0
       1: invokestatic  #717                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> boolean request$default$7();
    Code:
       0: aload_0
       1: invokestatic  #721                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$7$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public <ResultType> scala.Enumeration$Value request$default$8();
    Code:
       0: aload_0
       1: invokestatic  #725                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$8$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public <ResultType> ResultType deserialize(java.lang.String, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #734                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.deserialize$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/lang/String;Lscala/collection/Seq;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       7: areturn

  public <ResultType> ResultType deserialize(com.google.gson.JsonElement, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #740                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.deserialize$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Lcom/google/gson/JsonElement;Lscala/collection/Seq;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       7: areturn

  public com.google.gson.JsonObject deserializeAsJsonObject(java.lang.String, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #748                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.deserializeAsJsonObject$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/lang/String;Lscala/collection/Seq;)Lcom/google/gson/JsonObject;
       6: areturn

  public void downloadBinaryURLContent(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #755                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.downloadBinaryURLContent$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Ljava/io/File;)V
       9: return

  public void downloadStringURLContent(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #760                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.downloadStringURLContent$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Ljava/io/File;)V
       9: return

  public java.io.InputStream readURLContent(java.net.URI, java.lang.String, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, boolean, scala.Option<java.lang.String>, scala.Enumeration$Value);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #767                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;ZLscala/Option;Lscala/Enumeration$Value;)Ljava/io/InputStream;
      17: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> readURLContent$default$5();
    Code:
       0: aload_0
       1: invokestatic  #771                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public boolean readURLContent$default$6();
    Code:
       0: aload_0
       1: invokestatic  #775                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public scala.Option<java.lang.String> readURLContent$default$7();
    Code:
       0: aload_0
       1: invokestatic  #782                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$7$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Option;
       4: areturn

  public scala.Enumeration$Value readURLContent$default$8();
    Code:
       0: aload_0
       1: invokestatic  #786                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$8$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public void checkResponseCode(java.net.HttpURLConnection, scala.Enumeration$Value);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #793                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.checkResponseCode$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/HttpURLConnection;Lscala/Enumeration$Value;)V
       6: return

  public scala.Enumeration$Value checkResponseCode$default$2();
    Code:
       0: aload_0
       1: invokestatic  #798                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.checkResponseCode$default$2$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public java.lang.String stringifyPrimitiveParam(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #806                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyPrimitiveParam$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  public boolean isPrimitiveType(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #813                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.isPrimitiveType$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Z
       5: ireturn

  public java.lang.String stringifyArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #818                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyArray$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringifyMap(scala.collection.immutable.Map<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #826                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyMap$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Lscala/collection/immutable/Map;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringifyPair(scala.Tuple2<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #834                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyPair$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Lscala/Tuple2;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringify(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #839                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringify$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringifyParams(scala.collection.immutable.Map<java.lang.String, java.lang.Object>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #846                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyParams$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Lscala/collection/immutable/Map;Z)Ljava/lang/String;
       6: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> stringifyParams$default$1();
    Code:
       0: aload_0
       1: invokestatic  #851                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyParams$default$1$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;)Lscala/collection/immutable/Map;
       4: areturn

  public boolean stringifyParams$default$2();
    Code:
       0: aload_0
       1: invokestatic  #856                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyParams$default$2$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;)Z
       4: ireturn

  public ai.h2o.sparkling.ml.params.AlgoParam ai$h2o$sparkling$ml$params$H2OGridSearchParams$$algo();
    Code:
       0: aload_0
       1: getfield      #859                // Field ai$h2o$sparkling$ml$params$H2OGridSearchParams$$algo:Lai/h2o/sparkling/ml/params/AlgoParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.HyperParamsParam ai$h2o$sparkling$ml$params$H2OGridSearchParams$$hyperParameters();
    Code:
       0: aload_0
       1: getfield      #862                // Field ai$h2o$sparkling$ml$params$H2OGridSearchParams$$hyperParameters:Lai/h2o/sparkling/ml/params/HyperParamsParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> ai$h2o$sparkling$ml$params$H2OGridSearchParams$$selectBestModelBy();
    Code:
       0: aload_0
       1: getfield      #866                // Field ai$h2o$sparkling$ml$params$H2OGridSearchParams$$selectBestModelBy:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.IntParam ai$h2o$sparkling$ml$params$H2OGridSearchParams$$parallelism();
    Code:
       0: aload_0
       1: getfield      #869                // Field ai$h2o$sparkling$ml$params$H2OGridSearchParams$$parallelism:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$H2OGridSearchParams$_setter_$ai$h2o$sparkling$ml$params$H2OGridSearchParams$$algo_$eq(ai.h2o.sparkling.ml.params.AlgoParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #859                // Field ai$h2o$sparkling$ml$params$H2OGridSearchParams$$algo:Lai/h2o/sparkling/ml/params/AlgoParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OGridSearchParams$_setter_$ai$h2o$sparkling$ml$params$H2OGridSearchParams$$hyperParameters_$eq(ai.h2o.sparkling.ml.params.HyperParamsParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #862                // Field ai$h2o$sparkling$ml$params$H2OGridSearchParams$$hyperParameters:Lai/h2o/sparkling/ml/params/HyperParamsParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OGridSearchParams$_setter_$ai$h2o$sparkling$ml$params$H2OGridSearchParams$$selectBestModelBy_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #866                // Field ai$h2o$sparkling$ml$params$H2OGridSearchParams$$selectBestModelBy:Lorg/apache/spark/ml/param/Param;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OGridSearchParams$_setter_$ai$h2o$sparkling$ml$params$H2OGridSearchParams$$parallelism_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #869                // Field ai$h2o$sparkling$ml$params$H2OGridSearchParams$$parallelism:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public org.apache.spark.ml.param.Param<java.lang.String> strategy();
    Code:
       0: aload_0
       1: getfield      #881                // Field strategy:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public void ai$h2o$sparkling$ml$params$H2OGridSearchCommonCriteriaParams$_setter_$strategy_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #881                // Field strategy:Lorg/apache/spark/ml/param/Param;
       5: return

  public org.apache.spark.ml.param.LongParam seed();
    Code:
       0: aload_0
       1: getfield      #885                // Field seed:Lorg/apache/spark/ml/param/LongParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam maxModels();
    Code:
       0: aload_0
       1: getfield      #887                // Field maxModels:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam maxRuntimeSecs();
    Code:
       0: aload_0
       1: getfield      #890                // Field maxRuntimeSecs:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam stoppingRounds();
    Code:
       0: aload_0
       1: getfield      #892                // Field stoppingRounds:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> stoppingMetric();
    Code:
       0: aload_0
       1: getfield      #894                // Field stoppingMetric:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam stoppingTolerance();
    Code:
       0: aload_0
       1: getfield      #896                // Field stoppingTolerance:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public void ai$h2o$sparkling$ml$params$H2OGridSearchRandomDiscreteCriteriaParams$_setter_$seed_$eq(org.apache.spark.ml.param.LongParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #885                // Field seed:Lorg/apache/spark/ml/param/LongParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGridSearchRandomDiscreteCriteriaParams$_setter_$maxModels_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #887                // Field maxModels:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGridSearchRandomDiscreteCriteriaParams$_setter_$maxRuntimeSecs_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #890                // Field maxRuntimeSecs:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGridSearchRandomDiscreteCriteriaParams$_setter_$stoppingRounds_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #892                // Field stoppingRounds:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGridSearchRandomDiscreteCriteriaParams$_setter_$stoppingMetric_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #894                // Field stoppingMetric:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGridSearchRandomDiscreteCriteriaParams$_setter_$stoppingTolerance_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #896                // Field stoppingTolerance:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public scala.collection.mutable.ArrayBuffer<ai.h2o.sparkling.H2OFrame> ai$h2o$sparkling$backend$utils$H2OFrameLifecycle$$h2oFramesToBeDeleted();
    Code:
       0: aload_0
       1: getfield      #908                // Field ai$h2o$sparkling$backend$utils$H2OFrameLifecycle$$h2oFramesToBeDeleted:Lscala/collection/mutable/ArrayBuffer;
       4: areturn

  public final void ai$h2o$sparkling$backend$utils$H2OFrameLifecycle$_setter_$ai$h2o$sparkling$backend$utils$H2OFrameLifecycle$$h2oFramesToBeDeleted_$eq(scala.collection.mutable.ArrayBuffer<ai.h2o.sparkling.H2OFrame>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #908                // Field ai$h2o$sparkling$backend$utils$H2OFrameLifecycle$$h2oFramesToBeDeleted:Lscala/collection/mutable/ArrayBuffer;
       5: return

  public ai.h2o.sparkling.backend.utils.RestCommunication$LoggingLevel$ LoggingLevel();
    Code:
       0: aload_0
       1: getfield      #915                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #918                // Method LoggingLevel$lzycompute$1:()V
      11: aload_0
      12: getfield      #915                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
      15: areturn

  public java.lang.String uid();
    Code:
       0: aload_0
       1: getfield      #920                // Field uid:Ljava/lang/String;
       4: areturn

  private ai.h2o.sparkling.ml.models.H2OMOJOModel[] gridModels();
    Code:
       0: aload_0
       1: getfield      #923                // Field gridModels:[Lai/h2o/sparkling/ml/models/H2OMOJOModel;
       4: areturn

  private void gridModels_$eq(ai.h2o.sparkling.ml.models.H2OMOJOModel[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #923                // Field gridModels:[Lai/h2o/sparkling/ml/models/H2OMOJOModel;
       5: return

  private ai.h2o.sparkling.ml.models.H2OBinaryModel[] gridBinaryModels();
    Code:
       0: aload_0
       1: getfield      #928                // Field gridBinaryModels:[Lai/h2o/sparkling/ml/models/H2OBinaryModel;
       4: areturn

  private void gridBinaryModels_$eq(ai.h2o.sparkling.ml.models.H2OBinaryModel[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #928                // Field gridBinaryModels:[Lai/h2o/sparkling/ml/models/H2OBinaryModel;
       5: return

  private java.lang.String getSearchCriteria(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #935                // Method getH2OGridSearchCommonCriteriaParams:(Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: astore_3
       6: aload_0
       7: invokevirtual #937                // Method getStrategy:()Ljava/lang/String;
      10: invokestatic  #941                // Method hex/grid/HyperSpaceSearchCriteria$Strategy.valueOf:(Ljava/lang/String;)Lhex/grid/HyperSpaceSearchCriteria$Strategy;
      13: astore        5
      15: getstatic     #945                // Field hex/grid/HyperSpaceSearchCriteria$Strategy.RandomDiscrete:Lhex/grid/HyperSpaceSearchCriteria$Strategy;
      18: aload         5
      20: invokevirtual #950                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      23: ifeq          35
      26: aload_0
      27: aload_1
      28: invokevirtual #952                // Method getH2OGridSearchRandomDiscreteCriteriaParams:(Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
      31: astore_2
      32: goto          47
      35: goto          38
      38: aload_0
      39: aload_1
      40: invokevirtual #954                // Method getH2OGridSearchCartesianCriteriaParams:(Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
      43: astore_2
      44: goto          47
      47: aload_2
      48: astore        4
      50: aload_3
      51: aload         4
      53: invokeinterface #960,  2          // InterfaceMethod scala/collection/immutable/Map.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/Map;
      58: invokedynamic #981,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
      63: getstatic     #986                // Field scala/collection/immutable/Iterable$.MODULE$:Lscala/collection/immutable/Iterable$;
      66: invokevirtual #990                // Method scala/collection/immutable/Iterable$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      69: invokeinterface #993,  3          // InterfaceMethod scala/collection/immutable/Map.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      74: checkcast     #995                // class scala/collection/TraversableOnce
      77: ldc_w         #997                // String {
      80: ldc_w         #999                // String ,
      83: ldc_w         #1001               // String }
      86: invokeinterface #1005,  4         // InterfaceMethod scala/collection/TraversableOnce.mkString:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      91: areturn

  private scala.collection.immutable.Map<java.lang.String, java.lang.Object> getAlgoParams(ai.h2o.sparkling.ml.algos.H2OAlgorithm<? extends hex.Model$Parameters>, ai.h2o.sparkling.H2OFrame, scala.Option<ai.h2o.sparkling.H2OFrame>);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #1018               // Method ai/h2o/sparkling/ml/algos/H2OAlgorithm.getH2OAlgorithmParams:(Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       8: invokevirtual #1027               // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
      11: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      14: iconst_1
      15: anewarray     #1029               // class scala/Tuple2
      18: dup
      19: iconst_0
      20: getstatic     #1032               // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      23: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      26: ldc_w         #1034               // String training_frame
      29: invokevirtual #1037               // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      32: aload_2
      33: invokevirtual #1040               // Method ai/h2o/sparkling/H2OFrame.frameId:()Ljava/lang/String;
      36: invokevirtual #1044               // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      39: aastore
      40: checkcast     #1046               // class "[Ljava/lang/Object;"
      43: invokevirtual #1050               // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      46: invokevirtual #1055               // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
      49: invokeinterface #960,  2          // InterfaceMethod scala/collection/immutable/Map.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/Map;
      54: aload_3
      55: invokedynamic #1061,  0           // InvokeDynamic #1:apply:()Lscala/Function1;
      60: invokevirtual #1066               // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      63: invokedynamic #1076,  0           // InvokeDynamic #2:apply:()Lscala/Function0;
      68: invokevirtual #1080               // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      71: checkcast     #1082               // class scala/collection/GenTraversableOnce
      74: invokeinterface #960,  2          // InterfaceMethod scala/collection/immutable/Map.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/Map;
      79: areturn

  private java.lang.String prepareHyperParameters();
    Code:
       0: aload_0
       1: invokevirtual #1085               // Method getHyperParameters:()Ljava/util/Map;
       4: invokeinterface #1089,  1         // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #1095,  1         // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: new           #1097               // class java/util/HashMap
      18: dup
      19: invokespecial #1100               // Method java/util/HashMap."<init>":()V
      22: astore_2
      23: aload_1
      24: invokeinterface #1105,  1         // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          164
      32: aload_1
      33: invokeinterface #1108,  1         // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #45                 // class java/util/Map$Entry
      41: astore_3
      42: aload_3
      43: invokeinterface #1111,  1         // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      48: checkcast     #1113               // class java/lang/String
      51: astore        4
      53: aload_3
      54: invokeinterface #1116,  1         // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      59: instanceof    #1118               // class java/util/ArrayList
      62: ifeq          141
      65: aload_3
      66: invokeinterface #1116,  1         // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      71: checkcast     #1118               // class java/util/ArrayList
      74: invokevirtual #1121               // Method java/util/ArrayList.size:()I
      77: istore        6
      79: aload_3
      80: invokeinterface #1116,  1         // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      85: checkcast     #1118               // class java/util/ArrayList
      88: astore        7
      90: getstatic     #1126               // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
      93: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      96: iconst_0
      97: invokevirtual #1130               // Method scala/Predef$.intWrapper:(I)I
     100: iload         6
     102: invokevirtual #1134               // Method scala/runtime/RichInt$.until$extension0:(II)Lscala/collection/immutable/Range;
     105: aload         7
     107: invokedynamic #1143,  0           // InvokeDynamic #3:apply:(Ljava/util/ArrayList;)Lscala/Function1;
     112: getstatic     #1148               // Field scala/collection/immutable/IndexedSeq$.MODULE$:Lscala/collection/immutable/IndexedSeq$;
     115: invokevirtual #1149               // Method scala/collection/immutable/IndexedSeq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     118: invokevirtual #1152               // Method scala/collection/immutable/Range.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     121: checkcast     #995                // class scala/collection/TraversableOnce
     124: getstatic     #1157               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     127: invokevirtual #1161               // Method scala/reflect/ClassTag$.AnyRef:()Lscala/reflect/ClassTag;
     130: invokeinterface #1165,  2         // InterfaceMethod scala/collection/TraversableOnce.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
     135: checkcast     #1046               // class "[Ljava/lang/Object;"
     138: goto          150
     141: aload_3
     142: invokeinterface #1116,  1         // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     147: checkcast     #1046               // class "[Ljava/lang/Object;"
     150: astore        5
     152: aload_2
     153: aload         4
     155: aload         5
     157: invokevirtual #1169               // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     160: pop
     161: goto          23
     164: aload_0
     165: invokevirtual #1171               // Method getAlgo:()Lai/h2o/sparkling/ml/algos/H2OAlgorithm;
     168: invokevirtual #1173               // Method ai/h2o/sparkling/ml/algos/H2OAlgorithm.getSWtoH2OParamNameMap:()Lscala/collection/immutable/Map;
     171: astore        8
     173: getstatic     #1178               // Field scala/collection/JavaConverters$.MODULE$:Lscala/collection/JavaConverters$;
     176: aload_2
     177: invokevirtual #1182               // Method scala/collection/JavaConverters$.mapAsScalaMapConverter:(Ljava/util/Map;)Lscala/collection/convert/Decorators$AsScala;
     180: invokevirtual #1185               // Method scala/collection/convert/Decorators$AsScala.asScala:()Ljava/lang/Object;
     183: checkcast     #1187               // class scala/collection/TraversableLike
     186: aload_0
     187: aload         8
     189: invokedynamic #1195,  0           // InvokeDynamic #4:apply:(Lai/h2o/sparkling/ml/algos/H2OGridSearch;Lscala/collection/immutable/Map;)Lscala/Function1;
     194: getstatic     #1200               // Field scala/collection/mutable/Iterable$.MODULE$:Lscala/collection/mutable/Iterable$;
     197: invokevirtual #1201               // Method scala/collection/mutable/Iterable$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     200: invokeinterface #1202,  3         // InterfaceMethod scala/collection/TraversableLike.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     205: checkcast     #995                // class scala/collection/TraversableOnce
     208: ldc_w         #997                // String {
     211: ldc_w         #999                // String ,
     214: ldc_w         #1001               // String }
     217: invokeinterface #1005,  4         // InterfaceMethod scala/collection/TraversableOnce.mkString:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     222: areturn

  private scala.Tuple2<java.lang.String, ai.h2o.sparkling.ml.models.H2OMOJOModel>[] getGridModels(java.lang.String, java.lang.String, ai.h2o.sparkling.H2OConf);
    Code:
       0: getstatic     #1224               // Field ai/h2o/sparkling/backend/utils/RestApiUtils$.MODULE$:Lai/h2o/sparkling/backend/utils/RestApiUtils$;
       3: aload_3
       4: invokevirtual #1228               // Method ai/h2o/sparkling/backend/utils/RestApiUtils$.getClusterEndpoint:(Lai/h2o/sparkling/H2OConf;)Ljava/net/URI;
       7: astore        4
       9: new           #1230               // class scala/collection/immutable/$colon$colon
      12: dup
      13: new           #1029               // class scala/Tuple2
      16: dup
      17: ldc_w         #1232               // class hex/schemas/GridSchemaV99
      20: ldc_w         #1234               // String cross_validation_metrics_summary
      23: invokespecial #1237               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      26: new           #1230               // class scala/collection/immutable/$colon$colon
      29: dup
      30: new           #1029               // class scala/Tuple2
      33: dup
      34: ldc_w         #1232               // class hex/schemas/GridSchemaV99
      37: ldc_w         #1239               // String summary_table
      40: invokespecial #1237               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      43: new           #1230               // class scala/collection/immutable/$colon$colon
      46: dup
      47: new           #1029               // class scala/Tuple2
      50: dup
      51: ldc_w         #1232               // class hex/schemas/GridSchemaV99
      54: ldc_w         #1241               // String scoring_history
      57: invokespecial #1237               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      60: getstatic     #1246               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      63: invokespecial #1249               // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
      66: invokespecial #1249               // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
      69: invokespecial #1249               // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
      72: checkcast     #1251               // class scala/collection/Seq
      75: astore        5
      77: aload_0
      78: aload         4
      80: new           #1253               // class java/lang/StringBuilder
      83: dup
      84: ldc_w         #1254               // int 10
      87: invokespecial #1257               // Method java/lang/StringBuilder."<init>":(I)V
      90: ldc_w         #1259               // String /99/Grids/
      93: invokevirtual #1263               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_1
      97: invokevirtual #1263               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: invokevirtual #1266               // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: aload_3
     104: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     107: invokevirtual #1027               // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
     110: invokevirtual #1269               // Method scala/collection/immutable/Map$.empty:()Lscala/collection/immutable/Map;
     113: aload         5
     115: aload_0
     116: invokevirtual #1271               // Method query$default$6:()Lscala/Enumeration$Value;
     119: getstatic     #1157               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     122: ldc_w         #1232               // class hex/schemas/GridSchemaV99
     125: invokevirtual #1274               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     128: invokevirtual #1276               // Method query:(Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;Lscala/Enumeration$Value;Lscala/reflect/ClassTag;)Ljava/lang/Object;
     131: checkcast     #1232               // class hex/schemas/GridSchemaV99
     134: astore        6
     136: getstatic     #1281               // Field ai/h2o/sparkling/ml/models/H2OMOJOSettings$.MODULE$:Lai/h2o/sparkling/ml/models/H2OMOJOSettings$;
     139: aload_0
     140: invokevirtual #1171               // Method getAlgo:()Lai/h2o/sparkling/ml/algos/H2OAlgorithm;
     143: invokevirtual #1285               // Method ai/h2o/sparkling/ml/models/H2OMOJOSettings$.createFromModelParams:(Lai/h2o/sparkling/ml/params/H2OAlgorithmMOJOParams;)Lai/h2o/sparkling/ml/models/H2OMOJOSettings;
     146: astore        7
     148: aload_0
     149: invokevirtual #1171               // Method getAlgo:()Lai/h2o/sparkling/ml/algos/H2OAlgorithm;
     152: ldc_w         #1287               // String keepCrossValidationModels
     155: invokevirtual #1291               // Method ai/h2o/sparkling/ml/algos/H2OAlgorithm.hasParam:(Ljava/lang/String;)Z
     158: ifeq          184
     161: aload_0
     162: invokevirtual #1171               // Method getAlgo:()Lai/h2o/sparkling/ml/algos/H2OAlgorithm;
     165: aload_0
     166: invokevirtual #1171               // Method getAlgo:()Lai/h2o/sparkling/ml/algos/H2OAlgorithm;
     169: ldc_w         #1287               // String keepCrossValidationModels
     172: invokevirtual #1295               // Method ai/h2o/sparkling/ml/algos/H2OAlgorithm.getParam:(Ljava/lang/String;)Lorg/apache/spark/ml/param/Param;
     175: invokevirtual #1299               // Method ai/h2o/sparkling/ml/algos/H2OAlgorithm.getOrDefault:(Lorg/apache/spark/ml/param/Param;)Ljava/lang/Object;
     178: invokestatic  #1304               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
     181: goto          185
     184: iconst_0
     185: istore        8
     187: new           #87                 // class scala/collection/mutable/ArrayOps$ofRef
     190: dup
     191: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     194: aload         6
     196: getfield      #1308               // Field hex/schemas/GridSchemaV99.model_ids:[Lwater/api/schemas3/KeyV3$ModelKeyV3;
     199: checkcast     #1046               // class "[Ljava/lang/Object;"
     202: invokevirtual #1312               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     205: invokespecial #1315               // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     208: aload_2
     209: aload         7
     211: iload         8
     213: invokedynamic #1325,  0           // InvokeDynamic #5:apply:(Ljava/lang/String;Lai/h2o/sparkling/ml/models/H2OMOJOSettings;Z)Lscala/Function1;
     218: getstatic     #1330               // Field scala/Array$.MODULE$:Lscala/Array$;
     221: getstatic     #1157               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     224: ldc_w         #1029               // class scala/Tuple2
     227: invokevirtual #1274               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     230: invokevirtual #1333               // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
     233: invokevirtual #1334               // Method scala/collection/mutable/ArrayOps$ofRef.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     236: checkcast     #1336               // class "[Lscala/Tuple2;"
     239: areturn

  public ai.h2o.sparkling.ml.models.H2OMOJOModel fit(org.apache.spark.sql.Dataset<?>);
    Code:
       0: aload_0
       1: invokevirtual #1171               // Method getAlgo:()Lai/h2o/sparkling/ml/algos/H2OAlgorithm;
       4: astore        4
       6: aload         4
       8: ifnonnull     53
      11: new           #1355               // class java/lang/IllegalArgumentException
      14: dup
      15: new           #1253               // class java/lang/StringBuilder
      18: dup
      19: ldc_w         #1356               // int 56
      22: invokespecial #1257               // Method java/lang/StringBuilder."<init>":(I)V
      25: ldc_w         #1358               // String Algorithm has to be specified. Available algorithms are
      28: invokevirtual #1263               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: getstatic     #1361               // Field ai/h2o/sparkling/ml/algos/H2OGridSearch$SupportedAlgos$.MODULE$:Lai/h2o/sparkling/ml/algos/H2OGridSearch$SupportedAlgos$;
      34: invokevirtual #1364               // Method ai/h2o/sparkling/ml/algos/H2OGridSearch$SupportedAlgos$.values:()Lscala/Enumeration$ValueSet;
      37: ldc_w         #1366               // String ,
      40: invokevirtual #1368               // Method scala/Enumeration$ValueSet.mkString:(Ljava/lang/String;)Ljava/lang/String;
      43: invokevirtual #1263               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #1266               // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #1370               // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: aload         4
      55: aload_1
      56: invokevirtual #1374               // Method ai/h2o/sparkling/ml/algos/H2OAlgorithm.prepareDatasetForFitting:(Lorg/apache/spark/sql/Dataset;)Lscala/Tuple2;
      59: astore        6
      61: aload         6
      63: ifnull        101
      66: aload         6
      68: invokevirtual #1377               // Method scala/Tuple2._1:()Ljava/lang/Object;
      71: checkcast     #1009               // class ai/h2o/sparkling/H2OFrame
      74: astore        7
      76: aload         6
      78: invokevirtual #1380               // Method scala/Tuple2._2:()Ljava/lang/Object;
      81: checkcast     #1063               // class scala/Option
      84: astore        8
      86: new           #1029               // class scala/Tuple2
      89: dup
      90: aload         7
      92: aload         8
      94: invokespecial #1237               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      97: astore_3
      98: goto          114
     101: goto          104
     104: new           #1382               // class scala/MatchError
     107: dup
     108: aload         6
     110: invokespecial #1385               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     113: athrow
     114: aload_3
     115: astore        5
     117: aload         5
     119: invokevirtual #1377               // Method scala/Tuple2._1:()Ljava/lang/Object;
     122: checkcast     #1009               // class ai/h2o/sparkling/H2OFrame
     125: astore        9
     127: aload         5
     129: invokevirtual #1380               // Method scala/Tuple2._2:()Ljava/lang/Object;
     132: checkcast     #1063               // class scala/Option
     135: astore        10
     137: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     140: invokevirtual #1027               // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
     143: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     146: iconst_3
     147: anewarray     #1029               // class scala/Tuple2
     150: dup
     151: iconst_0
     152: getstatic     #1032               // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     155: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     158: ldc_w         #1387               // String hyper_parameters
     161: invokevirtual #1037               // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     164: aload_0
     165: invokespecial #1389               // Method prepareHyperParameters:()Ljava/lang/String;
     168: invokevirtual #1044               // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     171: aastore
     172: dup
     173: iconst_1
     174: getstatic     #1032               // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     177: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     180: ldc_w         #1391               // String parallelism
     183: invokevirtual #1037               // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     186: aload_0
     187: invokevirtual #1393               // Method getParallelism:()I
     190: invokestatic  #1397               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     193: invokevirtual #1044               // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     196: aastore
     197: dup
     198: iconst_2
     199: getstatic     #1032               // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     202: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     205: ldc_w         #1399               // String search_criteria
     208: invokevirtual #1037               // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     211: aload_0
     212: aload         9
     214: invokespecial #1401               // Method getSearchCriteria:(Lai/h2o/sparkling/H2OFrame;)Ljava/lang/String;
     217: invokevirtual #1044               // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     220: aastore
     221: checkcast     #1046               // class "[Ljava/lang/Object;"
     224: invokevirtual #1050               // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     227: invokevirtual #1055               // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
     230: checkcast     #1403               // class scala/collection/immutable/MapLike
     233: aload_0
     234: aload         4
     236: aload         9
     238: aload         10
     240: invokespecial #1405               // Method getAlgoParams:(Lai/h2o/sparkling/ml/algos/H2OAlgorithm;Lai/h2o/sparkling/H2OFrame;Lscala/Option;)Lscala/collection/immutable/Map;
     243: invokeinterface #1406,  2         // InterfaceMethod scala/collection/immutable/MapLike.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/Map;
     248: astore        11
     250: getstatic     #1361               // Field ai/h2o/sparkling/ml/algos/H2OGridSearch$SupportedAlgos$.MODULE$:Lai/h2o/sparkling/ml/algos/H2OGridSearch$SupportedAlgos$;
     253: aload         4
     255: invokevirtual #1410               // Method ai/h2o/sparkling/ml/algos/H2OGridSearch$SupportedAlgos$.toH2OAlgoName:(Lai/h2o/sparkling/ml/algos/H2OAlgorithm;)Ljava/lang/String;
     258: astore        12
     260: aload_0
     261: new           #1253               // class java/lang/StringBuilder
     264: dup
     265: ldc_w         #1411               // int 9
     268: invokespecial #1257               // Method java/lang/StringBuilder."<init>":(I)V
     271: ldc_w         #1413               // String /99/Grid/
     274: invokevirtual #1263               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     277: aload         12
     279: invokevirtual #1263               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     282: invokevirtual #1266               // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     285: aload         11
     287: aload_0
     288: invokevirtual #1415               // Method trainAndGetDestinationKey$default$3:()Z
     291: invokevirtual #1417               // Method trainAndGetDestinationKey:(Ljava/lang/String;Lscala/collection/immutable/Map;Z)Ljava/lang/String;
     294: goto          439
     297: astore        14
     299: new           #1419               // class scala/collection/immutable/StringOps
     302: dup
     303: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     306: ldc_w         #1421               // String Illegal hyper parameter for grid search! The parameter \'([A-Za-z_]+) is not gridable!
     309: invokevirtual #1424               // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
     312: invokespecial #1425               // Method scala/collection/immutable/StringOps."<init>":(Ljava/lang/String;)V
     315: invokevirtual #1429               // Method scala/collection/immutable/StringOps.r:()Lscala/util/matching/Regex;
     318: invokevirtual #1435               // Method scala/util/matching/Regex.unanchored:()Lscala/util/matching/UnanchoredRegex;
     321: astore        15
     323: aload         14
     325: invokevirtual #1438               // Method ai/h2o/sparkling/backend/exceptions/RestApiCommunicationException.getMessage:()Ljava/lang/String;
     328: astore        16
     330: aload         15
     332: checkcast     #1431               // class scala/util/matching/Regex
     335: aload         16
     337: invokevirtual #1442               // Method scala/util/matching/Regex.unapplySeq:(Ljava/lang/CharSequence;)Lscala/Option;
     340: astore        17
     342: aload         17
     344: invokevirtual #1445               // Method scala/Option.isEmpty:()Z
     347: ifne          433
     350: aload         17
     352: invokevirtual #1448               // Method scala/Option.get:()Ljava/lang/Object;
     355: ifnull        433
     358: aload         17
     360: invokevirtual #1448               // Method scala/Option.get:()Ljava/lang/Object;
     363: checkcast     #1450               // class scala/collection/LinearSeqOptimized
     366: iconst_1
     367: invokeinterface #1453,  2         // InterfaceMethod scala/collection/LinearSeqOptimized.lengthCompare:(I)I
     372: iconst_0
     373: if_icmpne     433
     376: aload         17
     378: invokevirtual #1448               // Method scala/Option.get:()Ljava/lang/Object;
     381: checkcast     #1450               // class scala/collection/LinearSeqOptimized
     384: iconst_0
     385: invokeinterface #1456,  2         // InterfaceMethod scala/collection/LinearSeqOptimized.apply:(I)Ljava/lang/Object;
     390: checkcast     #1113               // class java/lang/String
     393: astore        18
     395: new           #1355               // class java/lang/IllegalArgumentException
     398: dup
     399: new           #1253               // class java/lang/StringBuilder
     402: dup
     403: ldc_w         #1457               // int 62
     406: invokespecial #1257               // Method java/lang/StringBuilder."<init>":(I)V
     409: ldc_w         #1459               // String Parameter \'
     412: invokevirtual #1263               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     415: aload         18
     417: invokevirtual #1263               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     420: ldc_w         #1461               // String \' is not supported to be passed as hyper parameter!
     423: invokevirtual #1263               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     426: invokevirtual #1266               // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     429: invokespecial #1370               // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     432: athrow
     433: goto          436
     436: aload         14
     438: athrow
     439: astore        13
     441: getstatic     #1466               // Field ai/h2o/sparkling/H2OContext$.MODULE$:Lai/h2o/sparkling/H2OContext$;
     444: invokedynamic #1472,  0           // InvokeDynamic #6:apply:()Lscala/Function0;
     449: invokevirtual #1476               // Method ai/h2o/sparkling/H2OContext$.ensure:(Lscala/Function0;)Lai/h2o/sparkling/H2OContext;
     452: invokevirtual #1482               // Method ai/h2o/sparkling/H2OContext.getConf:()Lai/h2o/sparkling/H2OConf;
     455: astore        19
     457: aload_0
     458: aload         13
     460: aload         12
     462: aload         19
     464: invokespecial #1484               // Method getGridModels:(Ljava/lang/String;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;)[Lscala/Tuple2;
     467: astore        20
     469: new           #87                 // class scala/collection/mutable/ArrayOps$ofRef
     472: dup
     473: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     476: aload         20
     478: checkcast     #1046               // class "[Ljava/lang/Object;"
     481: invokevirtual #1312               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     484: invokespecial #1315               // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     487: invokevirtual #1485               // Method scala/collection/mutable/ArrayOps$ofRef.isEmpty:()Z
     490: ifeq          504
     493: new           #1487               // class java/lang/RuntimeException
     496: dup
     497: ldc_w         #1489               // String No model has been trained! Review the defined hyper-parameter space or try to increase the value of the maxRuntimeSecs parameter and call the method again.
     500: invokespecial #1490               // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     503: athrow
     504: aload_0
     505: aload         12
     507: aload         20
     509: invokespecial #1494               // Method sortGridModels:(Ljava/lang/String;[Lscala/Tuple2;)[Lscala/Tuple2;
     512: astore        21
     514: aload_0
     515: new           #87                 // class scala/collection/mutable/ArrayOps$ofRef
     518: dup
     519: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     522: aload         21
     524: checkcast     #1046               // class "[Ljava/lang/Object;"
     527: invokevirtual #1312               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     530: invokespecial #1315               // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     533: invokedynamic #1501,  0           // InvokeDynamic #7:apply:()Lscala/Function1;
     538: getstatic     #1330               // Field scala/Array$.MODULE$:Lscala/Array$;
     541: getstatic     #1157               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     544: ldc_w         #1503               // class ai/h2o/sparkling/ml/models/H2OMOJOModel
     547: invokevirtual #1274               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     550: invokevirtual #1333               // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
     553: invokevirtual #1334               // Method scala/collection/mutable/ArrayOps$ofRef.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     556: checkcast     #1504               // class "[Lai/h2o/sparkling/ml/models/H2OMOJOModel;"
     559: invokespecial #1506               // Method gridModels_$eq:([Lai/h2o/sparkling/ml/models/H2OMOJOModel;)V
     562: aload         4
     564: invokevirtual #1509               // Method ai/h2o/sparkling/ml/algos/H2OAlgorithm.getKeepBinaryModels:()Z
     567: ifeq          622
     570: aload_0
     571: new           #87                 // class scala/collection/mutable/ArrayOps$ofRef
     574: dup
     575: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     578: aload         21
     580: checkcast     #1046               // class "[Ljava/lang/Object;"
     583: invokevirtual #1312               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     586: invokespecial #1315               // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     589: aload_0
     590: invokedynamic #1519,  0           // InvokeDynamic #8:apply:(Lai/h2o/sparkling/ml/algos/H2OGridSearch;)Lscala/Function1;
     595: getstatic     #1330               // Field scala/Array$.MODULE$:Lscala/Array$;
     598: getstatic     #1157               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     601: ldc_w         #1521               // class ai/h2o/sparkling/ml/models/H2OBinaryModel
     604: invokevirtual #1274               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     607: invokevirtual #1333               // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
     610: invokevirtual #1334               // Method scala/collection/mutable/ArrayOps$ofRef.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     613: checkcast     #1522               // class "[Lai/h2o/sparkling/ml/models/H2OBinaryModel;"
     616: invokespecial #1524               // Method gridBinaryModels_$eq:([Lai/h2o/sparkling/ml/models/H2OBinaryModel;)V
     619: goto          648
     622: new           #87                 // class scala/collection/mutable/ArrayOps$ofRef
     625: dup
     626: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     629: aload         21
     631: checkcast     #1046               // class "[Ljava/lang/Object;"
     634: invokevirtual #1312               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     637: invokespecial #1315               // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     640: invokedynamic #1531,  0           // InvokeDynamic #9:apply:()Lscala/Function1;
     645: invokevirtual #1535               // Method scala/collection/mutable/ArrayOps$ofRef.foreach:(Lscala/Function1;)V
     648: aload         4
     650: invokevirtual #1537               // Method ai/h2o/sparkling/ml/algos/H2OAlgorithm.deleteRegisteredH2OFrames:()V
     653: aload_0
     654: invokevirtual #1538               // Method deleteRegisteredH2OFrames:()V
     657: new           #87                 // class scala/collection/mutable/ArrayOps$ofRef
     660: dup
     661: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     664: aload_0
     665: invokespecial #1540               // Method gridModels:()[Lai/h2o/sparkling/ml/models/H2OMOJOModel;
     668: checkcast     #1046               // class "[Ljava/lang/Object;"
     671: invokevirtual #1312               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     674: invokespecial #1315               // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     677: invokevirtual #1543               // Method scala/collection/mutable/ArrayOps$ofRef.head:()Ljava/lang/Object;
     680: checkcast     #1503               // class ai/h2o/sparkling/ml/models/H2OMOJOModel
     683: astore        22
     685: aload         19
     687: invokevirtual #1546               // Method ai/h2o/sparkling/H2OConf.isModelPrintAfterTrainingEnabled:()Z
     690: ifeq          704
     693: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     696: aload         22
     698: invokevirtual #1549               // Method scala/Predef$.println:(Ljava/lang/Object;)V
     701: goto          704
     704: aload         22
     706: areturn
    Exception table:
       from    to  target type
         260   294   297   Class ai/h2o/sparkling/backend/exceptions/RestApiCommunicationException

  public ai.h2o.sparkling.ml.models.H2OBinaryModel getBinaryModel();
    Code:
       0: new           #87                 // class scala/collection/mutable/ArrayOps$ofRef
       3: dup
       4: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: aload_0
       8: invokespecial #1566               // Method gridBinaryModels:()[Lai/h2o/sparkling/ml/models/H2OBinaryModel;
      11: checkcast     #1046               // class "[Ljava/lang/Object;"
      14: invokevirtual #1312               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
      17: invokespecial #1315               // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
      20: invokevirtual #1485               // Method scala/collection/mutable/ArrayOps$ofRef.isEmpty:()Z
      23: ifeq          37
      26: new           #1355               // class java/lang/IllegalArgumentException
      29: dup
      30: ldc_w         #1568               // String Algorithm needs to be fit first with the \'keepBinaryModels\' parameter set to true in order to access binary model.
      33: invokespecial #1370               // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: new           #87                 // class scala/collection/mutable/ArrayOps$ofRef
      40: dup
      41: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      44: aload_0
      45: invokespecial #1566               // Method gridBinaryModels:()[Lai/h2o/sparkling/ml/models/H2OBinaryModel;
      48: checkcast     #1046               // class "[Ljava/lang/Object;"
      51: invokevirtual #1312               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
      54: invokespecial #1315               // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
      57: invokevirtual #1543               // Method scala/collection/mutable/ArrayOps$ofRef.head:()Ljava/lang/Object;
      60: checkcast     #1521               // class ai/h2o/sparkling/ml/models/H2OBinaryModel
      63: areturn

  private scala.Tuple2<java.lang.String, ai.h2o.sparkling.ml.models.H2OMOJOModel>[] sortGridModels(java.lang.String, scala.Tuple2<java.lang.String, ai.h2o.sparkling.ml.models.H2OMOJOModel>[]);
    Code:
       0: aload_0
       1: invokevirtual #1571               // Method getSelectBestModelBy:()Ljava/lang/String;
       4: getstatic     #1577               // Field ai/h2o/sparkling/ml/internals/H2OMetric.AUTO:Lai/h2o/sparkling/ml/internals/H2OMetric;
       7: invokevirtual #1579               // Method ai/h2o/sparkling/ml/internals/H2OMetric.name:()Ljava/lang/String;
      10: astore        5
      12: dup
      13: ifnonnull     25
      16: pop
      17: aload         5
      19: ifnull        33
      22: goto          317
      25: aload         5
      27: invokevirtual #950                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      30: ifeq          317
      33: getstatic     #1584               // Field ai/h2o/sparkling/ml/internals/H2OModelCategory$.MODULE$:Lai/h2o/sparkling/ml/internals/H2OModelCategory$;
      36: aload_2
      37: iconst_0
      38: aaload
      39: invokevirtual #1380               // Method scala/Tuple2._2:()Ljava/lang/Object;
      42: checkcast     #1503               // class ai/h2o/sparkling/ml/models/H2OMOJOModel
      45: invokevirtual #1587               // Method ai/h2o/sparkling/ml/models/H2OMOJOModel.getModelCategory:()Ljava/lang/String;
      48: invokevirtual #1591               // Method ai/h2o/sparkling/ml/internals/H2OModelCategory$.fromString:(Ljava/lang/String;)Lscala/Enumeration$Value;
      51: astore        6
      53: aload         6
      55: astore        7
      57: getstatic     #1584               // Field ai/h2o/sparkling/ml/internals/H2OModelCategory$.MODULE$:Lai/h2o/sparkling/ml/internals/H2OModelCategory$;
      60: invokevirtual #1594               // Method ai/h2o/sparkling/ml/internals/H2OModelCategory$.Regression:()Lscala/Enumeration$Value;
      63: aload         7
      65: astore        8
      67: dup
      68: ifnonnull     80
      71: pop
      72: aload         8
      74: ifnull        88
      77: goto          95
      80: aload         8
      82: invokevirtual #950                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      85: ifeq          95
      88: getstatic     #1597               // Field ai/h2o/sparkling/ml/internals/H2OMetric.RMSE:Lai/h2o/sparkling/ml/internals/H2OMetric;
      91: astore_3
      92: goto          313
      95: goto          98
      98: getstatic     #1584               // Field ai/h2o/sparkling/ml/internals/H2OModelCategory$.MODULE$:Lai/h2o/sparkling/ml/internals/H2OModelCategory$;
     101: invokevirtual #1600               // Method ai/h2o/sparkling/ml/internals/H2OModelCategory$.CoxPH:()Lscala/Enumeration$Value;
     104: aload         7
     106: astore        9
     108: dup
     109: ifnonnull     121
     112: pop
     113: aload         9
     115: ifnull        129
     118: goto          136
     121: aload         9
     123: invokevirtual #950                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     126: ifeq          136
     129: getstatic     #1597               // Field ai/h2o/sparkling/ml/internals/H2OMetric.RMSE:Lai/h2o/sparkling/ml/internals/H2OMetric;
     132: astore_3
     133: goto          313
     136: goto          139
     139: getstatic     #1584               // Field ai/h2o/sparkling/ml/internals/H2OModelCategory$.MODULE$:Lai/h2o/sparkling/ml/internals/H2OModelCategory$;
     142: invokevirtual #1603               // Method ai/h2o/sparkling/ml/internals/H2OModelCategory$.Binomial:()Lscala/Enumeration$Value;
     145: aload         7
     147: astore        10
     149: dup
     150: ifnonnull     162
     153: pop
     154: aload         10
     156: ifnull        170
     159: goto          177
     162: aload         10
     164: invokevirtual #950                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     167: ifeq          177
     170: getstatic     #1606               // Field ai/h2o/sparkling/ml/internals/H2OMetric.AUC:Lai/h2o/sparkling/ml/internals/H2OMetric;
     173: astore_3
     174: goto          313
     177: goto          180
     180: getstatic     #1584               // Field ai/h2o/sparkling/ml/internals/H2OModelCategory$.MODULE$:Lai/h2o/sparkling/ml/internals/H2OModelCategory$;
     183: invokevirtual #1609               // Method ai/h2o/sparkling/ml/internals/H2OModelCategory$.AnomalyDetection:()Lscala/Enumeration$Value;
     186: aload         7
     188: astore        11
     190: dup
     191: ifnonnull     203
     194: pop
     195: aload         11
     197: ifnull        211
     200: goto          218
     203: aload         11
     205: invokevirtual #950                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     208: ifeq          218
     211: getstatic     #1612               // Field ai/h2o/sparkling/ml/internals/H2OMetric.Logloss:Lai/h2o/sparkling/ml/internals/H2OMetric;
     214: astore_3
     215: goto          313
     218: goto          221
     221: getstatic     #1584               // Field ai/h2o/sparkling/ml/internals/H2OModelCategory$.MODULE$:Lai/h2o/sparkling/ml/internals/H2OModelCategory$;
     224: invokevirtual #1615               // Method ai/h2o/sparkling/ml/internals/H2OModelCategory$.Multinomial:()Lscala/Enumeration$Value;
     227: aload         7
     229: astore        12
     231: dup
     232: ifnonnull     244
     235: pop
     236: aload         12
     238: ifnull        252
     241: goto          259
     244: aload         12
     246: invokevirtual #950                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     249: ifeq          259
     252: getstatic     #1612               // Field ai/h2o/sparkling/ml/internals/H2OMetric.Logloss:Lai/h2o/sparkling/ml/internals/H2OMetric;
     255: astore_3
     256: goto          313
     259: goto          262
     262: getstatic     #1584               // Field ai/h2o/sparkling/ml/internals/H2OModelCategory$.MODULE$:Lai/h2o/sparkling/ml/internals/H2OModelCategory$;
     265: invokevirtual #1618               // Method ai/h2o/sparkling/ml/internals/H2OModelCategory$.Clustering:()Lscala/Enumeration$Value;
     268: aload         7
     270: astore        13
     272: dup
     273: ifnonnull     285
     276: pop
     277: aload         13
     279: ifnull        293
     282: goto          300
     285: aload         13
     287: invokevirtual #950                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     290: ifeq          300
     293: getstatic     #1621               // Field ai/h2o/sparkling/ml/internals/H2OMetric.TotWithinss:Lai/h2o/sparkling/ml/internals/H2OMetric;
     296: astore_3
     297: goto          313
     300: goto          303
     303: new           #1382               // class scala/MatchError
     306: dup
     307: aload         7
     309: invokespecial #1385               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     312: athrow
     313: aload_3
     314: goto          324
     317: aload_0
     318: invokevirtual #1571               // Method getSelectBestModelBy:()Ljava/lang/String;
     321: invokestatic  #1624               // Method ai/h2o/sparkling/ml/internals/H2OMetric.valueOf:(Ljava/lang/String;)Lai/h2o/sparkling/ml/internals/H2OMetric;
     324: astore        4
     326: new           #87                 // class scala/collection/mutable/ArrayOps$ofRef
     329: dup
     330: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     333: aload_2
     334: checkcast     #1046               // class "[Ljava/lang/Object;"
     337: invokevirtual #1312               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     340: invokespecial #1315               // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     343: aload_0
     344: aload         4
     346: invokedynamic #1634,  0           // InvokeDynamic #10:apply:(Lai/h2o/sparkling/ml/algos/H2OGridSearch;Lai/h2o/sparkling/ml/internals/H2OMetric;)Lscala/Function1;
     351: getstatic     #1330               // Field scala/Array$.MODULE$:Lscala/Array$;
     354: getstatic     #1157               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     357: ldc_w         #1029               // class scala/Tuple2
     360: invokevirtual #1274               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     363: invokevirtual #1333               // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
     366: invokevirtual #1334               // Method scala/collection/mutable/ArrayOps$ofRef.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     369: checkcast     #1336               // class "[Lscala/Tuple2;"
     372: astore        14
     374: aload         4
     376: invokevirtual #1637               // Method ai/h2o/sparkling/ml/internals/H2OMetric.higherTheBetter:()Z
     379: ifeq          391
     382: getstatic     #1640               // Field scala/math/Ordering$Double$.MODULE$:Lscala/math/Ordering$Double$;
     385: invokevirtual #1644               // Method scala/math/Ordering$Double$.reverse:()Lscala/math/Ordering;
     388: goto          394
     391: getstatic     #1640               // Field scala/math/Ordering$Double$.MODULE$:Lscala/math/Ordering$Double$;
     394: astore        15
     396: new           #87                 // class scala/collection/mutable/ArrayOps$ofRef
     399: dup
     400: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     403: new           #87                 // class scala/collection/mutable/ArrayOps$ofRef
     406: dup
     407: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     410: aload         14
     412: checkcast     #1046               // class "[Ljava/lang/Object;"
     415: invokevirtual #1312               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     418: invokespecial #1315               // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     421: invokedynamic #1649,  0           // InvokeDynamic #11:apply:()Lscala/Function1;
     426: aload         15
     428: invokevirtual #1653               // Method scala/collection/mutable/ArrayOps$ofRef.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
     431: checkcast     #1046               // class "[Ljava/lang/Object;"
     434: invokevirtual #1312               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     437: invokespecial #1315               // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     440: invokedynamic #1658,  0           // InvokeDynamic #12:apply:()Lscala/Function1;
     445: getstatic     #1330               // Field scala/Array$.MODULE$:Lscala/Array$;
     448: getstatic     #1157               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     451: ldc_w         #1029               // class scala/Tuple2
     454: invokevirtual #1274               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     457: invokevirtual #1333               // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
     460: invokevirtual #1334               // Method scala/collection/mutable/ArrayOps$ofRef.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     463: checkcast     #1336               // class "[Lscala/Tuple2;"
     466: areturn

  private void ensureGridSearchIsFitted();
    Code:
       0: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: invokespecial #1540               // Method gridModels:()[Lai/h2o/sparkling/ml/models/H2OMOJOModel;
       7: aconst_null
       8: if_acmpeq     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: invokedynamic #1669,  0           // InvokeDynamic #13:apply:()Lscala/Function0;
      21: invokevirtual #1673               // Method scala/Predef$.require:(ZLscala/Function0;)V
      24: return

  private double getMetricValue(ai.h2o.sparkling.ml.models.H2OMOJOModel, ai.h2o.sparkling.ml.internals.H2OMetric);
    Code:
       0: aload_1
       1: invokevirtual #1679               // Method ai/h2o/sparkling/ml/models/H2OMOJOModel.getCurrentMetrics:()Lscala/collection/immutable/Map;
       4: aload_2
       5: invokedynamic #1687,  0           // InvokeDynamic #14:apply:(Lai/h2o/sparkling/ml/internals/H2OMetric;)Lscala/Function1;
      10: invokeinterface #1690,  2         // InterfaceMethod scala/collection/immutable/Map.find:(Lscala/Function1;)Lscala/Option;
      15: invokevirtual #1448               // Method scala/Option.get:()Ljava/lang/Object;
      18: checkcast     #1029               // class scala/Tuple2
      21: invokevirtual #1693               // Method scala/Tuple2._2$mcD$sp:()D
      24: dreturn

  private java.lang.String getColumnNameInModelSummaryTable(org.json4s.JsonAST$JValue);
    Code:
       0: getstatic     #1700               // Field org/json4s/package$.MODULE$:Lorg/json4s/package$;
       3: aload_1
       4: invokevirtual #1704               // Method org/json4s/package$.jvalue2monadic:(Lorg/json4s/JsonAST$JValue;)Lorg/json4s/MonadicJValue;
       7: invokedynamic #1711,  0           // InvokeDynamic #15:apply:()Lscala/Function1;
      12: invokevirtual #1715               // Method org/json4s/MonadicJValue.withFilter:(Lscala/Function1;)Lorg/json4s/MonadicJValue$JValueWithFilter;
      15: invokedynamic #1722,  0           // InvokeDynamic #16:apply:()Lscala/Function1;
      20: invokevirtual #1726               // Method org/json4s/MonadicJValue$JValueWithFilter.flatMap:(Lscala/Function1;)Lscala/collection/immutable/List;
      23: astore_2
      24: aload_2
      25: invokevirtual #1729               // Method scala/collection/immutable/List.head:()Ljava/lang/Object;
      28: checkcast     #1113               // class java/lang/String
      31: areturn

  public org.apache.spark.sql.Dataset<org.apache.spark.sql.Row> getGridModelsParams();
    Code:
       0: aload_0
       1: invokespecial #1736               // Method ensureGridSearchIsFitted:()V
       4: getstatic     #1178               // Field scala/collection/JavaConverters$.MODULE$:Lscala/collection/JavaConverters$;
       7: aload_0
       8: invokevirtual #1085               // Method getHyperParameters:()Ljava/util/Map;
      11: invokeinterface #1739,  1         // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      16: invokevirtual #1743               // Method scala/collection/JavaConverters$.asScalaSetConverter:(Ljava/util/Set;)Lscala/collection/convert/Decorators$AsScala;
      19: invokevirtual #1185               // Method scala/collection/convert/Decorators$AsScala.asScala:()Ljava/lang/Object;
      22: checkcast     #1745               // class scala/collection/mutable/SetLike
      25: invokeinterface #1748,  1         // InterfaceMethod scala/collection/mutable/SetLike.toSeq:()Lscala/collection/Seq;
      30: astore_1
      31: aload_0
      32: invokevirtual #1171               // Method getAlgo:()Lai/h2o/sparkling/ml/algos/H2OAlgorithm;
      35: invokevirtual #1173               // Method ai/h2o/sparkling/ml/algos/H2OAlgorithm.getSWtoH2OParamNameMap:()Lscala/collection/immutable/Map;
      38: invokedynamic #1753,  0           // InvokeDynamic #17:apply:()Lscala/Function1;
      43: getstatic     #1756               // Field scala/collection/immutable/Map$.MODULE$:Lscala/collection/immutable/Map$;
      46: invokevirtual #1757               // Method scala/collection/immutable/Map$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      49: invokeinterface #993,  3          // InterfaceMethod scala/collection/immutable/Map.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      54: checkcast     #956                // class scala/collection/immutable/Map
      57: astore_2
      58: getstatic     #1361               // Field ai/h2o/sparkling/ml/algos/H2OGridSearch$SupportedAlgos$.MODULE$:Lai/h2o/sparkling/ml/algos/H2OGridSearch$SupportedAlgos$;
      61: aload_0
      62: invokevirtual #1171               // Method getAlgo:()Lai/h2o/sparkling/ml/algos/H2OAlgorithm;
      65: invokevirtual #1761               // Method ai/h2o/sparkling/ml/algos/H2OGridSearch$SupportedAlgos$.getEnumValue:(Lai/h2o/sparkling/ml/algos/H2OAlgorithm;)Lscala/Option;
      68: invokevirtual #1448               // Method scala/Option.get:()Ljava/lang/Object;
      71: invokevirtual #1762               // Method java/lang/Object.toString:()Ljava/lang/String;
      74: astore_3
      75: new           #87                 // class scala/collection/mutable/ArrayOps$ofRef
      78: dup
      79: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      82: aload_0
      83: invokespecial #1540               // Method gridModels:()[Lai/h2o/sparkling/ml/models/H2OMOJOModel;
      86: checkcast     #1046               // class "[Ljava/lang/Object;"
      89: invokevirtual #1312               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
      92: invokespecial #1315               // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
      95: invokevirtual #1765               // Method scala/collection/mutable/ArrayOps$ofRef.headOption:()Lscala/Option;
      98: aload_0
      99: aload_3
     100: aload_1
     101: aload_2
     102: invokedynamic #1775,  0           // InvokeDynamic #18:apply:(Lai/h2o/sparkling/ml/algos/H2OGridSearch;Ljava/lang/String;Lscala/collection/Seq;Lscala/collection/immutable/Map;)Lscala/Function1;
     107: invokevirtual #1066               // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
     110: invokedynamic #1781,  0           // InvokeDynamic #19:apply:()Lscala/Function0;
     115: invokevirtual #1080               // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
     118: checkcast     #1251               // class scala/collection/Seq
     121: astore        4
     123: new           #87                 // class scala/collection/mutable/ArrayOps$ofRef
     126: dup
     127: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     130: aload_0
     131: invokespecial #1540               // Method gridModels:()[Lai/h2o/sparkling/ml/models/H2OMOJOModel;
     134: checkcast     #1046               // class "[Ljava/lang/Object;"
     137: invokevirtual #1312               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     140: invokespecial #1315               // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     143: aload_0
     144: aload_3
     145: aload_1
     146: aload_2
     147: aload         4
     149: invokedynamic #1791,  0           // InvokeDynamic #20:apply:(Lai/h2o/sparkling/ml/algos/H2OGridSearch;Ljava/lang/String;Lscala/collection/Seq;Lscala/collection/immutable/Map;Lscala/collection/Seq;)Lscala/Function1;
     154: getstatic     #1330               // Field scala/Array$.MODULE$:Lscala/Array$;
     157: getstatic     #1157               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     160: ldc_w         #1793               // class org/apache/spark/sql/Row
     163: invokevirtual #1274               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     166: invokevirtual #1333               // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
     169: invokevirtual #1334               // Method scala/collection/mutable/ArrayOps$ofRef.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     172: checkcast     #1795               // class "[Lorg/apache/spark/sql/Row;"
     175: astore        5
     177: aload         4
     179: invokedynamic #1802,  0           // InvokeDynamic #21:apply:()Lscala/Function1;
     184: getstatic     #1807               // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
     187: invokevirtual #1808               // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     190: invokeinterface #1809,  3         // InterfaceMethod scala/collection/Seq.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     195: checkcast     #1251               // class scala/collection/Seq
     198: astore        6
     200: getstatic     #1814               // Field org/apache/spark/sql/types/StructType$.MODULE$:Lorg/apache/spark/sql/types/StructType$;
     203: new           #1230               // class scala/collection/immutable/$colon$colon
     206: dup
     207: new           #1816               // class org/apache/spark/sql/types/StructField
     210: dup
     211: ldc_w         #1818               // String MOJO Model ID
     214: getstatic     #1823               // Field org/apache/spark/sql/types/StringType$.MODULE$:Lorg/apache/spark/sql/types/StringType$;
     217: iconst_0
     218: getstatic     #1828               // Field org/apache/spark/sql/types/StructField$.MODULE$:Lorg/apache/spark/sql/types/StructField$;
     221: invokevirtual #1832               // Method org/apache/spark/sql/types/StructField$.apply$default$4:()Lorg/apache/spark/sql/types/Metadata;
     224: invokespecial #1835               // Method org/apache/spark/sql/types/StructField."<init>":(Ljava/lang/String;Lorg/apache/spark/sql/types/DataType;ZLorg/apache/spark/sql/types/Metadata;)V
     227: getstatic     #1246               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
     230: invokespecial #1249               // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
     233: aload         6
     235: getstatic     #1840               // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
     238: invokevirtual #1841               // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     241: invokevirtual #1844               // Method scala/collection/immutable/$colon$colon.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     244: checkcast     #1251               // class scala/collection/Seq
     247: invokevirtual #1847               // Method org/apache/spark/sql/types/StructType$.apply:(Lscala/collection/Seq;)Lorg/apache/spark/sql/types/StructType;
     250: astore        7
     252: getstatic     #1852               // Field ai/h2o/sparkling/utils/SparkSessionUtils$.MODULE$:Lai/h2o/sparkling/utils/SparkSessionUtils$;
     255: invokevirtual #1856               // Method ai/h2o/sparkling/utils/SparkSessionUtils$.active:()Lorg/apache/spark/sql/SparkSession;
     258: astore        8
     260: aload         8
     262: aload         8
     264: invokevirtual #1862               // Method org/apache/spark/sql/SparkSession.sparkContext:()Lorg/apache/spark/SparkContext;
     267: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     270: aload         5
     272: checkcast     #1046               // class "[Ljava/lang/Object;"
     275: invokevirtual #1050               // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     278: aload         8
     280: invokevirtual #1862               // Method org/apache/spark/sql/SparkSession.sparkContext:()Lorg/apache/spark/SparkContext;
     283: invokevirtual #1867               // Method org/apache/spark/SparkContext.parallelize$default$2:()I
     286: getstatic     #1157               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     289: ldc_w         #1793               // class org/apache/spark/sql/Row
     292: invokevirtual #1274               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     295: invokevirtual #1871               // Method org/apache/spark/SparkContext.parallelize:(Lscala/collection/Seq;ILscala/reflect/ClassTag;)Lorg/apache/spark/rdd/RDD;
     298: aload         7
     300: invokevirtual #1875               // Method org/apache/spark/sql/SparkSession.createDataFrame:(Lorg/apache/spark/rdd/RDD;Lorg/apache/spark/sql/types/StructType;)Lorg/apache/spark/sql/Dataset;
     303: areturn

  public org.apache.spark.sql.Dataset<org.apache.spark.sql.Row> getGridModelsMetrics();
    Code:
       0: aload_0
       1: invokespecial #1736               // Method ensureGridSearchIsFitted:()V
       4: new           #87                 // class scala/collection/mutable/ArrayOps$ofRef
       7: dup
       8: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      11: aload_0
      12: invokespecial #1540               // Method gridModels:()[Lai/h2o/sparkling/ml/models/H2OMOJOModel;
      15: checkcast     #1046               // class "[Ljava/lang/Object;"
      18: invokevirtual #1312               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
      21: invokespecial #1315               // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
      24: invokevirtual #1765               // Method scala/collection/mutable/ArrayOps$ofRef.headOption:()Lscala/Option;
      27: invokedynamic #1890,  0           // InvokeDynamic #22:apply:()Lscala/Function1;
      32: invokevirtual #1066               // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      35: invokedynamic #1895,  0           // InvokeDynamic #23:apply:()Lscala/Function0;
      40: invokevirtual #1080               // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      43: checkcast     #1251               // class scala/collection/Seq
      46: astore_1
      47: new           #87                 // class scala/collection/mutable/ArrayOps$ofRef
      50: dup
      51: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      54: aload_0
      55: invokespecial #1540               // Method gridModels:()[Lai/h2o/sparkling/ml/models/H2OMOJOModel;
      58: checkcast     #1046               // class "[Ljava/lang/Object;"
      61: invokevirtual #1312               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
      64: invokespecial #1315               // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
      67: aload_1
      68: invokedynamic #1903,  0           // InvokeDynamic #24:apply:(Lscala/collection/Seq;)Lscala/Function1;
      73: getstatic     #1330               // Field scala/Array$.MODULE$:Lscala/Array$;
      76: getstatic     #1157               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      79: ldc_w         #1793               // class org/apache/spark/sql/Row
      82: invokevirtual #1274               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      85: invokevirtual #1333               // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
      88: invokevirtual #1334               // Method scala/collection/mutable/ArrayOps$ofRef.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      91: checkcast     #1795               // class "[Lorg/apache/spark/sql/Row;"
      94: astore_2
      95: aload_1
      96: invokedynamic #1908,  0           // InvokeDynamic #25:apply:()Lscala/Function1;
     101: getstatic     #1807               // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
     104: invokevirtual #1808               // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     107: invokeinterface #1809,  3         // InterfaceMethod scala/collection/Seq.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     112: checkcast     #1251               // class scala/collection/Seq
     115: astore_3
     116: getstatic     #1814               // Field org/apache/spark/sql/types/StructType$.MODULE$:Lorg/apache/spark/sql/types/StructType$;
     119: new           #1230               // class scala/collection/immutable/$colon$colon
     122: dup
     123: new           #1816               // class org/apache/spark/sql/types/StructField
     126: dup
     127: ldc_w         #1818               // String MOJO Model ID
     130: getstatic     #1823               // Field org/apache/spark/sql/types/StringType$.MODULE$:Lorg/apache/spark/sql/types/StringType$;
     133: iconst_0
     134: getstatic     #1828               // Field org/apache/spark/sql/types/StructField$.MODULE$:Lorg/apache/spark/sql/types/StructField$;
     137: invokevirtual #1832               // Method org/apache/spark/sql/types/StructField$.apply$default$4:()Lorg/apache/spark/sql/types/Metadata;
     140: invokespecial #1835               // Method org/apache/spark/sql/types/StructField."<init>":(Ljava/lang/String;Lorg/apache/spark/sql/types/DataType;ZLorg/apache/spark/sql/types/Metadata;)V
     143: getstatic     #1246               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
     146: invokespecial #1249               // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
     149: aload_3
     150: getstatic     #1840               // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
     153: invokevirtual #1841               // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     156: invokevirtual #1844               // Method scala/collection/immutable/$colon$colon.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     159: checkcast     #1251               // class scala/collection/Seq
     162: invokevirtual #1847               // Method org/apache/spark/sql/types/StructType$.apply:(Lscala/collection/Seq;)Lorg/apache/spark/sql/types/StructType;
     165: astore        4
     167: getstatic     #1852               // Field ai/h2o/sparkling/utils/SparkSessionUtils$.MODULE$:Lai/h2o/sparkling/utils/SparkSessionUtils$;
     170: invokevirtual #1856               // Method ai/h2o/sparkling/utils/SparkSessionUtils$.active:()Lorg/apache/spark/sql/SparkSession;
     173: astore        5
     175: aload         5
     177: aload         5
     179: invokevirtual #1862               // Method org/apache/spark/sql/SparkSession.sparkContext:()Lorg/apache/spark/SparkContext;
     182: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     185: aload_2
     186: checkcast     #1046               // class "[Ljava/lang/Object;"
     189: invokevirtual #1050               // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     192: aload         5
     194: invokevirtual #1862               // Method org/apache/spark/sql/SparkSession.sparkContext:()Lorg/apache/spark/SparkContext;
     197: invokevirtual #1867               // Method org/apache/spark/SparkContext.parallelize$default$2:()I
     200: getstatic     #1157               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     203: ldc_w         #1793               // class org/apache/spark/sql/Row
     206: invokevirtual #1274               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     209: invokevirtual #1871               // Method org/apache/spark/SparkContext.parallelize:(Lscala/collection/Seq;ILscala/reflect/ClassTag;)Lorg/apache/spark/rdd/RDD;
     212: aload         4
     214: invokevirtual #1875               // Method org/apache/spark/sql/SparkSession.createDataFrame:(Lorg/apache/spark/rdd/RDD;Lorg/apache/spark/sql/types/StructType;)Lorg/apache/spark/sql/Dataset;
     217: areturn

  public ai.h2o.sparkling.ml.models.H2OMOJOModel[] getGridModels();
    Code:
       0: aload_0
       1: invokespecial #1736               // Method ensureGridSearchIsFitted:()V
       4: aload_0
       5: invokespecial #1540               // Method gridModels:()[Lai/h2o/sparkling/ml/models/H2OMOJOModel;
       8: areturn

  public org.apache.spark.sql.types.StructType transformSchema(org.apache.spark.sql.types.StructType);
    Code:
       0: aload_1
       1: areturn

  public ai.h2o.sparkling.ml.algos.H2OGridSearch copy(org.apache.spark.ml.param.ParamMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1918               // Method defaultCopy:(Lorg/apache/spark/ml/param/ParamMap;)Lorg/apache/spark/ml/param/Params;
       5: checkcast     #2                  // class ai/h2o/sparkling/ml/algos/H2OGridSearch
       8: areturn

  private scala.collection.immutable.Map<java.lang.String, java.lang.String> extractParamsToShow(java.lang.String, ai.h2o.sparkling.ml.models.H2OMOJOModel, scala.collection.Seq<java.lang.String>, scala.collection.immutable.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_2
       1: invokevirtual #1925               // Method ai/h2o/sparkling/ml/models/H2OMOJOModel.getTrainingParams:()Lscala/collection/immutable/Map;
       4: aload_1
       5: aload_3
       6: aload         4
       8: invokedynamic #1933,  0           // InvokeDynamic #26:apply:(Ljava/lang/String;Lscala/collection/Seq;Lscala/collection/immutable/Map;)Lscala/Function1;
      13: invokeinterface #1937,  2         // InterfaceMethod scala/collection/immutable/Map.filter:(Lscala/Function1;)Ljava/lang/Object;
      18: checkcast     #956                // class scala/collection/immutable/Map
      21: areturn

  public org.apache.spark.ml.param.Params copy(org.apache.spark.ml.param.ParamMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1939               // Method copy:(Lorg/apache/spark/ml/param/ParamMap;)Lai/h2o/sparkling/ml/algos/H2OGridSearch;
       5: areturn

  public org.apache.spark.ml.PipelineStage copy(org.apache.spark.ml.param.ParamMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1939               // Method copy:(Lorg/apache/spark/ml/param/ParamMap;)Lai/h2o/sparkling/ml/algos/H2OGridSearch;
       5: areturn

  public org.apache.spark.ml.Estimator copy(org.apache.spark.ml.param.ParamMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1939               // Method copy:(Lorg/apache/spark/ml/param/ParamMap;)Lai/h2o/sparkling/ml/algos/H2OGridSearch;
       5: areturn

  public org.apache.spark.ml.Model fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1944               // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OMOJOModel;
       5: areturn

  private final void LoggingLevel$lzycompute$1();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #915                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
       8: ifnonnull     23
      11: aload_0
      12: new           #17                 // class ai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$
      15: dup
      16: aload_0
      17: invokespecial #1947               // Method ai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$."<init>":(Lai/h2o/sparkling/backend/utils/RestCommunication;)V
      20: putfield      #915                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
      23: aload_1
      24: monitorexit
      25: goto          31
      28: aload_1
      29: monitorexit
      30: athrow
      31: return
    Exception table:
       from    to  target type
           4    23    28   any

  public static final java.lang.String $anonfun$getSearchCriteria$1(scala.Tuple2);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: ifnull        58
       6: aload_2
       7: invokevirtual #1377               // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #1113               // class java/lang/String
      13: astore_3
      14: aload_2
      15: invokevirtual #1380               // Method scala/Tuple2._2:()Ljava/lang/Object;
      18: astore        4
      20: new           #1253               // class java/lang/StringBuilder
      23: dup
      24: ldc_w         #1951               // int 4
      27: invokespecial #1257               // Method java/lang/StringBuilder."<init>":(I)V
      30: ldc_w         #1953               // String \'
      33: invokevirtual #1263               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_3
      37: invokevirtual #1263               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: ldc_w         #1955               // String \':
      43: invokevirtual #1263               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload         4
      48: invokevirtual #1958               // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      51: invokevirtual #1266               // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: astore_1
      55: goto          70
      58: goto          61
      61: new           #1382               // class scala/MatchError
      64: dup
      65: aload_2
      66: invokespecial #1385               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      69: athrow
      70: aload_1
      71: areturn

  public static final scala.collection.immutable.Map $anonfun$getAlgoParams$1(ai.h2o.sparkling.H2OFrame);
    Code:
       0: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: invokevirtual #1027               // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
       6: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       9: iconst_1
      10: anewarray     #1029               // class scala/Tuple2
      13: dup
      14: iconst_0
      15: getstatic     #1032               // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      18: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      21: ldc_w         #1961               // String validation_frame
      24: invokevirtual #1037               // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      27: aload_0
      28: invokevirtual #1040               // Method ai/h2o/sparkling/H2OFrame.frameId:()Ljava/lang/String;
      31: invokevirtual #1044               // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      34: aastore
      35: checkcast     #1046               // class "[Ljava/lang/Object;"
      38: invokevirtual #1050               // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      41: invokevirtual #1055               // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
      44: checkcast     #956                // class scala/collection/immutable/Map
      47: areturn

  public static final scala.collection.immutable.Map $anonfun$getAlgoParams$2();
    Code:
       0: getstatic     #1023               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: invokevirtual #1027               // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
       6: getstatic     #1246               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       9: invokevirtual #1055               // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
      12: checkcast     #956                // class scala/collection/immutable/Map
      15: areturn

  public static final java.lang.Object $anonfun$prepareHyperParameters$1(java.util.ArrayList, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #1967               // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
       5: areturn

  public static final java.lang.String $anonfun$prepareHyperParameters$2(ai.h2o.sparkling.ml.algos.H2OGridSearch, scala.collection.immutable.Map, scala.Tuple2);
    Code:
       0: aload_2
       1: astore        4
       3: aload         4
       5: ifnull        145
       8: aload         4
      10: invokevirtual #1377               // Method scala/Tuple2._1:()Ljava/lang/Object;
      13: checkcast     #1113               // class java/lang/String
      16: astore        5
      18: aload         4
      20: invokevirtual #1380               // Method scala/Tuple2._2:()Ljava/lang/Object;
      23: checkcast     #1046               // class "[Ljava/lang/Object;"
      26: astore        6
      28: aload_1
      29: aload         5
      31: invokeinterface #1972,  2         // InterfaceMethod scala/collection/immutable/Map.contains:(Ljava/lang/Object;)Z
      36: ifne          96
      39: new           #1355               // class java/lang/IllegalArgumentException
      42: dup
      43: new           #1253               // class java/lang/StringBuilder
      46: dup
      47: ldc_w         #1973               // int 60
      50: invokespecial #1257               // Method java/lang/StringBuilder."<init>":(I)V
      53: ldc_w         #1975               // String Hyper parameter \'
      56: invokevirtual #1263               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload         5
      61: invokevirtual #1263               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: ldc_w         #1977               // String \' is not a valid parameter for algorithm \'
      67: invokevirtual #1263               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_0
      71: invokevirtual #1171               // Method getAlgo:()Lai/h2o/sparkling/ml/algos/H2OAlgorithm;
      74: invokevirtual #1981               // Method ai/h2o/sparkling/ml/algos/H2OAlgorithm.getClass:()Ljava/lang/Class;
      77: invokevirtual #1986               // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      80: invokevirtual #1263               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: ldc_w         #1953               // String \'
      86: invokevirtual #1263               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: invokevirtual #1266               // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: invokespecial #1370               // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      95: athrow
      96: new           #1253               // class java/lang/StringBuilder
      99: dup
     100: ldc_w         #1951               // int 4
     103: invokespecial #1257               // Method java/lang/StringBuilder."<init>":(I)V
     106: ldc_w         #1953               // String \'
     109: invokevirtual #1263               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: aload_1
     113: aload         5
     115: invokeinterface #1988,  2         // InterfaceMethod scala/collection/immutable/Map.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     120: invokevirtual #1958               // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     123: ldc_w         #1955               // String \':
     126: invokevirtual #1263               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: aload_0
     130: aload         6
     132: invokevirtual #1990               // Method stringify:(Ljava/lang/Object;)Ljava/lang/String;
     135: invokevirtual #1263               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: invokevirtual #1266               // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: astore_3
     142: goto          158
     145: goto          148
     148: new           #1382               // class scala/MatchError
     151: dup
     152: aload         4
     154: invokespecial #1385               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     157: athrow
     158: aload_3
     159: areturn

  public static final scala.Tuple2 $anonfun$getGridModels$1(java.lang.String, ai.h2o.sparkling.ml.models.H2OMOJOSettings, boolean, water.api.schemas3.KeyV3$ModelKeyV3);
    Code:
       0: getstatic     #1998               // Field ai/h2o/sparkling/ml/internals/H2OModel$.MODULE$:Lai/h2o/sparkling/ml/internals/H2OModel$;
       3: aload_3
       4: getfield      #2000               // Field water/api/schemas3/KeyV3$ModelKeyV3.name:Ljava/lang/String;
       7: invokevirtual #2003               // Method ai/h2o/sparkling/ml/internals/H2OModel$.apply:(Ljava/lang/String;)Lai/h2o/sparkling/ml/internals/H2OModel;
      10: getstatic     #2008               // Field org/apache/spark/ml/util/Identifiable$.MODULE$:Lorg/apache/spark/ml/util/Identifiable$;
      13: aload_0
      14: invokevirtual #2011               // Method org/apache/spark/ml/util/Identifiable$.randomUID:(Ljava/lang/String;)Ljava/lang/String;
      17: aload_1
      18: iload_2
      19: invokevirtual #2017               // Method ai/h2o/sparkling/ml/internals/H2OModel.toMOJOModel:(Ljava/lang/String;Lai/h2o/sparkling/ml/models/H2OMOJOSettings;Z)Lai/h2o/sparkling/ml/models/H2OMOJOModel;
      22: astore        4
      24: new           #1029               // class scala/Tuple2
      27: dup
      28: aload_3
      29: getfield      #2000               // Field water/api/schemas3/KeyV3$ModelKeyV3.name:Ljava/lang/String;
      32: aload         4
      34: invokespecial #1237               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      37: areturn

  public static final java.lang.String $anonfun$fit$1();
    Code:
       0: getstatic     #1466               // Field ai/h2o/sparkling/H2OContext$.MODULE$:Lai/h2o/sparkling/H2OContext$;
       3: invokevirtual #2022               // Method ai/h2o/sparkling/H2OContext$.ensure$default$1:()Ljava/lang/String;
       6: areturn

  public static final ai.h2o.sparkling.ml.models.H2OMOJOModel $anonfun$fit$2(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #1380               // Method scala/Tuple2._2:()Ljava/lang/Object;
       4: checkcast     #1503               // class ai/h2o/sparkling/ml/models/H2OMOJOModel
       7: areturn

  public static final java.lang.String $anonfun$fit$4();
    Code:
       0: getstatic     #1466               // Field ai/h2o/sparkling/H2OContext$.MODULE$:Lai/h2o/sparkling/H2OContext$;
       3: invokevirtual #2022               // Method ai/h2o/sparkling/H2OContext$.ensure$default$1:()Ljava/lang/String;
       6: areturn

  public static final ai.h2o.sparkling.ml.models.H2OBinaryModel $anonfun$fit$3(ai.h2o.sparkling.ml.algos.H2OGridSearch, scala.Tuple2);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: ifnull        83
       6: aload_3
       7: invokevirtual #1377               // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #1113               // class java/lang/String
      13: astore        4
      15: aload_0
      16: aload         4
      18: getstatic     #1466               // Field ai/h2o/sparkling/H2OContext$.MODULE$:Lai/h2o/sparkling/H2OContext$;
      21: invokedynamic #2028,  0           // InvokeDynamic #27:apply:()Lscala/Function0;
      26: invokevirtual #1476               // Method ai/h2o/sparkling/H2OContext$.ensure:(Lscala/Function0;)Lai/h2o/sparkling/H2OContext;
      29: invokevirtual #1482               // Method ai/h2o/sparkling/H2OContext.getConf:()Lai/h2o/sparkling/H2OConf;
      32: invokevirtual #2030               // Method downloadBinaryModel:(Ljava/lang/String;Lai/h2o/sparkling/H2OConf;)Ljava/io/File;
      35: astore        5
      37: getstatic     #2035               // Field ai/h2o/sparkling/ml/models/H2OBinaryModel$.MODULE$:Lai/h2o/sparkling/ml/models/H2OBinaryModel$;
      40: new           #1253               // class java/lang/StringBuilder
      43: dup
      44: ldc_w         #968                // int 7
      47: invokespecial #1257               // Method java/lang/StringBuilder."<init>":(I)V
      50: ldc_w         #2037               // String file://
      53: invokevirtual #1263               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload         5
      58: invokevirtual #2042               // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      61: invokevirtual #1263               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #1266               // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: new           #2044               // class scala/Some
      70: dup
      71: aload         4
      73: invokespecial #2045               // Method scala/Some."<init>":(Ljava/lang/Object;)V
      76: invokevirtual #2048               // Method ai/h2o/sparkling/ml/models/H2OBinaryModel$.read:(Ljava/lang/String;Lscala/Option;)Lai/h2o/sparkling/ml/models/H2OBinaryModel;
      79: astore_2
      80: goto          95
      83: goto          86
      86: new           #1382               // class scala/MatchError
      89: dup
      90: aload_3
      91: invokespecial #1385               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      94: athrow
      95: aload_2
      96: areturn

  public static final void $anonfun$fit$5(scala.Tuple2);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: ifnull        31
       6: aload_2
       7: invokevirtual #1377               // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #1113               // class java/lang/String
      13: astore_3
      14: getstatic     #1998               // Field ai/h2o/sparkling/ml/internals/H2OModel$.MODULE$:Lai/h2o/sparkling/ml/internals/H2OModel$;
      17: aload_3
      18: invokevirtual #2003               // Method ai/h2o/sparkling/ml/internals/H2OModel$.apply:(Ljava/lang/String;)Lai/h2o/sparkling/ml/internals/H2OModel;
      21: invokevirtual #2055               // Method ai/h2o/sparkling/ml/internals/H2OModel.tryDelete:()V
      24: getstatic     #2061               // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      27: astore_1
      28: goto          43
      31: goto          34
      34: new           #1382               // class scala/MatchError
      37: dup
      38: aload_2
      39: invokespecial #1385               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      42: athrow
      43: return

  public static final scala.Tuple2 $anonfun$sortGridModels$1(ai.h2o.sparkling.ml.algos.H2OGridSearch, ai.h2o.sparkling.ml.internals.H2OMetric, scala.Tuple2);
    Code:
       0: new           #1029               // class scala/Tuple2
       3: dup
       4: aload_2
       5: aload_0
       6: aload_2
       7: invokevirtual #1380               // Method scala/Tuple2._2:()Ljava/lang/Object;
      10: checkcast     #1503               // class ai/h2o/sparkling/ml/models/H2OMOJOModel
      13: aload_1
      14: invokespecial #2064               // Method getMetricValue:(Lai/h2o/sparkling/ml/models/H2OMOJOModel;Lai/h2o/sparkling/ml/internals/H2OMetric;)D
      17: invokestatic  #2068               // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
      20: invokespecial #1237               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      23: areturn

  public static final double $anonfun$sortGridModels$2(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #1693               // Method scala/Tuple2._2$mcD$sp:()D
       4: dreturn

  public static final scala.Tuple2 $anonfun$sortGridModels$3(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #1377               // Method scala/Tuple2._1:()Ljava/lang/Object;
       4: checkcast     #1029               // class scala/Tuple2
       7: areturn

  public static final java.lang.String $anonfun$ensureGridSearchIsFitted$1();
    Code:
       0: ldc_w         #2074               // String The fit method of the grid search must be called first to be able to obtain a list of models.
       3: areturn

  public static final boolean $anonfun$getMetricValue$1(ai.h2o.sparkling.ml.internals.H2OMetric, scala.Tuple2);
    Code:
       0: aload_1
       1: invokevirtual #1377               // Method scala/Tuple2._1:()Ljava/lang/Object;
       4: aload_0
       5: invokevirtual #1579               // Method ai/h2o/sparkling/ml/internals/H2OMetric.name:()Ljava/lang/String;
       8: astore_2
       9: dup
      10: ifnonnull     21
      13: pop
      14: aload_2
      15: ifnull        28
      18: goto          32
      21: aload_2
      22: invokevirtual #950                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public static final boolean $anonfun$getColumnNameInModelSummaryTable$1(org.json4s.JsonAST$JValue);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: instanceof    #55                 // class org/json4s/JsonAST$JObject
       6: ifeq          14
       9: iconst_1
      10: istore_1
      11: goto          22
      14: goto          17
      17: iconst_0
      18: istore_1
      19: goto          22
      22: iload_1
      23: ireturn

  public static final boolean $anonfun$getColumnNameInModelSummaryTable$3(scala.Tuple2);
    Code:
       0: aload_0
       1: astore_2
       2: getstatic     #1700               // Field org/json4s/package$.MODULE$:Lorg/json4s/package$;
       5: invokevirtual #2088               // Method org/json4s/package$.JField:()Lorg/json4s/JsonAST$JField$;
       8: aload_2
       9: invokevirtual #2091               // Method org/json4s/JsonAST$JField$.unapply:(Lscala/Tuple2;)Lscala/Tuple2;
      12: astore_3
      13: getstatic     #2096               // Field org/json4s/SomeValue$.MODULE$:Lorg/json4s/SomeValue$;
      16: aload_3
      17: invokevirtual #2099               // Method org/json4s/SomeValue$.isEmpty$extension:(Ljava/lang/Object;)Z
      20: ifne          68
      23: aload_3
      24: invokevirtual #1377               // Method scala/Tuple2._1:()Ljava/lang/Object;
      27: checkcast     #1113               // class java/lang/String
      30: astore        4
      32: aload_3
      33: invokevirtual #1380               // Method scala/Tuple2._2:()Ljava/lang/Object;
      36: checkcast     #61                 // class org/json4s/JsonAST$JValue
      39: astore        5
      41: ldc_w         #2100               // String name
      44: aload         4
      46: invokevirtual #950                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      49: ifeq          65
      52: aload         5
      54: instanceof    #58                 // class org/json4s/JsonAST$JString
      57: ifeq          65
      60: iconst_1
      61: istore_1
      62: goto          76
      65: goto          71
      68: goto          71
      71: iconst_0
      72: istore_1
      73: goto          76
      76: iload_1
      77: ireturn

  public static final java.lang.String $anonfun$getColumnNameInModelSummaryTable$4(scala.Tuple2);
    Code:
       0: aload_0
       1: astore_2
       2: getstatic     #1700               // Field org/json4s/package$.MODULE$:Lorg/json4s/package$;
       5: invokevirtual #2088               // Method org/json4s/package$.JField:()Lorg/json4s/JsonAST$JField$;
       8: aload_2
       9: invokevirtual #2091               // Method org/json4s/JsonAST$JField$.unapply:(Lscala/Tuple2;)Lscala/Tuple2;
      12: astore_3
      13: getstatic     #2096               // Field org/json4s/SomeValue$.MODULE$:Lorg/json4s/SomeValue$;
      16: aload_3
      17: invokevirtual #2099               // Method org/json4s/SomeValue$.isEmpty$extension:(Ljava/lang/Object;)Z
      20: ifne          83
      23: aload_3
      24: invokevirtual #1377               // Method scala/Tuple2._1:()Ljava/lang/Object;
      27: checkcast     #1113               // class java/lang/String
      30: astore        4
      32: aload_3
      33: invokevirtual #1380               // Method scala/Tuple2._2:()Ljava/lang/Object;
      36: checkcast     #61                 // class org/json4s/JsonAST$JValue
      39: astore        5
      41: ldc_w         #2100               // String name
      44: aload         4
      46: invokevirtual #950                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      49: ifeq          80
      52: aload         5
      54: instanceof    #58                 // class org/json4s/JsonAST$JString
      57: ifeq          80
      60: aload         5
      62: checkcast     #58                 // class org/json4s/JsonAST$JString
      65: astore        6
      67: aload         6
      69: invokevirtual #2105               // Method org/json4s/JsonAST$JString.s:()Ljava/lang/String;
      72: astore        7
      74: aload         7
      76: astore_1
      77: goto          95
      80: goto          86
      83: goto          86
      86: new           #1382               // class scala/MatchError
      89: dup
      90: aload_2
      91: invokespecial #1385               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      94: athrow
      95: aload_1
      96: areturn

  public static final scala.collection.immutable.List $anonfun$getColumnNameInModelSummaryTable$2(org.json4s.JsonAST$JValue);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: instanceof    #55                 // class org/json4s/JsonAST$JObject
       6: ifeq          53
       9: aload_2
      10: checkcast     #55                 // class org/json4s/JsonAST$JObject
      13: astore_3
      14: aload_3
      15: invokevirtual #2110               // Method org/json4s/JsonAST$JObject.obj:()Lscala/collection/immutable/List;
      18: astore        4
      20: aload         4
      22: invokedynamic #2115,  0           // InvokeDynamic #28:apply:()Lscala/Function1;
      27: invokevirtual #2118               // Method scala/collection/immutable/List.withFilter:(Lscala/Function1;)Lscala/collection/generic/FilterMonadic;
      30: invokedynamic #2122,  0           // InvokeDynamic #29:apply:()Lscala/Function1;
      35: getstatic     #1840               // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      38: invokevirtual #1841               // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      41: invokeinterface #2125,  3         // InterfaceMethod scala/collection/generic/FilterMonadic.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      46: checkcast     #1728               // class scala/collection/immutable/List
      49: astore_1
      50: goto          65
      53: goto          56
      56: new           #1382               // class scala/MatchError
      59: dup
      60: aload_2
      61: invokespecial #1385               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      64: athrow
      65: aload_1
      66: areturn

  public static final scala.Tuple2 $anonfun$getGridModelsParams$1(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #2130               // Method scala/Tuple2.swap:()Lscala/Tuple2;
       4: areturn

  public static final scala.collection.Seq $anonfun$getGridModelsParams$2(ai.h2o.sparkling.ml.algos.H2OGridSearch, java.lang.String, scala.collection.Seq, scala.collection.immutable.Map, ai.h2o.sparkling.ml.models.H2OMOJOModel);
    Code:
       0: aload_0
       1: aload_1
       2: aload         4
       4: aload_2
       5: aload_3
       6: invokespecial #2135               // Method extractParamsToShow:(Ljava/lang/String;Lai/h2o/sparkling/ml/models/H2OMOJOModel;Lscala/collection/Seq;Lscala/collection/immutable/Map;)Lscala/collection/immutable/Map;
       9: astore        5
      11: aload         5
      13: invokeinterface #2139,  1         // InterfaceMethod scala/collection/immutable/Map.keys:()Lscala/collection/Iterable;
      18: invokeinterface #2142,  1         // InterfaceMethod scala/collection/Iterable.toSeq:()Lscala/collection/Seq;
      23: areturn

  public static final scala.collection.Seq $anonfun$getGridModelsParams$3();
    Code:
       0: getstatic     #1246               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       3: checkcast     #1251               // class scala/collection/Seq
       6: areturn

  public static final org.apache.spark.sql.Row $anonfun$getGridModelsParams$4(ai.h2o.sparkling.ml.algos.H2OGridSearch, java.lang.String, scala.collection.Seq, scala.collection.immutable.Map, scala.collection.Seq, ai.h2o.sparkling.ml.models.H2OMOJOModel);
    Code:
       0: aload_0
       1: aload_1
       2: aload         5
       4: aload_2
       5: aload_3
       6: invokespecial #2135               // Method extractParamsToShow:(Ljava/lang/String;Lai/h2o/sparkling/ml/models/H2OMOJOModel;Lscala/collection/Seq;Lscala/collection/immutable/Map;)Lscala/collection/immutable/Map;
       9: astore        6
      11: getstatic     #2149               // Field org/apache/spark/sql/Row$.MODULE$:Lorg/apache/spark/sql/Row$;
      14: new           #1230               // class scala/collection/immutable/$colon$colon
      17: dup
      18: aload         5
      20: invokevirtual #2151               // Method ai/h2o/sparkling/ml/models/H2OMOJOModel.uid:()Ljava/lang/String;
      23: getstatic     #1246               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      26: invokespecial #1249               // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
      29: checkcast     #1187               // class scala/collection/TraversableLike
      32: aload         4
      34: aload         6
      36: getstatic     #1807               // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      39: invokevirtual #1808               // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      42: invokeinterface #1809,  3         // InterfaceMethod scala/collection/Seq.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      47: checkcast     #1082               // class scala/collection/GenTraversableOnce
      50: getstatic     #1807               // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      53: invokevirtual #1808               // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      56: invokeinterface #2152,  3         // InterfaceMethod scala/collection/TraversableLike.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      61: checkcast     #1251               // class scala/collection/Seq
      64: invokevirtual #2155               // Method org/apache/spark/sql/Row$.apply:(Lscala/collection/Seq;)Lorg/apache/spark/sql/Row;
      67: areturn

  public static final org.apache.spark.sql.types.StructField $anonfun$getGridModelsParams$5(java.lang.String);
    Code:
       0: new           #1816               // class org/apache/spark/sql/types/StructField
       3: dup
       4: aload_0
       5: getstatic     #1823               // Field org/apache/spark/sql/types/StringType$.MODULE$:Lorg/apache/spark/sql/types/StringType$;
       8: iconst_0
       9: getstatic     #1828               // Field org/apache/spark/sql/types/StructField$.MODULE$:Lorg/apache/spark/sql/types/StructField$;
      12: invokevirtual #1832               // Method org/apache/spark/sql/types/StructField$.apply$default$4:()Lorg/apache/spark/sql/types/Metadata;
      15: invokespecial #1835               // Method org/apache/spark/sql/types/StructField."<init>":(Ljava/lang/String;Lorg/apache/spark/sql/types/DataType;ZLorg/apache/spark/sql/types/Metadata;)V
      18: areturn

  public static final scala.collection.Seq $anonfun$getGridModelsMetrics$1(ai.h2o.sparkling.ml.models.H2OMOJOModel);
    Code:
       0: aload_0
       1: invokevirtual #1679               // Method ai/h2o/sparkling/ml/models/H2OMOJOModel.getCurrentMetrics:()Lscala/collection/immutable/Map;
       4: invokeinterface #2139,  1         // InterfaceMethod scala/collection/immutable/Map.keys:()Lscala/collection/Iterable;
       9: invokeinterface #2142,  1         // InterfaceMethod scala/collection/Iterable.toSeq:()Lscala/collection/Seq;
      14: areturn

  public static final scala.collection.Seq $anonfun$getGridModelsMetrics$2();
    Code:
       0: getstatic     #1246               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       3: checkcast     #1251               // class scala/collection/Seq
       6: areturn

  public static final org.apache.spark.sql.Row $anonfun$getGridModelsMetrics$3(scala.collection.Seq, ai.h2o.sparkling.ml.models.H2OMOJOModel);
    Code:
       0: getstatic     #2149               // Field org/apache/spark/sql/Row$.MODULE$:Lorg/apache/spark/sql/Row$;
       3: new           #1230               // class scala/collection/immutable/$colon$colon
       6: dup
       7: aload_1
       8: invokevirtual #2151               // Method ai/h2o/sparkling/ml/models/H2OMOJOModel.uid:()Ljava/lang/String;
      11: getstatic     #1246               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      14: invokespecial #1249               // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
      17: checkcast     #1187               // class scala/collection/TraversableLike
      20: aload_0
      21: aload_1
      22: invokevirtual #1679               // Method ai/h2o/sparkling/ml/models/H2OMOJOModel.getCurrentMetrics:()Lscala/collection/immutable/Map;
      25: getstatic     #1807               // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      28: invokevirtual #1808               // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      31: invokeinterface #1809,  3         // InterfaceMethod scala/collection/Seq.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      36: checkcast     #1082               // class scala/collection/GenTraversableOnce
      39: getstatic     #1807               // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      42: invokevirtual #1808               // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      45: invokeinterface #2152,  3         // InterfaceMethod scala/collection/TraversableLike.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      50: checkcast     #1251               // class scala/collection/Seq
      53: invokevirtual #2155               // Method org/apache/spark/sql/Row$.apply:(Lscala/collection/Seq;)Lorg/apache/spark/sql/Row;
      56: areturn

  public static final org.apache.spark.sql.types.StructField $anonfun$getGridModelsMetrics$4(java.lang.String);
    Code:
       0: new           #1816               // class org/apache/spark/sql/types/StructField
       3: dup
       4: aload_0
       5: getstatic     #2164               // Field org/apache/spark/sql/types/DoubleType$.MODULE$:Lorg/apache/spark/sql/types/DoubleType$;
       8: iconst_0
       9: getstatic     #1828               // Field org/apache/spark/sql/types/StructField$.MODULE$:Lorg/apache/spark/sql/types/StructField$;
      12: invokevirtual #1832               // Method org/apache/spark/sql/types/StructField$.apply$default$4:()Lorg/apache/spark/sql/types/Metadata;
      15: invokespecial #1835               // Method org/apache/spark/sql/types/StructField."<init>":(Ljava/lang/String;Lorg/apache/spark/sql/types/DataType;ZLorg/apache/spark/sql/types/Metadata;)V
      18: areturn

  public static final boolean $anonfun$extractParamsToShow$1(java.lang.String, scala.collection.Seq, scala.collection.immutable.Map, scala.Tuple2);
    Code:
       0: aload_3
       1: astore        5
       3: aload         5
       5: ifnull        62
       8: aload         5
      10: invokevirtual #1377               // Method scala/Tuple2._1:()Ljava/lang/Object;
      13: checkcast     #1113               // class java/lang/String
      16: astore        6
      18: getstatic     #2174               // Field ai/h2o/sparkling/api/generation/common/IgnoredParameters$.MODULE$:Lai/h2o/sparkling/api/generation/common/IgnoredParameters$;
      21: aload_0
      22: invokevirtual #2178               // Method ai/h2o/sparkling/api/generation/common/IgnoredParameters$.all:(Ljava/lang/String;)Lscala/collection/Seq;
      25: aload         6
      27: invokeinterface #2179,  2         // InterfaceMethod scala/collection/Seq.contains:(Ljava/lang/Object;)Z
      32: ifne          56
      35: aload_1
      36: aload_2
      37: aload         6
      39: invokeinterface #1988,  2         // InterfaceMethod scala/collection/immutable/Map.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      44: invokeinterface #2179,  2         // InterfaceMethod scala/collection/Seq.contains:(Ljava/lang/Object;)Z
      49: ifeq          56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: istore        4
      59: goto          75
      62: goto          65
      65: new           #1382               // class scala/MatchError
      68: dup
      69: aload         5
      71: invokespecial #1385               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      74: athrow
      75: iload         4
      77: ireturn

  public ai.h2o.sparkling.ml.algos.H2OGridSearch(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #920                // Field uid:Ljava/lang/String;
       5: aload_0
       6: invokespecial #2180               // Method org/apache/spark/ml/Estimator."<init>":()V
       9: aload_0
      10: invokestatic  #2184               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.$init$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;)V
      13: aload_0
      14: invokestatic  #2186               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.$init$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)V
      17: aload_0
      18: invokestatic  #2189               // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.$init$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;)V
      21: aload_0
      22: invokestatic  #2192               // InterfaceMethod org/apache/spark/ml/util/MLWritable.$init$:(Lorg/apache/spark/ml/util/MLWritable;)V
      25: aload_0
      26: invokestatic  #2195               // InterfaceMethod org/apache/spark/ml/util/DefaultParamsWritable.$init$:(Lorg/apache/spark/ml/util/DefaultParamsWritable;)V
      29: aload_0
      30: invokestatic  #2198               // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.$init$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;)V
      33: aload_0
      34: invokestatic  #2200               // InterfaceMethod ai/h2o/sparkling/backend/utils/H2OFrameLifecycle.$init$:(Lai/h2o/sparkling/backend/utils/H2OFrameLifecycle;)V
      37: aload_0
      38: invokestatic  #2203               // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.$init$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;)V
      41: aload_0
      42: invokestatic  #2206               // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams.$init$:(Lai/h2o/sparkling/ml/params/H2OGridSearchRandomDiscreteCriteriaParams;)V
      45: aload_0
      46: invokestatic  #2209               // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchCartesianCriteriaParams.$init$:(Lai/h2o/sparkling/ml/params/H2OGridSearchCartesianCriteriaParams;)V
      49: aload_0
      50: invokestatic  #2212               // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchCommonCriteriaParams.$init$:(Lai/h2o/sparkling/ml/params/H2OGridSearchCommonCriteriaParams;)V
      53: aload_0
      54: invokestatic  #2215               // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGridSearchParams.$init$:(Lai/h2o/sparkling/ml/params/H2OGridSearchParams;)V
      57: aload_0
      58: getstatic     #1330               // Field scala/Array$.MODULE$:Lscala/Array$;
      61: getstatic     #1157               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      64: ldc_w         #1521               // class ai/h2o/sparkling/ml/models/H2OBinaryModel
      67: invokevirtual #1274               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      70: invokevirtual #2217               // Method scala/Array$.empty:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
      73: checkcast     #1522               // class "[Lai/h2o/sparkling/ml/models/H2OBinaryModel;"
      76: putfield      #928                // Field gridBinaryModels:[Lai/h2o/sparkling/ml/models/H2OBinaryModel;
      79: return

  public ai.h2o.sparkling.ml.algos.H2OGridSearch();
    Code:
       0: aload_0
       1: getstatic     #2008               // Field org/apache/spark/ml/util/Identifiable$.MODULE$:Lorg/apache/spark/ml/util/Identifiable$;
       4: ldc           #2                  // class ai/h2o/sparkling/ml/algos/H2OGridSearch
       6: invokevirtual #1986               // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       9: invokevirtual #2011               // Method org/apache/spark/ml/util/Identifiable$.randomUID:(Ljava/lang/String;)Ljava/lang/String;
      12: invokespecial #2218               // Method "<init>":(Ljava/lang/String;)V
      15: return

  public static final java.lang.Object $anonfun$prepareHyperParameters$1$adapted(java.util.ArrayList, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2222               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokestatic  #2224               // Method $anonfun$prepareHyperParameters$1:(Ljava/util/ArrayList;I)Ljava/lang/Object;
       8: areturn

  public static final java.lang.Object $anonfun$fit$5$adapted(scala.Tuple2);
    Code:
       0: aload_0
       1: invokestatic  #2226               // Method $anonfun$fit$5:(Lscala/Tuple2;)V
       4: getstatic     #2061               // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       7: areturn

  public static final java.lang.Object $anonfun$sortGridModels$2$adapted(scala.Tuple2);
    Code:
       0: aload_0
       1: invokestatic  #2228               // Method $anonfun$sortGridModels$2:(Lscala/Tuple2;)D
       4: invokestatic  #2068               // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
       7: areturn

  public static final java.lang.Object $anonfun$getMetricValue$1$adapted(ai.h2o.sparkling.ml.internals.H2OMetric, scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2230               // Method $anonfun$getMetricValue$1:(Lai/h2o/sparkling/ml/internals/H2OMetric;Lscala/Tuple2;)Z
       5: invokestatic  #2234               // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       8: areturn

  public static final java.lang.Object $anonfun$getColumnNameInModelSummaryTable$1$adapted(org.json4s.JsonAST$JValue);
    Code:
       0: aload_0
       1: invokestatic  #2236               // Method $anonfun$getColumnNameInModelSummaryTable$1:(Lorg/json4s/JsonAST$JValue;)Z
       4: invokestatic  #2234               // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public static final java.lang.Object $anonfun$extractParamsToShow$1$adapted(java.lang.String, scala.collection.Seq, scala.collection.immutable.Map, scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #2238               // Method $anonfun$extractParamsToShow$1:(Ljava/lang/String;Lscala/collection/Seq;Lscala/collection/immutable/Map;Lscala/Tuple2;)Z
       7: invokestatic  #2234               // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      10: areturn

  public static final java.lang.Object $anonfun$getColumnNameInModelSummaryTable$3$adapted(scala.Tuple2);
    Code:
       0: aload_0
       1: invokestatic  #2240               // Method $anonfun$getColumnNameInModelSummaryTable$3:(Lscala/Tuple2;)Z
       4: invokestatic  #2234               // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #2252,  0           // InvokeDynamic #30:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
