Compiled from "HasLossByColNames.scala"
public interface ai.h2o.sparkling.ml.params.HasLossByColNames extends ai.h2o.sparkling.ml.params.H2OAlgoParamsBase {
  public abstract void ai$h2o$sparkling$ml$params$HasLossByColNames$_setter_$ai$h2o$sparkling$ml$params$HasLossByColNames$$lossByColNames_$eq(ai.h2o.sparkling.ml.params.NullableStringArrayParam);

  public abstract scala.collection.immutable.Map ai$h2o$sparkling$ml$params$HasLossByColNames$$super$getSWtoH2OParamNameMap();

  public abstract ai.h2o.sparkling.ml.params.NullableStringArrayParam ai$h2o$sparkling$ml$params$HasLossByColNames$$lossByColNames();

  public static java.lang.String[] getLossByColNames$(ai.h2o.sparkling.ml.params.HasLossByColNames);
    Code:
       0: aload_0
       1: invokespecial #39                 // InterfaceMethod getLossByColNames:()[Ljava/lang/String;
       4: areturn

  public default java.lang.String[] getLossByColNames();
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #42,  1           // InterfaceMethod ai$h2o$sparkling$ml$params$HasLossByColNames$$lossByColNames:()Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       7: invokeinterface #46,  2           // InterfaceMethod $:(Lorg/apache/spark/ml/param/Param;)Ljava/lang/Object;
      12: checkcast     #48                 // class "[Ljava/lang/String;"
      15: areturn

  public static ai.h2o.sparkling.ml.params.HasLossByColNames setLossByColNames$(ai.h2o.sparkling.ml.params.HasLossByColNames, java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #56                 // InterfaceMethod setLossByColNames:([Ljava/lang/String;)Lai/h2o/sparkling/ml/params/HasLossByColNames;
       5: areturn

  public default ai.h2o.sparkling.ml.params.HasLossByColNames setLossByColNames(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #42,  1           // InterfaceMethod ai$h2o$sparkling$ml$params$HasLossByColNames$$lossByColNames:()Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       7: aload_1
       8: invokeinterface #60,  3           // InterfaceMethod set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      13: checkcast     #2                  // class ai/h2o/sparkling/ml/params/HasLossByColNames
      16: areturn

  public static scala.collection.immutable.Map getLossByColNamesParam$(ai.h2o.sparkling.ml.params.HasLossByColNames, ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #67                 // InterfaceMethod getLossByColNamesParam:(Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public default scala.collection.immutable.Map<java.lang.String, java.lang.Object> getLossByColNamesParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: invokeinterface #39,  1           // InterfaceMethod getLossByColNames:()[Ljava/lang/String;
       6: astore_2
       7: aload_2
       8: aconst_null
       9: if_acmpne     16
      12: aconst_null
      13: goto          81
      16: aload_1
      17: invokevirtual #74                 // Method ai/h2o/sparkling/H2OFrame.columnNames:()[Ljava/lang/String;
      20: astore        4
      22: new           #22                 // class scala/collection/mutable/ArrayOps$ofRef
      25: dup
      26: getstatic     #80                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      29: aload_2
      30: checkcast     #82                 // class "[Ljava/lang/Object;"
      33: invokevirtual #86                 // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
      36: invokespecial #90                 // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
      39: getstatic     #80                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      42: aload         4
      44: checkcast     #82                 // class "[Ljava/lang/Object;"
      47: invokevirtual #86                 // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
      50: astore        6
      52: aload         6
      54: invokedynamic #112,  0            // InvokeDynamic #0:apply:([Ljava/lang/Object;)Lscala/Function1;
      59: getstatic     #117                // Field scala/Array$.MODULE$:Lscala/Array$;
      62: getstatic     #122                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      65: invokevirtual #126                // Method scala/reflect/ClassTag$.Int:()Lscala/reflect/ClassTag;
      68: invokevirtual #130                // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
      71: invokevirtual #134                // Method scala/collection/mutable/ArrayOps$ofRef.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      74: checkcast     #136                // class "[I"
      77: astore        5
      79: aload         5
      81: astore_3
      82: getstatic     #80                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      85: invokevirtual #140                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
      88: getstatic     #80                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      91: iconst_1
      92: anewarray     #142                // class scala/Tuple2
      95: dup
      96: iconst_0
      97: getstatic     #145                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     100: getstatic     #80                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     103: ldc           #147                // String loss_by_col_idx
     105: invokevirtual #150                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     108: aload_3
     109: invokevirtual #154                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     112: aastore
     113: checkcast     #82                 // class "[Ljava/lang/Object;"
     116: invokevirtual #158                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     119: invokevirtual #163                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
     122: checkcast     #165                // class scala/collection/immutable/Map
     125: areturn

  public static scala.collection.immutable.Map getSWtoH2OParamNameMap$(ai.h2o.sparkling.ml.params.HasLossByColNames);
    Code:
       0: aload_0
       1: invokespecial #173                // InterfaceMethod getSWtoH2OParamNameMap:()Lscala/collection/immutable/Map;
       4: areturn

  public default scala.collection.immutable.Map<java.lang.String, java.lang.String> getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokeinterface #176,  1          // InterfaceMethod ai$h2o$sparkling$ml$params$HasLossByColNames$$super$getSWtoH2OParamNameMap:()Lscala/collection/immutable/Map;
       6: getstatic     #80                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       9: invokevirtual #140                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
      12: getstatic     #80                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      15: iconst_1
      16: anewarray     #142                // class scala/Tuple2
      19: dup
      20: iconst_0
      21: getstatic     #145                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      24: getstatic     #80                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      27: ldc           #178                // String lossByColNames
      29: invokevirtual #150                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      32: ldc           #147                // String loss_by_col_idx
      34: invokevirtual #154                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      37: aastore
      38: checkcast     #82                 // class "[Ljava/lang/Object;"
      41: invokevirtual #158                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      44: invokevirtual #163                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
      47: invokeinterface #182,  2          // InterfaceMethod scala/collection/immutable/Map.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/Map;
      52: areturn

  public static int $anonfun$getLossByColNamesParam$1(java.lang.Object[], java.lang.Object);
    Code:
       0: new           #22                 // class scala/collection/mutable/ArrayOps$ofRef
       3: dup
       4: aload_0
       5: invokespecial #90                 // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
       8: aload_1
       9: invokevirtual #190                // Method scala/collection/mutable/ArrayOps$ofRef.indexOf:(Ljava/lang/Object;)I
      12: ireturn

  public static void $init$(ai.h2o.sparkling.ml.params.HasLossByColNames);
    Code:
       0: aload_0
       1: new           #195                // class ai/h2o/sparkling/ml/params/NullableStringArrayParam
       4: dup
       5: aload_0
       6: ldc           #178                // String lossByColNames
       8: ldc           #197                // String Columns names for which loss function will be overridden by the \'lossByCol\' parameter
      10: invokespecial #200                // Method ai/h2o/sparkling/ml/params/NullableStringArrayParam."<init>":(Lorg/apache/spark/ml/param/Params;Ljava/lang/String;Ljava/lang/String;)V
      13: invokeinterface #202,  2          // InterfaceMethod ai$h2o$sparkling$ml$params$HasLossByColNames$_setter_$ai$h2o$sparkling$ml$params$HasLossByColNames$$lossByColNames_$eq:(Lai/h2o/sparkling/ml/params/NullableStringArrayParam;)V
      18: aload_0
      19: getstatic     #80                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      22: iconst_1
      23: anewarray     #204                // class org/apache/spark/ml/param/ParamPair
      26: dup
      27: iconst_0
      28: aload_0
      29: invokeinterface #42,  1           // InterfaceMethod ai$h2o$sparkling$ml$params$HasLossByColNames$$lossByColNames:()Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
      34: aconst_null
      35: invokevirtual #208                // Method ai/h2o/sparkling/ml/params/NullableStringArrayParam.$minus$greater:(Ljava/lang/Object;)Lorg/apache/spark/ml/param/ParamPair;
      38: aastore
      39: checkcast     #82                 // class "[Ljava/lang/Object;"
      42: invokevirtual #158                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      45: invokeinterface #212,  2          // InterfaceMethod setDefault:(Lscala/collection/Seq;)Lorg/apache/spark/ml/param/Params;
      50: pop
      51: return

  public static java.lang.Object $anonfun$getLossByColNamesParam$1$adapted(java.lang.Object[], java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #214                // InterfaceMethod $anonfun$getLossByColNamesParam$1:([Ljava/lang/Object;Ljava/lang/Object;)I
       5: invokestatic  #220                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       8: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #232,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
