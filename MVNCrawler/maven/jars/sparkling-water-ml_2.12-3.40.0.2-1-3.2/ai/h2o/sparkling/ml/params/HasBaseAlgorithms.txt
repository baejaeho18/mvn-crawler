Compiled from "HasBaseAlgorithms.scala"
public interface ai.h2o.sparkling.ml.params.HasBaseAlgorithms extends ai.h2o.sparkling.ml.params.H2OAlgoParamsBase {
  public abstract void ai$h2o$sparkling$ml$params$HasBaseAlgorithms$_setter_$ai$h2o$sparkling$ml$params$HasBaseAlgorithms$$base_algorithms_$eq(ai.h2o.sparkling.ml.params.NullableAlgoArrayParam);

  public abstract ai.h2o.sparkling.ml.params.NullableAlgoArrayParam ai$h2o$sparkling$ml$params$HasBaseAlgorithms$$base_algorithms();

  public static ai.h2o.sparkling.ml.algos.H2OAlgorithm[] getBaseAlgorithms$(ai.h2o.sparkling.ml.params.HasBaseAlgorithms);
    Code:
       0: aload_0
       1: invokespecial #27                 // InterfaceMethod getBaseAlgorithms:()[Lai/h2o/sparkling/ml/algos/H2OAlgorithm;
       4: areturn

  public default ai.h2o.sparkling.ml.algos.H2OAlgorithm<? extends hex.Model$Parameters>[] getBaseAlgorithms();
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #31,  1           // InterfaceMethod ai$h2o$sparkling$ml$params$HasBaseAlgorithms$$base_algorithms:()Lai/h2o/sparkling/ml/params/NullableAlgoArrayParam;
       7: invokeinterface #35,  2           // InterfaceMethod $:(Lorg/apache/spark/ml/param/Param;)Ljava/lang/Object;
      12: checkcast     #37                 // class "[Lai/h2o/sparkling/ml/algos/H2OAlgorithm;"
      15: areturn

  public static ai.h2o.sparkling.ml.params.HasBaseAlgorithms setBaseAlgorithms$(ai.h2o.sparkling.ml.params.HasBaseAlgorithms, ai.h2o.sparkling.ml.algos.H2OAlgorithm[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #45                 // InterfaceMethod setBaseAlgorithms:([Lai/h2o/sparkling/ml/algos/H2OAlgorithm;)Lai/h2o/sparkling/ml/params/HasBaseAlgorithms;
       5: areturn

  public default ai.h2o.sparkling.ml.params.HasBaseAlgorithms setBaseAlgorithms(ai.h2o.sparkling.ml.algos.H2OAlgorithm<? extends hex.Model$Parameters>[]);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #31,  1           // InterfaceMethod ai$h2o$sparkling$ml$params$HasBaseAlgorithms$$base_algorithms:()Lai/h2o/sparkling/ml/params/NullableAlgoArrayParam;
       7: aload_1
       8: invokeinterface #50,  3           // InterfaceMethod set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      13: checkcast     #2                  // class ai/h2o/sparkling/ml/params/HasBaseAlgorithms
      16: areturn

  public static scala.collection.immutable.Map getBaseAlgorithmsParam$(ai.h2o.sparkling.ml.params.HasBaseAlgorithms, ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #57                 // InterfaceMethod getBaseAlgorithmsParam:(Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public default scala.collection.immutable.Map<java.lang.String, java.lang.Object> getBaseAlgorithmsParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: getstatic     #65                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: invokevirtual #69                 // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
       6: invokevirtual #75                 // Method scala/collection/immutable/Map$.empty:()Lscala/collection/immutable/Map;
       9: areturn

  public static void $init$(ai.h2o.sparkling.ml.params.HasBaseAlgorithms);
    Code:
       0: aload_0
       1: new           #79                 // class ai/h2o/sparkling/ml/params/NullableAlgoArrayParam
       4: dup
       5: aload_0
       6: ldc           #81                 // String baseAlgorithms
       8: ldc           #83                 // String An array of base algorithms
      10: invokespecial #87                 // Method ai/h2o/sparkling/ml/params/NullableAlgoArrayParam."<init>":(Lorg/apache/spark/ml/param/Params;Ljava/lang/String;Ljava/lang/String;)V
      13: invokeinterface #89,  2           // InterfaceMethod ai$h2o$sparkling$ml$params$HasBaseAlgorithms$_setter_$ai$h2o$sparkling$ml$params$HasBaseAlgorithms$$base_algorithms_$eq:(Lai/h2o/sparkling/ml/params/NullableAlgoArrayParam;)V
      18: aload_0
      19: getstatic     #65                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      22: iconst_1
      23: anewarray     #91                 // class org/apache/spark/ml/param/ParamPair
      26: dup
      27: iconst_0
      28: aload_0
      29: invokeinterface #31,  1           // InterfaceMethod ai$h2o$sparkling$ml$params$HasBaseAlgorithms$$base_algorithms:()Lai/h2o/sparkling/ml/params/NullableAlgoArrayParam;
      34: aconst_null
      35: invokevirtual #95                 // Method ai/h2o/sparkling/ml/params/NullableAlgoArrayParam.$minus$greater:(Ljava/lang/Object;)Lorg/apache/spark/ml/param/ParamPair;
      38: aastore
      39: checkcast     #97                 // class "[Ljava/lang/Object;"
      42: invokevirtual #101                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      45: invokeinterface #105,  2          // InterfaceMethod setDefault:(Lscala/collection/Seq;)Lorg/apache/spark/ml/param/Params;
      50: pop
      51: return
}
