Compiled from "H2OBinaryModel.scala"
public class ai.h2o.sparkling.ml.models.H2OBinaryModel implements ai.h2o.sparkling.ml.models.HasBinaryModel,ai.h2o.sparkling.backend.utils.RestCommunication {
  private final java.lang.String modelId;

  private volatile ai.h2o.sparkling.backend.utils.RestCommunication$LoggingLevel$ LoggingLevel$module;

  private transient org.slf4j.Logger org$apache$spark$internal$Logging$$log_;

  private scala.Option<java.lang.String> ai$h2o$sparkling$ml$models$HasBinaryModel$$binaryModelFileName;

  public static ai.h2o.sparkling.ml.models.H2OBinaryModel read(java.lang.String);
    Code:
       0: getstatic     #43                 // Field ai/h2o/sparkling/ml/models/H2OBinaryModel$.MODULE$:Lai/h2o/sparkling/ml/models/H2OBinaryModel$;
       3: aload_0
       4: invokevirtual #45                 // Method ai/h2o/sparkling/ml/models/H2OBinaryModel$.read:(Ljava/lang/String;)Lai/h2o/sparkling/ml/models/H2OBinaryModel;
       7: areturn

  public static boolean exists(java.lang.String);
    Code:
       0: getstatic     #43                 // Field ai/h2o/sparkling/ml/models/H2OBinaryModel$.MODULE$:Lai/h2o/sparkling/ml/models/H2OBinaryModel$;
       3: aload_0
       4: invokevirtual #49                 // Method ai/h2o/sparkling/ml/models/H2OBinaryModel$.exists:(Ljava/lang/String;)Z
       7: ireturn

  public <ResultType> ResultType query(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, scala.Enumeration$Value, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #63                 // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;Lscala/Enumeration$Value;Lscala/reflect/ClassTag;)Ljava/lang/Object;
      15: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> query$default$4();
    Code:
       0: aload_0
       1: invokestatic  #78                 // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> query$default$5();
    Code:
       0: aload_0
       1: invokestatic  #85                 // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> scala.Enumeration$Value query$default$6();
    Code:
       0: aload_0
       1: invokestatic  #92                 // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public <ResultType> ResultType update(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, boolean, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aload         7
      12: invokestatic  #101                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;ZLscala/reflect/ClassTag;)Ljava/lang/Object;
      15: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> update$default$4();
    Code:
       0: aload_0
       1: invokestatic  #106                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> update$default$5();
    Code:
       0: aload_0
       1: invokestatic  #110                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> boolean update$default$6();
    Code:
       0: aload_0
       1: invokestatic  #117                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public <ResultType> ResultType delete(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, boolean, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aload         7
      12: invokestatic  #122                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;ZLscala/reflect/ClassTag;)Ljava/lang/Object;
      15: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> delete$default$4();
    Code:
       0: aload_0
       1: invokestatic  #126                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> delete$default$5();
    Code:
       0: aload_0
       1: invokestatic  #130                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> boolean delete$default$6();
    Code:
       0: aload_0
       1: invokestatic  #134                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public java.io.OutputStream insertToNode(ai.h2o.sparkling.backend.NodeDesc, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #142                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insertToNode$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Lai/h2o/sparkling/backend/NodeDesc;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;)Ljava/io/OutputStream;
       9: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> insertToNode$default$4();
    Code:
       0: aload_0
       1: invokestatic  #148                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insertToNode$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public java.io.OutputStream insert(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.Function1<java.io.OutputStream, java.io.OutputStream>, scala.collection.immutable.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #156                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insert$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/Function1;Lscala/collection/immutable/Map;)Ljava/io/OutputStream;
      11: areturn

  public scala.Function1<java.io.OutputStream, java.io.OutputStream> insert$default$4();
    Code:
       0: aload_0
       1: invokestatic  #164                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insert$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Function1;
       4: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> insert$default$5();
    Code:
       0: aload_0
       1: invokestatic  #168                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insert$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public void delete(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #172                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;)V
       7: return

  public <ResultType> ResultType request(java.net.URI, java.lang.String, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, boolean, scala.Enumeration$Value, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: iload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #181                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;ZLscala/Enumeration$Value;Lscala/reflect/ClassTag;)Ljava/lang/Object;
      19: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> request$default$5();
    Code:
       0: aload_0
       1: invokestatic  #185                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> request$default$6();
    Code:
       0: aload_0
       1: invokestatic  #189                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> boolean request$default$7();
    Code:
       0: aload_0
       1: invokestatic  #193                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$7$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public <ResultType> scala.Enumeration$Value request$default$8();
    Code:
       0: aload_0
       1: invokestatic  #197                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$8$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public <ResultType> ResultType deserialize(java.lang.String, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #206                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.deserialize$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/lang/String;Lscala/collection/Seq;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       7: areturn

  public <ResultType> ResultType deserialize(com.google.gson.JsonElement, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #212                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.deserialize$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Lcom/google/gson/JsonElement;Lscala/collection/Seq;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       7: areturn

  public com.google.gson.JsonObject deserializeAsJsonObject(java.lang.String, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #220                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.deserializeAsJsonObject$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/lang/String;Lscala/collection/Seq;)Lcom/google/gson/JsonObject;
       6: areturn

  public void downloadBinaryURLContent(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #227                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.downloadBinaryURLContent$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Ljava/io/File;)V
       9: return

  public void downloadStringURLContent(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #232                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.downloadStringURLContent$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Ljava/io/File;)V
       9: return

  public java.io.InputStream readURLContent(java.net.URI, java.lang.String, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, boolean, scala.Option<java.lang.String>, scala.Enumeration$Value);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #239                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;ZLscala/Option;Lscala/Enumeration$Value;)Ljava/io/InputStream;
      17: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> readURLContent$default$5();
    Code:
       0: aload_0
       1: invokestatic  #243                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public boolean readURLContent$default$6();
    Code:
       0: aload_0
       1: invokestatic  #247                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public scala.Option<java.lang.String> readURLContent$default$7();
    Code:
       0: aload_0
       1: invokestatic  #254                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$7$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Option;
       4: areturn

  public scala.Enumeration$Value readURLContent$default$8();
    Code:
       0: aload_0
       1: invokestatic  #258                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$8$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public void checkResponseCode(java.net.HttpURLConnection, scala.Enumeration$Value);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #265                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.checkResponseCode$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/HttpURLConnection;Lscala/Enumeration$Value;)V
       6: return

  public scala.Enumeration$Value checkResponseCode$default$2();
    Code:
       0: aload_0
       1: invokestatic  #270                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.checkResponseCode$default$2$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public java.lang.String stringifyPrimitiveParam(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #279                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyPrimitiveParam$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  public boolean isPrimitiveType(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #286                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.isPrimitiveType$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Z
       5: ireturn

  public java.lang.String stringifyArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #291                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyArray$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringifyMap(scala.collection.immutable.Map<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #299                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyMap$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Lscala/collection/immutable/Map;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringifyPair(scala.Tuple2<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #307                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyPair$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Lscala/Tuple2;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringify(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #312                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringify$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringifyParams(scala.collection.immutable.Map<java.lang.String, java.lang.Object>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #319                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyParams$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Lscala/collection/immutable/Map;Z)Ljava/lang/String;
       6: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> stringifyParams$default$1();
    Code:
       0: aload_0
       1: invokestatic  #324                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyParams$default$1$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;)Lscala/collection/immutable/Map;
       4: areturn

  public boolean stringifyParams$default$2();
    Code:
       0: aload_0
       1: invokestatic  #329                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyParams$default$2$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;)Z
       4: ireturn

  public java.lang.String logName();
    Code:
       0: aload_0
       1: invokestatic  #337                // InterfaceMethod org/apache/spark/internal/Logging.logName$:(Lorg/apache/spark/internal/Logging;)Ljava/lang/String;
       4: areturn

  public org.slf4j.Logger log();
    Code:
       0: aload_0
       1: invokestatic  #343                // InterfaceMethod org/apache/spark/internal/Logging.log$:(Lorg/apache/spark/internal/Logging;)Lorg/slf4j/Logger;
       4: areturn

  public void logInfo(scala.Function0<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #351                // InterfaceMethod org/apache/spark/internal/Logging.logInfo$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;)V
       5: return

  public void logDebug(scala.Function0<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #356                // InterfaceMethod org/apache/spark/internal/Logging.logDebug$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;)V
       5: return

  public void logTrace(scala.Function0<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #360                // InterfaceMethod org/apache/spark/internal/Logging.logTrace$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;)V
       5: return

  public void logWarning(scala.Function0<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #364                // InterfaceMethod org/apache/spark/internal/Logging.logWarning$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;)V
       5: return

  public void logError(scala.Function0<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #368                // InterfaceMethod org/apache/spark/internal/Logging.logError$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;)V
       5: return

  public void logInfo(scala.Function0<java.lang.String>, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #374                // InterfaceMethod org/apache/spark/internal/Logging.logInfo$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;Ljava/lang/Throwable;)V
       6: return

  public void logDebug(scala.Function0<java.lang.String>, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #377                // InterfaceMethod org/apache/spark/internal/Logging.logDebug$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;Ljava/lang/Throwable;)V
       6: return

  public void logTrace(scala.Function0<java.lang.String>, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #379                // InterfaceMethod org/apache/spark/internal/Logging.logTrace$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;Ljava/lang/Throwable;)V
       6: return

  public void logWarning(scala.Function0<java.lang.String>, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #381                // InterfaceMethod org/apache/spark/internal/Logging.logWarning$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;Ljava/lang/Throwable;)V
       6: return

  public void logError(scala.Function0<java.lang.String>, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #383                // InterfaceMethod org/apache/spark/internal/Logging.logError$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;Ljava/lang/Throwable;)V
       6: return

  public boolean isTraceEnabled();
    Code:
       0: aload_0
       1: invokestatic  #388                // InterfaceMethod org/apache/spark/internal/Logging.isTraceEnabled$:(Lorg/apache/spark/internal/Logging;)Z
       4: ireturn

  public void initializeLogIfNecessary(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #395                // InterfaceMethod org/apache/spark/internal/Logging.initializeLogIfNecessary$:(Lorg/apache/spark/internal/Logging;Z)V
       5: return

  public boolean initializeLogIfNecessary(boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #400                // InterfaceMethod org/apache/spark/internal/Logging.initializeLogIfNecessary$:(Lorg/apache/spark/internal/Logging;ZZ)Z
       6: ireturn

  public boolean initializeLogIfNecessary$default$2();
    Code:
       0: aload_0
       1: invokestatic  #404                // InterfaceMethod org/apache/spark/internal/Logging.initializeLogIfNecessary$default$2$:(Lorg/apache/spark/internal/Logging;)Z
       4: ireturn

  public void initializeForcefully(boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #410                // InterfaceMethod org/apache/spark/internal/Logging.initializeForcefully$:(Lorg/apache/spark/internal/Logging;ZZ)V
       6: return

  public ai.h2o.sparkling.ml.models.HasBinaryModel setBinaryModel(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #417                // InterfaceMethod ai/h2o/sparkling/ml/models/HasBinaryModel.setBinaryModel$:(Lai/h2o/sparkling/ml/models/HasBinaryModel;Ljava/io/InputStream;)Lai/h2o/sparkling/ml/models/HasBinaryModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.HasBinaryModel setBinaryModel(java.io.InputStream, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #423                // InterfaceMethod ai/h2o/sparkling/ml/models/HasBinaryModel.setBinaryModel$:(Lai/h2o/sparkling/ml/models/HasBinaryModel;Ljava/io/InputStream;Ljava/lang/String;)Lai/h2o/sparkling/ml/models/HasBinaryModel;
       6: areturn

  public ai.h2o.sparkling.ml.models.HasBinaryModel setBinaryModel(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #427                // InterfaceMethod ai/h2o/sparkling/ml/models/HasBinaryModel.setBinaryModel$:(Lai/h2o/sparkling/ml/models/HasBinaryModel;Ljava/io/File;)Lai/h2o/sparkling/ml/models/HasBinaryModel;
       5: areturn

  public scala.Option<java.io.File> getBinaryModel();
    Code:
       0: aload_0
       1: invokestatic  #433                // InterfaceMethod ai/h2o/sparkling/ml/models/HasBinaryModel.getBinaryModel$:(Lai/h2o/sparkling/ml/models/HasBinaryModel;)Lscala/Option;
       4: areturn

  public ai.h2o.sparkling.backend.utils.RestCommunication$LoggingLevel$ LoggingLevel();
    Code:
       0: aload_0
       1: getfield      #437                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #441                // Method LoggingLevel$lzycompute$1:()V
      11: aload_0
      12: getfield      #437                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
      15: areturn

  public org.slf4j.Logger org$apache$spark$internal$Logging$$log_();
    Code:
       0: aload_0
       1: getfield      #443                // Field org$apache$spark$internal$Logging$$log_:Lorg/slf4j/Logger;
       4: areturn

  public void org$apache$spark$internal$Logging$$log__$eq(org.slf4j.Logger);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #443                // Field org$apache$spark$internal$Logging$$log_:Lorg/slf4j/Logger;
       5: return

  public scala.Option<java.lang.String> ai$h2o$sparkling$ml$models$HasBinaryModel$$binaryModelFileName();
    Code:
       0: aload_0
       1: getfield      #448                // Field ai$h2o$sparkling$ml$models$HasBinaryModel$$binaryModelFileName:Lscala/Option;
       4: areturn

  public void ai$h2o$sparkling$ml$models$HasBinaryModel$$binaryModelFileName_$eq(scala.Option<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #448                // Field ai$h2o$sparkling$ml$models$HasBinaryModel$$binaryModelFileName:Lscala/Option;
       5: return

  public java.lang.String modelId();
    Code:
       0: aload_0
       1: getfield      #453                // Field modelId:Ljava/lang/String;
       4: areturn

  public void write(java.lang.String);
    Code:
       0: getstatic     #460                // Field ai/h2o/sparkling/utils/SparkSessionUtils$.MODULE$:Lai/h2o/sparkling/utils/SparkSessionUtils$;
       3: invokevirtual #464                // Method ai/h2o/sparkling/utils/SparkSessionUtils$.active:()Lorg/apache/spark/sql/SparkSession;
       6: invokevirtual #470                // Method org/apache/spark/sql/SparkSession.sparkContext:()Lorg/apache/spark/SparkContext;
       9: astore_2
      10: new           #472                // class org/apache/hadoop/fs/Path
      13: dup
      14: aload_1
      15: invokespecial #475                // Method org/apache/hadoop/fs/Path."<init>":(Ljava/lang/String;)V
      18: astore_3
      19: aload_3
      20: aload_2
      21: invokevirtual #481                // Method org/apache/spark/SparkContext.hadoopConfiguration:()Lorg/apache/hadoop/conf/Configuration;
      24: invokevirtual #485                // Method org/apache/hadoop/fs/Path.getFileSystem:(Lorg/apache/hadoop/conf/Configuration;)Lorg/apache/hadoop/fs/FileSystem;
      27: astore        4
      29: aload_3
      30: aload         4
      32: invokevirtual #491                // Method org/apache/hadoop/fs/FileSystem.getUri:()Ljava/net/URI;
      35: aload         4
      37: invokevirtual #495                // Method org/apache/hadoop/fs/FileSystem.getWorkingDirectory:()Lorg/apache/hadoop/fs/Path;
      40: invokevirtual #499                // Method org/apache/hadoop/fs/Path.makeQualified:(Ljava/net/URI;Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/Path;
      43: astore        5
      45: getstatic     #504                // Field ai/h2o/sparkling/utils/ScalaUtils$.MODULE$:Lai/h2o/sparkling/utils/ScalaUtils$;
      48: aload         4
      50: aload         5
      52: invokevirtual #508                // Method org/apache/hadoop/fs/FileSystem.create:(Lorg/apache/hadoop/fs/Path;)Lorg/apache/hadoop/fs/FSDataOutputStream;
      55: aload_0
      56: invokedynamic #532,  0            // InvokeDynamic #0:apply:(Lai/h2o/sparkling/ml/models/H2OBinaryModel;)Lscala/Function1;
      61: invokevirtual #536                // Method ai/h2o/sparkling/utils/ScalaUtils$.withResource:(Ljava/lang/AutoCloseable;Lscala/Function1;)Ljava/lang/Object;
      64: pop
      65: aload_0
      66: aload         5
      68: invokedynamic #547,  0            // InvokeDynamic #1:apply:(Lorg/apache/hadoop/fs/Path;)Lscala/Function0;
      73: invokevirtual #549                // Method logInfo:(Lscala/Function0;)V
      76: return

  private final void LoggingLevel$lzycompute$1();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #437                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
       8: ifnonnull     23
      11: aload_0
      12: new           #14                 // class ai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$
      15: dup
      16: aload_0
      17: invokespecial #559                // Method ai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$."<init>":(Lai/h2o/sparkling/backend/utils/RestCommunication;)V
      20: putfield      #437                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
      23: aload_1
      24: monitorexit
      25: goto          31
      28: aload_1
      29: monitorexit
      30: athrow
      31: return
    Exception table:
       from    to  target type
           4    23    28   any

  public static final long $anonfun$write$1(ai.h2o.sparkling.ml.models.H2OBinaryModel, org.apache.hadoop.fs.FSDataOutputStream);
    Code:
       0: new           #567                // class java/io/File
       3: dup
       4: aload_0
       5: invokevirtual #569                // Method getBinaryModel:()Lscala/Option;
       8: invokevirtual #574                // Method scala/Option.get:()Ljava/lang/Object;
      11: checkcast     #567                // class java/io/File
      14: invokevirtual #577                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      17: invokespecial #578                // Method java/io/File."<init>":(Ljava/lang/String;)V
      20: invokevirtual #582                // Method java/io/File.toPath:()Ljava/nio/file/Path;
      23: aload_1
      24: invokestatic  #588                // Method java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/io/OutputStream;)J
      27: lreturn

  public static final java.lang.String $anonfun$write$2(org.apache.hadoop.fs.Path);
    Code:
       0: new           #592                // class java/lang/StringBuilder
       3: dup
       4: ldc_w         #593                // int 23
       7: invokespecial #596                // Method java/lang/StringBuilder."<init>":(I)V
      10: ldc_w         #598                // String Binary Model Saved to:
      13: invokevirtual #602                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #605                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      20: invokevirtual #608                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: areturn

  public ai.h2o.sparkling.ml.models.H2OBinaryModel(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #453                // Field modelId:Ljava/lang/String;
       5: aload_0
       6: invokespecial #610                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #614                // InterfaceMethod ai/h2o/sparkling/ml/models/HasBinaryModel.$init$:(Lai/h2o/sparkling/ml/models/HasBinaryModel;)V
      13: aload_0
      14: invokestatic  #617                // InterfaceMethod org/apache/spark/internal/Logging.$init$:(Lorg/apache/spark/internal/Logging;)V
      17: aload_0
      18: invokestatic  #620                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.$init$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;)V
      21: aload_0
      22: invokestatic  #622                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.$init$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)V
      25: return

  public static final java.lang.Object $anonfun$write$1$adapted(ai.h2o.sparkling.ml.models.H2OBinaryModel, org.apache.hadoop.fs.FSDataOutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #624                // Method $anonfun$write$1:(Lai/h2o/sparkling/ml/models/H2OBinaryModel;Lorg/apache/hadoop/fs/FSDataOutputStream;)J
       5: invokestatic  #630                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
       8: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #642,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
