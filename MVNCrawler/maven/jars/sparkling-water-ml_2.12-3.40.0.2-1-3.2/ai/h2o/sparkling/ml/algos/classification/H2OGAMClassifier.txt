Compiled from "H2OGAMClassifier.scala"
public class ai.h2o.sparkling.ml.algos.classification.H2OGAMClassifier extends ai.h2o.sparkling.ml.algos.H2OGAM implements ai.h2o.sparkling.ml.algos.classification.H2OClassifier,ai.h2o.sparkling.ml.algos.classification.FamilyForClassificationCheck {
  private final java.lang.String uid;

  public static org.apache.spark.ml.util.MLReader<ai.h2o.sparkling.ml.algos.classification.H2OGAMClassifier> read();
    Code:
       0: getstatic     #23                 // Field ai/h2o/sparkling/ml/algos/classification/H2OGAMClassifier$.MODULE$:Lai/h2o/sparkling/ml/algos/classification/H2OGAMClassifier$;
       3: invokevirtual #25                 // Method ai/h2o/sparkling/ml/algos/classification/H2OGAMClassifier$.read:()Lorg/apache/spark/ml/util/MLReader;
       6: areturn

  public static java.lang.Object load(java.lang.String);
    Code:
       0: getstatic     #23                 // Field ai/h2o/sparkling/ml/algos/classification/H2OGAMClassifier$.MODULE$:Lai/h2o/sparkling/ml/algos/classification/H2OGAMClassifier$;
       3: aload_0
       4: invokevirtual #30                 // Method ai/h2o/sparkling/ml/algos/classification/H2OGAMClassifier$.load:(Ljava/lang/String;)Ljava/lang/Object;
       7: areturn

  public scala.Tuple2 ai$h2o$sparkling$ml$algos$classification$FamilyForClassificationCheck$$super$prepareDatasetForFitting(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #37                 // InterfaceMethod ai/h2o/sparkling/ml/algos/classification/H2OClassifier.prepareDatasetForFitting$:(Lai/h2o/sparkling/ml/algos/classification/H2OClassifier;Lorg/apache/spark/sql/Dataset;)Lscala/Tuple2;
       5: areturn

  public scala.Tuple2<ai.h2o.sparkling.H2OFrame, scala.Option<ai.h2o.sparkling.H2OFrame>> prepareDatasetForFitting(org.apache.spark.sql.Dataset<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #45                 // InterfaceMethod ai/h2o/sparkling/ml/algos/classification/FamilyForClassificationCheck.prepareDatasetForFitting$:(Lai/h2o/sparkling/ml/algos/classification/FamilyForClassificationCheck;Lorg/apache/spark/sql/Dataset;)Lscala/Tuple2;
       5: areturn

  public scala.Tuple2 ai$h2o$sparkling$ml$algos$classification$H2OClassifier$$super$prepareDatasetForFitting(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #51                 // InterfaceMethod ai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils.prepareDatasetForFitting$:(Lai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils;Lorg/apache/spark/sql/Dataset;)Lscala/Tuple2;
       5: areturn

  public java.lang.String uid();
    Code:
       0: aload_0
       1: getfield      #54                 // Field uid:Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.algos.classification.H2OGAMClassifier(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #54                 // Field uid:Ljava/lang/String;
       5: aload_0
       6: invokespecial #59                 // Method ai/h2o/sparkling/ml/algos/H2OGAM."<init>":()V
       9: aload_0
      10: invokestatic  #63                 // InterfaceMethod ai/h2o/sparkling/ml/algos/classification/H2OClassifier.$init$:(Lai/h2o/sparkling/ml/algos/classification/H2OClassifier;)V
      13: aload_0
      14: invokestatic  #66                 // InterfaceMethod ai/h2o/sparkling/ml/algos/classification/FamilyForClassificationCheck.$init$:(Lai/h2o/sparkling/ml/algos/classification/FamilyForClassificationCheck;)V
      17: return

  public ai.h2o.sparkling.ml.algos.classification.H2OGAMClassifier();
    Code:
       0: aload_0
       1: getstatic     #71                 // Field org/apache/spark/ml/util/Identifiable$.MODULE$:Lorg/apache/spark/ml/util/Identifiable$;
       4: ldc           #2                  // class ai/h2o/sparkling/ml/algos/classification/H2OGAMClassifier
       6: invokevirtual #76                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       9: invokevirtual #80                 // Method org/apache/spark/ml/util/Identifiable$.randomUID:(Ljava/lang/String;)Ljava/lang/String;
      12: invokespecial #82                 // Method "<init>":(Ljava/lang/String;)V
      15: return
}
