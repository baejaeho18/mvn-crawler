Compiled from "H2OGLM.scala"
public class ai.h2o.sparkling.ml.algos.H2OGLM extends ai.h2o.sparkling.ml.algos.H2OSupervisedAlgorithmWithFoldColumn<hex.glm.GLMModel$GLMParameters> implements ai.h2o.sparkling.ml.params.H2OGLMParams, ai.h2o.sparkling.ml.algos.FamilyBasedH2OTrainFramePreparation {
  private final java.lang.String uid;

  private final org.apache.spark.ml.param.LongParam seed;

  private final org.apache.spark.ml.param.Param<java.lang.String> family;

  private final ai.h2o.sparkling.ml.params.NullableStringArrayParam randomFamily;

  private final org.apache.spark.ml.param.DoubleParam tweedieVariancePower;

  private final org.apache.spark.ml.param.DoubleParam dispersionLearningRate;

  private final org.apache.spark.ml.param.DoubleParam tweedieLinkPower;

  private final org.apache.spark.ml.param.DoubleParam theta;

  private final org.apache.spark.ml.param.Param<java.lang.String> solver;

  private final ai.h2o.sparkling.ml.params.NullableDoubleArrayParam alphaValue;

  private final ai.h2o.sparkling.ml.params.NullableDoubleArrayParam lambdaValue;

  private final org.apache.spark.ml.param.BooleanParam lambdaSearch;

  private final org.apache.spark.ml.param.BooleanParam earlyStopping;

  private final org.apache.spark.ml.param.IntParam nlambdas;

  private final org.apache.spark.ml.param.IntParam scoreIterationInterval;

  private final org.apache.spark.ml.param.BooleanParam standardize;

  private final org.apache.spark.ml.param.BooleanParam coldStart;

  private final org.apache.spark.ml.param.Param<java.lang.String> missingValuesHandling;

  private final ai.h2o.sparkling.ml.params.NullableStringParam influence;

  private final org.apache.spark.ml.param.BooleanParam nonNegative;

  private final org.apache.spark.ml.param.IntParam maxIterations;

  private final org.apache.spark.ml.param.DoubleParam betaEpsilon;

  private final org.apache.spark.ml.param.DoubleParam objectiveEpsilon;

  private final org.apache.spark.ml.param.DoubleParam gradientEpsilon;

  private final org.apache.spark.ml.param.DoubleParam objReg;

  private final org.apache.spark.ml.param.Param<java.lang.String> link;

  private final org.apache.spark.ml.param.Param<java.lang.String> dispersionParameterMethod;

  private final ai.h2o.sparkling.ml.params.NullableStringArrayParam randomLink;

  private final ai.h2o.sparkling.ml.params.NullableDoubleArrayParam startval;

  private final org.apache.spark.ml.param.BooleanParam calcLike;

  private final org.apache.spark.ml.param.BooleanParam generateVariableInflationFactors;

  private final org.apache.spark.ml.param.BooleanParam intercept;

  private final org.apache.spark.ml.param.BooleanParam buildNullModel;

  private final org.apache.spark.ml.param.BooleanParam fixDispersionParameter;

  private final org.apache.spark.ml.param.DoubleParam initDispersionParameter;

  private final org.apache.spark.ml.param.BooleanParam HGLM;

  private final org.apache.spark.ml.param.DoubleParam prior;

  private final org.apache.spark.ml.param.DoubleParam lambdaMinRatio;

  private final org.apache.spark.ml.param.IntParam maxActivePredictors;

  private final ai.h2o.sparkling.ml.params.NullableStringArrayParam interactions;

  private final org.apache.spark.ml.param.BooleanParam balanceClasses;

  private final ai.h2o.sparkling.ml.params.NullableFloatArrayParam classSamplingFactors;

  private final org.apache.spark.ml.param.FloatParam maxAfterBalanceSize;

  private final org.apache.spark.ml.param.IntParam maxConfusionMatrixSize;

  private final org.apache.spark.ml.param.BooleanParam computePValues;

  private final org.apache.spark.ml.param.BooleanParam fixTweedieVariancePower;

  private final org.apache.spark.ml.param.BooleanParam removeCollinearCols;

  private final org.apache.spark.ml.param.DoubleParam dispersionEpsilon;

  private final org.apache.spark.ml.param.DoubleParam tweedieEpsilon;

  private final org.apache.spark.ml.param.IntParam maxIterationsDispersion;

  private final org.apache.spark.ml.param.BooleanParam generateScoringHistory;

  private final ai.h2o.sparkling.ml.params.NullableStringParam modelId;

  private final org.apache.spark.ml.param.IntParam nfolds;

  private final org.apache.spark.ml.param.BooleanParam keepCrossValidationModels;

  private final org.apache.spark.ml.param.BooleanParam keepCrossValidationPredictions;

  private final org.apache.spark.ml.param.BooleanParam keepCrossValidationFoldAssignment;

  private final org.apache.spark.ml.param.Param<java.lang.String> labelCol;

  private final ai.h2o.sparkling.ml.params.NullableStringParam weightCol;

  private final ai.h2o.sparkling.ml.params.NullableStringParam offsetCol;

  private final ai.h2o.sparkling.ml.params.NullableStringParam foldCol;

  private final org.apache.spark.ml.param.Param<java.lang.String> foldAssignment;

  private final org.apache.spark.ml.param.BooleanParam ignoreConstCols;

  private final org.apache.spark.ml.param.BooleanParam scoreEachIteration;

  private final ai.h2o.sparkling.ml.params.NullableStringParam checkpoint;

  private final org.apache.spark.ml.param.IntParam stoppingRounds;

  private final org.apache.spark.ml.param.DoubleParam maxRuntimeSecs;

  private final org.apache.spark.ml.param.Param<java.lang.String> stoppingMetric;

  private final org.apache.spark.ml.param.DoubleParam stoppingTolerance;

  private final ai.h2o.sparkling.ml.params.NullableStringParam customMetricFunc;

  private final ai.h2o.sparkling.ml.params.NullableStringParam exportCheckpointsDir;

  private final org.apache.spark.ml.param.Param<java.lang.String> aucType;

  private final ai.h2o.sparkling.ml.params.NullableStringPairArrayParam ai$h2o$sparkling$ml$params$HasInteractionPairs$$interactionPairs;

  private final ai.h2o.sparkling.ml.params.NullableDataFrameParam ai$h2o$sparkling$ml$params$HasBetaConstraints$$betaConstraints;

  private final ai.h2o.sparkling.ml.params.NullableDictionaryParam<java.lang.Object> ai$h2o$sparkling$ml$params$HasPlugValues$$plugValues;

  private final ai.h2o.sparkling.ml.params.NullableStringArrayParam ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols;

  private final ai.h2o.sparkling.ml.params.NullableStringArrayParam ai$h2o$sparkling$ml$params$HasRandomCols$$randomCols;

  public static org.apache.spark.ml.util.MLReader<ai.h2o.sparkling.ml.algos.H2OGLM> read();
    Code:
       0: getstatic     #119                // Field ai/h2o/sparkling/ml/algos/H2OGLM$.MODULE$:Lai/h2o/sparkling/ml/algos/H2OGLM$;
       3: invokevirtual #121                // Method ai/h2o/sparkling/ml/algos/H2OGLM$.read:()Lorg/apache/spark/ml/util/MLReader;
       6: areturn

  public static java.lang.Object load(java.lang.String);
    Code:
       0: getstatic     #119                // Field ai/h2o/sparkling/ml/algos/H2OGLM$.MODULE$:Lai/h2o/sparkling/ml/algos/H2OGLM$;
       3: aload_0
       4: invokevirtual #126                // Method ai/h2o/sparkling/ml/algos/H2OGLM$.load:(Ljava/lang/String;)Ljava/lang/Object;
       7: areturn

  public void ai$h2o$sparkling$ml$algos$FamilyBasedH2OTrainFramePreparation$$super$prepareH2OTrainFrameForFitting(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #135                // InterfaceMethod ai/h2o/sparkling/ml/algos/H2OTrainFramePreparation.prepareH2OTrainFrameForFitting$:(Lai/h2o/sparkling/ml/algos/H2OTrainFramePreparation;Lai/h2o/sparkling/H2OFrame;)V
       5: return

  public void prepareH2OTrainFrameForFitting(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #143                // InterfaceMethod ai/h2o/sparkling/ml/algos/FamilyBasedH2OTrainFramePreparation.prepareH2OTrainFrameForFitting$:(Lai/h2o/sparkling/ml/algos/FamilyBasedH2OTrainFramePreparation;Lai/h2o/sparkling/H2OFrame;)V
       5: return

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OGLMParams$$super$getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #152                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.getH2OAlgorithmParams$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OGLMParams$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #160                // InterfaceMethod ai/h2o/sparkling/ml/params/HasBetaConstraints.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/HasBetaConstraints;)Lscala/collection/immutable/Map;
       4: areturn

  public scala.reflect.ClassTag<hex.glm.GLMModel$GLMParameters> paramTag();
    Code:
       0: aload_0
       1: invokestatic  #167                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.paramTag$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Lscala/reflect/ClassTag;
       4: areturn

  public long getSeed();
    Code:
       0: aload_0
       1: invokestatic  #173                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getSeed$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)J
       4: lreturn

  public java.lang.String getFamily();
    Code:
       0: aload_0
       1: invokestatic  #179                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getFamily$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String[] getRandomFamily();
    Code:
       0: aload_0
       1: invokestatic  #185                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getRandomFamily$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)[Ljava/lang/String;
       4: areturn

  public double getTweedieVariancePower();
    Code:
       0: aload_0
       1: invokestatic  #191                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getTweedieVariancePower$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)D
       4: dreturn

  public double getDispersionLearningRate();
    Code:
       0: aload_0
       1: invokestatic  #195                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getDispersionLearningRate$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)D
       4: dreturn

  public double getTweedieLinkPower();
    Code:
       0: aload_0
       1: invokestatic  #199                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getTweedieLinkPower$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)D
       4: dreturn

  public double getTheta();
    Code:
       0: aload_0
       1: invokestatic  #203                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getTheta$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)D
       4: dreturn

  public java.lang.String getSolver();
    Code:
       0: aload_0
       1: invokestatic  #207                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getSolver$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Ljava/lang/String;
       4: areturn

  public double[] getAlphaValue();
    Code:
       0: aload_0
       1: invokestatic  #213                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getAlphaValue$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)[D
       4: areturn

  public double[] getLambdaValue();
    Code:
       0: aload_0
       1: invokestatic  #217                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getLambdaValue$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)[D
       4: areturn

  public boolean getLambdaSearch();
    Code:
       0: aload_0
       1: invokestatic  #223                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getLambdaSearch$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Z
       4: ireturn

  public boolean getEarlyStopping();
    Code:
       0: aload_0
       1: invokestatic  #227                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getEarlyStopping$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Z
       4: ireturn

  public int getNlambdas();
    Code:
       0: aload_0
       1: invokestatic  #233                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getNlambdas$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)I
       4: ireturn

  public int getScoreIterationInterval();
    Code:
       0: aload_0
       1: invokestatic  #237                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getScoreIterationInterval$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)I
       4: ireturn

  public boolean getStandardize();
    Code:
       0: aload_0
       1: invokestatic  #241                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getStandardize$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Z
       4: ireturn

  public boolean getColdStart();
    Code:
       0: aload_0
       1: invokestatic  #245                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getColdStart$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Z
       4: ireturn

  public java.lang.String getMissingValuesHandling();
    Code:
       0: aload_0
       1: invokestatic  #249                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getMissingValuesHandling$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getInfluence();
    Code:
       0: aload_0
       1: invokestatic  #253                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getInfluence$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Ljava/lang/String;
       4: areturn

  public boolean getNonNegative();
    Code:
       0: aload_0
       1: invokestatic  #257                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getNonNegative$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Z
       4: ireturn

  public int getMaxIterations();
    Code:
       0: aload_0
       1: invokestatic  #261                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getMaxIterations$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)I
       4: ireturn

  public double getBetaEpsilon();
    Code:
       0: aload_0
       1: invokestatic  #265                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getBetaEpsilon$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)D
       4: dreturn

  public double getObjectiveEpsilon();
    Code:
       0: aload_0
       1: invokestatic  #269                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getObjectiveEpsilon$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)D
       4: dreturn

  public double getGradientEpsilon();
    Code:
       0: aload_0
       1: invokestatic  #273                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getGradientEpsilon$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)D
       4: dreturn

  public double getObjReg();
    Code:
       0: aload_0
       1: invokestatic  #277                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getObjReg$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)D
       4: dreturn

  public java.lang.String getLink();
    Code:
       0: aload_0
       1: invokestatic  #281                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getLink$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getDispersionParameterMethod();
    Code:
       0: aload_0
       1: invokestatic  #285                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getDispersionParameterMethod$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String[] getRandomLink();
    Code:
       0: aload_0
       1: invokestatic  #289                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getRandomLink$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)[Ljava/lang/String;
       4: areturn

  public double[] getStartval();
    Code:
       0: aload_0
       1: invokestatic  #293                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getStartval$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)[D
       4: areturn

  public boolean getCalcLike();
    Code:
       0: aload_0
       1: invokestatic  #297                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getCalcLike$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Z
       4: ireturn

  public boolean getGenerateVariableInflationFactors();
    Code:
       0: aload_0
       1: invokestatic  #301                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getGenerateVariableInflationFactors$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Z
       4: ireturn

  public boolean getIntercept();
    Code:
       0: aload_0
       1: invokestatic  #305                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getIntercept$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Z
       4: ireturn

  public boolean getBuildNullModel();
    Code:
       0: aload_0
       1: invokestatic  #309                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getBuildNullModel$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Z
       4: ireturn

  public boolean getFixDispersionParameter();
    Code:
       0: aload_0
       1: invokestatic  #313                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getFixDispersionParameter$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Z
       4: ireturn

  public double getInitDispersionParameter();
    Code:
       0: aload_0
       1: invokestatic  #317                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getInitDispersionParameter$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)D
       4: dreturn

  public boolean getHGLM();
    Code:
       0: aload_0
       1: invokestatic  #321                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getHGLM$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Z
       4: ireturn

  public double getPrior();
    Code:
       0: aload_0
       1: invokestatic  #325                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getPrior$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)D
       4: dreturn

  public double getLambdaMinRatio();
    Code:
       0: aload_0
       1: invokestatic  #329                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getLambdaMinRatio$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)D
       4: dreturn

  public int getMaxActivePredictors();
    Code:
       0: aload_0
       1: invokestatic  #333                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getMaxActivePredictors$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)I
       4: ireturn

  public java.lang.String[] getInteractions();
    Code:
       0: aload_0
       1: invokestatic  #337                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getInteractions$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)[Ljava/lang/String;
       4: areturn

  public boolean getBalanceClasses();
    Code:
       0: aload_0
       1: invokestatic  #341                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getBalanceClasses$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Z
       4: ireturn

  public float[] getClassSamplingFactors();
    Code:
       0: aload_0
       1: invokestatic  #347                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getClassSamplingFactors$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)[F
       4: areturn

  public float getMaxAfterBalanceSize();
    Code:
       0: aload_0
       1: invokestatic  #353                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getMaxAfterBalanceSize$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)F
       4: freturn

  public int getMaxConfusionMatrixSize();
    Code:
       0: aload_0
       1: invokestatic  #357                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getMaxConfusionMatrixSize$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)I
       4: ireturn

  public boolean getComputePValues();
    Code:
       0: aload_0
       1: invokestatic  #361                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getComputePValues$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Z
       4: ireturn

  public boolean getFixTweedieVariancePower();
    Code:
       0: aload_0
       1: invokestatic  #365                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getFixTweedieVariancePower$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Z
       4: ireturn

  public boolean getRemoveCollinearCols();
    Code:
       0: aload_0
       1: invokestatic  #369                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getRemoveCollinearCols$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Z
       4: ireturn

  public double getDispersionEpsilon();
    Code:
       0: aload_0
       1: invokestatic  #373                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getDispersionEpsilon$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)D
       4: dreturn

  public double getTweedieEpsilon();
    Code:
       0: aload_0
       1: invokestatic  #377                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getTweedieEpsilon$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)D
       4: dreturn

  public int getMaxIterationsDispersion();
    Code:
       0: aload_0
       1: invokestatic  #381                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getMaxIterationsDispersion$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)I
       4: ireturn

  public boolean getGenerateScoringHistory();
    Code:
       0: aload_0
       1: invokestatic  #385                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getGenerateScoringHistory$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Z
       4: ireturn

  public java.lang.String getModelId();
    Code:
       0: aload_0
       1: invokestatic  #389                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getModelId$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Ljava/lang/String;
       4: areturn

  public int getNfolds();
    Code:
       0: aload_0
       1: invokestatic  #393                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getNfolds$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)I
       4: ireturn

  public boolean getKeepCrossValidationModels();
    Code:
       0: aload_0
       1: invokestatic  #397                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getKeepCrossValidationModels$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Z
       4: ireturn

  public boolean getKeepCrossValidationPredictions();
    Code:
       0: aload_0
       1: invokestatic  #401                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getKeepCrossValidationPredictions$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Z
       4: ireturn

  public boolean getKeepCrossValidationFoldAssignment();
    Code:
       0: aload_0
       1: invokestatic  #405                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getKeepCrossValidationFoldAssignment$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Z
       4: ireturn

  public java.lang.String getLabelCol();
    Code:
       0: aload_0
       1: invokestatic  #409                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getLabelCol$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getWeightCol();
    Code:
       0: aload_0
       1: invokestatic  #413                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getWeightCol$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getOffsetCol();
    Code:
       0: aload_0
       1: invokestatic  #417                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getOffsetCol$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getFoldCol();
    Code:
       0: aload_0
       1: invokestatic  #421                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getFoldCol$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getFoldAssignment();
    Code:
       0: aload_0
       1: invokestatic  #425                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getFoldAssignment$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Ljava/lang/String;
       4: areturn

  public boolean getIgnoreConstCols();
    Code:
       0: aload_0
       1: invokestatic  #429                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getIgnoreConstCols$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Z
       4: ireturn

  public boolean getScoreEachIteration();
    Code:
       0: aload_0
       1: invokestatic  #433                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getScoreEachIteration$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Z
       4: ireturn

  public java.lang.String getCheckpoint();
    Code:
       0: aload_0
       1: invokestatic  #437                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getCheckpoint$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Ljava/lang/String;
       4: areturn

  public int getStoppingRounds();
    Code:
       0: aload_0
       1: invokestatic  #441                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getStoppingRounds$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)I
       4: ireturn

  public double getMaxRuntimeSecs();
    Code:
       0: aload_0
       1: invokestatic  #445                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getMaxRuntimeSecs$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)D
       4: dreturn

  public java.lang.String getStoppingMetric();
    Code:
       0: aload_0
       1: invokestatic  #449                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getStoppingMetric$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Ljava/lang/String;
       4: areturn

  public double getStoppingTolerance();
    Code:
       0: aload_0
       1: invokestatic  #453                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getStoppingTolerance$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)D
       4: dreturn

  public java.lang.String getCustomMetricFunc();
    Code:
       0: aload_0
       1: invokestatic  #457                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getCustomMetricFunc$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getExportCheckpointsDir();
    Code:
       0: aload_0
       1: invokestatic  #461                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getExportCheckpointsDir$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getAucType();
    Code:
       0: aload_0
       1: invokestatic  #465                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getAucType$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setSeed(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #472                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setSeed$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;J)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setFamily(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #479                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setFamily$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setRandomFamily(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #485                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setRandomFamily$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;[Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setTweedieVariancePower(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #492                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setTweedieVariancePower$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;D)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setDispersionLearningRate(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #497                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setDispersionLearningRate$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;D)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setTweedieLinkPower(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #501                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setTweedieLinkPower$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;D)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setTheta(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #505                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setTheta$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;D)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setSolver(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #509                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setSolver$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setAlphaValue(double[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #515                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setAlphaValue$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;[D)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setLambdaValue(double[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #520                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setLambdaValue$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;[D)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setLambdaSearch(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #526                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setLambdaSearch$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Z)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setEarlyStopping(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #531                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setEarlyStopping$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Z)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setNlambdas(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #537                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setNlambdas$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;I)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setScoreIterationInterval(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #542                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setScoreIterationInterval$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;I)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setStandardize(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #546                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setStandardize$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Z)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setColdStart(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #550                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setColdStart$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Z)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setMissingValuesHandling(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #554                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setMissingValuesHandling$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setInfluence(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #558                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setInfluence$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setNonNegative(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #562                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setNonNegative$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Z)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setMaxIterations(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #566                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setMaxIterations$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;I)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setBetaEpsilon(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #570                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setBetaEpsilon$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;D)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setObjectiveEpsilon(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #574                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setObjectiveEpsilon$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;D)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setGradientEpsilon(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #578                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setGradientEpsilon$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;D)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setObjReg(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #582                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setObjReg$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;D)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setLink(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #586                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setLink$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setDispersionParameterMethod(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #590                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setDispersionParameterMethod$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setRandomLink(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #594                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setRandomLink$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;[Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setStartval(double[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #598                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setStartval$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;[D)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setCalcLike(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #602                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setCalcLike$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Z)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setGenerateVariableInflationFactors(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #606                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setGenerateVariableInflationFactors$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Z)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setIntercept(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #610                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setIntercept$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Z)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setBuildNullModel(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #614                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setBuildNullModel$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Z)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setFixDispersionParameter(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #618                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setFixDispersionParameter$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Z)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setInitDispersionParameter(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #622                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setInitDispersionParameter$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;D)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setHGLM(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #626                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setHGLM$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Z)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setPrior(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #630                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setPrior$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;D)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setLambdaMinRatio(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #634                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setLambdaMinRatio$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;D)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setMaxActivePredictors(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #638                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setMaxActivePredictors$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;I)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setInteractions(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #642                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setInteractions$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;[Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setBalanceClasses(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #646                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setBalanceClasses$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Z)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setClassSamplingFactors(float[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #652                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setClassSamplingFactors$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;[F)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setMaxAfterBalanceSize(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #659                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setMaxAfterBalanceSize$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;F)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setMaxConfusionMatrixSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #664                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setMaxConfusionMatrixSize$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;I)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setComputePValues(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #668                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setComputePValues$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Z)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setFixTweedieVariancePower(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #672                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setFixTweedieVariancePower$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Z)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setRemoveCollinearCols(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #676                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setRemoveCollinearCols$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Z)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setDispersionEpsilon(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #680                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setDispersionEpsilon$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;D)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setTweedieEpsilon(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #684                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setTweedieEpsilon$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;D)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setMaxIterationsDispersion(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #688                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setMaxIterationsDispersion$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;I)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setGenerateScoringHistory(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #692                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setGenerateScoringHistory$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Z)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setModelId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #696                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setModelId$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setNfolds(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #700                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setNfolds$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;I)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setKeepCrossValidationModels(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #704                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setKeepCrossValidationModels$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Z)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setKeepCrossValidationPredictions(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #708                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setKeepCrossValidationPredictions$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Z)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setKeepCrossValidationFoldAssignment(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #712                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setKeepCrossValidationFoldAssignment$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Z)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setLabelCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #716                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setLabelCol$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setWeightCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #720                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setWeightCol$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setOffsetCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #724                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setOffsetCol$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setFoldCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #728                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setFoldCol$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setFoldAssignment(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #732                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setFoldAssignment$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setIgnoreConstCols(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #736                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setIgnoreConstCols$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Z)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setScoreEachIteration(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #740                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setScoreEachIteration$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Z)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setCheckpoint(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #744                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setCheckpoint$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setStoppingRounds(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #748                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setStoppingRounds$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;I)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setMaxRuntimeSecs(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #752                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setMaxRuntimeSecs$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;D)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setStoppingMetric(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #756                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setStoppingMetric$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setStoppingTolerance(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #760                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setStoppingTolerance$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;D)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setCustomMetricFunc(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #764                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setCustomMetricFunc$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setExportCheckpointsDir(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #768                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setExportCheckpointsDir$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OGLMParams setAucType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #772                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.setAucType$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #777                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getH2OAlgorithmParams$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OGLMParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #781                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getH2OGLMParams$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.String> getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #786                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getInteractionPairsParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #793                // InterfaceMethod ai/h2o/sparkling/ml/params/HasInteractionPairs.getInteractionPairsParam$:(Lai/h2o/sparkling/ml/params/HasInteractionPairs;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.Tuple2<java.lang.String, java.lang.String>[] getInteractionPairs();
    Code:
       0: aload_0
       1: invokestatic  #800                // InterfaceMethod ai/h2o/sparkling/ml/params/HasInteractionPairs.getInteractionPairs$:(Lai/h2o/sparkling/ml/params/HasInteractionPairs;)[Lscala/Tuple2;
       4: areturn

  public ai.h2o.sparkling.ml.params.HasInteractionPairs setInteractionPairs(scala.Tuple2<java.lang.String, java.lang.String>[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #807                // InterfaceMethod ai/h2o/sparkling/ml/params/HasInteractionPairs.setInteractionPairs$:(Lai/h2o/sparkling/ml/params/HasInteractionPairs;[Lscala/Tuple2;)Lai/h2o/sparkling/ml/params/HasInteractionPairs;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$HasBetaConstraints$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #814                // InterfaceMethod ai/h2o/sparkling/ml/params/HasPlugValues.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/HasPlugValues;)Lscala/collection/immutable/Map;
       4: areturn

  public org.apache.spark.sql.Dataset<org.apache.spark.sql.Row> getBetaConstraints();
    Code:
       0: aload_0
       1: invokestatic  #821                // InterfaceMethod ai/h2o/sparkling/ml/params/HasBetaConstraints.getBetaConstraints$:(Lai/h2o/sparkling/ml/params/HasBetaConstraints;)Lorg/apache/spark/sql/Dataset;
       4: areturn

  public ai.h2o.sparkling.ml.params.HasBetaConstraints setBetaConstraints(org.apache.spark.sql.Dataset<org.apache.spark.sql.Row>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #828                // InterfaceMethod ai/h2o/sparkling/ml/params/HasBetaConstraints.setBetaConstraints$:(Lai/h2o/sparkling/ml/params/HasBetaConstraints;Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/params/HasBetaConstraints;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getBetaConstraintsParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #834                // InterfaceMethod ai/h2o/sparkling/ml/params/HasBetaConstraints.getBetaConstraintsParam$:(Lai/h2o/sparkling/ml/params/HasBetaConstraints;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$HasPlugValues$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #840                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;)Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getPlugValues();
    Code:
       0: aload_0
       1: invokestatic  #845                // InterfaceMethod ai/h2o/sparkling/ml/params/HasPlugValues.getPlugValues$:(Lai/h2o/sparkling/ml/params/HasPlugValues;)Lscala/collection/immutable/Map;
       4: areturn

  public ai.h2o.sparkling.ml.params.HasPlugValues setPlugValues(scala.collection.immutable.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #852                // InterfaceMethod ai/h2o/sparkling/ml/params/HasPlugValues.setPlugValues$:(Lai/h2o/sparkling/ml/params/HasPlugValues;Lscala/collection/immutable/Map;)Lai/h2o/sparkling/ml/params/HasPlugValues;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getPlugValuesParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #858                // InterfaceMethod ai/h2o/sparkling/ml/params/HasPlugValues.getPlugValuesParam$:(Lai/h2o/sparkling/ml/params/HasPlugValues;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$HasIgnoredCols$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #864                // InterfaceMethod ai/h2o/sparkling/ml/params/HasRandomCols.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/HasRandomCols;)Lscala/collection/immutable/Map;
       4: areturn

  public java.lang.String[] getIgnoredCols();
    Code:
       0: aload_0
       1: invokestatic  #869                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.getIgnoredCols$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;)[Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.params.HasIgnoredCols setIgnoredCols(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #875                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.setIgnoredCols$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;[Ljava/lang/String;)Lai/h2o/sparkling/ml/params/HasIgnoredCols;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getIgnoredColsParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #880                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.getIgnoredColsParam$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$HasRandomCols$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #884                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;)Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.Seq ai$h2o$sparkling$ml$params$HasRandomCols$$super$getExcludedCols();
    Code:
       0: aload_0
       1: invokespecial #889                // Method ai/h2o/sparkling/ml/algos/H2OSupervisedAlgorithmWithFoldColumn.getExcludedCols:()Lscala/collection/Seq;
       4: areturn

  public java.lang.String[] getRandomCols();
    Code:
       0: aload_0
       1: invokestatic  #894                // InterfaceMethod ai/h2o/sparkling/ml/params/HasRandomCols.getRandomCols$:(Lai/h2o/sparkling/ml/params/HasRandomCols;)[Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.params.HasRandomCols setRandomCols(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #900                // InterfaceMethod ai/h2o/sparkling/ml/params/HasRandomCols.setRandomCols$:(Lai/h2o/sparkling/ml/params/HasRandomCols;[Ljava/lang/String;)Lai/h2o/sparkling/ml/params/HasRandomCols;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getRandomColsParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #905                // InterfaceMethod ai/h2o/sparkling/ml/params/HasRandomCols.getRandomColsParam$:(Lai/h2o/sparkling/ml/params/HasRandomCols;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.Seq<java.lang.String> getExcludedCols();
    Code:
       0: aload_0
       1: invokestatic  #910                // InterfaceMethod ai/h2o/sparkling/ml/params/HasRandomCols.getExcludedCols$:(Lai/h2o/sparkling/ml/params/HasRandomCols;)Lscala/collection/Seq;
       4: areturn

  public org.apache.spark.ml.param.LongParam seed();
    Code:
       0: aload_0
       1: getfield      #913                // Field seed:Lorg/apache/spark/ml/param/LongParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> family();
    Code:
       0: aload_0
       1: getfield      #917                // Field family:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringArrayParam randomFamily();
    Code:
       0: aload_0
       1: getfield      #920                // Field randomFamily:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam tweedieVariancePower();
    Code:
       0: aload_0
       1: getfield      #923                // Field tweedieVariancePower:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam dispersionLearningRate();
    Code:
       0: aload_0
       1: getfield      #925                // Field dispersionLearningRate:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam tweedieLinkPower();
    Code:
       0: aload_0
       1: getfield      #927                // Field tweedieLinkPower:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam theta();
    Code:
       0: aload_0
       1: getfield      #929                // Field theta:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> solver();
    Code:
       0: aload_0
       1: getfield      #931                // Field solver:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableDoubleArrayParam alphaValue();
    Code:
       0: aload_0
       1: getfield      #934                // Field alphaValue:Lai/h2o/sparkling/ml/params/NullableDoubleArrayParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableDoubleArrayParam lambdaValue();
    Code:
       0: aload_0
       1: getfield      #936                // Field lambdaValue:Lai/h2o/sparkling/ml/params/NullableDoubleArrayParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam lambdaSearch();
    Code:
       0: aload_0
       1: getfield      #939                // Field lambdaSearch:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam earlyStopping();
    Code:
       0: aload_0
       1: getfield      #941                // Field earlyStopping:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam nlambdas();
    Code:
       0: aload_0
       1: getfield      #944                // Field nlambdas:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam scoreIterationInterval();
    Code:
       0: aload_0
       1: getfield      #946                // Field scoreIterationInterval:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam standardize();
    Code:
       0: aload_0
       1: getfield      #948                // Field standardize:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam coldStart();
    Code:
       0: aload_0
       1: getfield      #950                // Field coldStart:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> missingValuesHandling();
    Code:
       0: aload_0
       1: getfield      #952                // Field missingValuesHandling:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam influence();
    Code:
       0: aload_0
       1: getfield      #955                // Field influence:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam nonNegative();
    Code:
       0: aload_0
       1: getfield      #957                // Field nonNegative:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam maxIterations();
    Code:
       0: aload_0
       1: getfield      #959                // Field maxIterations:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam betaEpsilon();
    Code:
       0: aload_0
       1: getfield      #961                // Field betaEpsilon:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam objectiveEpsilon();
    Code:
       0: aload_0
       1: getfield      #963                // Field objectiveEpsilon:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam gradientEpsilon();
    Code:
       0: aload_0
       1: getfield      #965                // Field gradientEpsilon:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam objReg();
    Code:
       0: aload_0
       1: getfield      #967                // Field objReg:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> link();
    Code:
       0: aload_0
       1: getfield      #969                // Field link:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> dispersionParameterMethod();
    Code:
       0: aload_0
       1: getfield      #971                // Field dispersionParameterMethod:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringArrayParam randomLink();
    Code:
       0: aload_0
       1: getfield      #973                // Field randomLink:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableDoubleArrayParam startval();
    Code:
       0: aload_0
       1: getfield      #975                // Field startval:Lai/h2o/sparkling/ml/params/NullableDoubleArrayParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam calcLike();
    Code:
       0: aload_0
       1: getfield      #977                // Field calcLike:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam generateVariableInflationFactors();
    Code:
       0: aload_0
       1: getfield      #979                // Field generateVariableInflationFactors:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam intercept();
    Code:
       0: aload_0
       1: getfield      #981                // Field intercept:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam buildNullModel();
    Code:
       0: aload_0
       1: getfield      #983                // Field buildNullModel:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam fixDispersionParameter();
    Code:
       0: aload_0
       1: getfield      #985                // Field fixDispersionParameter:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam initDispersionParameter();
    Code:
       0: aload_0
       1: getfield      #987                // Field initDispersionParameter:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam HGLM();
    Code:
       0: aload_0
       1: getfield      #989                // Field HGLM:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam prior();
    Code:
       0: aload_0
       1: getfield      #991                // Field prior:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam lambdaMinRatio();
    Code:
       0: aload_0
       1: getfield      #993                // Field lambdaMinRatio:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam maxActivePredictors();
    Code:
       0: aload_0
       1: getfield      #995                // Field maxActivePredictors:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringArrayParam interactions();
    Code:
       0: aload_0
       1: getfield      #997                // Field interactions:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam balanceClasses();
    Code:
       0: aload_0
       1: getfield      #999                // Field balanceClasses:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableFloatArrayParam classSamplingFactors();
    Code:
       0: aload_0
       1: getfield      #1002               // Field classSamplingFactors:Lai/h2o/sparkling/ml/params/NullableFloatArrayParam;
       4: areturn

  public org.apache.spark.ml.param.FloatParam maxAfterBalanceSize();
    Code:
       0: aload_0
       1: getfield      #1005               // Field maxAfterBalanceSize:Lorg/apache/spark/ml/param/FloatParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam maxConfusionMatrixSize();
    Code:
       0: aload_0
       1: getfield      #1007               // Field maxConfusionMatrixSize:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam computePValues();
    Code:
       0: aload_0
       1: getfield      #1009               // Field computePValues:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam fixTweedieVariancePower();
    Code:
       0: aload_0
       1: getfield      #1011               // Field fixTweedieVariancePower:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam removeCollinearCols();
    Code:
       0: aload_0
       1: getfield      #1013               // Field removeCollinearCols:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam dispersionEpsilon();
    Code:
       0: aload_0
       1: getfield      #1015               // Field dispersionEpsilon:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam tweedieEpsilon();
    Code:
       0: aload_0
       1: getfield      #1017               // Field tweedieEpsilon:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam maxIterationsDispersion();
    Code:
       0: aload_0
       1: getfield      #1019               // Field maxIterationsDispersion:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam generateScoringHistory();
    Code:
       0: aload_0
       1: getfield      #1021               // Field generateScoringHistory:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam modelId();
    Code:
       0: aload_0
       1: getfield      #1023               // Field modelId:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam nfolds();
    Code:
       0: aload_0
       1: getfield      #1025               // Field nfolds:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam keepCrossValidationModels();
    Code:
       0: aload_0
       1: getfield      #1027               // Field keepCrossValidationModels:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam keepCrossValidationPredictions();
    Code:
       0: aload_0
       1: getfield      #1029               // Field keepCrossValidationPredictions:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam keepCrossValidationFoldAssignment();
    Code:
       0: aload_0
       1: getfield      #1031               // Field keepCrossValidationFoldAssignment:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> labelCol();
    Code:
       0: aload_0
       1: getfield      #1033               // Field labelCol:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam weightCol();
    Code:
       0: aload_0
       1: getfield      #1035               // Field weightCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam offsetCol();
    Code:
       0: aload_0
       1: getfield      #1037               // Field offsetCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam foldCol();
    Code:
       0: aload_0
       1: getfield      #1039               // Field foldCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> foldAssignment();
    Code:
       0: aload_0
       1: getfield      #1041               // Field foldAssignment:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam ignoreConstCols();
    Code:
       0: aload_0
       1: getfield      #1043               // Field ignoreConstCols:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam scoreEachIteration();
    Code:
       0: aload_0
       1: getfield      #1045               // Field scoreEachIteration:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam checkpoint();
    Code:
       0: aload_0
       1: getfield      #1047               // Field checkpoint:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam stoppingRounds();
    Code:
       0: aload_0
       1: getfield      #1049               // Field stoppingRounds:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam maxRuntimeSecs();
    Code:
       0: aload_0
       1: getfield      #1051               // Field maxRuntimeSecs:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> stoppingMetric();
    Code:
       0: aload_0
       1: getfield      #1053               // Field stoppingMetric:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam stoppingTolerance();
    Code:
       0: aload_0
       1: getfield      #1055               // Field stoppingTolerance:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam customMetricFunc();
    Code:
       0: aload_0
       1: getfield      #1057               // Field customMetricFunc:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam exportCheckpointsDir();
    Code:
       0: aload_0
       1: getfield      #1059               // Field exportCheckpointsDir:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> aucType();
    Code:
       0: aload_0
       1: getfield      #1061               // Field aucType:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$seed_$eq(org.apache.spark.ml.param.LongParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #913                // Field seed:Lorg/apache/spark/ml/param/LongParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$family_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #917                // Field family:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$randomFamily_$eq(ai.h2o.sparkling.ml.params.NullableStringArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #920                // Field randomFamily:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$tweedieVariancePower_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #923                // Field tweedieVariancePower:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$dispersionLearningRate_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #925                // Field dispersionLearningRate:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$tweedieLinkPower_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #927                // Field tweedieLinkPower:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$theta_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #929                // Field theta:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$solver_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #931                // Field solver:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$alphaValue_$eq(ai.h2o.sparkling.ml.params.NullableDoubleArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #934                // Field alphaValue:Lai/h2o/sparkling/ml/params/NullableDoubleArrayParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$lambdaValue_$eq(ai.h2o.sparkling.ml.params.NullableDoubleArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #936                // Field lambdaValue:Lai/h2o/sparkling/ml/params/NullableDoubleArrayParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$lambdaSearch_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #939                // Field lambdaSearch:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$earlyStopping_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #941                // Field earlyStopping:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$nlambdas_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #944                // Field nlambdas:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$scoreIterationInterval_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #946                // Field scoreIterationInterval:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$standardize_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #948                // Field standardize:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$coldStart_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #950                // Field coldStart:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$missingValuesHandling_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #952                // Field missingValuesHandling:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$influence_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #955                // Field influence:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$nonNegative_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #957                // Field nonNegative:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$maxIterations_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #959                // Field maxIterations:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$betaEpsilon_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #961                // Field betaEpsilon:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$objectiveEpsilon_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #963                // Field objectiveEpsilon:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$gradientEpsilon_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #965                // Field gradientEpsilon:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$objReg_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #967                // Field objReg:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$link_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #969                // Field link:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$dispersionParameterMethod_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #971                // Field dispersionParameterMethod:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$randomLink_$eq(ai.h2o.sparkling.ml.params.NullableStringArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #973                // Field randomLink:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$startval_$eq(ai.h2o.sparkling.ml.params.NullableDoubleArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #975                // Field startval:Lai/h2o/sparkling/ml/params/NullableDoubleArrayParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$calcLike_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #977                // Field calcLike:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$generateVariableInflationFactors_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #979                // Field generateVariableInflationFactors:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$intercept_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #981                // Field intercept:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$buildNullModel_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #983                // Field buildNullModel:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$fixDispersionParameter_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #985                // Field fixDispersionParameter:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$initDispersionParameter_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #987                // Field initDispersionParameter:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$HGLM_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #989                // Field HGLM:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$prior_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #991                // Field prior:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$lambdaMinRatio_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #993                // Field lambdaMinRatio:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$maxActivePredictors_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #995                // Field maxActivePredictors:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$interactions_$eq(ai.h2o.sparkling.ml.params.NullableStringArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #997                // Field interactions:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$balanceClasses_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #999                // Field balanceClasses:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$classSamplingFactors_$eq(ai.h2o.sparkling.ml.params.NullableFloatArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1002               // Field classSamplingFactors:Lai/h2o/sparkling/ml/params/NullableFloatArrayParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$maxAfterBalanceSize_$eq(org.apache.spark.ml.param.FloatParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1005               // Field maxAfterBalanceSize:Lorg/apache/spark/ml/param/FloatParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$maxConfusionMatrixSize_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1007               // Field maxConfusionMatrixSize:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$computePValues_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1009               // Field computePValues:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$fixTweedieVariancePower_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1011               // Field fixTweedieVariancePower:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$removeCollinearCols_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1013               // Field removeCollinearCols:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$dispersionEpsilon_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1015               // Field dispersionEpsilon:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$tweedieEpsilon_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1017               // Field tweedieEpsilon:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$maxIterationsDispersion_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1019               // Field maxIterationsDispersion:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$generateScoringHistory_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1021               // Field generateScoringHistory:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$modelId_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1023               // Field modelId:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$nfolds_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1025               // Field nfolds:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$keepCrossValidationModels_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1027               // Field keepCrossValidationModels:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$keepCrossValidationPredictions_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1029               // Field keepCrossValidationPredictions:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$keepCrossValidationFoldAssignment_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1031               // Field keepCrossValidationFoldAssignment:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$labelCol_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1033               // Field labelCol:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$weightCol_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1035               // Field weightCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$offsetCol_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1037               // Field offsetCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$foldCol_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1039               // Field foldCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$foldAssignment_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1041               // Field foldAssignment:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$ignoreConstCols_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1043               // Field ignoreConstCols:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$scoreEachIteration_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1045               // Field scoreEachIteration:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$checkpoint_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1047               // Field checkpoint:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$stoppingRounds_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1049               // Field stoppingRounds:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$maxRuntimeSecs_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1051               // Field maxRuntimeSecs:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$stoppingMetric_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1053               // Field stoppingMetric:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$stoppingTolerance_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1055               // Field stoppingTolerance:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$customMetricFunc_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1057               // Field customMetricFunc:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$exportCheckpointsDir_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1059               // Field exportCheckpointsDir:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OGLMParams$_setter_$aucType_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1061               // Field aucType:Lorg/apache/spark/ml/param/Param;
       5: return

  public ai.h2o.sparkling.ml.params.NullableStringPairArrayParam ai$h2o$sparkling$ml$params$HasInteractionPairs$$interactionPairs();
    Code:
       0: aload_0
       1: getfield      #1146               // Field ai$h2o$sparkling$ml$params$HasInteractionPairs$$interactionPairs:Lai/h2o/sparkling/ml/params/NullableStringPairArrayParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$HasInteractionPairs$_setter_$ai$h2o$sparkling$ml$params$HasInteractionPairs$$interactionPairs_$eq(ai.h2o.sparkling.ml.params.NullableStringPairArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1146               // Field ai$h2o$sparkling$ml$params$HasInteractionPairs$$interactionPairs:Lai/h2o/sparkling/ml/params/NullableStringPairArrayParam;
       5: return

  public ai.h2o.sparkling.ml.params.NullableDataFrameParam ai$h2o$sparkling$ml$params$HasBetaConstraints$$betaConstraints();
    Code:
       0: aload_0
       1: getfield      #1151               // Field ai$h2o$sparkling$ml$params$HasBetaConstraints$$betaConstraints:Lai/h2o/sparkling/ml/params/NullableDataFrameParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$HasBetaConstraints$_setter_$ai$h2o$sparkling$ml$params$HasBetaConstraints$$betaConstraints_$eq(ai.h2o.sparkling.ml.params.NullableDataFrameParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1151               // Field ai$h2o$sparkling$ml$params$HasBetaConstraints$$betaConstraints:Lai/h2o/sparkling/ml/params/NullableDataFrameParam;
       5: return

  public ai.h2o.sparkling.ml.params.NullableDictionaryParam<java.lang.Object> ai$h2o$sparkling$ml$params$HasPlugValues$$plugValues();
    Code:
       0: aload_0
       1: getfield      #1157               // Field ai$h2o$sparkling$ml$params$HasPlugValues$$plugValues:Lai/h2o/sparkling/ml/params/NullableDictionaryParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$HasPlugValues$_setter_$ai$h2o$sparkling$ml$params$HasPlugValues$$plugValues_$eq(ai.h2o.sparkling.ml.params.NullableDictionaryParam<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1157               // Field ai$h2o$sparkling$ml$params$HasPlugValues$$plugValues:Lai/h2o/sparkling/ml/params/NullableDictionaryParam;
       5: return

  public ai.h2o.sparkling.ml.params.NullableStringArrayParam ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols();
    Code:
       0: aload_0
       1: getfield      #1162               // Field ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$HasIgnoredCols$_setter_$ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols_$eq(ai.h2o.sparkling.ml.params.NullableStringArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1162               // Field ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       5: return

  public ai.h2o.sparkling.ml.params.NullableStringArrayParam ai$h2o$sparkling$ml$params$HasRandomCols$$randomCols();
    Code:
       0: aload_0
       1: getfield      #1165               // Field ai$h2o$sparkling$ml$params$HasRandomCols$$randomCols:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$HasRandomCols$_setter_$ai$h2o$sparkling$ml$params$HasRandomCols$$randomCols_$eq(ai.h2o.sparkling.ml.params.NullableStringArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1165               // Field ai$h2o$sparkling$ml$params$HasRandomCols$$randomCols:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       5: return

  public java.lang.String uid();
    Code:
       0: aload_0
       1: getfield      #1168               // Field uid:Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.models.H2OGLMMOJOModel fit(org.apache.spark.sql.Dataset<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1177               // Method ai/h2o/sparkling/ml/algos/H2OSupervisedAlgorithm.fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OSupervisedMOJOModel;
       5: checkcast     #1179               // class ai/h2o/sparkling/ml/models/H2OGLMMOJOModel
       8: areturn

  public ai.h2o.sparkling.ml.algos.H2OSupervisedAlgorithmWithFoldColumn setFoldCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1182               // Method setFoldCol:(Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: checkcast     #5                  // class ai/h2o/sparkling/ml/algos/H2OSupervisedAlgorithmWithFoldColumn
       8: areturn

  public ai.h2o.sparkling.ml.algos.H2OSupervisedAlgorithm setOffsetCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1185               // Method setOffsetCol:(Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: checkcast     #1174               // class ai/h2o/sparkling/ml/algos/H2OSupervisedAlgorithm
       8: areturn

  public ai.h2o.sparkling.ml.algos.H2OSupervisedAlgorithm setWeightCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1187               // Method setWeightCol:(Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: checkcast     #1174               // class ai/h2o/sparkling/ml/algos/H2OSupervisedAlgorithm
       8: areturn

  public ai.h2o.sparkling.ml.algos.H2OSupervisedAlgorithm setLabelCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1189               // Method setLabelCol:(Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OGLMParams;
       5: checkcast     #1174               // class ai/h2o/sparkling/ml/algos/H2OSupervisedAlgorithm
       8: areturn

  public org.apache.spark.ml.Model fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1192               // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OGLMMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2OMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1192               // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OGLMMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2OAlgorithmMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1192               // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OGLMMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2OSupervisedMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1192               // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OGLMMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.algos.H2OGLM(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1168               // Field uid:Ljava/lang/String;
       5: aload_0
       6: getstatic     #1201               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       9: ldc           #15                 // class hex/glm/GLMModel$GLMParameters
      11: invokevirtual #1205               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      14: invokespecial #1208               // Method ai/h2o/sparkling/ml/algos/H2OSupervisedAlgorithmWithFoldColumn."<init>":(Lscala/reflect/ClassTag;)V
      17: aload_0
      18: invokestatic  #1212               // InterfaceMethod ai/h2o/sparkling/ml/params/HasRandomCols.$init$:(Lai/h2o/sparkling/ml/params/HasRandomCols;)V
      21: aload_0
      22: invokestatic  #1215               // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.$init$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;)V
      25: aload_0
      26: invokestatic  #1218               // InterfaceMethod ai/h2o/sparkling/ml/params/HasPlugValues.$init$:(Lai/h2o/sparkling/ml/params/HasPlugValues;)V
      29: aload_0
      30: invokestatic  #1221               // InterfaceMethod ai/h2o/sparkling/ml/params/HasBetaConstraints.$init$:(Lai/h2o/sparkling/ml/params/HasBetaConstraints;)V
      33: aload_0
      34: invokestatic  #1224               // InterfaceMethod ai/h2o/sparkling/ml/params/HasInteractionPairs.$init$:(Lai/h2o/sparkling/ml/params/HasInteractionPairs;)V
      37: aload_0
      38: invokestatic  #1227               // InterfaceMethod ai/h2o/sparkling/ml/params/H2OGLMParams.$init$:(Lai/h2o/sparkling/ml/params/H2OGLMParams;)V
      41: aload_0
      42: invokestatic  #1230               // InterfaceMethod ai/h2o/sparkling/ml/algos/FamilyBasedH2OTrainFramePreparation.$init$:(Lai/h2o/sparkling/ml/algos/FamilyBasedH2OTrainFramePreparation;)V
      45: return

  public ai.h2o.sparkling.ml.algos.H2OGLM();
    Code:
       0: aload_0
       1: getstatic     #1236               // Field org/apache/spark/ml/util/Identifiable$.MODULE$:Lorg/apache/spark/ml/util/Identifiable$;
       4: ldc           #2                  // class ai/h2o/sparkling/ml/algos/H2OGLM
       6: invokevirtual #1241               // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       9: invokevirtual #1245               // Method org/apache/spark/ml/util/Identifiable$.randomUID:(Ljava/lang/String;)Ljava/lang/String;
      12: invokespecial #1247               // Method "<init>":(Ljava/lang/String;)V
      15: return
}
