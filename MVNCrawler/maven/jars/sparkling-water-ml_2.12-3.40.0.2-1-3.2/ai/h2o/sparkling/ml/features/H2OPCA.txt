Compiled from "H2OPCA.scala"
public class ai.h2o.sparkling.ml.features.H2OPCA extends ai.h2o.sparkling.ml.features.H2ODimReductionEstimator<hex.pca.PCAModel$PCAParameters> implements ai.h2o.sparkling.ml.params.H2OPCAParams {
  private final java.lang.String uid;

  private final org.apache.spark.ml.param.Param<java.lang.String> transform;

  private final org.apache.spark.ml.param.Param<java.lang.String> pcaMethod;

  private final org.apache.spark.ml.param.Param<java.lang.String> pcaImpl;

  private final org.apache.spark.ml.param.IntParam k;

  private final org.apache.spark.ml.param.IntParam maxIterations;

  private final org.apache.spark.ml.param.LongParam seed;

  private final org.apache.spark.ml.param.BooleanParam useAllFactorLevels;

  private final org.apache.spark.ml.param.BooleanParam computeMetrics;

  private final org.apache.spark.ml.param.BooleanParam imputeMissing;

  private final ai.h2o.sparkling.ml.params.NullableStringParam modelId;

  private final org.apache.spark.ml.param.BooleanParam ignoreConstCols;

  private final org.apache.spark.ml.param.BooleanParam scoreEachIteration;

  private final org.apache.spark.ml.param.DoubleParam maxRuntimeSecs;

  private final ai.h2o.sparkling.ml.params.NullableStringParam exportCheckpointsDir;

  private final ai.h2o.sparkling.ml.params.NullableStringArrayParam ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols;

  public static org.apache.spark.ml.util.MLReader<ai.h2o.sparkling.ml.features.H2OPCA> read();
    Code:
       0: getstatic     #50                 // Field ai/h2o/sparkling/ml/features/H2OPCA$.MODULE$:Lai/h2o/sparkling/ml/features/H2OPCA$;
       3: invokevirtual #52                 // Method ai/h2o/sparkling/ml/features/H2OPCA$.read:()Lorg/apache/spark/ml/util/MLReader;
       6: areturn

  public static java.lang.Object load(java.lang.String);
    Code:
       0: getstatic     #50                 // Field ai/h2o/sparkling/ml/features/H2OPCA$.MODULE$:Lai/h2o/sparkling/ml/features/H2OPCA$;
       3: aload_0
       4: invokevirtual #57                 // Method ai/h2o/sparkling/ml/features/H2OPCA$.load:(Ljava/lang/String;)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OPCAParams$$super$getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #66                 // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.getH2OAlgorithmParams$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OPCAParams$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #77                 // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;)Lscala/collection/immutable/Map;
       4: areturn

  public scala.reflect.ClassTag<hex.pca.PCAModel$PCAParameters> paramTag();
    Code:
       0: aload_0
       1: invokestatic  #84                 // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.paramTag$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;)Lscala/reflect/ClassTag;
       4: areturn

  public java.lang.String getTransform();
    Code:
       0: aload_0
       1: invokestatic  #90                 // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.getTransform$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getPcaMethod();
    Code:
       0: aload_0
       1: invokestatic  #94                 // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.getPcaMethod$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getPcaImpl();
    Code:
       0: aload_0
       1: invokestatic  #98                 // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.getPcaImpl$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;)Ljava/lang/String;
       4: areturn

  public int getK();
    Code:
       0: aload_0
       1: invokestatic  #104                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.getK$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;)I
       4: ireturn

  public int getMaxIterations();
    Code:
       0: aload_0
       1: invokestatic  #108                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.getMaxIterations$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;)I
       4: ireturn

  public long getSeed();
    Code:
       0: aload_0
       1: invokestatic  #114                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.getSeed$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;)J
       4: lreturn

  public boolean getUseAllFactorLevels();
    Code:
       0: aload_0
       1: invokestatic  #120                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.getUseAllFactorLevels$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;)Z
       4: ireturn

  public boolean getComputeMetrics();
    Code:
       0: aload_0
       1: invokestatic  #124                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.getComputeMetrics$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;)Z
       4: ireturn

  public boolean getImputeMissing();
    Code:
       0: aload_0
       1: invokestatic  #128                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.getImputeMissing$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;)Z
       4: ireturn

  public java.lang.String getModelId();
    Code:
       0: aload_0
       1: invokestatic  #132                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.getModelId$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;)Ljava/lang/String;
       4: areturn

  public boolean getIgnoreConstCols();
    Code:
       0: aload_0
       1: invokestatic  #136                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.getIgnoreConstCols$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;)Z
       4: ireturn

  public boolean getScoreEachIteration();
    Code:
       0: aload_0
       1: invokestatic  #140                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.getScoreEachIteration$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;)Z
       4: ireturn

  public double getMaxRuntimeSecs();
    Code:
       0: aload_0
       1: invokestatic  #146                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.getMaxRuntimeSecs$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;)D
       4: dreturn

  public java.lang.String getExportCheckpointsDir();
    Code:
       0: aload_0
       1: invokestatic  #150                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.getExportCheckpointsDir$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;)Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.params.H2OPCAParams setTransform(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #157                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.setTransform$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OPCAParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OPCAParams setPcaMethod(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #161                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.setPcaMethod$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OPCAParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OPCAParams setPcaImpl(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #165                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.setPcaImpl$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OPCAParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OPCAParams setK(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #171                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.setK$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;I)Lai/h2o/sparkling/ml/params/H2OPCAParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OPCAParams setMaxIterations(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #176                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.setMaxIterations$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;I)Lai/h2o/sparkling/ml/params/H2OPCAParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OPCAParams setSeed(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #182                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.setSeed$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;J)Lai/h2o/sparkling/ml/params/H2OPCAParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OPCAParams setUseAllFactorLevels(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #189                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.setUseAllFactorLevels$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;Z)Lai/h2o/sparkling/ml/params/H2OPCAParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OPCAParams setComputeMetrics(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #194                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.setComputeMetrics$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;Z)Lai/h2o/sparkling/ml/params/H2OPCAParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OPCAParams setImputeMissing(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #198                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.setImputeMissing$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;Z)Lai/h2o/sparkling/ml/params/H2OPCAParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OPCAParams setModelId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #202                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.setModelId$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OPCAParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OPCAParams setIgnoreConstCols(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #206                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.setIgnoreConstCols$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;Z)Lai/h2o/sparkling/ml/params/H2OPCAParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OPCAParams setScoreEachIteration(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #210                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.setScoreEachIteration$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;Z)Lai/h2o/sparkling/ml/params/H2OPCAParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OPCAParams setMaxRuntimeSecs(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #216                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.setMaxRuntimeSecs$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;D)Lai/h2o/sparkling/ml/params/H2OPCAParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OPCAParams setExportCheckpointsDir(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #221                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.setExportCheckpointsDir$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OPCAParams;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #226                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.getH2OAlgorithmParams$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OPCAParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #230                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.getH2OPCAParams$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.String> getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #235                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;)Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$HasIgnoredCols$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #239                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;)Lscala/collection/immutable/Map;
       4: areturn

  public java.lang.String[] getIgnoredCols();
    Code:
       0: aload_0
       1: invokestatic  #245                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.getIgnoredCols$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;)[Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.params.HasIgnoredCols setIgnoredCols(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #251                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.setIgnoredCols$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;[Ljava/lang/String;)Lai/h2o/sparkling/ml/params/HasIgnoredCols;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getIgnoredColsParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #257                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.getIgnoredColsParam$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> transform();
    Code:
       0: aload_0
       1: getfield      #261                // Field transform:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> pcaMethod();
    Code:
       0: aload_0
       1: getfield      #263                // Field pcaMethod:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> pcaImpl();
    Code:
       0: aload_0
       1: getfield      #265                // Field pcaImpl:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.IntParam k();
    Code:
       0: aload_0
       1: getfield      #268                // Field k:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam maxIterations();
    Code:
       0: aload_0
       1: getfield      #270                // Field maxIterations:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.LongParam seed();
    Code:
       0: aload_0
       1: getfield      #273                // Field seed:Lorg/apache/spark/ml/param/LongParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam useAllFactorLevels();
    Code:
       0: aload_0
       1: getfield      #276                // Field useAllFactorLevels:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam computeMetrics();
    Code:
       0: aload_0
       1: getfield      #278                // Field computeMetrics:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam imputeMissing();
    Code:
       0: aload_0
       1: getfield      #280                // Field imputeMissing:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam modelId();
    Code:
       0: aload_0
       1: getfield      #283                // Field modelId:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam ignoreConstCols();
    Code:
       0: aload_0
       1: getfield      #285                // Field ignoreConstCols:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam scoreEachIteration();
    Code:
       0: aload_0
       1: getfield      #287                // Field scoreEachIteration:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam maxRuntimeSecs();
    Code:
       0: aload_0
       1: getfield      #290                // Field maxRuntimeSecs:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam exportCheckpointsDir();
    Code:
       0: aload_0
       1: getfield      #292                // Field exportCheckpointsDir:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public void ai$h2o$sparkling$ml$params$H2OPCAParams$_setter_$transform_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #261                // Field transform:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OPCAParams$_setter_$pcaMethod_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #263                // Field pcaMethod:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OPCAParams$_setter_$pcaImpl_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #265                // Field pcaImpl:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OPCAParams$_setter_$k_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #268                // Field k:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OPCAParams$_setter_$maxIterations_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #270                // Field maxIterations:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OPCAParams$_setter_$seed_$eq(org.apache.spark.ml.param.LongParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #273                // Field seed:Lorg/apache/spark/ml/param/LongParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OPCAParams$_setter_$useAllFactorLevels_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #276                // Field useAllFactorLevels:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OPCAParams$_setter_$computeMetrics_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #278                // Field computeMetrics:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OPCAParams$_setter_$imputeMissing_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #280                // Field imputeMissing:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OPCAParams$_setter_$modelId_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #283                // Field modelId:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OPCAParams$_setter_$ignoreConstCols_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #285                // Field ignoreConstCols:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OPCAParams$_setter_$scoreEachIteration_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #287                // Field scoreEachIteration:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OPCAParams$_setter_$maxRuntimeSecs_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #290                // Field maxRuntimeSecs:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OPCAParams$_setter_$exportCheckpointsDir_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #292                // Field exportCheckpointsDir:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public ai.h2o.sparkling.ml.params.NullableStringArrayParam ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols();
    Code:
       0: aload_0
       1: getfield      #317                // Field ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$HasIgnoredCols$_setter_$ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols_$eq(ai.h2o.sparkling.ml.params.NullableStringArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #317                // Field ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       5: return

  public java.lang.String uid();
    Code:
       0: aload_0
       1: getfield      #321                // Field uid:Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.models.H2OPCAMOJOModel fit(org.apache.spark.sql.Dataset<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #328                // Method ai/h2o/sparkling/ml/features/H2ODimReductionEstimator.fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2ODimReductionMOJOModel;
       5: checkcast     #330                // class ai/h2o/sparkling/ml/models/H2OPCAMOJOModel
       8: areturn

  public org.apache.spark.ml.Model fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #334                // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OPCAMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2OMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #334                // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OPCAMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2OFeatureMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #334                // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OPCAMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2ODimReductionMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #334                // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OPCAMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.features.H2OPCA(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #321                // Field uid:Ljava/lang/String;
       5: aload_0
       6: getstatic     #343                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       9: ldc           #13                 // class hex/pca/PCAModel$PCAParameters
      11: invokevirtual #347                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      14: invokespecial #350                // Method ai/h2o/sparkling/ml/features/H2ODimReductionEstimator."<init>":(Lscala/reflect/ClassTag;)V
      17: aload_0
      18: invokestatic  #354                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.$init$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;)V
      21: aload_0
      22: invokestatic  #357                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OPCAParams.$init$:(Lai/h2o/sparkling/ml/params/H2OPCAParams;)V
      25: return

  public ai.h2o.sparkling.ml.features.H2OPCA();
    Code:
       0: aload_0
       1: getstatic     #363                // Field org/apache/spark/ml/util/Identifiable$.MODULE$:Lorg/apache/spark/ml/util/Identifiable$;
       4: ldc           #2                  // class ai/h2o/sparkling/ml/features/H2OPCA
       6: invokevirtual #368                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       9: invokevirtual #372                // Method org/apache/spark/ml/util/Identifiable$.randomUID:(Ljava/lang/String;)Ljava/lang/String;
      12: invokespecial #374                // Method "<init>":(Ljava/lang/String;)V
      15: return
}
