Compiled from "HyperParamsParam.scala"
public class ai.h2o.sparkling.ml.params.HyperParamsParam extends org.apache.spark.ml.param.Param<java.util.Map<java.lang.String, java.lang.Object[]>> {
  public java.lang.String jsonEncode(java.util.Map<java.lang.String, java.lang.Object[]>);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: getstatic     #60                 // Field org/json4s/package$.MODULE$:Lorg/json4s/package$;
       7: invokevirtual #64                 // Method org/json4s/package$.JNull:()Lorg/json4s/JsonAST$JNull$;
      10: goto          254
      13: new           #66                 // class water/AutoBuffer
      16: dup
      17: invokespecial #70                 // Method water/AutoBuffer."<init>":()V
      20: astore_3
      21: aload_3
      22: aload_1
      23: invokeinterface #74,  1           // InterfaceMethod java/util/Map.size:()I
      28: invokevirtual #78                 // Method water/AutoBuffer.put1:(I)Lwater/AutoBuffer;
      31: pop
      32: aload_1
      33: invokeinterface #82,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      38: invokeinterface #88,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      43: astore        4
      45: aload         4
      47: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      52: ifeq          199
      55: aload         4
      57: invokeinterface #98,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      62: checkcast     #18                 // class java/util/Map$Entry
      65: astore        5
      67: aload_3
      68: aload         5
      70: invokeinterface #101,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      75: checkcast     #103                // class java/lang/String
      78: invokevirtual #107                // Method water/AutoBuffer.putStr:(Ljava/lang/String;)Lwater/AutoBuffer;
      81: pop
      82: aload         5
      84: invokeinterface #110,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      89: instanceof    #112                // class java/util/ArrayList
      92: ifeq          181
      95: aload         5
      97: invokeinterface #110,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     102: checkcast     #112                // class java/util/ArrayList
     105: invokevirtual #113                // Method java/util/ArrayList.size:()I
     108: istore        6
     110: aload         5
     112: invokeinterface #110,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     117: checkcast     #112                // class java/util/ArrayList
     120: astore        7
     122: getstatic     #118                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
     125: getstatic     #123                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     128: iconst_0
     129: invokevirtual #127                // Method scala/Predef$.intWrapper:(I)I
     132: iload         6
     134: invokevirtual #131                // Method scala/runtime/RichInt$.until$extension0:(II)Lscala/collection/immutable/Range;
     137: aload         7
     139: invokedynamic #153,  0            // InvokeDynamic #0:apply:(Ljava/util/ArrayList;)Lscala/Function1;
     144: getstatic     #158                // Field scala/collection/immutable/IndexedSeq$.MODULE$:Lscala/collection/immutable/IndexedSeq$;
     147: invokevirtual #162                // Method scala/collection/immutable/IndexedSeq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     150: invokevirtual #168                // Method scala/collection/immutable/Range.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     153: checkcast     #170                // class scala/collection/TraversableOnce
     156: getstatic     #175                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     159: invokevirtual #179                // Method scala/reflect/ClassTag$.AnyRef:()Lscala/reflect/ClassTag;
     162: invokeinterface #183,  2          // InterfaceMethod scala/collection/TraversableOnce.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
     167: checkcast     #185                // class "[Ljava/lang/Object;"
     170: astore        8
     172: aload_3
     173: aload         8
     175: invokevirtual #189                // Method water/AutoBuffer.putASer:([Ljava/lang/Object;)Lwater/AutoBuffer;
     178: goto          195
     181: aload_3
     182: aload         5
     184: invokeinterface #110,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     189: checkcast     #185                // class "[Ljava/lang/Object;"
     192: invokevirtual #189                // Method water/AutoBuffer.putASer:([Ljava/lang/Object;)Lwater/AutoBuffer;
     195: pop
     196: goto          45
     199: aload_3
     200: invokevirtual #193                // Method water/AutoBuffer.buf:()[B
     203: astore        9
     205: new           #23                 // class org/json4s/JsonAST$JArray
     208: dup
     209: new           #47                 // class scala/collection/mutable/ArrayOps$ofByte
     212: dup
     213: getstatic     #123                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     216: aload         9
     218: invokevirtual #197                // Method scala/Predef$.byteArrayOps:([B)[B
     221: invokespecial #200                // Method scala/collection/mutable/ArrayOps$ofByte."<init>":([B)V
     224: invokevirtual #204                // Method scala/collection/mutable/ArrayOps$ofByte.toSeq:()Lscala/collection/Seq;
     227: invokedynamic #214,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
     232: getstatic     #219                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
     235: invokevirtual #220                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     238: invokeinterface #223,  3          // InterfaceMethod scala/collection/Seq.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     243: checkcast     #170                // class scala/collection/TraversableOnce
     246: invokeinterface #227,  1          // InterfaceMethod scala/collection/TraversableOnce.toList:()Lscala/collection/immutable/List;
     251: invokespecial #230                // Method org/json4s/JsonAST$JArray."<init>":(Lscala/collection/immutable/List;)V
     254: astore_2
     255: getstatic     #235                // Field org/json4s/jackson/JsonMethods$.MODULE$:Lorg/json4s/jackson/JsonMethods$;
     258: aload_2
     259: astore        10
     261: getstatic     #235                // Field org/json4s/jackson/JsonMethods$.MODULE$:Lorg/json4s/jackson/JsonMethods$;
     264: aload         10
     266: invokevirtual #239                // Method org/json4s/jackson/JsonMethods$.render$default$2:(Lorg/json4s/JsonAST$JValue;)Lorg/json4s/Formats;
     269: astore        11
     271: getstatic     #235                // Field org/json4s/jackson/JsonMethods$.MODULE$:Lorg/json4s/jackson/JsonMethods$;
     274: aload         10
     276: aload         11
     278: invokevirtual #243                // Method org/json4s/jackson/JsonMethods$.render:(Lorg/json4s/JsonAST$JValue;Lorg/json4s/Formats;)Lorg/json4s/JsonAST$JValue;
     281: invokevirtual #247                // Method org/json4s/jackson/JsonMethods$.compact:(Lorg/json4s/JsonAST$JValue;)Ljava/lang/String;
     284: areturn

  public java.util.Map<java.lang.String, java.lang.Object[]> jsonDecode(java.lang.String);
    Code:
       0: getstatic     #235                // Field org/json4s/jackson/JsonMethods$.MODULE$:Lorg/json4s/jackson/JsonMethods$;
       3: getstatic     #60                 // Field org/json4s/package$.MODULE$:Lorg/json4s/package$;
       6: aload_1
       7: invokevirtual #275                // Method org/json4s/package$.string2JsonInput:(Ljava/lang/String;)Lorg/json4s/JsonInput;
      10: getstatic     #235                // Field org/json4s/jackson/JsonMethods$.MODULE$:Lorg/json4s/jackson/JsonMethods$;
      13: invokevirtual #278                // Method org/json4s/jackson/JsonMethods$.parse$default$2:()Z
      16: getstatic     #235                // Field org/json4s/jackson/JsonMethods$.MODULE$:Lorg/json4s/jackson/JsonMethods$;
      19: invokevirtual #281                // Method org/json4s/jackson/JsonMethods$.parse$default$3:()Z
      22: invokevirtual #285                // Method org/json4s/jackson/JsonMethods$.parse:(Lorg/json4s/JsonInput;ZZ)Lorg/json4s/JsonAST$JValue;
      25: astore_3
      26: getstatic     #60                 // Field org/json4s/package$.MODULE$:Lorg/json4s/package$;
      29: invokevirtual #64                 // Method org/json4s/package$.JNull:()Lorg/json4s/JsonAST$JNull$;
      32: aload_3
      33: astore        4
      35: dup
      36: ifnonnull     48
      39: pop
      40: aload         4
      42: ifnull        56
      45: goto          61
      48: aload         4
      50: invokevirtual #291                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      53: ifeq          61
      56: aconst_null
      57: astore_2
      58: goto          239
      61: goto          64
      64: aload_3
      65: instanceof    #23                 // class org/json4s/JsonAST$JArray
      68: ifeq          199
      71: aload_3
      72: checkcast     #23                 // class org/json4s/JsonAST$JArray
      75: astore        5
      77: aload         5
      79: invokevirtual #293                // Method org/json4s/JsonAST$JArray.arr:()Lscala/collection/immutable/List;
      82: astore        6
      84: aload         6
      86: aload_1
      87: invokedynamic #303,  0            // InvokeDynamic #2:apply:(Ljava/lang/String;)Lscala/Function1;
      92: getstatic     #308                // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      95: invokevirtual #309                // Method scala/collection/immutable/List$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      98: invokevirtual #312                // Method scala/collection/immutable/List.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     101: checkcast     #170                // class scala/collection/TraversableOnce
     104: getstatic     #175                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     107: invokevirtual #315                // Method scala/reflect/ClassTag$.Byte:()Lscala/reflect/ClassTag;
     110: invokeinterface #183,  2          // InterfaceMethod scala/collection/TraversableOnce.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
     115: checkcast     #316                // class "[B"
     118: astore        7
     120: new           #66                 // class water/AutoBuffer
     123: dup
     124: aload         7
     126: invokespecial #317                // Method water/AutoBuffer."<init>":([B)V
     129: astore        8
     131: aload         8
     133: invokevirtual #321                // Method water/AutoBuffer.get1:()B
     136: istore        9
     138: getstatic     #326                // Field scala/collection/JavaConverters$.MODULE$:Lscala/collection/JavaConverters$;
     141: getstatic     #118                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
     144: getstatic     #123                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     147: iconst_0
     148: invokevirtual #127                // Method scala/Predef$.intWrapper:(I)I
     151: iload         9
     153: invokevirtual #131                // Method scala/runtime/RichInt$.until$extension0:(II)Lscala/collection/immutable/Range;
     156: aload         8
     158: invokedynamic #336,  0            // InvokeDynamic #3:apply:(Lwater/AutoBuffer;)Lscala/Function1;
     163: getstatic     #158                // Field scala/collection/immutable/IndexedSeq$.MODULE$:Lscala/collection/immutable/IndexedSeq$;
     166: invokevirtual #162                // Method scala/collection/immutable/IndexedSeq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     169: invokevirtual #168                // Method scala/collection/immutable/Range.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     172: checkcast     #170                // class scala/collection/TraversableOnce
     175: getstatic     #123                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     178: invokevirtual #340                // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
     181: invokeinterface #344,  2          // InterfaceMethod scala/collection/TraversableOnce.toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
     186: invokevirtual #348                // Method scala/collection/JavaConverters$.mapAsJavaMapConverter:(Lscala/collection/Map;)Lscala/collection/convert/Decorators$AsJava;
     189: invokevirtual #351                // Method scala/collection/convert/Decorators$AsJava.asJava:()Ljava/lang/Object;
     192: checkcast     #20                 // class java/util/Map
     195: astore_2
     196: goto          239
     199: goto          202
     202: new           #353                // class java/lang/IllegalArgumentException
     205: dup
     206: new           #355                // class java/lang/StringBuilder
     209: dup
     210: ldc_w         #356                // int 45
     213: invokespecial #359                // Method java/lang/StringBuilder."<init>":(I)V
     216: ldc_w         #361                // String Cannot decode
     219: invokevirtual #365                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     222: aload_1
     223: invokevirtual #365                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     226: ldc_w         #367                // String  to Map[String, Array[AnyRef]].
     229: invokevirtual #365                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     232: invokevirtual #371                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     235: invokespecial #374                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     238: athrow
     239: aload_2
     240: areturn

  public java.lang.Object jsonDecode(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #382                // Method jsonDecode:(Ljava/lang/String;)Ljava/util/Map;
       5: areturn

  public java.lang.String jsonEncode(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class java/util/Map
       5: invokevirtual #385                // Method jsonEncode:(Ljava/util/Map;)Ljava/lang/String;
       8: areturn

  public static final java.lang.Object $anonfun$jsonEncode$1(java.util.ArrayList, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #394                // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
       5: areturn

  public static final org.json4s.JsonAST$JInt $anonfun$jsonEncode$2(byte);
    Code:
       0: new           #28                 // class org/json4s/JsonAST$JInt
       3: dup
       4: getstatic     #401                // Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
       7: iload_0
       8: invokevirtual #405                // Method scala/math/BigInt$.int2bigInt:(I)Lscala/math/BigInt;
      11: invokespecial #408                // Method org/json4s/JsonAST$JInt."<init>":(Lscala/math/BigInt;)V
      14: areturn

  public static final byte $anonfun$jsonDecode$1(java.lang.String, org.json4s.JsonAST$JValue);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: instanceof    #28                 // class org/json4s/JsonAST$JInt
       6: ifeq          31
       9: aload_3
      10: checkcast     #28                 // class org/json4s/JsonAST$JInt
      13: astore        4
      15: aload         4
      17: invokevirtual #416                // Method org/json4s/JsonAST$JInt.num:()Lscala/math/BigInt;
      20: astore        5
      22: aload         5
      24: invokevirtual #421                // Method scala/math/BigInt.byteValue:()B
      27: istore_2
      28: goto          71
      31: goto          34
      34: new           #353                // class java/lang/IllegalArgumentException
      37: dup
      38: new           #355                // class java/lang/StringBuilder
      41: dup
      42: ldc_w         #422                // int 23
      45: invokespecial #359                // Method java/lang/StringBuilder."<init>":(I)V
      48: ldc_w         #361                // String Cannot decode
      51: invokevirtual #365                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_0
      55: invokevirtual #365                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: ldc_w         #424                // String  to Byte.
      61: invokevirtual #365                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #371                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokespecial #374                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: iload_2
      72: ireturn

  public static final scala.Tuple2 $anonfun$jsonDecode$2(water.AutoBuffer, int);
    Code:
       0: new           #432                // class scala/Tuple2
       3: dup
       4: aload_0
       5: invokevirtual #435                // Method water/AutoBuffer.getStr:()Ljava/lang/String;
       8: aload_0
       9: ldc_w         #287                // class java/lang/Object
      12: invokevirtual #439                // Method water/AutoBuffer.getASer:(Ljava/lang/Class;)[Ljava/lang/Object;
      15: invokespecial #442                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      18: areturn

  public ai.h2o.sparkling.ml.params.HyperParamsParam(org.apache.spark.ml.param.Params, java.lang.String, java.lang.String, scala.Function1<java.util.Map<java.lang.String, java.lang.Object[]>, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #451                // Method org/apache/spark/ml/param/Param."<init>":(Lorg/apache/spark/ml/util/Identifiable;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
       9: return

  public ai.h2o.sparkling.ml.params.HyperParamsParam(org.apache.spark.ml.param.Params, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: new           #11                 // class ai/h2o/sparkling/ml/params/HyperParamsParam$$anonfun$$lessinit$greater$1
       7: dup
       8: invokespecial #455                // Method ai/h2o/sparkling/ml/params/HyperParamsParam$$anonfun$$lessinit$greater$1."<init>":()V
      11: invokespecial #457                // Method "<init>":(Lorg/apache/spark/ml/param/Params;Ljava/lang/String;Ljava/lang/String;Lscala/Function1;)V
      14: return

  public static final java.lang.Object $anonfun$jsonEncode$1$adapted(java.util.ArrayList, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #463                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokestatic  #465                // Method $anonfun$jsonEncode$1:(Ljava/util/ArrayList;I)Ljava/lang/Object;
       8: areturn

  public static final org.json4s.JsonAST$JInt $anonfun$jsonEncode$2$adapted(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #469                // Method scala/runtime/BoxesRunTime.unboxToByte:(Ljava/lang/Object;)B
       4: invokestatic  #471                // Method $anonfun$jsonEncode$2:(B)Lorg/json4s/JsonAST$JInt;
       7: areturn

  public static final java.lang.Object $anonfun$jsonDecode$1$adapted(java.lang.String, org.json4s.JsonAST$JValue);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #473                // Method $anonfun$jsonDecode$1:(Ljava/lang/String;Lorg/json4s/JsonAST$JValue;)B
       5: invokestatic  #477                // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
       8: areturn

  public static final scala.Tuple2 $anonfun$jsonDecode$2$adapted(water.AutoBuffer, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #463                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokestatic  #479                // Method $anonfun$jsonDecode$2:(Lwater/AutoBuffer;I)Lscala/Tuple2;
       8: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #491,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
