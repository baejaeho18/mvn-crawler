Compiled from "H2ODeepLearning.scala"
public class ai.h2o.sparkling.ml.algos.H2ODeepLearning extends ai.h2o.sparkling.ml.algos.H2OSupervisedAlgorithmWithFoldColumn<hex.deeplearning.DeepLearningModel$DeepLearningParameters> implements ai.h2o.sparkling.ml.params.H2ODeepLearningParams, ai.h2o.sparkling.ml.algos.DistributionBasedH2OTrainFramePreparation {
  private final java.lang.String uid;

  private final org.apache.spark.ml.param.BooleanParam balanceClasses;

  private final ai.h2o.sparkling.ml.params.NullableFloatArrayParam classSamplingFactors;

  private final org.apache.spark.ml.param.FloatParam maxAfterBalanceSize;

  private final org.apache.spark.ml.param.Param<java.lang.String> activation;

  private final org.apache.spark.ml.param.IntArrayParam hidden;

  private final org.apache.spark.ml.param.DoubleParam epochs;

  private final org.apache.spark.ml.param.LongParam trainSamplesPerIteration;

  private final org.apache.spark.ml.param.DoubleParam targetRatioCommToComp;

  private final org.apache.spark.ml.param.LongParam seed;

  private final org.apache.spark.ml.param.BooleanParam adaptiveRate;

  private final org.apache.spark.ml.param.DoubleParam rho;

  private final org.apache.spark.ml.param.DoubleParam epsilon;

  private final org.apache.spark.ml.param.DoubleParam rate;

  private final org.apache.spark.ml.param.DoubleParam rateAnnealing;

  private final org.apache.spark.ml.param.DoubleParam rateDecay;

  private final org.apache.spark.ml.param.DoubleParam momentumStart;

  private final org.apache.spark.ml.param.DoubleParam momentumRamp;

  private final org.apache.spark.ml.param.DoubleParam momentumStable;

  private final org.apache.spark.ml.param.BooleanParam nesterovAcceleratedGradient;

  private final org.apache.spark.ml.param.DoubleParam inputDropoutRatio;

  private final ai.h2o.sparkling.ml.params.NullableDoubleArrayParam hiddenDropoutRatios;

  private final org.apache.spark.ml.param.DoubleParam l1;

  private final org.apache.spark.ml.param.DoubleParam l2;

  private final org.apache.spark.ml.param.FloatParam maxW2;

  private final org.apache.spark.ml.param.Param<java.lang.String> initialWeightDistribution;

  private final org.apache.spark.ml.param.DoubleParam initialWeightScale;

  private final org.apache.spark.ml.param.Param<java.lang.String> loss;

  private final org.apache.spark.ml.param.DoubleParam scoreInterval;

  private final org.apache.spark.ml.param.LongParam scoreTrainingSamples;

  private final org.apache.spark.ml.param.LongParam scoreValidationSamples;

  private final org.apache.spark.ml.param.DoubleParam scoreDutyCycle;

  private final org.apache.spark.ml.param.DoubleParam classificationStop;

  private final org.apache.spark.ml.param.DoubleParam regressionStop;

  private final org.apache.spark.ml.param.BooleanParam quietMode;

  private final org.apache.spark.ml.param.Param<java.lang.String> scoreValidationSampling;

  private final org.apache.spark.ml.param.BooleanParam overwriteWithBestModel;

  private final org.apache.spark.ml.param.BooleanParam useAllFactorLevels;

  private final org.apache.spark.ml.param.BooleanParam standardize;

  private final org.apache.spark.ml.param.BooleanParam diagnostics;

  private final org.apache.spark.ml.param.BooleanParam calculateFeatureImportances;

  private final org.apache.spark.ml.param.BooleanParam fastMode;

  private final org.apache.spark.ml.param.BooleanParam forceLoadBalance;

  private final org.apache.spark.ml.param.BooleanParam replicateTrainingData;

  private final org.apache.spark.ml.param.BooleanParam singleNodeMode;

  private final org.apache.spark.ml.param.BooleanParam shuffleTrainingData;

  private final org.apache.spark.ml.param.Param<java.lang.String> missingValuesHandling;

  private final org.apache.spark.ml.param.BooleanParam sparse;

  private final org.apache.spark.ml.param.DoubleParam averageActivation;

  private final org.apache.spark.ml.param.DoubleParam sparsityBeta;

  private final org.apache.spark.ml.param.IntParam maxCategoricalFeatures;

  private final org.apache.spark.ml.param.BooleanParam reproducible;

  private final org.apache.spark.ml.param.BooleanParam exportWeightsAndBiases;

  private final org.apache.spark.ml.param.IntParam miniBatchSize;

  private final org.apache.spark.ml.param.BooleanParam elasticAveraging;

  private final org.apache.spark.ml.param.DoubleParam elasticAveragingMovingRate;

  private final org.apache.spark.ml.param.DoubleParam elasticAveragingRegularization;

  private final ai.h2o.sparkling.ml.params.NullableStringParam modelId;

  private final org.apache.spark.ml.param.IntParam nfolds;

  private final org.apache.spark.ml.param.BooleanParam keepCrossValidationModels;

  private final org.apache.spark.ml.param.BooleanParam keepCrossValidationPredictions;

  private final org.apache.spark.ml.param.BooleanParam keepCrossValidationFoldAssignment;

  private final org.apache.spark.ml.param.Param<java.lang.String> distribution;

  private final org.apache.spark.ml.param.DoubleParam tweediePower;

  private final org.apache.spark.ml.param.DoubleParam quantileAlpha;

  private final org.apache.spark.ml.param.DoubleParam huberAlpha;

  private final org.apache.spark.ml.param.Param<java.lang.String> labelCol;

  private final ai.h2o.sparkling.ml.params.NullableStringParam weightCol;

  private final ai.h2o.sparkling.ml.params.NullableStringParam offsetCol;

  private final ai.h2o.sparkling.ml.params.NullableStringParam foldCol;

  private final org.apache.spark.ml.param.Param<java.lang.String> foldAssignment;

  private final org.apache.spark.ml.param.Param<java.lang.String> categoricalEncoding;

  private final org.apache.spark.ml.param.BooleanParam ignoreConstCols;

  private final org.apache.spark.ml.param.BooleanParam scoreEachIteration;

  private final org.apache.spark.ml.param.IntParam stoppingRounds;

  private final org.apache.spark.ml.param.DoubleParam maxRuntimeSecs;

  private final org.apache.spark.ml.param.Param<java.lang.String> stoppingMetric;

  private final org.apache.spark.ml.param.DoubleParam stoppingTolerance;

  private final ai.h2o.sparkling.ml.params.NullableStringParam exportCheckpointsDir;

  private final org.apache.spark.ml.param.Param<java.lang.String> aucType;

  private final ai.h2o.sparkling.ml.params.NullableStringArrayParam ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols;

  private final ai.h2o.sparkling.ml.params.NullableMatrixArrayParam ai$h2o$sparkling$ml$params$HasInitialWeights$$initialWeights;

  private final ai.h2o.sparkling.ml.params.NullableVectorArrayParam ai$h2o$sparkling$ml$params$HasInitialBiases$$initialBiases;

  public static org.apache.spark.ml.util.MLReader<ai.h2o.sparkling.ml.algos.H2ODeepLearning> read();
    Code:
       0: getstatic     #125                // Field ai/h2o/sparkling/ml/algos/H2ODeepLearning$.MODULE$:Lai/h2o/sparkling/ml/algos/H2ODeepLearning$;
       3: invokevirtual #127                // Method ai/h2o/sparkling/ml/algos/H2ODeepLearning$.read:()Lorg/apache/spark/ml/util/MLReader;
       6: areturn

  public static java.lang.Object load(java.lang.String);
    Code:
       0: getstatic     #125                // Field ai/h2o/sparkling/ml/algos/H2ODeepLearning$.MODULE$:Lai/h2o/sparkling/ml/algos/H2ODeepLearning$;
       3: aload_0
       4: invokevirtual #132                // Method ai/h2o/sparkling/ml/algos/H2ODeepLearning$.load:(Ljava/lang/String;)Ljava/lang/Object;
       7: areturn

  public void ai$h2o$sparkling$ml$algos$DistributionBasedH2OTrainFramePreparation$$super$prepareH2OTrainFrameForFitting(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #141                // InterfaceMethod ai/h2o/sparkling/ml/algos/H2OTrainFramePreparation.prepareH2OTrainFrameForFitting$:(Lai/h2o/sparkling/ml/algos/H2OTrainFramePreparation;Lai/h2o/sparkling/H2OFrame;)V
       5: return

  public void prepareH2OTrainFrameForFitting(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #149                // InterfaceMethod ai/h2o/sparkling/ml/algos/DistributionBasedH2OTrainFramePreparation.prepareH2OTrainFrameForFitting$:(Lai/h2o/sparkling/ml/algos/DistributionBasedH2OTrainFramePreparation;Lai/h2o/sparkling/H2OFrame;)V
       5: return

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2ODeepLearningParams$$super$getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #158                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.getH2OAlgorithmParams$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2ODeepLearningParams$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #166                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;)Lscala/collection/immutable/Map;
       4: areturn

  public scala.reflect.ClassTag<hex.deeplearning.DeepLearningModel$DeepLearningParameters> paramTag();
    Code:
       0: aload_0
       1: invokestatic  #173                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.paramTag$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Lscala/reflect/ClassTag;
       4: areturn

  public boolean getBalanceClasses();
    Code:
       0: aload_0
       1: invokestatic  #179                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getBalanceClasses$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Z
       4: ireturn

  public float[] getClassSamplingFactors();
    Code:
       0: aload_0
       1: invokestatic  #185                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getClassSamplingFactors$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)[F
       4: areturn

  public float getMaxAfterBalanceSize();
    Code:
       0: aload_0
       1: invokestatic  #191                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getMaxAfterBalanceSize$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)F
       4: freturn

  public java.lang.String getActivation();
    Code:
       0: aload_0
       1: invokestatic  #197                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getActivation$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Ljava/lang/String;
       4: areturn

  public int[] getHidden();
    Code:
       0: aload_0
       1: invokestatic  #203                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getHidden$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)[I
       4: areturn

  public double getEpochs();
    Code:
       0: aload_0
       1: invokestatic  #209                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getEpochs$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public long getTrainSamplesPerIteration();
    Code:
       0: aload_0
       1: invokestatic  #215                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getTrainSamplesPerIteration$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)J
       4: lreturn

  public double getTargetRatioCommToComp();
    Code:
       0: aload_0
       1: invokestatic  #219                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getTargetRatioCommToComp$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public long getSeed();
    Code:
       0: aload_0
       1: invokestatic  #223                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getSeed$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)J
       4: lreturn

  public boolean getAdaptiveRate();
    Code:
       0: aload_0
       1: invokestatic  #227                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getAdaptiveRate$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Z
       4: ireturn

  public double getRho();
    Code:
       0: aload_0
       1: invokestatic  #231                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getRho$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public double getEpsilon();
    Code:
       0: aload_0
       1: invokestatic  #235                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getEpsilon$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public double getRate();
    Code:
       0: aload_0
       1: invokestatic  #239                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getRate$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public double getRateAnnealing();
    Code:
       0: aload_0
       1: invokestatic  #243                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getRateAnnealing$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public double getRateDecay();
    Code:
       0: aload_0
       1: invokestatic  #247                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getRateDecay$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public double getMomentumStart();
    Code:
       0: aload_0
       1: invokestatic  #251                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getMomentumStart$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public double getMomentumRamp();
    Code:
       0: aload_0
       1: invokestatic  #255                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getMomentumRamp$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public double getMomentumStable();
    Code:
       0: aload_0
       1: invokestatic  #259                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getMomentumStable$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public boolean getNesterovAcceleratedGradient();
    Code:
       0: aload_0
       1: invokestatic  #263                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getNesterovAcceleratedGradient$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Z
       4: ireturn

  public double getInputDropoutRatio();
    Code:
       0: aload_0
       1: invokestatic  #267                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getInputDropoutRatio$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public double[] getHiddenDropoutRatios();
    Code:
       0: aload_0
       1: invokestatic  #273                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getHiddenDropoutRatios$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)[D
       4: areturn

  public double getL1();
    Code:
       0: aload_0
       1: invokestatic  #277                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getL1$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public double getL2();
    Code:
       0: aload_0
       1: invokestatic  #281                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getL2$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public float getMaxW2();
    Code:
       0: aload_0
       1: invokestatic  #285                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getMaxW2$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)F
       4: freturn

  public java.lang.String getInitialWeightDistribution();
    Code:
       0: aload_0
       1: invokestatic  #289                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getInitialWeightDistribution$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Ljava/lang/String;
       4: areturn

  public double getInitialWeightScale();
    Code:
       0: aload_0
       1: invokestatic  #293                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getInitialWeightScale$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public java.lang.String getLoss();
    Code:
       0: aload_0
       1: invokestatic  #297                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getLoss$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Ljava/lang/String;
       4: areturn

  public double getScoreInterval();
    Code:
       0: aload_0
       1: invokestatic  #301                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getScoreInterval$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public long getScoreTrainingSamples();
    Code:
       0: aload_0
       1: invokestatic  #305                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getScoreTrainingSamples$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)J
       4: lreturn

  public long getScoreValidationSamples();
    Code:
       0: aload_0
       1: invokestatic  #309                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getScoreValidationSamples$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)J
       4: lreturn

  public double getScoreDutyCycle();
    Code:
       0: aload_0
       1: invokestatic  #313                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getScoreDutyCycle$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public double getClassificationStop();
    Code:
       0: aload_0
       1: invokestatic  #317                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getClassificationStop$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public double getRegressionStop();
    Code:
       0: aload_0
       1: invokestatic  #321                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getRegressionStop$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public boolean getQuietMode();
    Code:
       0: aload_0
       1: invokestatic  #325                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getQuietMode$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Z
       4: ireturn

  public java.lang.String getScoreValidationSampling();
    Code:
       0: aload_0
       1: invokestatic  #329                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getScoreValidationSampling$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Ljava/lang/String;
       4: areturn

  public boolean getOverwriteWithBestModel();
    Code:
       0: aload_0
       1: invokestatic  #333                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getOverwriteWithBestModel$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Z
       4: ireturn

  public boolean getUseAllFactorLevels();
    Code:
       0: aload_0
       1: invokestatic  #337                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getUseAllFactorLevels$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Z
       4: ireturn

  public boolean getStandardize();
    Code:
       0: aload_0
       1: invokestatic  #341                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getStandardize$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Z
       4: ireturn

  public boolean getDiagnostics();
    Code:
       0: aload_0
       1: invokestatic  #345                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getDiagnostics$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Z
       4: ireturn

  public boolean getCalculateFeatureImportances();
    Code:
       0: aload_0
       1: invokestatic  #349                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getCalculateFeatureImportances$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Z
       4: ireturn

  public boolean getFastMode();
    Code:
       0: aload_0
       1: invokestatic  #353                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getFastMode$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Z
       4: ireturn

  public boolean getForceLoadBalance();
    Code:
       0: aload_0
       1: invokestatic  #357                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getForceLoadBalance$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Z
       4: ireturn

  public boolean getReplicateTrainingData();
    Code:
       0: aload_0
       1: invokestatic  #361                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getReplicateTrainingData$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Z
       4: ireturn

  public boolean getSingleNodeMode();
    Code:
       0: aload_0
       1: invokestatic  #365                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getSingleNodeMode$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Z
       4: ireturn

  public boolean getShuffleTrainingData();
    Code:
       0: aload_0
       1: invokestatic  #369                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getShuffleTrainingData$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Z
       4: ireturn

  public java.lang.String getMissingValuesHandling();
    Code:
       0: aload_0
       1: invokestatic  #373                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getMissingValuesHandling$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Ljava/lang/String;
       4: areturn

  public boolean getSparse();
    Code:
       0: aload_0
       1: invokestatic  #377                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getSparse$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Z
       4: ireturn

  public double getAverageActivation();
    Code:
       0: aload_0
       1: invokestatic  #381                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getAverageActivation$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public double getSparsityBeta();
    Code:
       0: aload_0
       1: invokestatic  #385                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getSparsityBeta$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public int getMaxCategoricalFeatures();
    Code:
       0: aload_0
       1: invokestatic  #391                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getMaxCategoricalFeatures$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)I
       4: ireturn

  public boolean getReproducible();
    Code:
       0: aload_0
       1: invokestatic  #395                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getReproducible$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Z
       4: ireturn

  public boolean getExportWeightsAndBiases();
    Code:
       0: aload_0
       1: invokestatic  #399                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getExportWeightsAndBiases$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Z
       4: ireturn

  public int getMiniBatchSize();
    Code:
       0: aload_0
       1: invokestatic  #403                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getMiniBatchSize$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)I
       4: ireturn

  public boolean getElasticAveraging();
    Code:
       0: aload_0
       1: invokestatic  #407                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getElasticAveraging$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Z
       4: ireturn

  public double getElasticAveragingMovingRate();
    Code:
       0: aload_0
       1: invokestatic  #411                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getElasticAveragingMovingRate$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public double getElasticAveragingRegularization();
    Code:
       0: aload_0
       1: invokestatic  #415                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getElasticAveragingRegularization$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public java.lang.String getModelId();
    Code:
       0: aload_0
       1: invokestatic  #419                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getModelId$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Ljava/lang/String;
       4: areturn

  public int getNfolds();
    Code:
       0: aload_0
       1: invokestatic  #423                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getNfolds$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)I
       4: ireturn

  public boolean getKeepCrossValidationModels();
    Code:
       0: aload_0
       1: invokestatic  #427                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getKeepCrossValidationModels$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Z
       4: ireturn

  public boolean getKeepCrossValidationPredictions();
    Code:
       0: aload_0
       1: invokestatic  #431                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getKeepCrossValidationPredictions$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Z
       4: ireturn

  public boolean getKeepCrossValidationFoldAssignment();
    Code:
       0: aload_0
       1: invokestatic  #435                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getKeepCrossValidationFoldAssignment$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Z
       4: ireturn

  public java.lang.String getDistribution();
    Code:
       0: aload_0
       1: invokestatic  #439                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getDistribution$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Ljava/lang/String;
       4: areturn

  public double getTweediePower();
    Code:
       0: aload_0
       1: invokestatic  #443                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getTweediePower$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public double getQuantileAlpha();
    Code:
       0: aload_0
       1: invokestatic  #447                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getQuantileAlpha$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public double getHuberAlpha();
    Code:
       0: aload_0
       1: invokestatic  #451                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getHuberAlpha$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public java.lang.String getLabelCol();
    Code:
       0: aload_0
       1: invokestatic  #455                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getLabelCol$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getWeightCol();
    Code:
       0: aload_0
       1: invokestatic  #459                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getWeightCol$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getOffsetCol();
    Code:
       0: aload_0
       1: invokestatic  #463                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getOffsetCol$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getFoldCol();
    Code:
       0: aload_0
       1: invokestatic  #467                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getFoldCol$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getFoldAssignment();
    Code:
       0: aload_0
       1: invokestatic  #471                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getFoldAssignment$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getCategoricalEncoding();
    Code:
       0: aload_0
       1: invokestatic  #475                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getCategoricalEncoding$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Ljava/lang/String;
       4: areturn

  public boolean getIgnoreConstCols();
    Code:
       0: aload_0
       1: invokestatic  #479                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getIgnoreConstCols$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Z
       4: ireturn

  public boolean getScoreEachIteration();
    Code:
       0: aload_0
       1: invokestatic  #483                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getScoreEachIteration$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Z
       4: ireturn

  public int getStoppingRounds();
    Code:
       0: aload_0
       1: invokestatic  #487                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getStoppingRounds$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)I
       4: ireturn

  public double getMaxRuntimeSecs();
    Code:
       0: aload_0
       1: invokestatic  #491                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getMaxRuntimeSecs$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public java.lang.String getStoppingMetric();
    Code:
       0: aload_0
       1: invokestatic  #495                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getStoppingMetric$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Ljava/lang/String;
       4: areturn

  public double getStoppingTolerance();
    Code:
       0: aload_0
       1: invokestatic  #499                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getStoppingTolerance$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)D
       4: dreturn

  public java.lang.String getExportCheckpointsDir();
    Code:
       0: aload_0
       1: invokestatic  #503                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getExportCheckpointsDir$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getAucType();
    Code:
       0: aload_0
       1: invokestatic  #507                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getAucType$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setBalanceClasses(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #514                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setBalanceClasses$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Z)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setClassSamplingFactors(float[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #521                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setClassSamplingFactors$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;[F)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setMaxAfterBalanceSize(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #528                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setMaxAfterBalanceSize$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;F)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setActivation(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #535                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setActivation$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setHidden(int[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #541                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setHidden$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;[I)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setEpochs(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #548                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setEpochs$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setTrainSamplesPerIteration(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #555                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setTrainSamplesPerIteration$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;J)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setTargetRatioCommToComp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #560                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setTargetRatioCommToComp$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setSeed(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #564                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setSeed$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;J)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setAdaptiveRate(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #568                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setAdaptiveRate$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Z)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setRho(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #572                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setRho$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setEpsilon(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #576                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setEpsilon$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setRate(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #580                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setRate$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setRateAnnealing(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #584                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setRateAnnealing$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setRateDecay(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #588                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setRateDecay$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setMomentumStart(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #592                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setMomentumStart$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setMomentumRamp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #596                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setMomentumRamp$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setMomentumStable(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #600                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setMomentumStable$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setNesterovAcceleratedGradient(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #604                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setNesterovAcceleratedGradient$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Z)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setInputDropoutRatio(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #608                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setInputDropoutRatio$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setHiddenDropoutRatios(double[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #614                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setHiddenDropoutRatios$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;[D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setL1(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #619                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setL1$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setL2(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #623                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setL2$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setMaxW2(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #627                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setMaxW2$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;F)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setInitialWeightDistribution(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #631                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setInitialWeightDistribution$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setInitialWeightScale(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #635                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setInitialWeightScale$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setLoss(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #639                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setLoss$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setScoreInterval(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #643                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setScoreInterval$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setScoreTrainingSamples(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #647                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setScoreTrainingSamples$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;J)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setScoreValidationSamples(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #651                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setScoreValidationSamples$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;J)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setScoreDutyCycle(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #655                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setScoreDutyCycle$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setClassificationStop(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #659                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setClassificationStop$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setRegressionStop(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #663                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setRegressionStop$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setQuietMode(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #667                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setQuietMode$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Z)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setScoreValidationSampling(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #671                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setScoreValidationSampling$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setOverwriteWithBestModel(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #675                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setOverwriteWithBestModel$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Z)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setUseAllFactorLevels(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #679                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setUseAllFactorLevels$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Z)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setStandardize(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #683                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setStandardize$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Z)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setDiagnostics(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #687                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setDiagnostics$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Z)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setCalculateFeatureImportances(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #691                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setCalculateFeatureImportances$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Z)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setFastMode(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #695                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setFastMode$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Z)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setForceLoadBalance(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #699                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setForceLoadBalance$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Z)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setReplicateTrainingData(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #703                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setReplicateTrainingData$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Z)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setSingleNodeMode(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #707                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setSingleNodeMode$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Z)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setShuffleTrainingData(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #711                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setShuffleTrainingData$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Z)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setMissingValuesHandling(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #715                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setMissingValuesHandling$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setSparse(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #719                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setSparse$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Z)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setAverageActivation(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #723                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setAverageActivation$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setSparsityBeta(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #727                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setSparsityBeta$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setMaxCategoricalFeatures(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #733                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setMaxCategoricalFeatures$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;I)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setReproducible(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #738                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setReproducible$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Z)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setExportWeightsAndBiases(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #742                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setExportWeightsAndBiases$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Z)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setMiniBatchSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #746                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setMiniBatchSize$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;I)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setElasticAveraging(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #750                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setElasticAveraging$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Z)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setElasticAveragingMovingRate(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #754                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setElasticAveragingMovingRate$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setElasticAveragingRegularization(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #758                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setElasticAveragingRegularization$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setModelId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #762                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setModelId$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setNfolds(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #766                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setNfolds$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;I)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setKeepCrossValidationModels(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #770                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setKeepCrossValidationModels$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Z)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setKeepCrossValidationPredictions(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #774                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setKeepCrossValidationPredictions$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Z)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setKeepCrossValidationFoldAssignment(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #778                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setKeepCrossValidationFoldAssignment$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Z)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setDistribution(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #782                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setDistribution$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setTweediePower(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #786                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setTweediePower$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setQuantileAlpha(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #790                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setQuantileAlpha$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setHuberAlpha(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #794                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setHuberAlpha$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setLabelCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #798                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setLabelCol$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setWeightCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #802                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setWeightCol$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setOffsetCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #806                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setOffsetCol$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setFoldCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #810                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setFoldCol$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setFoldAssignment(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #814                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setFoldAssignment$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setCategoricalEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #818                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setCategoricalEncoding$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setIgnoreConstCols(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #822                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setIgnoreConstCols$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Z)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setScoreEachIteration(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #826                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setScoreEachIteration$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Z)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setStoppingRounds(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #830                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setStoppingRounds$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;I)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setMaxRuntimeSecs(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #834                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setMaxRuntimeSecs$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setStoppingMetric(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #838                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setStoppingMetric$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setStoppingTolerance(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #842                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setStoppingTolerance$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;D)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setExportCheckpointsDir(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #846                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setExportCheckpointsDir$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ODeepLearningParams setAucType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #850                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.setAucType$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #855                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getH2OAlgorithmParams$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2ODeepLearningParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #859                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getH2ODeepLearningParams$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.String> getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #864                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$HasIgnoredCols$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #870                // InterfaceMethod ai/h2o/sparkling/ml/params/HasInitialWeights.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/HasInitialWeights;)Lscala/collection/immutable/Map;
       4: areturn

  public java.lang.String[] getIgnoredCols();
    Code:
       0: aload_0
       1: invokestatic  #876                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.getIgnoredCols$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;)[Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.params.HasIgnoredCols setIgnoredCols(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #882                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.setIgnoredCols$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;[Ljava/lang/String;)Lai/h2o/sparkling/ml/params/HasIgnoredCols;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getIgnoredColsParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #888                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.getIgnoredColsParam$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$HasInitialWeights$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #894                // InterfaceMethod ai/h2o/sparkling/ml/params/HasInitialBiases.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/HasInitialBiases;)Lscala/collection/immutable/Map;
       4: areturn

  public org.apache.spark.ml.linalg.DenseMatrix[] getInitialWeights();
    Code:
       0: aload_0
       1: invokestatic  #900                // InterfaceMethod ai/h2o/sparkling/ml/params/HasInitialWeights.getInitialWeights$:(Lai/h2o/sparkling/ml/params/HasInitialWeights;)[Lorg/apache/spark/ml/linalg/DenseMatrix;
       4: areturn

  public ai.h2o.sparkling.ml.params.HasInitialWeights setInitialWeights(org.apache.spark.ml.linalg.DenseMatrix[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #906                // InterfaceMethod ai/h2o/sparkling/ml/params/HasInitialWeights.setInitialWeights$:(Lai/h2o/sparkling/ml/params/HasInitialWeights;[Lorg/apache/spark/ml/linalg/DenseMatrix;)Lai/h2o/sparkling/ml/params/HasInitialWeights;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getInitialWeightsParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #912                // InterfaceMethod ai/h2o/sparkling/ml/params/HasInitialWeights.getInitialWeightsParam$:(Lai/h2o/sparkling/ml/params/HasInitialWeights;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$HasInitialBiases$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #916                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;)Lscala/collection/immutable/Map;
       4: areturn

  public org.apache.spark.ml.linalg.DenseVector[] getInitialBiases();
    Code:
       0: aload_0
       1: invokestatic  #922                // InterfaceMethod ai/h2o/sparkling/ml/params/HasInitialBiases.getInitialBiases$:(Lai/h2o/sparkling/ml/params/HasInitialBiases;)[Lorg/apache/spark/ml/linalg/DenseVector;
       4: areturn

  public ai.h2o.sparkling.ml.params.HasInitialBiases setInitialBiases(org.apache.spark.ml.linalg.DenseVector[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #928                // InterfaceMethod ai/h2o/sparkling/ml/params/HasInitialBiases.setInitialBiases$:(Lai/h2o/sparkling/ml/params/HasInitialBiases;[Lorg/apache/spark/ml/linalg/DenseVector;)Lai/h2o/sparkling/ml/params/HasInitialBiases;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getInitialBiasesParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #934                // InterfaceMethod ai/h2o/sparkling/ml/params/HasInitialBiases.getInitialBiasesParam$:(Lai/h2o/sparkling/ml/params/HasInitialBiases;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public org.apache.spark.ml.param.BooleanParam balanceClasses();
    Code:
       0: aload_0
       1: getfield      #937                // Field balanceClasses:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableFloatArrayParam classSamplingFactors();
    Code:
       0: aload_0
       1: getfield      #940                // Field classSamplingFactors:Lai/h2o/sparkling/ml/params/NullableFloatArrayParam;
       4: areturn

  public org.apache.spark.ml.param.FloatParam maxAfterBalanceSize();
    Code:
       0: aload_0
       1: getfield      #943                // Field maxAfterBalanceSize:Lorg/apache/spark/ml/param/FloatParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> activation();
    Code:
       0: aload_0
       1: getfield      #947                // Field activation:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.IntArrayParam hidden();
    Code:
       0: aload_0
       1: getfield      #950                // Field hidden:Lorg/apache/spark/ml/param/IntArrayParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam epochs();
    Code:
       0: aload_0
       1: getfield      #953                // Field epochs:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.LongParam trainSamplesPerIteration();
    Code:
       0: aload_0
       1: getfield      #956                // Field trainSamplesPerIteration:Lorg/apache/spark/ml/param/LongParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam targetRatioCommToComp();
    Code:
       0: aload_0
       1: getfield      #958                // Field targetRatioCommToComp:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.LongParam seed();
    Code:
       0: aload_0
       1: getfield      #960                // Field seed:Lorg/apache/spark/ml/param/LongParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam adaptiveRate();
    Code:
       0: aload_0
       1: getfield      #962                // Field adaptiveRate:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam rho();
    Code:
       0: aload_0
       1: getfield      #964                // Field rho:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam epsilon();
    Code:
       0: aload_0
       1: getfield      #966                // Field epsilon:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam rate();
    Code:
       0: aload_0
       1: getfield      #968                // Field rate:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam rateAnnealing();
    Code:
       0: aload_0
       1: getfield      #970                // Field rateAnnealing:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam rateDecay();
    Code:
       0: aload_0
       1: getfield      #972                // Field rateDecay:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam momentumStart();
    Code:
       0: aload_0
       1: getfield      #974                // Field momentumStart:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam momentumRamp();
    Code:
       0: aload_0
       1: getfield      #976                // Field momentumRamp:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam momentumStable();
    Code:
       0: aload_0
       1: getfield      #978                // Field momentumStable:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam nesterovAcceleratedGradient();
    Code:
       0: aload_0
       1: getfield      #980                // Field nesterovAcceleratedGradient:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam inputDropoutRatio();
    Code:
       0: aload_0
       1: getfield      #982                // Field inputDropoutRatio:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableDoubleArrayParam hiddenDropoutRatios();
    Code:
       0: aload_0
       1: getfield      #985                // Field hiddenDropoutRatios:Lai/h2o/sparkling/ml/params/NullableDoubleArrayParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam l1();
    Code:
       0: aload_0
       1: getfield      #987                // Field l1:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam l2();
    Code:
       0: aload_0
       1: getfield      #989                // Field l2:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.FloatParam maxW2();
    Code:
       0: aload_0
       1: getfield      #991                // Field maxW2:Lorg/apache/spark/ml/param/FloatParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> initialWeightDistribution();
    Code:
       0: aload_0
       1: getfield      #993                // Field initialWeightDistribution:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam initialWeightScale();
    Code:
       0: aload_0
       1: getfield      #995                // Field initialWeightScale:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> loss();
    Code:
       0: aload_0
       1: getfield      #997                // Field loss:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam scoreInterval();
    Code:
       0: aload_0
       1: getfield      #999                // Field scoreInterval:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.LongParam scoreTrainingSamples();
    Code:
       0: aload_0
       1: getfield      #1001               // Field scoreTrainingSamples:Lorg/apache/spark/ml/param/LongParam;
       4: areturn

  public org.apache.spark.ml.param.LongParam scoreValidationSamples();
    Code:
       0: aload_0
       1: getfield      #1003               // Field scoreValidationSamples:Lorg/apache/spark/ml/param/LongParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam scoreDutyCycle();
    Code:
       0: aload_0
       1: getfield      #1005               // Field scoreDutyCycle:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam classificationStop();
    Code:
       0: aload_0
       1: getfield      #1007               // Field classificationStop:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam regressionStop();
    Code:
       0: aload_0
       1: getfield      #1009               // Field regressionStop:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam quietMode();
    Code:
       0: aload_0
       1: getfield      #1011               // Field quietMode:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> scoreValidationSampling();
    Code:
       0: aload_0
       1: getfield      #1013               // Field scoreValidationSampling:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam overwriteWithBestModel();
    Code:
       0: aload_0
       1: getfield      #1015               // Field overwriteWithBestModel:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam useAllFactorLevels();
    Code:
       0: aload_0
       1: getfield      #1017               // Field useAllFactorLevels:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam standardize();
    Code:
       0: aload_0
       1: getfield      #1019               // Field standardize:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam diagnostics();
    Code:
       0: aload_0
       1: getfield      #1021               // Field diagnostics:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam calculateFeatureImportances();
    Code:
       0: aload_0
       1: getfield      #1023               // Field calculateFeatureImportances:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam fastMode();
    Code:
       0: aload_0
       1: getfield      #1025               // Field fastMode:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam forceLoadBalance();
    Code:
       0: aload_0
       1: getfield      #1027               // Field forceLoadBalance:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam replicateTrainingData();
    Code:
       0: aload_0
       1: getfield      #1029               // Field replicateTrainingData:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam singleNodeMode();
    Code:
       0: aload_0
       1: getfield      #1031               // Field singleNodeMode:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam shuffleTrainingData();
    Code:
       0: aload_0
       1: getfield      #1033               // Field shuffleTrainingData:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> missingValuesHandling();
    Code:
       0: aload_0
       1: getfield      #1035               // Field missingValuesHandling:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam sparse();
    Code:
       0: aload_0
       1: getfield      #1037               // Field sparse:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam averageActivation();
    Code:
       0: aload_0
       1: getfield      #1039               // Field averageActivation:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam sparsityBeta();
    Code:
       0: aload_0
       1: getfield      #1041               // Field sparsityBeta:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam maxCategoricalFeatures();
    Code:
       0: aload_0
       1: getfield      #1044               // Field maxCategoricalFeatures:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam reproducible();
    Code:
       0: aload_0
       1: getfield      #1046               // Field reproducible:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam exportWeightsAndBiases();
    Code:
       0: aload_0
       1: getfield      #1048               // Field exportWeightsAndBiases:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam miniBatchSize();
    Code:
       0: aload_0
       1: getfield      #1050               // Field miniBatchSize:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam elasticAveraging();
    Code:
       0: aload_0
       1: getfield      #1052               // Field elasticAveraging:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam elasticAveragingMovingRate();
    Code:
       0: aload_0
       1: getfield      #1054               // Field elasticAveragingMovingRate:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam elasticAveragingRegularization();
    Code:
       0: aload_0
       1: getfield      #1056               // Field elasticAveragingRegularization:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam modelId();
    Code:
       0: aload_0
       1: getfield      #1059               // Field modelId:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam nfolds();
    Code:
       0: aload_0
       1: getfield      #1061               // Field nfolds:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam keepCrossValidationModels();
    Code:
       0: aload_0
       1: getfield      #1063               // Field keepCrossValidationModels:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam keepCrossValidationPredictions();
    Code:
       0: aload_0
       1: getfield      #1065               // Field keepCrossValidationPredictions:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam keepCrossValidationFoldAssignment();
    Code:
       0: aload_0
       1: getfield      #1067               // Field keepCrossValidationFoldAssignment:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> distribution();
    Code:
       0: aload_0
       1: getfield      #1069               // Field distribution:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam tweediePower();
    Code:
       0: aload_0
       1: getfield      #1071               // Field tweediePower:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam quantileAlpha();
    Code:
       0: aload_0
       1: getfield      #1073               // Field quantileAlpha:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam huberAlpha();
    Code:
       0: aload_0
       1: getfield      #1075               // Field huberAlpha:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> labelCol();
    Code:
       0: aload_0
       1: getfield      #1077               // Field labelCol:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam weightCol();
    Code:
       0: aload_0
       1: getfield      #1079               // Field weightCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam offsetCol();
    Code:
       0: aload_0
       1: getfield      #1081               // Field offsetCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam foldCol();
    Code:
       0: aload_0
       1: getfield      #1083               // Field foldCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> foldAssignment();
    Code:
       0: aload_0
       1: getfield      #1085               // Field foldAssignment:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> categoricalEncoding();
    Code:
       0: aload_0
       1: getfield      #1087               // Field categoricalEncoding:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam ignoreConstCols();
    Code:
       0: aload_0
       1: getfield      #1089               // Field ignoreConstCols:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam scoreEachIteration();
    Code:
       0: aload_0
       1: getfield      #1091               // Field scoreEachIteration:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam stoppingRounds();
    Code:
       0: aload_0
       1: getfield      #1093               // Field stoppingRounds:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam maxRuntimeSecs();
    Code:
       0: aload_0
       1: getfield      #1095               // Field maxRuntimeSecs:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> stoppingMetric();
    Code:
       0: aload_0
       1: getfield      #1097               // Field stoppingMetric:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam stoppingTolerance();
    Code:
       0: aload_0
       1: getfield      #1099               // Field stoppingTolerance:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam exportCheckpointsDir();
    Code:
       0: aload_0
       1: getfield      #1101               // Field exportCheckpointsDir:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> aucType();
    Code:
       0: aload_0
       1: getfield      #1103               // Field aucType:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$balanceClasses_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #937                // Field balanceClasses:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$classSamplingFactors_$eq(ai.h2o.sparkling.ml.params.NullableFloatArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #940                // Field classSamplingFactors:Lai/h2o/sparkling/ml/params/NullableFloatArrayParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$maxAfterBalanceSize_$eq(org.apache.spark.ml.param.FloatParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #943                // Field maxAfterBalanceSize:Lorg/apache/spark/ml/param/FloatParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$activation_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #947                // Field activation:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$hidden_$eq(org.apache.spark.ml.param.IntArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #950                // Field hidden:Lorg/apache/spark/ml/param/IntArrayParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$epochs_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #953                // Field epochs:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$trainSamplesPerIteration_$eq(org.apache.spark.ml.param.LongParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #956                // Field trainSamplesPerIteration:Lorg/apache/spark/ml/param/LongParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$targetRatioCommToComp_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #958                // Field targetRatioCommToComp:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$seed_$eq(org.apache.spark.ml.param.LongParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #960                // Field seed:Lorg/apache/spark/ml/param/LongParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$adaptiveRate_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #962                // Field adaptiveRate:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$rho_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #964                // Field rho:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$epsilon_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #966                // Field epsilon:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$rate_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #968                // Field rate:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$rateAnnealing_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #970                // Field rateAnnealing:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$rateDecay_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #972                // Field rateDecay:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$momentumStart_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #974                // Field momentumStart:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$momentumRamp_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #976                // Field momentumRamp:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$momentumStable_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #978                // Field momentumStable:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$nesterovAcceleratedGradient_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #980                // Field nesterovAcceleratedGradient:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$inputDropoutRatio_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #982                // Field inputDropoutRatio:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$hiddenDropoutRatios_$eq(ai.h2o.sparkling.ml.params.NullableDoubleArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #985                // Field hiddenDropoutRatios:Lai/h2o/sparkling/ml/params/NullableDoubleArrayParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$l1_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #987                // Field l1:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$l2_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #989                // Field l2:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$maxW2_$eq(org.apache.spark.ml.param.FloatParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #991                // Field maxW2:Lorg/apache/spark/ml/param/FloatParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$initialWeightDistribution_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #993                // Field initialWeightDistribution:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$initialWeightScale_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #995                // Field initialWeightScale:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$loss_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #997                // Field loss:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$scoreInterval_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #999                // Field scoreInterval:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$scoreTrainingSamples_$eq(org.apache.spark.ml.param.LongParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1001               // Field scoreTrainingSamples:Lorg/apache/spark/ml/param/LongParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$scoreValidationSamples_$eq(org.apache.spark.ml.param.LongParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1003               // Field scoreValidationSamples:Lorg/apache/spark/ml/param/LongParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$scoreDutyCycle_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1005               // Field scoreDutyCycle:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$classificationStop_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1007               // Field classificationStop:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$regressionStop_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1009               // Field regressionStop:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$quietMode_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1011               // Field quietMode:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$scoreValidationSampling_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1013               // Field scoreValidationSampling:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$overwriteWithBestModel_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1015               // Field overwriteWithBestModel:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$useAllFactorLevels_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1017               // Field useAllFactorLevels:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$standardize_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1019               // Field standardize:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$diagnostics_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1021               // Field diagnostics:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$calculateFeatureImportances_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1023               // Field calculateFeatureImportances:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$fastMode_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1025               // Field fastMode:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$forceLoadBalance_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1027               // Field forceLoadBalance:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$replicateTrainingData_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1029               // Field replicateTrainingData:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$singleNodeMode_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1031               // Field singleNodeMode:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$shuffleTrainingData_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1033               // Field shuffleTrainingData:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$missingValuesHandling_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1035               // Field missingValuesHandling:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$sparse_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1037               // Field sparse:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$averageActivation_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1039               // Field averageActivation:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$sparsityBeta_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1041               // Field sparsityBeta:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$maxCategoricalFeatures_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1044               // Field maxCategoricalFeatures:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$reproducible_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1046               // Field reproducible:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$exportWeightsAndBiases_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1048               // Field exportWeightsAndBiases:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$miniBatchSize_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1050               // Field miniBatchSize:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$elasticAveraging_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1052               // Field elasticAveraging:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$elasticAveragingMovingRate_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1054               // Field elasticAveragingMovingRate:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$elasticAveragingRegularization_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1056               // Field elasticAveragingRegularization:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$modelId_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1059               // Field modelId:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$nfolds_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1061               // Field nfolds:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$keepCrossValidationModels_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1063               // Field keepCrossValidationModels:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$keepCrossValidationPredictions_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1065               // Field keepCrossValidationPredictions:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$keepCrossValidationFoldAssignment_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1067               // Field keepCrossValidationFoldAssignment:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$distribution_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1069               // Field distribution:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$tweediePower_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1071               // Field tweediePower:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$quantileAlpha_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1073               // Field quantileAlpha:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$huberAlpha_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1075               // Field huberAlpha:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$labelCol_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1077               // Field labelCol:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$weightCol_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1079               // Field weightCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$offsetCol_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1081               // Field offsetCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$foldCol_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1083               // Field foldCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$foldAssignment_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1085               // Field foldAssignment:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$categoricalEncoding_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1087               // Field categoricalEncoding:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$ignoreConstCols_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1089               // Field ignoreConstCols:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$scoreEachIteration_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1091               // Field scoreEachIteration:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$stoppingRounds_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1093               // Field stoppingRounds:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$maxRuntimeSecs_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1095               // Field maxRuntimeSecs:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$stoppingMetric_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1097               // Field stoppingMetric:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$stoppingTolerance_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1099               // Field stoppingTolerance:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$exportCheckpointsDir_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1101               // Field exportCheckpointsDir:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ODeepLearningParams$_setter_$aucType_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1103               // Field aucType:Lorg/apache/spark/ml/param/Param;
       5: return

  public ai.h2o.sparkling.ml.params.NullableStringArrayParam ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols();
    Code:
       0: aload_0
       1: getfield      #1197               // Field ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$HasIgnoredCols$_setter_$ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols_$eq(ai.h2o.sparkling.ml.params.NullableStringArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1197               // Field ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       5: return

  public ai.h2o.sparkling.ml.params.NullableMatrixArrayParam ai$h2o$sparkling$ml$params$HasInitialWeights$$initialWeights();
    Code:
       0: aload_0
       1: getfield      #1202               // Field ai$h2o$sparkling$ml$params$HasInitialWeights$$initialWeights:Lai/h2o/sparkling/ml/params/NullableMatrixArrayParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$HasInitialWeights$_setter_$ai$h2o$sparkling$ml$params$HasInitialWeights$$initialWeights_$eq(ai.h2o.sparkling.ml.params.NullableMatrixArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1202               // Field ai$h2o$sparkling$ml$params$HasInitialWeights$$initialWeights:Lai/h2o/sparkling/ml/params/NullableMatrixArrayParam;
       5: return

  public ai.h2o.sparkling.ml.params.NullableVectorArrayParam ai$h2o$sparkling$ml$params$HasInitialBiases$$initialBiases();
    Code:
       0: aload_0
       1: getfield      #1207               // Field ai$h2o$sparkling$ml$params$HasInitialBiases$$initialBiases:Lai/h2o/sparkling/ml/params/NullableVectorArrayParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$HasInitialBiases$_setter_$ai$h2o$sparkling$ml$params$HasInitialBiases$$initialBiases_$eq(ai.h2o.sparkling.ml.params.NullableVectorArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1207               // Field ai$h2o$sparkling$ml$params$HasInitialBiases$$initialBiases:Lai/h2o/sparkling/ml/params/NullableVectorArrayParam;
       5: return

  public java.lang.String uid();
    Code:
       0: aload_0
       1: getfield      #1211               // Field uid:Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.models.H2ODeepLearningMOJOModel fit(org.apache.spark.sql.Dataset<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1220               // Method ai/h2o/sparkling/ml/algos/H2OSupervisedAlgorithm.fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OSupervisedMOJOModel;
       5: checkcast     #1222               // class ai/h2o/sparkling/ml/models/H2ODeepLearningMOJOModel
       8: areturn

  public ai.h2o.sparkling.ml.algos.H2OSupervisedAlgorithmWithFoldColumn setFoldCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1226               // Method setFoldCol:(Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: checkcast     #5                  // class ai/h2o/sparkling/ml/algos/H2OSupervisedAlgorithmWithFoldColumn
       8: areturn

  public ai.h2o.sparkling.ml.algos.H2OSupervisedAlgorithm setOffsetCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1229               // Method setOffsetCol:(Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: checkcast     #1217               // class ai/h2o/sparkling/ml/algos/H2OSupervisedAlgorithm
       8: areturn

  public ai.h2o.sparkling.ml.algos.H2OSupervisedAlgorithm setWeightCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1231               // Method setWeightCol:(Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: checkcast     #1217               // class ai/h2o/sparkling/ml/algos/H2OSupervisedAlgorithm
       8: areturn

  public ai.h2o.sparkling.ml.algos.H2OSupervisedAlgorithm setLabelCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1233               // Method setLabelCol:(Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;
       5: checkcast     #1217               // class ai/h2o/sparkling/ml/algos/H2OSupervisedAlgorithm
       8: areturn

  public org.apache.spark.ml.Model fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1236               // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2ODeepLearningMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2OMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1236               // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2ODeepLearningMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2OAlgorithmMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1236               // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2ODeepLearningMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2OSupervisedMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1236               // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2ODeepLearningMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.algos.H2ODeepLearning(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1211               // Field uid:Ljava/lang/String;
       5: aload_0
       6: getstatic     #1245               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       9: ldc           #15                 // class hex/deeplearning/DeepLearningModel$DeepLearningParameters
      11: invokevirtual #1249               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      14: invokespecial #1252               // Method ai/h2o/sparkling/ml/algos/H2OSupervisedAlgorithmWithFoldColumn."<init>":(Lscala/reflect/ClassTag;)V
      17: aload_0
      18: invokestatic  #1256               // InterfaceMethod ai/h2o/sparkling/ml/params/HasInitialBiases.$init$:(Lai/h2o/sparkling/ml/params/HasInitialBiases;)V
      21: aload_0
      22: invokestatic  #1259               // InterfaceMethod ai/h2o/sparkling/ml/params/HasInitialWeights.$init$:(Lai/h2o/sparkling/ml/params/HasInitialWeights;)V
      25: aload_0
      26: invokestatic  #1262               // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.$init$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;)V
      29: aload_0
      30: invokestatic  #1265               // InterfaceMethod ai/h2o/sparkling/ml/params/H2ODeepLearningParams.$init$:(Lai/h2o/sparkling/ml/params/H2ODeepLearningParams;)V
      33: aload_0
      34: invokestatic  #1268               // InterfaceMethod ai/h2o/sparkling/ml/algos/DistributionBasedH2OTrainFramePreparation.$init$:(Lai/h2o/sparkling/ml/algos/DistributionBasedH2OTrainFramePreparation;)V
      37: return

  public ai.h2o.sparkling.ml.algos.H2ODeepLearning();
    Code:
       0: aload_0
       1: getstatic     #1274               // Field org/apache/spark/ml/util/Identifiable$.MODULE$:Lorg/apache/spark/ml/util/Identifiable$;
       4: ldc           #2                  // class ai/h2o/sparkling/ml/algos/H2ODeepLearning
       6: invokevirtual #1279               // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       9: invokevirtual #1283               // Method org/apache/spark/ml/util/Identifiable$.randomUID:(Ljava/lang/String;)Ljava/lang/String;
      12: invokespecial #1285               // Method "<init>":(Ljava/lang/String;)V
      15: return
}
