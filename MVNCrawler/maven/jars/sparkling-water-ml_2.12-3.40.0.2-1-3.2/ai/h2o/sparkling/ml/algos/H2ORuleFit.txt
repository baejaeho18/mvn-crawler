Compiled from "H2ORuleFit.scala"
public class ai.h2o.sparkling.ml.algos.H2ORuleFit extends ai.h2o.sparkling.ml.algos.H2OSupervisedAlgorithm<hex.rulefit.RuleFitModel$RuleFitParameters> implements ai.h2o.sparkling.ml.params.H2ORuleFitParams, ai.h2o.sparkling.ml.algos.DistributionBasedH2OTrainFramePreparation {
  private final java.lang.String uid;

  private final org.apache.spark.ml.param.LongParam seed;

  private final org.apache.spark.ml.param.Param<java.lang.String> algorithm;

  private final org.apache.spark.ml.param.IntParam minRuleLength;

  private final org.apache.spark.ml.param.IntParam maxRuleLength;

  private final org.apache.spark.ml.param.IntParam maxNumRules;

  private final org.apache.spark.ml.param.Param<java.lang.String> modelType;

  private final org.apache.spark.ml.param.IntParam ruleGenerationNtrees;

  private final org.apache.spark.ml.param.BooleanParam removeDuplicates;

  private final ai.h2o.sparkling.ml.params.NullableDoubleArrayParam lambdaValue;

  private final ai.h2o.sparkling.ml.params.NullableStringParam modelId;

  private final org.apache.spark.ml.param.Param<java.lang.String> distribution;

  private final org.apache.spark.ml.param.Param<java.lang.String> labelCol;

  private final ai.h2o.sparkling.ml.params.NullableStringParam weightCol;

  private final org.apache.spark.ml.param.IntParam maxCategoricalLevels;

  private final org.apache.spark.ml.param.Param<java.lang.String> aucType;

  private final ai.h2o.sparkling.ml.params.NullableStringArrayParam ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols;

  public static org.apache.spark.ml.util.MLReader<ai.h2o.sparkling.ml.algos.H2ORuleFit> read();
    Code:
       0: getstatic     #53                 // Field ai/h2o/sparkling/ml/algos/H2ORuleFit$.MODULE$:Lai/h2o/sparkling/ml/algos/H2ORuleFit$;
       3: invokevirtual #55                 // Method ai/h2o/sparkling/ml/algos/H2ORuleFit$.read:()Lorg/apache/spark/ml/util/MLReader;
       6: areturn

  public static java.lang.Object load(java.lang.String);
    Code:
       0: getstatic     #53                 // Field ai/h2o/sparkling/ml/algos/H2ORuleFit$.MODULE$:Lai/h2o/sparkling/ml/algos/H2ORuleFit$;
       3: aload_0
       4: invokevirtual #60                 // Method ai/h2o/sparkling/ml/algos/H2ORuleFit$.load:(Ljava/lang/String;)Ljava/lang/Object;
       7: areturn

  public void ai$h2o$sparkling$ml$algos$DistributionBasedH2OTrainFramePreparation$$super$prepareH2OTrainFrameForFitting(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #69                 // InterfaceMethod ai/h2o/sparkling/ml/algos/H2OTrainFramePreparation.prepareH2OTrainFrameForFitting$:(Lai/h2o/sparkling/ml/algos/H2OTrainFramePreparation;Lai/h2o/sparkling/H2OFrame;)V
       5: return

  public void prepareH2OTrainFrameForFitting(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #77                 // InterfaceMethod ai/h2o/sparkling/ml/algos/DistributionBasedH2OTrainFramePreparation.prepareH2OTrainFrameForFitting$:(Lai/h2o/sparkling/ml/algos/DistributionBasedH2OTrainFramePreparation;Lai/h2o/sparkling/H2OFrame;)V
       5: return

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2ORuleFitParams$$super$getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #86                 // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.getH2OAlgorithmParams$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2ORuleFitParams$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #94                 // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;)Lscala/collection/immutable/Map;
       4: areturn

  public scala.reflect.ClassTag<hex.rulefit.RuleFitModel$RuleFitParameters> paramTag();
    Code:
       0: aload_0
       1: invokestatic  #101                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.paramTag$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;)Lscala/reflect/ClassTag;
       4: areturn

  public long getSeed();
    Code:
       0: aload_0
       1: invokestatic  #107                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.getSeed$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;)J
       4: lreturn

  public java.lang.String getAlgorithm();
    Code:
       0: aload_0
       1: invokestatic  #113                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.getAlgorithm$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;)Ljava/lang/String;
       4: areturn

  public int getMinRuleLength();
    Code:
       0: aload_0
       1: invokestatic  #119                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.getMinRuleLength$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;)I
       4: ireturn

  public int getMaxRuleLength();
    Code:
       0: aload_0
       1: invokestatic  #123                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.getMaxRuleLength$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;)I
       4: ireturn

  public int getMaxNumRules();
    Code:
       0: aload_0
       1: invokestatic  #127                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.getMaxNumRules$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;)I
       4: ireturn

  public java.lang.String getModelType();
    Code:
       0: aload_0
       1: invokestatic  #131                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.getModelType$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;)Ljava/lang/String;
       4: areturn

  public int getRuleGenerationNtrees();
    Code:
       0: aload_0
       1: invokestatic  #135                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.getRuleGenerationNtrees$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;)I
       4: ireturn

  public boolean getRemoveDuplicates();
    Code:
       0: aload_0
       1: invokestatic  #141                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.getRemoveDuplicates$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;)Z
       4: ireturn

  public double[] getLambdaValue();
    Code:
       0: aload_0
       1: invokestatic  #147                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.getLambdaValue$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;)[D
       4: areturn

  public java.lang.String getModelId();
    Code:
       0: aload_0
       1: invokestatic  #151                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.getModelId$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getDistribution();
    Code:
       0: aload_0
       1: invokestatic  #155                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.getDistribution$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getLabelCol();
    Code:
       0: aload_0
       1: invokestatic  #159                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.getLabelCol$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getWeightCol();
    Code:
       0: aload_0
       1: invokestatic  #163                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.getWeightCol$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;)Ljava/lang/String;
       4: areturn

  public int getMaxCategoricalLevels();
    Code:
       0: aload_0
       1: invokestatic  #167                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.getMaxCategoricalLevels$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;)I
       4: ireturn

  public java.lang.String getAucType();
    Code:
       0: aload_0
       1: invokestatic  #171                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.getAucType$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;)Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.params.H2ORuleFitParams setSeed(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #178                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.setSeed$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;J)Lai/h2o/sparkling/ml/params/H2ORuleFitParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ORuleFitParams setAlgorithm(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #185                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.setAlgorithm$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ORuleFitParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ORuleFitParams setMinRuleLength(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #191                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.setMinRuleLength$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;I)Lai/h2o/sparkling/ml/params/H2ORuleFitParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ORuleFitParams setMaxRuleLength(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #196                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.setMaxRuleLength$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;I)Lai/h2o/sparkling/ml/params/H2ORuleFitParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ORuleFitParams setMaxNumRules(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #200                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.setMaxNumRules$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;I)Lai/h2o/sparkling/ml/params/H2ORuleFitParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ORuleFitParams setModelType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #204                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.setModelType$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ORuleFitParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ORuleFitParams setRuleGenerationNtrees(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #208                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.setRuleGenerationNtrees$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;I)Lai/h2o/sparkling/ml/params/H2ORuleFitParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ORuleFitParams setRemoveDuplicates(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #214                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.setRemoveDuplicates$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;Z)Lai/h2o/sparkling/ml/params/H2ORuleFitParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ORuleFitParams setLambdaValue(double[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #221                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.setLambdaValue$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;[D)Lai/h2o/sparkling/ml/params/H2ORuleFitParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ORuleFitParams setModelId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #226                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.setModelId$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ORuleFitParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ORuleFitParams setDistribution(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #230                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.setDistribution$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ORuleFitParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ORuleFitParams setLabelCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #234                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.setLabelCol$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ORuleFitParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ORuleFitParams setWeightCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #238                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.setWeightCol$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ORuleFitParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ORuleFitParams setMaxCategoricalLevels(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #242                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.setMaxCategoricalLevels$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;I)Lai/h2o/sparkling/ml/params/H2ORuleFitParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2ORuleFitParams setAucType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #246                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.setAucType$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ORuleFitParams;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #251                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.getH2OAlgorithmParams$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2ORuleFitParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #255                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.getH2ORuleFitParams$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.String> getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #260                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;)Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$HasIgnoredCols$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #264                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;)Lscala/collection/immutable/Map;
       4: areturn

  public java.lang.String[] getIgnoredCols();
    Code:
       0: aload_0
       1: invokestatic  #270                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.getIgnoredCols$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;)[Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.params.HasIgnoredCols setIgnoredCols(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #276                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.setIgnoredCols$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;[Ljava/lang/String;)Lai/h2o/sparkling/ml/params/HasIgnoredCols;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getIgnoredColsParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #282                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.getIgnoredColsParam$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public java.lang.String getOffsetCol();
    Code:
       0: aload_0
       1: invokestatic  #289                // InterfaceMethod ai/h2o/sparkling/ml/params/HasUnsupportedOffsetCol.getOffsetCol$:(Lai/h2o/sparkling/ml/params/HasUnsupportedOffsetCol;)Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.params.HasUnsupportedOffsetCol setOffsetCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #295                // InterfaceMethod ai/h2o/sparkling/ml/params/HasUnsupportedOffsetCol.setOffsetCol$:(Lai/h2o/sparkling/ml/params/HasUnsupportedOffsetCol;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/HasUnsupportedOffsetCol;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getUnsupportedOffsetColParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #300                // InterfaceMethod ai/h2o/sparkling/ml/params/HasUnsupportedOffsetCol.getUnsupportedOffsetColParam$:(Lai/h2o/sparkling/ml/params/HasUnsupportedOffsetCol;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public org.apache.spark.ml.param.LongParam seed();
    Code:
       0: aload_0
       1: getfield      #303                // Field seed:Lorg/apache/spark/ml/param/LongParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> algorithm();
    Code:
       0: aload_0
       1: getfield      #307                // Field algorithm:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.IntParam minRuleLength();
    Code:
       0: aload_0
       1: getfield      #310                // Field minRuleLength:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam maxRuleLength();
    Code:
       0: aload_0
       1: getfield      #312                // Field maxRuleLength:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam maxNumRules();
    Code:
       0: aload_0
       1: getfield      #314                // Field maxNumRules:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> modelType();
    Code:
       0: aload_0
       1: getfield      #316                // Field modelType:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.IntParam ruleGenerationNtrees();
    Code:
       0: aload_0
       1: getfield      #318                // Field ruleGenerationNtrees:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam removeDuplicates();
    Code:
       0: aload_0
       1: getfield      #321                // Field removeDuplicates:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableDoubleArrayParam lambdaValue();
    Code:
       0: aload_0
       1: getfield      #324                // Field lambdaValue:Lai/h2o/sparkling/ml/params/NullableDoubleArrayParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam modelId();
    Code:
       0: aload_0
       1: getfield      #327                // Field modelId:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> distribution();
    Code:
       0: aload_0
       1: getfield      #329                // Field distribution:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> labelCol();
    Code:
       0: aload_0
       1: getfield      #331                // Field labelCol:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam weightCol();
    Code:
       0: aload_0
       1: getfield      #333                // Field weightCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam maxCategoricalLevels();
    Code:
       0: aload_0
       1: getfield      #335                // Field maxCategoricalLevels:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> aucType();
    Code:
       0: aload_0
       1: getfield      #337                // Field aucType:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public void ai$h2o$sparkling$ml$params$H2ORuleFitParams$_setter_$seed_$eq(org.apache.spark.ml.param.LongParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #303                // Field seed:Lorg/apache/spark/ml/param/LongParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ORuleFitParams$_setter_$algorithm_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #307                // Field algorithm:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ORuleFitParams$_setter_$minRuleLength_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #310                // Field minRuleLength:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ORuleFitParams$_setter_$maxRuleLength_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #312                // Field maxRuleLength:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ORuleFitParams$_setter_$maxNumRules_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #314                // Field maxNumRules:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ORuleFitParams$_setter_$modelType_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #316                // Field modelType:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ORuleFitParams$_setter_$ruleGenerationNtrees_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #318                // Field ruleGenerationNtrees:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ORuleFitParams$_setter_$removeDuplicates_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #321                // Field removeDuplicates:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ORuleFitParams$_setter_$lambdaValue_$eq(ai.h2o.sparkling.ml.params.NullableDoubleArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #324                // Field lambdaValue:Lai/h2o/sparkling/ml/params/NullableDoubleArrayParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ORuleFitParams$_setter_$modelId_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #327                // Field modelId:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ORuleFitParams$_setter_$distribution_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #329                // Field distribution:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ORuleFitParams$_setter_$labelCol_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #331                // Field labelCol:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ORuleFitParams$_setter_$weightCol_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #333                // Field weightCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ORuleFitParams$_setter_$maxCategoricalLevels_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #335                // Field maxCategoricalLevels:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2ORuleFitParams$_setter_$aucType_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #337                // Field aucType:Lorg/apache/spark/ml/param/Param;
       5: return

  public ai.h2o.sparkling.ml.params.NullableStringArrayParam ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols();
    Code:
       0: aload_0
       1: getfield      #363                // Field ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$HasIgnoredCols$_setter_$ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols_$eq(ai.h2o.sparkling.ml.params.NullableStringArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #363                // Field ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       5: return

  public java.lang.String uid();
    Code:
       0: aload_0
       1: getfield      #367                // Field uid:Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.models.H2ORuleFitMOJOModel fit(org.apache.spark.sql.Dataset<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #374                // Method ai/h2o/sparkling/ml/algos/H2OSupervisedAlgorithm.fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OSupervisedMOJOModel;
       5: checkcast     #376                // class ai/h2o/sparkling/ml/models/H2ORuleFitMOJOModel
       8: areturn

  public ai.h2o.sparkling.ml.algos.H2OSupervisedAlgorithm setOffsetCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #380                // Method setOffsetCol:(Ljava/lang/String;)Lai/h2o/sparkling/ml/params/HasUnsupportedOffsetCol;
       5: checkcast     #5                  // class ai/h2o/sparkling/ml/algos/H2OSupervisedAlgorithm
       8: areturn

  public ai.h2o.sparkling.ml.algos.H2OSupervisedAlgorithm setWeightCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #382                // Method setWeightCol:(Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ORuleFitParams;
       5: checkcast     #5                  // class ai/h2o/sparkling/ml/algos/H2OSupervisedAlgorithm
       8: areturn

  public ai.h2o.sparkling.ml.algos.H2OSupervisedAlgorithm setLabelCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #384                // Method setLabelCol:(Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2ORuleFitParams;
       5: checkcast     #5                  // class ai/h2o/sparkling/ml/algos/H2OSupervisedAlgorithm
       8: areturn

  public org.apache.spark.ml.Model fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #387                // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2ORuleFitMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2OMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #387                // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2ORuleFitMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2OAlgorithmMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #387                // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2ORuleFitMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2OSupervisedMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #387                // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2ORuleFitMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.algos.H2ORuleFit(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #367                // Field uid:Ljava/lang/String;
       5: aload_0
       6: getstatic     #396                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       9: ldc           #15                 // class hex/rulefit/RuleFitModel$RuleFitParameters
      11: invokevirtual #400                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      14: invokespecial #403                // Method ai/h2o/sparkling/ml/algos/H2OSupervisedAlgorithm."<init>":(Lscala/reflect/ClassTag;)V
      17: aload_0
      18: invokestatic  #407                // InterfaceMethod ai/h2o/sparkling/ml/params/HasUnsupportedOffsetCol.$init$:(Lai/h2o/sparkling/ml/params/HasUnsupportedOffsetCol;)V
      21: aload_0
      22: invokestatic  #410                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.$init$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;)V
      25: aload_0
      26: invokestatic  #413                // InterfaceMethod ai/h2o/sparkling/ml/params/H2ORuleFitParams.$init$:(Lai/h2o/sparkling/ml/params/H2ORuleFitParams;)V
      29: aload_0
      30: invokestatic  #416                // InterfaceMethod ai/h2o/sparkling/ml/algos/DistributionBasedH2OTrainFramePreparation.$init$:(Lai/h2o/sparkling/ml/algos/DistributionBasedH2OTrainFramePreparation;)V
      33: return

  public ai.h2o.sparkling.ml.algos.H2ORuleFit();
    Code:
       0: aload_0
       1: getstatic     #422                // Field org/apache/spark/ml/util/Identifiable$.MODULE$:Lorg/apache/spark/ml/util/Identifiable$;
       4: ldc           #2                  // class ai/h2o/sparkling/ml/algos/H2ORuleFit
       6: invokevirtual #427                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       9: invokevirtual #431                // Method org/apache/spark/ml/util/Identifiable$.randomUID:(Ljava/lang/String;)Ljava/lang/String;
      12: invokespecial #433                // Method "<init>":(Ljava/lang/String;)V
      15: return
}
