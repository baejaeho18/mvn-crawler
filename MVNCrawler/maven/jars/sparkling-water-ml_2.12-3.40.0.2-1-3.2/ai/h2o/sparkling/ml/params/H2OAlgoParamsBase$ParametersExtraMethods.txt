Compiled from "H2OAlgoParamsBase.scala"
public class ai.h2o.sparkling.ml.params.H2OAlgoParamsBase$ParametersExtraMethods {
  private final scala.collection.immutable.Map<java.lang.String, java.lang.Object> parameters;

  public final ai.h2o.sparkling.ml.params.H2OAlgoParamsBase $outer;

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> parameters();
    Code:
       0: aload_0
       1: getfield      #30                 // Field parameters:Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> $plus$plus$plus(scala.collection.immutable.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method parameters:()Lscala/collection/immutable/Map;
       4: invokeinterface #44,  1           // InterfaceMethod scala/collection/immutable/Map.keySet:()Lscala/collection/immutable/Set;
       9: aload_1
      10: invokeinterface #44,  1           // InterfaceMethod scala/collection/immutable/Map.keySet:()Lscala/collection/immutable/Set;
      15: invokeinterface #50,  2           // InterfaceMethod scala/collection/immutable/Set.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/Set;
      20: checkcast     #46                 // class scala/collection/immutable/Set
      23: astore_2
      24: aload_2
      25: aload_0
      26: aload_1
      27: invokedynamic #74,  0             // InvokeDynamic #0:apply:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase$ParametersExtraMethods;Lscala/collection/immutable/Map;)Lscala/Function1;
      32: getstatic     #80                 // Field scala/collection/immutable/Set$.MODULE$:Lscala/collection/immutable/Set$;
      35: invokevirtual #84                 // Method scala/collection/immutable/Set$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      38: invokeinterface #88,  3           // InterfaceMethod scala/collection/immutable/Set.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      43: checkcast     #90                 // class scala/collection/TraversableOnce
      46: getstatic     #95                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      49: invokevirtual #99                 // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
      52: invokeinterface #103,  2          // InterfaceMethod scala/collection/TraversableOnce.toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
      57: areturn

  public ai.h2o.sparkling.ml.params.H2OAlgoParamsBase ai$h2o$sparkling$ml$params$H2OAlgoParamsBase$ParametersExtraMethods$$$outer();
    Code:
       0: aload_0
       1: getfield      #109                // Field $outer:Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;
       4: areturn

  public static final scala.runtime.Null$ $anonfun$$plus$plus$plus$2();
    Code:
       0: aconst_null
       1: areturn

  public static final scala.runtime.Null$ $anonfun$$plus$plus$plus$3();
    Code:
       0: aconst_null
       1: areturn

  public static final scala.Tuple2 $anonfun$$plus$plus$plus$1(ai.h2o.sparkling.ml.params.H2OAlgoParamsBase$ParametersExtraMethods, scala.collection.immutable.Map, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method parameters:()Lscala/collection/immutable/Map;
       4: aload_2
       5: invokedynamic #124,  0            // InvokeDynamic #1:apply:()Lscala/Function0;
      10: invokeinterface #128,  3          // InterfaceMethod scala/collection/immutable/Map.getOrElse:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      15: astore        4
      17: aload_1
      18: aload_2
      19: invokedynamic #132,  0            // InvokeDynamic #2:apply:()Lscala/Function0;
      24: invokeinterface #128,  3          // InterfaceMethod scala/collection/immutable/Map.getOrElse:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
      29: astore        5
      31: new           #134                // class scala/Tuple2
      34: dup
      35: aload         4
      37: aload         5
      39: invokespecial #138                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      42: astore        7
      44: aload         7
      46: ifnull        77
      49: aload         7
      51: invokevirtual #141                // Method scala/Tuple2._1:()Ljava/lang/Object;
      54: astore        8
      56: aload         7
      58: invokevirtual #144                // Method scala/Tuple2._2:()Ljava/lang/Object;
      61: astore        9
      63: aload         9
      65: ifnonnull     74
      68: aload         8
      70: astore_3
      71: goto          234
      74: goto          80
      77: goto          80
      80: aload         7
      82: ifnull        113
      85: aload         7
      87: invokevirtual #141                // Method scala/Tuple2._1:()Ljava/lang/Object;
      90: astore        10
      92: aload         7
      94: invokevirtual #144                // Method scala/Tuple2._2:()Ljava/lang/Object;
      97: astore        11
      99: aload         10
     101: ifnonnull     110
     104: aload         11
     106: astore_3
     107: goto          234
     110: goto          116
     113: goto          116
     116: aload         7
     118: ifnull        221
     121: aload         7
     123: invokevirtual #141                // Method scala/Tuple2._1:()Ljava/lang/Object;
     126: astore        12
     128: aload         7
     130: invokevirtual #144                // Method scala/Tuple2._2:()Ljava/lang/Object;
     133: astore        13
     135: getstatic     #149                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
     138: aload         12
     140: iconst_1
     141: invokevirtual #153                // Method scala/runtime/ScalaRunTime$.isArray:(Ljava/lang/Object;I)Z
     144: ifeq          218
     147: aload         12
     149: astore        14
     151: getstatic     #149                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
     154: aload         13
     156: iconst_1
     157: invokevirtual #153                // Method scala/runtime/ScalaRunTime$.isArray:(Ljava/lang/Object;I)Z
     160: ifeq          215
     163: aload         13
     165: astore        15
     167: getstatic     #95                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     170: getstatic     #95                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     173: aload         14
     175: invokevirtual #157                // Method scala/Predef$.genericArrayOps:(Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
     178: getstatic     #95                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     181: aload         15
     183: invokevirtual #157                // Method scala/Predef$.genericArrayOps:(Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
     186: getstatic     #162                // Field scala/Array$.MODULE$:Lscala/Array$;
     189: getstatic     #167                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     192: invokevirtual #171                // Method scala/reflect/ClassTag$.Any:()Lscala/reflect/ClassTag;
     195: invokevirtual #174                // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
     198: invokeinterface #179,  3          // InterfaceMethod scala/collection/mutable/ArrayOps.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     203: invokevirtual #157                // Method scala/Predef$.genericArrayOps:(Ljava/lang/Object;)Lscala/collection/mutable/ArrayOps;
     206: invokeinterface #182,  1          // InterfaceMethod scala/collection/mutable/ArrayOps.distinct:()Ljava/lang/Object;
     211: astore_3
     212: goto          234
     215: goto          224
     218: goto          224
     221: goto          224
     224: new           #184                // class java/lang/IllegalStateException
     227: dup
     228: ldc           #186                // String Merge operation on non-array types is not supported.
     230: invokespecial #189                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     233: athrow
     234: aload_3
     235: astore        6
     237: getstatic     #192                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     240: getstatic     #95                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     243: aload_2
     244: invokevirtual #195                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     247: aload         6
     249: invokevirtual #199                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     252: areturn

  public ai.h2o.sparkling.ml.params.H2OAlgoParamsBase$ParametersExtraMethods(scala.collection.immutable.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #30                 // Field parameters:Lscala/collection/immutable/Map;
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: athrow
      11: aload_0
      12: aload_1
      13: putfield      #109                // Field $outer:Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;
      16: aload_0
      17: invokespecial #213                // Method java/lang/Object."<init>":()V
      20: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #225,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
