Compiled from "H2OWord2VecParams.scala"
public interface ai.h2o.sparkling.ml.params.H2OWord2VecParams extends ai.h2o.sparkling.ml.params.H2OAlgoParamsBase {
  public abstract void ai$h2o$sparkling$ml$params$H2OWord2VecParams$_setter_$vecSize_$eq(org.apache.spark.ml.param.IntParam);

  public abstract void ai$h2o$sparkling$ml$params$H2OWord2VecParams$_setter_$windowSize_$eq(org.apache.spark.ml.param.IntParam);

  public abstract void ai$h2o$sparkling$ml$params$H2OWord2VecParams$_setter_$sentSampleRate_$eq(org.apache.spark.ml.param.FloatParam);

  public abstract void ai$h2o$sparkling$ml$params$H2OWord2VecParams$_setter_$normModel_$eq(org.apache.spark.ml.param.Param<java.lang.String>);

  public abstract void ai$h2o$sparkling$ml$params$H2OWord2VecParams$_setter_$epochs_$eq(org.apache.spark.ml.param.IntParam);

  public abstract void ai$h2o$sparkling$ml$params$H2OWord2VecParams$_setter_$minWordFreq_$eq(org.apache.spark.ml.param.IntParam);

  public abstract void ai$h2o$sparkling$ml$params$H2OWord2VecParams$_setter_$initLearningRate_$eq(org.apache.spark.ml.param.FloatParam);

  public abstract void ai$h2o$sparkling$ml$params$H2OWord2VecParams$_setter_$wordModel_$eq(org.apache.spark.ml.param.Param<java.lang.String>);

  public abstract void ai$h2o$sparkling$ml$params$H2OWord2VecParams$_setter_$modelId_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);

  public abstract void ai$h2o$sparkling$ml$params$H2OWord2VecParams$_setter_$maxRuntimeSecs_$eq(org.apache.spark.ml.param.DoubleParam);

  public abstract void ai$h2o$sparkling$ml$params$H2OWord2VecParams$_setter_$exportCheckpointsDir_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);

  public abstract scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OWord2VecParams$$super$getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);

  public abstract scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OWord2VecParams$$super$getSWtoH2OParamNameMap();

  public static scala.reflect.ClassTag paramTag$(ai.h2o.sparkling.ml.params.H2OWord2VecParams);
    Code:
       0: aload_0
       1: invokespecial #58                 // InterfaceMethod paramTag:()Lscala/reflect/ClassTag;
       4: areturn

  public default scala.reflect.ClassTag<hex.word2vec.Word2VecModel$Word2VecParameters> paramTag();
    Code:
       0: getstatic     #66                 // Field scala/reflect/package$.MODULE$:Lscala/reflect/package$;
       3: getstatic     #71                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       6: ldc           #20                 // class hex/word2vec/Word2VecModel$Word2VecParameters
       8: invokevirtual #75                 // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      11: invokevirtual #79                 // Method scala/reflect/package$.classTag:(Lscala/reflect/ClassTag;)Lscala/reflect/ClassTag;
      14: areturn

  public abstract org.apache.spark.ml.param.IntParam vecSize();

  public abstract org.apache.spark.ml.param.IntParam windowSize();

  public abstract org.apache.spark.ml.param.FloatParam sentSampleRate();

  public abstract org.apache.spark.ml.param.Param<java.lang.String> normModel();

  public abstract org.apache.spark.ml.param.IntParam epochs();

  public abstract org.apache.spark.ml.param.IntParam minWordFreq();

  public abstract org.apache.spark.ml.param.FloatParam initLearningRate();

  public abstract org.apache.spark.ml.param.Param<java.lang.String> wordModel();

  public abstract ai.h2o.sparkling.ml.params.NullableStringParam modelId();

  public abstract org.apache.spark.ml.param.DoubleParam maxRuntimeSecs();

  public abstract ai.h2o.sparkling.ml.params.NullableStringParam exportCheckpointsDir();

  public static int getVecSize$(ai.h2o.sparkling.ml.params.H2OWord2VecParams);
    Code:
       0: aload_0
       1: invokespecial #103                // InterfaceMethod getVecSize:()I
       4: ireturn

  public default int getVecSize();
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #105,  1          // InterfaceMethod vecSize:()Lorg/apache/spark/ml/param/IntParam;
       7: invokeinterface #109,  2          // InterfaceMethod $:(Lorg/apache/spark/ml/param/Param;)Ljava/lang/Object;
      12: invokestatic  #115                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      15: ireturn

  public static int getWindowSize$(ai.h2o.sparkling.ml.params.H2OWord2VecParams);
    Code:
       0: aload_0
       1: invokespecial #119                // InterfaceMethod getWindowSize:()I
       4: ireturn

  public default int getWindowSize();
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #121,  1          // InterfaceMethod windowSize:()Lorg/apache/spark/ml/param/IntParam;
       7: invokeinterface #109,  2          // InterfaceMethod $:(Lorg/apache/spark/ml/param/Param;)Ljava/lang/Object;
      12: invokestatic  #115                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      15: ireturn

  public static float getSentSampleRate$(ai.h2o.sparkling.ml.params.H2OWord2VecParams);
    Code:
       0: aload_0
       1: invokespecial #127                // InterfaceMethod getSentSampleRate:()F
       4: freturn

  public default float getSentSampleRate();
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #129,  1          // InterfaceMethod sentSampleRate:()Lorg/apache/spark/ml/param/FloatParam;
       7: invokeinterface #109,  2          // InterfaceMethod $:(Lorg/apache/spark/ml/param/Param;)Ljava/lang/Object;
      12: invokestatic  #133                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
      15: freturn

  public static java.lang.String getNormModel$(ai.h2o.sparkling.ml.params.H2OWord2VecParams);
    Code:
       0: aload_0
       1: invokespecial #139                // InterfaceMethod getNormModel:()Ljava/lang/String;
       4: areturn

  public default java.lang.String getNormModel();
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #141,  1          // InterfaceMethod normModel:()Lorg/apache/spark/ml/param/Param;
       7: invokeinterface #109,  2          // InterfaceMethod $:(Lorg/apache/spark/ml/param/Param;)Ljava/lang/Object;
      12: checkcast     #143                // class java/lang/String
      15: areturn

  public static int getEpochs$(ai.h2o.sparkling.ml.params.H2OWord2VecParams);
    Code:
       0: aload_0
       1: invokespecial #147                // InterfaceMethod getEpochs:()I
       4: ireturn

  public default int getEpochs();
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #149,  1          // InterfaceMethod epochs:()Lorg/apache/spark/ml/param/IntParam;
       7: invokeinterface #109,  2          // InterfaceMethod $:(Lorg/apache/spark/ml/param/Param;)Ljava/lang/Object;
      12: invokestatic  #115                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      15: ireturn

  public static int getMinWordFreq$(ai.h2o.sparkling.ml.params.H2OWord2VecParams);
    Code:
       0: aload_0
       1: invokespecial #153                // InterfaceMethod getMinWordFreq:()I
       4: ireturn

  public default int getMinWordFreq();
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #155,  1          // InterfaceMethod minWordFreq:()Lorg/apache/spark/ml/param/IntParam;
       7: invokeinterface #109,  2          // InterfaceMethod $:(Lorg/apache/spark/ml/param/Param;)Ljava/lang/Object;
      12: invokestatic  #115                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      15: ireturn

  public static float getInitLearningRate$(ai.h2o.sparkling.ml.params.H2OWord2VecParams);
    Code:
       0: aload_0
       1: invokespecial #159                // InterfaceMethod getInitLearningRate:()F
       4: freturn

  public default float getInitLearningRate();
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #161,  1          // InterfaceMethod initLearningRate:()Lorg/apache/spark/ml/param/FloatParam;
       7: invokeinterface #109,  2          // InterfaceMethod $:(Lorg/apache/spark/ml/param/Param;)Ljava/lang/Object;
      12: invokestatic  #133                // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
      15: freturn

  public static java.lang.String getWordModel$(ai.h2o.sparkling.ml.params.H2OWord2VecParams);
    Code:
       0: aload_0
       1: invokespecial #165                // InterfaceMethod getWordModel:()Ljava/lang/String;
       4: areturn

  public default java.lang.String getWordModel();
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #167,  1          // InterfaceMethod wordModel:()Lorg/apache/spark/ml/param/Param;
       7: invokeinterface #109,  2          // InterfaceMethod $:(Lorg/apache/spark/ml/param/Param;)Ljava/lang/Object;
      12: checkcast     #143                // class java/lang/String
      15: areturn

  public static java.lang.String getModelId$(ai.h2o.sparkling.ml.params.H2OWord2VecParams);
    Code:
       0: aload_0
       1: invokespecial #171                // InterfaceMethod getModelId:()Ljava/lang/String;
       4: areturn

  public default java.lang.String getModelId();
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #173,  1          // InterfaceMethod modelId:()Lai/h2o/sparkling/ml/params/NullableStringParam;
       7: invokeinterface #109,  2          // InterfaceMethod $:(Lorg/apache/spark/ml/param/Param;)Ljava/lang/Object;
      12: checkcast     #143                // class java/lang/String
      15: areturn

  public static double getMaxRuntimeSecs$(ai.h2o.sparkling.ml.params.H2OWord2VecParams);
    Code:
       0: aload_0
       1: invokespecial #179                // InterfaceMethod getMaxRuntimeSecs:()D
       4: dreturn

  public default double getMaxRuntimeSecs();
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #181,  1          // InterfaceMethod maxRuntimeSecs:()Lorg/apache/spark/ml/param/DoubleParam;
       7: invokeinterface #109,  2          // InterfaceMethod $:(Lorg/apache/spark/ml/param/Param;)Ljava/lang/Object;
      12: invokestatic  #185                // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
      15: dreturn

  public static java.lang.String getExportCheckpointsDir$(ai.h2o.sparkling.ml.params.H2OWord2VecParams);
    Code:
       0: aload_0
       1: invokespecial #189                // InterfaceMethod getExportCheckpointsDir:()Ljava/lang/String;
       4: areturn

  public default java.lang.String getExportCheckpointsDir();
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #191,  1          // InterfaceMethod exportCheckpointsDir:()Lai/h2o/sparkling/ml/params/NullableStringParam;
       7: invokeinterface #109,  2          // InterfaceMethod $:(Lorg/apache/spark/ml/param/Param;)Ljava/lang/Object;
      12: checkcast     #143                // class java/lang/String
      15: areturn

  public static ai.h2o.sparkling.ml.params.H2OWord2VecParams setVecSize$(ai.h2o.sparkling.ml.params.H2OWord2VecParams, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #198                // InterfaceMethod setVecSize:(I)Lai/h2o/sparkling/ml/params/H2OWord2VecParams;
       5: areturn

  public default ai.h2o.sparkling.ml.params.H2OWord2VecParams setVecSize(int);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #105,  1          // InterfaceMethod vecSize:()Lorg/apache/spark/ml/param/IntParam;
       7: iload_1
       8: invokestatic  #203                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      11: invokeinterface #207,  3          // InterfaceMethod set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      16: checkcast     #2                  // class ai/h2o/sparkling/ml/params/H2OWord2VecParams
      19: areturn

  public static ai.h2o.sparkling.ml.params.H2OWord2VecParams setWindowSize$(ai.h2o.sparkling.ml.params.H2OWord2VecParams, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #211                // InterfaceMethod setWindowSize:(I)Lai/h2o/sparkling/ml/params/H2OWord2VecParams;
       5: areturn

  public default ai.h2o.sparkling.ml.params.H2OWord2VecParams setWindowSize(int);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #121,  1          // InterfaceMethod windowSize:()Lorg/apache/spark/ml/param/IntParam;
       7: iload_1
       8: invokestatic  #203                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      11: invokeinterface #207,  3          // InterfaceMethod set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      16: checkcast     #2                  // class ai/h2o/sparkling/ml/params/H2OWord2VecParams
      19: areturn

  public static ai.h2o.sparkling.ml.params.H2OWord2VecParams setSentSampleRate$(ai.h2o.sparkling.ml.params.H2OWord2VecParams, float);
    Code:
       0: aload_0
       1: fload_1
       2: invokespecial #217                // InterfaceMethod setSentSampleRate:(F)Lai/h2o/sparkling/ml/params/H2OWord2VecParams;
       5: areturn

  public default ai.h2o.sparkling.ml.params.H2OWord2VecParams setSentSampleRate(float);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #129,  1          // InterfaceMethod sentSampleRate:()Lorg/apache/spark/ml/param/FloatParam;
       7: fload_1
       8: invokestatic  #222                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      11: invokeinterface #207,  3          // InterfaceMethod set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      16: checkcast     #2                  // class ai/h2o/sparkling/ml/params/H2OWord2VecParams
      19: areturn

  public static ai.h2o.sparkling.ml.params.H2OWord2VecParams setNormModel$(ai.h2o.sparkling.ml.params.H2OWord2VecParams, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #228                // InterfaceMethod setNormModel:(Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OWord2VecParams;
       5: areturn

  public default ai.h2o.sparkling.ml.params.H2OWord2VecParams setNormModel(java.lang.String);
    Code:
       0: getstatic     #234                // Field ai/h2o/sparkling/ml/params/EnumParamValidator$.MODULE$:Lai/h2o/sparkling/ml/params/EnumParamValidator$;
       3: aload_1
       4: getstatic     #71                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       7: ldc           #12                 // class hex/word2vec/Word2Vec$NormModel
       9: invokevirtual #75                 // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      12: invokevirtual #238                // Method ai/h2o/sparkling/ml/params/EnumParamValidator$.getValidatedEnumValue:(Ljava/lang/String;Lscala/reflect/ClassTag;)Ljava/lang/String;
      15: astore_2
      16: aload_0
      17: aload_0
      18: invokeinterface #141,  1          // InterfaceMethod normModel:()Lorg/apache/spark/ml/param/Param;
      23: aload_2
      24: invokeinterface #207,  3          // InterfaceMethod set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      29: checkcast     #2                  // class ai/h2o/sparkling/ml/params/H2OWord2VecParams
      32: areturn

  public static ai.h2o.sparkling.ml.params.H2OWord2VecParams setEpochs$(ai.h2o.sparkling.ml.params.H2OWord2VecParams, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #243                // InterfaceMethod setEpochs:(I)Lai/h2o/sparkling/ml/params/H2OWord2VecParams;
       5: areturn

  public default ai.h2o.sparkling.ml.params.H2OWord2VecParams setEpochs(int);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #149,  1          // InterfaceMethod epochs:()Lorg/apache/spark/ml/param/IntParam;
       7: iload_1
       8: invokestatic  #203                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      11: invokeinterface #207,  3          // InterfaceMethod set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      16: checkcast     #2                  // class ai/h2o/sparkling/ml/params/H2OWord2VecParams
      19: areturn

  public static ai.h2o.sparkling.ml.params.H2OWord2VecParams setMinWordFreq$(ai.h2o.sparkling.ml.params.H2OWord2VecParams, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #247                // InterfaceMethod setMinWordFreq:(I)Lai/h2o/sparkling/ml/params/H2OWord2VecParams;
       5: areturn

  public default ai.h2o.sparkling.ml.params.H2OWord2VecParams setMinWordFreq(int);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #155,  1          // InterfaceMethod minWordFreq:()Lorg/apache/spark/ml/param/IntParam;
       7: iload_1
       8: invokestatic  #203                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      11: invokeinterface #207,  3          // InterfaceMethod set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      16: checkcast     #2                  // class ai/h2o/sparkling/ml/params/H2OWord2VecParams
      19: areturn

  public static ai.h2o.sparkling.ml.params.H2OWord2VecParams setInitLearningRate$(ai.h2o.sparkling.ml.params.H2OWord2VecParams, float);
    Code:
       0: aload_0
       1: fload_1
       2: invokespecial #251                // InterfaceMethod setInitLearningRate:(F)Lai/h2o/sparkling/ml/params/H2OWord2VecParams;
       5: areturn

  public default ai.h2o.sparkling.ml.params.H2OWord2VecParams setInitLearningRate(float);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #161,  1          // InterfaceMethod initLearningRate:()Lorg/apache/spark/ml/param/FloatParam;
       7: fload_1
       8: invokestatic  #222                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      11: invokeinterface #207,  3          // InterfaceMethod set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      16: checkcast     #2                  // class ai/h2o/sparkling/ml/params/H2OWord2VecParams
      19: areturn

  public static ai.h2o.sparkling.ml.params.H2OWord2VecParams setWordModel$(ai.h2o.sparkling.ml.params.H2OWord2VecParams, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #255                // InterfaceMethod setWordModel:(Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OWord2VecParams;
       5: areturn

  public default ai.h2o.sparkling.ml.params.H2OWord2VecParams setWordModel(java.lang.String);
    Code:
       0: getstatic     #234                // Field ai/h2o/sparkling/ml/params/EnumParamValidator$.MODULE$:Lai/h2o/sparkling/ml/params/EnumParamValidator$;
       3: aload_1
       4: getstatic     #71                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       7: ldc           #17                 // class hex/word2vec/Word2Vec$WordModel
       9: invokevirtual #75                 // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      12: invokevirtual #238                // Method ai/h2o/sparkling/ml/params/EnumParamValidator$.getValidatedEnumValue:(Ljava/lang/String;Lscala/reflect/ClassTag;)Ljava/lang/String;
      15: astore_2
      16: aload_0
      17: aload_0
      18: invokeinterface #167,  1          // InterfaceMethod wordModel:()Lorg/apache/spark/ml/param/Param;
      23: aload_2
      24: invokeinterface #207,  3          // InterfaceMethod set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      29: checkcast     #2                  // class ai/h2o/sparkling/ml/params/H2OWord2VecParams
      32: areturn

  public static ai.h2o.sparkling.ml.params.H2OWord2VecParams setModelId$(ai.h2o.sparkling.ml.params.H2OWord2VecParams, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #259                // InterfaceMethod setModelId:(Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OWord2VecParams;
       5: areturn

  public default ai.h2o.sparkling.ml.params.H2OWord2VecParams setModelId(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #173,  1          // InterfaceMethod modelId:()Lai/h2o/sparkling/ml/params/NullableStringParam;
       7: aload_1
       8: invokeinterface #207,  3          // InterfaceMethod set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      13: checkcast     #2                  // class ai/h2o/sparkling/ml/params/H2OWord2VecParams
      16: areturn

  public static ai.h2o.sparkling.ml.params.H2OWord2VecParams setMaxRuntimeSecs$(ai.h2o.sparkling.ml.params.H2OWord2VecParams, double);
    Code:
       0: aload_0
       1: dload_1
       2: invokespecial #265                // InterfaceMethod setMaxRuntimeSecs:(D)Lai/h2o/sparkling/ml/params/H2OWord2VecParams;
       5: areturn

  public default ai.h2o.sparkling.ml.params.H2OWord2VecParams setMaxRuntimeSecs(double);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #181,  1          // InterfaceMethod maxRuntimeSecs:()Lorg/apache/spark/ml/param/DoubleParam;
       7: dload_1
       8: invokestatic  #270                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
      11: invokeinterface #207,  3          // InterfaceMethod set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      16: checkcast     #2                  // class ai/h2o/sparkling/ml/params/H2OWord2VecParams
      19: areturn

  public static ai.h2o.sparkling.ml.params.H2OWord2VecParams setExportCheckpointsDir$(ai.h2o.sparkling.ml.params.H2OWord2VecParams, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #274                // InterfaceMethod setExportCheckpointsDir:(Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OWord2VecParams;
       5: areturn

  public default ai.h2o.sparkling.ml.params.H2OWord2VecParams setExportCheckpointsDir(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #191,  1          // InterfaceMethod exportCheckpointsDir:()Lai/h2o/sparkling/ml/params/NullableStringParam;
       7: aload_1
       8: invokeinterface #207,  3          // InterfaceMethod set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      13: checkcast     #2                  // class ai/h2o/sparkling/ml/params/H2OWord2VecParams
      16: areturn

  public static scala.collection.immutable.Map getH2OAlgorithmParams$(ai.h2o.sparkling.ml.params.H2OWord2VecParams, ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #279                // InterfaceMethod getH2OAlgorithmParams:(Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public default scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #283,  2          // InterfaceMethod ai$h2o$sparkling$ml$params$H2OWord2VecParams$$super$getH2OAlgorithmParams:(Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       7: aload_0
       8: aload_1
       9: invokeinterface #286,  2          // InterfaceMethod getH2OWord2VecParams:(Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
      14: invokeinterface #292,  2          // InterfaceMethod scala/collection/immutable/Map.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/Map;
      19: areturn

  public static scala.collection.immutable.Map getH2OWord2VecParams$(ai.h2o.sparkling.ml.params.H2OWord2VecParams, ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #286                // InterfaceMethod getH2OWord2VecParams:(Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public default scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OWord2VecParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: invokevirtual #302                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
       6: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       9: bipush        11
      11: anewarray     #304                // class scala/Tuple2
      14: dup
      15: iconst_0
      16: getstatic     #307                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      19: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      22: ldc_w         #309                // String vec_size
      25: invokevirtual #313                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      28: aload_0
      29: invokeinterface #103,  1          // InterfaceMethod getVecSize:()I
      34: invokestatic  #203                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      37: invokevirtual #317                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      40: aastore
      41: dup
      42: iconst_1
      43: getstatic     #307                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      46: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      49: ldc_w         #319                // String window_size
      52: invokevirtual #313                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      55: aload_0
      56: invokeinterface #119,  1          // InterfaceMethod getWindowSize:()I
      61: invokestatic  #203                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      64: invokevirtual #317                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      67: aastore
      68: dup
      69: iconst_2
      70: getstatic     #307                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      73: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      76: ldc_w         #321                // String sent_sample_rate
      79: invokevirtual #313                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      82: aload_0
      83: invokeinterface #127,  1          // InterfaceMethod getSentSampleRate:()F
      88: invokestatic  #222                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
      91: invokevirtual #317                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      94: aastore
      95: dup
      96: iconst_3
      97: getstatic     #307                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     100: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     103: ldc_w         #323                // String norm_model
     106: invokevirtual #313                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     109: aload_0
     110: invokeinterface #139,  1          // InterfaceMethod getNormModel:()Ljava/lang/String;
     115: invokevirtual #317                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     118: aastore
     119: dup
     120: iconst_4
     121: getstatic     #307                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     124: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     127: ldc_w         #324                // String epochs
     130: invokevirtual #313                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     133: aload_0
     134: invokeinterface #147,  1          // InterfaceMethod getEpochs:()I
     139: invokestatic  #203                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     142: invokevirtual #317                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     145: aastore
     146: dup
     147: iconst_5
     148: getstatic     #307                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     151: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     154: ldc_w         #326                // String min_word_freq
     157: invokevirtual #313                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     160: aload_0
     161: invokeinterface #153,  1          // InterfaceMethod getMinWordFreq:()I
     166: invokestatic  #203                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     169: invokevirtual #317                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     172: aastore
     173: dup
     174: bipush        6
     176: getstatic     #307                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     179: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     182: ldc_w         #328                // String init_learning_rate
     185: invokevirtual #313                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     188: aload_0
     189: invokeinterface #159,  1          // InterfaceMethod getInitLearningRate:()F
     194: invokestatic  #222                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
     197: invokevirtual #317                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     200: aastore
     201: dup
     202: bipush        7
     204: getstatic     #307                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     207: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     210: ldc_w         #330                // String word_model
     213: invokevirtual #313                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     216: aload_0
     217: invokeinterface #165,  1          // InterfaceMethod getWordModel:()Ljava/lang/String;
     222: invokevirtual #317                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     225: aastore
     226: dup
     227: bipush        8
     229: getstatic     #307                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     232: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     235: ldc_w         #332                // String model_id
     238: invokevirtual #313                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     241: aload_0
     242: invokeinterface #171,  1          // InterfaceMethod getModelId:()Ljava/lang/String;
     247: invokevirtual #317                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     250: aastore
     251: dup
     252: bipush        9
     254: getstatic     #307                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     257: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     260: ldc_w         #334                // String max_runtime_secs
     263: invokevirtual #313                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     266: aload_0
     267: invokeinterface #179,  1          // InterfaceMethod getMaxRuntimeSecs:()D
     272: invokestatic  #270                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
     275: invokevirtual #317                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     278: aastore
     279: dup
     280: bipush        10
     282: getstatic     #307                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     285: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     288: ldc_w         #336                // String export_checkpoints_dir
     291: invokevirtual #313                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     294: aload_0
     295: invokeinterface #189,  1          // InterfaceMethod getExportCheckpointsDir:()Ljava/lang/String;
     300: invokevirtual #317                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     303: aastore
     304: checkcast     #338                // class "[Ljava/lang/Object;"
     307: invokevirtual #342                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     310: invokevirtual #347                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
     313: checkcast     #288                // class scala/collection/immutable/Map
     316: areturn

  public static scala.collection.immutable.Map getSWtoH2OParamNameMap$(ai.h2o.sparkling.ml.params.H2OWord2VecParams);
    Code:
       0: aload_0
       1: invokespecial #352                // InterfaceMethod getSWtoH2OParamNameMap:()Lscala/collection/immutable/Map;
       4: areturn

  public default scala.collection.immutable.Map<java.lang.String, java.lang.String> getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokeinterface #355,  1          // InterfaceMethod ai$h2o$sparkling$ml$params$H2OWord2VecParams$$super$getSWtoH2OParamNameMap:()Lscala/collection/immutable/Map;
       6: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       9: invokevirtual #302                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
      12: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      15: bipush        11
      17: anewarray     #304                // class scala/Tuple2
      20: dup
      21: iconst_0
      22: getstatic     #307                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      25: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      28: ldc_w         #356                // String vecSize
      31: invokevirtual #313                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      34: ldc_w         #309                // String vec_size
      37: invokevirtual #317                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      40: aastore
      41: dup
      42: iconst_1
      43: getstatic     #307                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      46: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      49: ldc_w         #357                // String windowSize
      52: invokevirtual #313                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      55: ldc_w         #319                // String window_size
      58: invokevirtual #317                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      61: aastore
      62: dup
      63: iconst_2
      64: getstatic     #307                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      67: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      70: ldc_w         #358                // String sentSampleRate
      73: invokevirtual #313                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      76: ldc_w         #321                // String sent_sample_rate
      79: invokevirtual #317                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      82: aastore
      83: dup
      84: iconst_3
      85: getstatic     #307                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      88: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      91: ldc_w         #359                // String normModel
      94: invokevirtual #313                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      97: ldc_w         #323                // String norm_model
     100: invokevirtual #317                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     103: aastore
     104: dup
     105: iconst_4
     106: getstatic     #307                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     109: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     112: ldc_w         #324                // String epochs
     115: invokevirtual #313                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     118: ldc_w         #324                // String epochs
     121: invokevirtual #317                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     124: aastore
     125: dup
     126: iconst_5
     127: getstatic     #307                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     130: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     133: ldc_w         #360                // String minWordFreq
     136: invokevirtual #313                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     139: ldc_w         #326                // String min_word_freq
     142: invokevirtual #317                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     145: aastore
     146: dup
     147: bipush        6
     149: getstatic     #307                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     152: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     155: ldc_w         #361                // String initLearningRate
     158: invokevirtual #313                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     161: ldc_w         #328                // String init_learning_rate
     164: invokevirtual #317                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     167: aastore
     168: dup
     169: bipush        7
     171: getstatic     #307                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     174: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     177: ldc_w         #362                // String wordModel
     180: invokevirtual #313                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     183: ldc_w         #330                // String word_model
     186: invokevirtual #317                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     189: aastore
     190: dup
     191: bipush        8
     193: getstatic     #307                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     196: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     199: ldc_w         #363                // String modelId
     202: invokevirtual #313                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     205: ldc_w         #332                // String model_id
     208: invokevirtual #317                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     211: aastore
     212: dup
     213: bipush        9
     215: getstatic     #307                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     218: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     221: ldc_w         #364                // String maxRuntimeSecs
     224: invokevirtual #313                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     227: ldc_w         #334                // String max_runtime_secs
     230: invokevirtual #317                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     233: aastore
     234: dup
     235: bipush        10
     237: getstatic     #307                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     240: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     243: ldc_w         #365                // String exportCheckpointsDir
     246: invokevirtual #313                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     249: ldc_w         #336                // String export_checkpoints_dir
     252: invokevirtual #317                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     255: aastore
     256: checkcast     #338                // class "[Ljava/lang/Object;"
     259: invokevirtual #342                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     262: invokevirtual #347                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
     265: invokeinterface #292,  2          // InterfaceMethod scala/collection/immutable/Map.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/Map;
     270: areturn

  public static void $init$(ai.h2o.sparkling.ml.params.H2OWord2VecParams);
    Code:
       0: aload_0
       1: aload_0
       2: ldc_w         #356                // String vecSize
       5: ldc_w         #369                // String Set size of word vectors.
       8: invokeinterface #373,  3          // InterfaceMethod intParam:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/IntParam;
      13: invokeinterface #375,  2          // InterfaceMethod ai$h2o$sparkling$ml$params$H2OWord2VecParams$_setter_$vecSize_$eq:(Lorg/apache/spark/ml/param/IntParam;)V
      18: aload_0
      19: aload_0
      20: ldc_w         #357                // String windowSize
      23: ldc_w         #377                // String Set max skip length between words.
      26: invokeinterface #373,  3          // InterfaceMethod intParam:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/IntParam;
      31: invokeinterface #379,  2          // InterfaceMethod ai$h2o$sparkling$ml$params$H2OWord2VecParams$_setter_$windowSize_$eq:(Lorg/apache/spark/ml/param/IntParam;)V
      36: aload_0
      37: aload_0
      38: ldc_w         #358                // String sentSampleRate
      41: ldc_w         #381                // String Set threshold for occurrence of words. Those that appear with higher frequency in the training data\n\t\twill be randomly down-sampled; useful range is (0, 1e-5).
      44: invokeinterface #385,  3          // InterfaceMethod floatParam:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/FloatParam;
      49: invokeinterface #387,  2          // InterfaceMethod ai$h2o$sparkling$ml$params$H2OWord2VecParams$_setter_$sentSampleRate_$eq:(Lorg/apache/spark/ml/param/FloatParam;)V
      54: aload_0
      55: aload_0
      56: ldc_w         #359                // String normModel
      59: ldc_w         #389                // String Use Hierarchical Softmax. Possible values are ``\"HSM\"``.
      62: invokeinterface #393,  3          // InterfaceMethod stringParam:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/Param;
      67: invokeinterface #395,  2          // InterfaceMethod ai$h2o$sparkling$ml$params$H2OWord2VecParams$_setter_$normModel_$eq:(Lorg/apache/spark/ml/param/Param;)V
      72: aload_0
      73: aload_0
      74: ldc_w         #324                // String epochs
      77: ldc_w         #397                // String Number of training iterations to run.
      80: invokeinterface #373,  3          // InterfaceMethod intParam:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/IntParam;
      85: invokeinterface #399,  2          // InterfaceMethod ai$h2o$sparkling$ml$params$H2OWord2VecParams$_setter_$epochs_$eq:(Lorg/apache/spark/ml/param/IntParam;)V
      90: aload_0
      91: aload_0
      92: ldc_w         #360                // String minWordFreq
      95: ldc_w         #401                // String This will discard words that appear less than <int> times.
      98: invokeinterface #373,  3          // InterfaceMethod intParam:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/IntParam;
     103: invokeinterface #403,  2          // InterfaceMethod ai$h2o$sparkling$ml$params$H2OWord2VecParams$_setter_$minWordFreq_$eq:(Lorg/apache/spark/ml/param/IntParam;)V
     108: aload_0
     109: aload_0
     110: ldc_w         #361                // String initLearningRate
     113: ldc_w         #405                // String Set the starting learning rate.
     116: invokeinterface #385,  3          // InterfaceMethod floatParam:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/FloatParam;
     121: invokeinterface #407,  2          // InterfaceMethod ai$h2o$sparkling$ml$params$H2OWord2VecParams$_setter_$initLearningRate_$eq:(Lorg/apache/spark/ml/param/FloatParam;)V
     126: aload_0
     127: aload_0
     128: ldc_w         #362                // String wordModel
     131: ldc_w         #409                // String The word model to use (SkipGram or CBOW). Possible values are ``\"SkipGram\"``, ``\"CBOW\"``.
     134: invokeinterface #393,  3          // InterfaceMethod stringParam:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/Param;
     139: invokeinterface #411,  2          // InterfaceMethod ai$h2o$sparkling$ml$params$H2OWord2VecParams$_setter_$wordModel_$eq:(Lorg/apache/spark/ml/param/Param;)V
     144: aload_0
     145: aload_0
     146: ldc_w         #363                // String modelId
     149: ldc_w         #413                // String Destination id for this model; auto-generated if not specified.
     152: invokeinterface #417,  3          // InterfaceMethod nullableStringParam:(Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableStringParam;
     157: invokeinterface #419,  2          // InterfaceMethod ai$h2o$sparkling$ml$params$H2OWord2VecParams$_setter_$modelId_$eq:(Lai/h2o/sparkling/ml/params/NullableStringParam;)V
     162: aload_0
     163: aload_0
     164: ldc_w         #364                // String maxRuntimeSecs
     167: ldc_w         #421                // String Maximum allowed runtime in seconds for model training. Use 0 to disable.
     170: invokeinterface #425,  3          // InterfaceMethod doubleParam:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/DoubleParam;
     175: invokeinterface #427,  2          // InterfaceMethod ai$h2o$sparkling$ml$params$H2OWord2VecParams$_setter_$maxRuntimeSecs_$eq:(Lorg/apache/spark/ml/param/DoubleParam;)V
     180: aload_0
     181: aload_0
     182: ldc_w         #365                // String exportCheckpointsDir
     185: ldc_w         #429                // String Automatically export generated models to this directory.
     188: invokeinterface #417,  3          // InterfaceMethod nullableStringParam:(Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableStringParam;
     193: invokeinterface #431,  2          // InterfaceMethod ai$h2o$sparkling$ml$params$H2OWord2VecParams$_setter_$exportCheckpointsDir_$eq:(Lai/h2o/sparkling/ml/params/NullableStringParam;)V
     198: aload_0
     199: getstatic     #298                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     202: bipush        11
     204: anewarray     #433                // class org/apache/spark/ml/param/ParamPair
     207: dup
     208: iconst_0
     209: aload_0
     210: invokeinterface #105,  1          // InterfaceMethod vecSize:()Lorg/apache/spark/ml/param/IntParam;
     215: bipush        100
     217: invokestatic  #203                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     220: invokevirtual #439                // Method org/apache/spark/ml/param/IntParam.$minus$greater:(Ljava/lang/Object;)Lorg/apache/spark/ml/param/ParamPair;
     223: aastore
     224: dup
     225: iconst_1
     226: aload_0
     227: invokeinterface #121,  1          // InterfaceMethod windowSize:()Lorg/apache/spark/ml/param/IntParam;
     232: iconst_5
     233: invokestatic  #203                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     236: invokevirtual #439                // Method org/apache/spark/ml/param/IntParam.$minus$greater:(Ljava/lang/Object;)Lorg/apache/spark/ml/param/ParamPair;
     239: aastore
     240: dup
     241: iconst_2
     242: aload_0
     243: invokeinterface #129,  1          // InterfaceMethod sentSampleRate:()Lorg/apache/spark/ml/param/FloatParam;
     248: ldc_w         #440                // float 0.001f
     251: invokestatic  #222                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
     254: invokevirtual #443                // Method org/apache/spark/ml/param/FloatParam.$minus$greater:(Ljava/lang/Object;)Lorg/apache/spark/ml/param/ParamPair;
     257: aastore
     258: dup
     259: iconst_3
     260: aload_0
     261: invokeinterface #141,  1          // InterfaceMethod normModel:()Lorg/apache/spark/ml/param/Param;
     266: getstatic     #447                // Field hex/word2vec/Word2Vec$NormModel.HSM:Lhex/word2vec/Word2Vec$NormModel;
     269: invokevirtual #450                // Method hex/word2vec/Word2Vec$NormModel.name:()Ljava/lang/String;
     272: invokevirtual #453                // Method org/apache/spark/ml/param/Param.$minus$greater:(Ljava/lang/Object;)Lorg/apache/spark/ml/param/ParamPair;
     275: aastore
     276: dup
     277: iconst_4
     278: aload_0
     279: invokeinterface #149,  1          // InterfaceMethod epochs:()Lorg/apache/spark/ml/param/IntParam;
     284: iconst_5
     285: invokestatic  #203                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     288: invokevirtual #439                // Method org/apache/spark/ml/param/IntParam.$minus$greater:(Ljava/lang/Object;)Lorg/apache/spark/ml/param/ParamPair;
     291: aastore
     292: dup
     293: iconst_5
     294: aload_0
     295: invokeinterface #155,  1          // InterfaceMethod minWordFreq:()Lorg/apache/spark/ml/param/IntParam;
     300: iconst_5
     301: invokestatic  #203                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     304: invokevirtual #439                // Method org/apache/spark/ml/param/IntParam.$minus$greater:(Ljava/lang/Object;)Lorg/apache/spark/ml/param/ParamPair;
     307: aastore
     308: dup
     309: bipush        6
     311: aload_0
     312: invokeinterface #161,  1          // InterfaceMethod initLearningRate:()Lorg/apache/spark/ml/param/FloatParam;
     317: ldc_w         #454                // float 0.025f
     320: invokestatic  #222                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
     323: invokevirtual #443                // Method org/apache/spark/ml/param/FloatParam.$minus$greater:(Ljava/lang/Object;)Lorg/apache/spark/ml/param/ParamPair;
     326: aastore
     327: dup
     328: bipush        7
     330: aload_0
     331: invokeinterface #167,  1          // InterfaceMethod wordModel:()Lorg/apache/spark/ml/param/Param;
     336: getstatic     #458                // Field hex/word2vec/Word2Vec$WordModel.SkipGram:Lhex/word2vec/Word2Vec$WordModel;
     339: invokevirtual #459                // Method hex/word2vec/Word2Vec$WordModel.name:()Ljava/lang/String;
     342: invokevirtual #453                // Method org/apache/spark/ml/param/Param.$minus$greater:(Ljava/lang/Object;)Lorg/apache/spark/ml/param/ParamPair;
     345: aastore
     346: dup
     347: bipush        8
     349: aload_0
     350: invokeinterface #173,  1          // InterfaceMethod modelId:()Lai/h2o/sparkling/ml/params/NullableStringParam;
     355: aconst_null
     356: invokevirtual #462                // Method ai/h2o/sparkling/ml/params/NullableStringParam.$minus$greater:(Ljava/lang/Object;)Lorg/apache/spark/ml/param/ParamPair;
     359: aastore
     360: dup
     361: bipush        9
     363: aload_0
     364: invokeinterface #181,  1          // InterfaceMethod maxRuntimeSecs:()Lorg/apache/spark/ml/param/DoubleParam;
     369: dconst_0
     370: invokestatic  #270                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
     373: invokevirtual #465                // Method org/apache/spark/ml/param/DoubleParam.$minus$greater:(Ljava/lang/Object;)Lorg/apache/spark/ml/param/ParamPair;
     376: aastore
     377: dup
     378: bipush        10
     380: aload_0
     381: invokeinterface #191,  1          // InterfaceMethod exportCheckpointsDir:()Lai/h2o/sparkling/ml/params/NullableStringParam;
     386: aconst_null
     387: invokevirtual #462                // Method ai/h2o/sparkling/ml/params/NullableStringParam.$minus$greater:(Ljava/lang/Object;)Lorg/apache/spark/ml/param/ParamPair;
     390: aastore
     391: checkcast     #338                // class "[Ljava/lang/Object;"
     394: invokevirtual #342                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     397: invokeinterface #469,  2          // InterfaceMethod setDefault:(Lscala/collection/Seq;)Lorg/apache/spark/ml/param/Params;
     402: pop
     403: return
}
