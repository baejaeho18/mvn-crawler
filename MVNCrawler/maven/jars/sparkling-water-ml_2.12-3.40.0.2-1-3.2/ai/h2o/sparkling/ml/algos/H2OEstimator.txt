Compiled from "H2OEstimator.scala"
public abstract class ai.h2o.sparkling.ml.algos.H2OEstimator<P extends hex.Model$Parameters> extends org.apache.spark.ml.Estimator<ai.h2o.sparkling.ml.models.H2OMOJOModel> implements ai.h2o.sparkling.ml.params.H2OAlgoParamsBase, ai.h2o.sparkling.ml.params.H2OCommonParams, ai.h2o.sparkling.ml.algos.H2OAlgoCommonUtils, ai.h2o.sparkling.ml.algos.H2OTrainFramePreparation, org.apache.spark.ml.util.DefaultParamsWritable {
  private P parameters;

  private scala.Option<ai.h2o.sparkling.ml.models.H2OBinaryModel> binaryModel;

  private volatile ai.h2o.sparkling.backend.utils.RestCommunication$LoggingLevel$ LoggingLevel$module;

  private final ai.h2o.sparkling.ml.params.NonSerializableNullableDataFrameParam validationDataFrame;

  private final org.apache.spark.ml.param.DoubleParam splitRatio;

  private final org.apache.spark.ml.param.StringArrayParam columnsToCategorical;

  private final org.apache.spark.ml.param.BooleanParam keepBinaryModels;

  private final org.apache.spark.ml.param.BooleanParam convertUnknownCategoricalLevelsToNa;

  private final org.apache.spark.ml.param.BooleanParam convertInvalidNumbersToNa;

  private final org.apache.spark.ml.param.Param<java.lang.String> dataFrameSerializer;

  private final scala.collection.mutable.ArrayBuffer<ai.h2o.sparkling.H2OFrame> ai$h2o$sparkling$backend$utils$H2OFrameLifecycle$$h2oFramesToBeDeleted;

  public org.apache.spark.ml.util.MLWriter write();
    Code:
       0: aload_0
       1: invokestatic  #77                 // InterfaceMethod org/apache/spark/ml/util/DefaultParamsWritable.write$:(Lorg/apache/spark/ml/util/DefaultParamsWritable;)Lorg/apache/spark/ml/util/MLWriter;
       4: areturn

  public void save(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #90                 // InterfaceMethod org/apache/spark/ml/util/MLWritable.save$:(Lorg/apache/spark/ml/util/MLWritable;Ljava/lang/String;)V
       5: return

  public void prepareH2OTrainFrameForFitting(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #98                 // InterfaceMethod ai/h2o/sparkling/ml/algos/H2OTrainFramePreparation.prepareH2OTrainFrameForFitting$:(Lai/h2o/sparkling/ml/algos/H2OTrainFramePreparation;Lai/h2o/sparkling/H2OFrame;)V
       5: return

  public ai.h2o.sparkling.ml.models.H2OBinaryModel getBinaryModel();
    Code:
       0: aload_0
       1: invokestatic  #105                // InterfaceMethod ai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils.getBinaryModel$:(Lai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils;)Lai/h2o/sparkling/ml/models/H2OBinaryModel;
       4: areturn

  public scala.collection.Seq<java.lang.String> getExcludedCols();
    Code:
       0: aload_0
       1: invokestatic  #112                // InterfaceMethod ai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils.getExcludedCols$:(Lai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.Seq<java.lang.String> getAdditionalCols();
    Code:
       0: aload_0
       1: invokestatic  #116                // InterfaceMethod ai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils.getAdditionalCols$:(Lai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.Seq<java.lang.String> getAdditionalValidationCols();
    Code:
       0: aload_0
       1: invokestatic  #120                // InterfaceMethod ai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils.getAdditionalValidationCols$:(Lai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils;)Lscala/collection/Seq;
       4: areturn

  public java.lang.String[] getColumnsToString();
    Code:
       0: aload_0
       1: invokestatic  #126                // InterfaceMethod ai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils.getColumnsToString$:(Lai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils;)[Ljava/lang/String;
       4: areturn

  public scala.Tuple2<ai.h2o.sparkling.H2OFrame, scala.Option<ai.h2o.sparkling.H2OFrame>> prepareDatasetForFitting(org.apache.spark.sql.Dataset<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #134                // InterfaceMethod ai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils.prepareDatasetForFitting$:(Lai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils;Lorg/apache/spark/sql/Dataset;)Lscala/Tuple2;
       5: areturn

  public java.lang.String sanitize(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #142                // InterfaceMethod ai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils.sanitize$:(Lai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public java.lang.String trainAndGetDestinationKey(java.lang.String, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #154                // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.trainAndGetDestinationKey$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;Ljava/lang/String;Lscala/collection/immutable/Map;Z)Ljava/lang/String;
       7: areturn

  public boolean trainAndGetDestinationKey$default$3();
    Code:
       0: aload_0
       1: invokestatic  #162                // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.trainAndGetDestinationKey$default$3$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;)Z
       4: ireturn

  public ai.h2o.sparkling.ml.models.H2OMOJOModel trainAndGetMOJOModel(java.lang.String, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #169                // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.trainAndGetMOJOModel$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;Ljava/lang/String;Lscala/collection/immutable/Map;Z)Lai/h2o/sparkling/ml/models/H2OMOJOModel;
       7: areturn

  public boolean trainAndGetMOJOModel$default$3();
    Code:
       0: aload_0
       1: invokestatic  #173                // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.trainAndGetMOJOModel$default$3$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;)Z
       4: ireturn

  public java.io.File downloadBinaryModel(java.lang.String, ai.h2o.sparkling.H2OConf);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #181                // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.downloadBinaryModel$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;)Ljava/io/File;
       6: areturn

  public java.lang.String convertModelIdToKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #188                // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.convertModelIdToKey$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public <ResultType> ResultType query(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, scala.Enumeration$Value, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #200                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;Lscala/Enumeration$Value;Lscala/reflect/ClassTag;)Ljava/lang/Object;
      15: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> query$default$4();
    Code:
       0: aload_0
       1: invokestatic  #211                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> query$default$5();
    Code:
       0: aload_0
       1: invokestatic  #217                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> scala.Enumeration$Value query$default$6();
    Code:
       0: aload_0
       1: invokestatic  #224                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public <ResultType> ResultType update(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, boolean, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aload         7
      12: invokestatic  #232                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;ZLscala/reflect/ClassTag;)Ljava/lang/Object;
      15: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> update$default$4();
    Code:
       0: aload_0
       1: invokestatic  #236                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> update$default$5();
    Code:
       0: aload_0
       1: invokestatic  #240                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> boolean update$default$6();
    Code:
       0: aload_0
       1: invokestatic  #246                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public <ResultType> ResultType delete(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, boolean, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aload         7
      12: invokestatic  #251                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;ZLscala/reflect/ClassTag;)Ljava/lang/Object;
      15: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> delete$default$4();
    Code:
       0: aload_0
       1: invokestatic  #255                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> delete$default$5();
    Code:
       0: aload_0
       1: invokestatic  #259                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> boolean delete$default$6();
    Code:
       0: aload_0
       1: invokestatic  #263                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public java.io.OutputStream insertToNode(ai.h2o.sparkling.backend.NodeDesc, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #271                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insertToNode$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Lai/h2o/sparkling/backend/NodeDesc;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;)Ljava/io/OutputStream;
       9: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> insertToNode$default$4();
    Code:
       0: aload_0
       1: invokestatic  #277                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insertToNode$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public java.io.OutputStream insert(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.Function1<java.io.OutputStream, java.io.OutputStream>, scala.collection.immutable.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #285                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insert$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/Function1;Lscala/collection/immutable/Map;)Ljava/io/OutputStream;
      11: areturn

  public scala.Function1<java.io.OutputStream, java.io.OutputStream> insert$default$4();
    Code:
       0: aload_0
       1: invokestatic  #293                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insert$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Function1;
       4: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> insert$default$5();
    Code:
       0: aload_0
       1: invokestatic  #297                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insert$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public void delete(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #301                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;)V
       7: return

  public <ResultType> ResultType request(java.net.URI, java.lang.String, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, boolean, scala.Enumeration$Value, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: iload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #310                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;ZLscala/Enumeration$Value;Lscala/reflect/ClassTag;)Ljava/lang/Object;
      19: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> request$default$5();
    Code:
       0: aload_0
       1: invokestatic  #314                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> request$default$6();
    Code:
       0: aload_0
       1: invokestatic  #318                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> boolean request$default$7();
    Code:
       0: aload_0
       1: invokestatic  #322                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$7$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public <ResultType> scala.Enumeration$Value request$default$8();
    Code:
       0: aload_0
       1: invokestatic  #326                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$8$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public <ResultType> ResultType deserialize(java.lang.String, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #335                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.deserialize$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/lang/String;Lscala/collection/Seq;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       7: areturn

  public <ResultType> ResultType deserialize(com.google.gson.JsonElement, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #341                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.deserialize$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Lcom/google/gson/JsonElement;Lscala/collection/Seq;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       7: areturn

  public com.google.gson.JsonObject deserializeAsJsonObject(java.lang.String, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #349                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.deserializeAsJsonObject$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/lang/String;Lscala/collection/Seq;)Lcom/google/gson/JsonObject;
       6: areturn

  public void downloadBinaryURLContent(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #356                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.downloadBinaryURLContent$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Ljava/io/File;)V
       9: return

  public void downloadStringURLContent(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #361                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.downloadStringURLContent$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Ljava/io/File;)V
       9: return

  public java.io.InputStream readURLContent(java.net.URI, java.lang.String, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, boolean, scala.Option<java.lang.String>, scala.Enumeration$Value);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #368                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;ZLscala/Option;Lscala/Enumeration$Value;)Ljava/io/InputStream;
      17: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> readURLContent$default$5();
    Code:
       0: aload_0
       1: invokestatic  #372                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public boolean readURLContent$default$6();
    Code:
       0: aload_0
       1: invokestatic  #376                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public scala.Option<java.lang.String> readURLContent$default$7();
    Code:
       0: aload_0
       1: invokestatic  #383                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$7$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Option;
       4: areturn

  public scala.Enumeration$Value readURLContent$default$8();
    Code:
       0: aload_0
       1: invokestatic  #387                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$8$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public void checkResponseCode(java.net.HttpURLConnection, scala.Enumeration$Value);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #394                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.checkResponseCode$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/HttpURLConnection;Lscala/Enumeration$Value;)V
       6: return

  public scala.Enumeration$Value checkResponseCode$default$2();
    Code:
       0: aload_0
       1: invokestatic  #399                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.checkResponseCode$default$2$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public java.lang.String stringifyPrimitiveParam(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #408                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyPrimitiveParam$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  public boolean isPrimitiveType(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #415                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.isPrimitiveType$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Z
       5: ireturn

  public java.lang.String stringifyArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #420                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyArray$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringifyMap(scala.collection.immutable.Map<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #428                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyMap$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Lscala/collection/immutable/Map;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringifyPair(scala.Tuple2<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #436                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyPair$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Lscala/Tuple2;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringify(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #441                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringify$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringifyParams(scala.collection.immutable.Map<java.lang.String, java.lang.Object>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #448                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyParams$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Lscala/collection/immutable/Map;Z)Ljava/lang/String;
       6: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> stringifyParams$default$1();
    Code:
       0: aload_0
       1: invokestatic  #453                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyParams$default$1$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;)Lscala/collection/immutable/Map;
       4: areturn

  public boolean stringifyParams$default$2();
    Code:
       0: aload_0
       1: invokestatic  #458                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyParams$default$2$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;)Z
       4: ireturn

  public org.apache.spark.sql.Dataset<org.apache.spark.sql.Row> getValidationDataFrame();
    Code:
       0: aload_0
       1: invokestatic  #465                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OCommonParams.getValidationDataFrame$:(Lai/h2o/sparkling/ml/params/H2OCommonParams;)Lorg/apache/spark/sql/Dataset;
       4: areturn

  public double getSplitRatio();
    Code:
       0: aload_0
       1: invokestatic  #471                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OCommonParams.getSplitRatio$:(Lai/h2o/sparkling/ml/params/H2OCommonParams;)D
       4: dreturn

  public java.lang.String[] getColumnsToCategorical();
    Code:
       0: aload_0
       1: invokestatic  #476                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OCommonParams.getColumnsToCategorical$:(Lai/h2o/sparkling/ml/params/H2OCommonParams;)[Ljava/lang/String;
       4: areturn

  public boolean getKeepBinaryModels();
    Code:
       0: aload_0
       1: invokestatic  #481                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OCommonParams.getKeepBinaryModels$:(Lai/h2o/sparkling/ml/params/H2OCommonParams;)Z
       4: ireturn

  public ai.h2o.sparkling.ml.params.H2OCommonParams setValidationDataFrame(org.apache.spark.sql.Dataset<org.apache.spark.sql.Row>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #489                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OCommonParams.setValidationDataFrame$:(Lai/h2o/sparkling/ml/params/H2OCommonParams;Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/params/H2OCommonParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OCommonParams setSplitRatio(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #496                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OCommonParams.setSplitRatio$:(Lai/h2o/sparkling/ml/params/H2OCommonParams;D)Lai/h2o/sparkling/ml/params/H2OCommonParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OCommonParams setColumnsToCategorical(java.lang.String, scala.collection.Seq<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #506                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OCommonParams.setColumnsToCategorical$:(Lai/h2o/sparkling/ml/params/H2OCommonParams;Ljava/lang/String;Lscala/collection/Seq;)Lai/h2o/sparkling/ml/params/H2OCommonParams;
       6: areturn

  public ai.h2o.sparkling.ml.params.H2OCommonParams setColumnsToCategorical(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #511                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OCommonParams.setColumnsToCategorical$:(Lai/h2o/sparkling/ml/params/H2OCommonParams;[Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OCommonParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OCommonParams setColumnsToCategorical(java.util.ArrayList<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #518                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OCommonParams.setColumnsToCategorical$:(Lai/h2o/sparkling/ml/params/H2OCommonParams;Ljava/util/ArrayList;)Lai/h2o/sparkling/ml/params/H2OCommonParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OCommonParams setConvertUnknownCategoricalLevelsToNa(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #525                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OCommonParams.setConvertUnknownCategoricalLevelsToNa$:(Lai/h2o/sparkling/ml/params/H2OCommonParams;Z)Lai/h2o/sparkling/ml/params/H2OCommonParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OCommonParams setConvertInvalidNumbersToNa(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #529                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OCommonParams.setConvertInvalidNumbersToNa$:(Lai/h2o/sparkling/ml/params/H2OCommonParams;Z)Lai/h2o/sparkling/ml/params/H2OCommonParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OCommonParams setKeepBinaryModels(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #533                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OCommonParams.setKeepBinaryModels$:(Lai/h2o/sparkling/ml/params/H2OCommonParams;Z)Lai/h2o/sparkling/ml/params/H2OCommonParams;
       5: areturn

  public boolean getConvertUnknownCategoricalLevelsToNa();
    Code:
       0: aload_0
       1: invokestatic  #540                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OBaseMOJOParams.getConvertUnknownCategoricalLevelsToNa$:(Lai/h2o/sparkling/ml/params/H2OBaseMOJOParams;)Z
       4: ireturn

  public boolean getConvertInvalidNumbersToNa();
    Code:
       0: aload_0
       1: invokestatic  #544                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OBaseMOJOParams.getConvertInvalidNumbersToNa$:(Lai/h2o/sparkling/ml/params/H2OBaseMOJOParams;)Z
       4: ireturn

  public ai.h2o.sparkling.ml.params.H2OBaseMOJOParams setDataFrameSerializer(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #551                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OBaseMOJOParams.setDataFrameSerializer$:(Lai/h2o/sparkling/ml/params/H2OBaseMOJOParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OBaseMOJOParams;
       5: areturn

  public java.lang.String getDataFrameSerializer();
    Code:
       0: aload_0
       1: invokestatic  #559                // InterfaceMethod ai/h2o/sparkling/ml/params/HasDataFrameSerializer.getDataFrameSerializer$:(Lai/h2o/sparkling/ml/params/HasDataFrameSerializer;)Ljava/lang/String;
       4: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #567                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.getH2OAlgorithmParams$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.String> getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #573                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;)Lscala/collection/immutable/Map;
       4: areturn

  public java.lang.String convert2dArrayToH2OFrame(double[][]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #580                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.convert2dArrayToH2OFrame$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;[[D)Ljava/lang/String;
       5: areturn

  public java.lang.String[] convertVectorArrayToH2OFrameKeyArray(org.apache.spark.ml.linalg.DenseVector[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #588                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.convertVectorArrayToH2OFrameKeyArray$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;[Lorg/apache/spark/ml/linalg/DenseVector;)[Ljava/lang/String;
       5: areturn

  public java.lang.String[] convertMatrixToH2OFrameKeyArray(org.apache.spark.ml.linalg.DenseMatrix[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #596                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.convertMatrixToH2OFrameKeyArray$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;[Lorg/apache/spark/ml/linalg/DenseMatrix;)[Ljava/lang/String;
       5: areturn

  public java.lang.String convertDataFrameToH2OFrameKey(org.apache.spark.sql.Dataset<org.apache.spark.sql.Row>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #604                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.convertDataFrameToH2OFrameKey$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;Lorg/apache/spark/sql/Dataset;)Ljava/lang/String;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAlgoParamsBase$ParametersExtraMethods ParametersExtraMethods(scala.collection.immutable.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #610                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.ParametersExtraMethods$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;Lscala/collection/immutable/Map;)Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase$ParametersExtraMethods;
       5: areturn

  public final void registerH2OFrameForDeletion(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #617                // InterfaceMethod ai/h2o/sparkling/backend/utils/H2OFrameLifecycle.registerH2OFrameForDeletion$:(Lai/h2o/sparkling/backend/utils/H2OFrameLifecycle;Lai/h2o/sparkling/H2OFrame;)V
       5: return

  public final void registerH2OFrameForDeletion(scala.Option<ai.h2o.sparkling.H2OFrame>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #622                // InterfaceMethod ai/h2o/sparkling/backend/utils/H2OFrameLifecycle.registerH2OFrameForDeletion$:(Lai/h2o/sparkling/backend/utils/H2OFrameLifecycle;Lscala/Option;)V
       5: return

  public final void deleteRegisteredH2OFrames();
    Code:
       0: aload_0
       1: invokestatic  #628                // InterfaceMethod ai/h2o/sparkling/backend/utils/H2OFrameLifecycle.deleteRegisteredH2OFrames$:(Lai/h2o/sparkling/backend/utils/H2OFrameLifecycle;)V
       4: return

  public org.apache.spark.ml.param.BooleanParam booleanParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #638                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.booleanParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/BooleanParam;
       6: areturn

  public org.apache.spark.ml.param.IntParam intParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #644                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.intParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/IntParam;
       6: areturn

  public org.apache.spark.ml.param.LongParam longParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #650                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.longParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/LongParam;
       6: areturn

  public org.apache.spark.ml.param.FloatParam floatParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #656                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.floatParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/FloatParam;
       6: areturn

  public org.apache.spark.ml.param.DoubleParam doubleParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #662                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.doubleParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/DoubleParam;
       6: areturn

  public <T> org.apache.spark.ml.param.Param<T> param(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #669                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.param$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/Param;
       6: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> stringParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #674                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.stringParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/Param;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam nullableStringParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #680                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableStringParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableStringParam;
       6: areturn

  public org.apache.spark.ml.param.StringArrayParam stringArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #686                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.stringArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/StringArrayParam;
       6: areturn

  public org.apache.spark.ml.param.IntArrayParam intArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #692                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.intArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/IntArrayParam;
       6: areturn

  public org.apache.spark.ml.param.DoubleArrayParam doubleArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #698                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.doubleArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/DoubleArrayParam;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableDoubleArrayArrayParam nullableDoubleArrayArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #704                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableDoubleArrayArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableDoubleArrayArrayParam;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableBooleanArrayParam nullableBooleanArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #710                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableBooleanArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableBooleanArrayParam;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableIntArrayParam nullableIntArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #716                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableIntArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableIntArrayParam;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableFloatArrayParam nullableFloatArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #722                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableFloatArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableFloatArrayParam;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableDoubleArrayParam nullableDoubleArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #728                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableDoubleArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableDoubleArrayParam;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableStringArrayParam nullableStringArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #734                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableStringArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableStringPairArrayParam nullableStringPairArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #740                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableStringPairArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableStringPairArrayParam;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableStringArrayArrayParam nullableStringArrayArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #746                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableStringArrayArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableStringArrayArrayParam;
       6: areturn

  public scala.Option<ai.h2o.sparkling.ml.models.H2OBinaryModel> binaryModel();
    Code:
       0: aload_0
       1: getfield      #749                // Field binaryModel:Lscala/Option;
       4: areturn

  public void binaryModel_$eq(scala.Option<ai.h2o.sparkling.ml.models.H2OBinaryModel>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #749                // Field binaryModel:Lscala/Option;
       5: return

  public ai.h2o.sparkling.backend.utils.RestCommunication$LoggingLevel$ LoggingLevel();
    Code:
       0: aload_0
       1: getfield      #756                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #759                // Method LoggingLevel$lzycompute$1:()V
      11: aload_0
      12: getfield      #756                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
      15: areturn

  public final ai.h2o.sparkling.ml.params.NonSerializableNullableDataFrameParam validationDataFrame();
    Code:
       0: aload_0
       1: getfield      #762                // Field validationDataFrame:Lai/h2o/sparkling/ml/params/NonSerializableNullableDataFrameParam;
       4: areturn

  public final org.apache.spark.ml.param.DoubleParam splitRatio();
    Code:
       0: aload_0
       1: getfield      #765                // Field splitRatio:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public final org.apache.spark.ml.param.StringArrayParam columnsToCategorical();
    Code:
       0: aload_0
       1: getfield      #768                // Field columnsToCategorical:Lorg/apache/spark/ml/param/StringArrayParam;
       4: areturn

  public final org.apache.spark.ml.param.BooleanParam keepBinaryModels();
    Code:
       0: aload_0
       1: getfield      #771                // Field keepBinaryModels:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$H2OCommonParams$_setter_$validationDataFrame_$eq(ai.h2o.sparkling.ml.params.NonSerializableNullableDataFrameParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #762                // Field validationDataFrame:Lai/h2o/sparkling/ml/params/NonSerializableNullableDataFrameParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OCommonParams$_setter_$splitRatio_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #765                // Field splitRatio:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OCommonParams$_setter_$columnsToCategorical_$eq(org.apache.spark.ml.param.StringArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #768                // Field columnsToCategorical:Lorg/apache/spark/ml/param/StringArrayParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OCommonParams$_setter_$keepBinaryModels_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #771                // Field keepBinaryModels:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public final org.apache.spark.ml.param.BooleanParam convertUnknownCategoricalLevelsToNa();
    Code:
       0: aload_0
       1: getfield      #781                // Field convertUnknownCategoricalLevelsToNa:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public final org.apache.spark.ml.param.BooleanParam convertInvalidNumbersToNa();
    Code:
       0: aload_0
       1: getfield      #783                // Field convertInvalidNumbersToNa:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$H2OBaseMOJOParams$_setter_$convertUnknownCategoricalLevelsToNa_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #781                // Field convertUnknownCategoricalLevelsToNa:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OBaseMOJOParams$_setter_$convertInvalidNumbersToNa_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #783                // Field convertInvalidNumbersToNa:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public final org.apache.spark.ml.param.Param<java.lang.String> dataFrameSerializer();
    Code:
       0: aload_0
       1: getfield      #789                // Field dataFrameSerializer:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$HasDataFrameSerializer$_setter_$dataFrameSerializer_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #789                // Field dataFrameSerializer:Lorg/apache/spark/ml/param/Param;
       5: return

  public scala.collection.mutable.ArrayBuffer<ai.h2o.sparkling.H2OFrame> ai$h2o$sparkling$backend$utils$H2OFrameLifecycle$$h2oFramesToBeDeleted();
    Code:
       0: aload_0
       1: getfield      #796                // Field ai$h2o$sparkling$backend$utils$H2OFrameLifecycle$$h2oFramesToBeDeleted:Lscala/collection/mutable/ArrayBuffer;
       4: areturn

  public final void ai$h2o$sparkling$backend$utils$H2OFrameLifecycle$_setter_$ai$h2o$sparkling$backend$utils$H2OFrameLifecycle$$h2oFramesToBeDeleted_$eq(scala.collection.mutable.ArrayBuffer<ai.h2o.sparkling.H2OFrame>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #796                // Field ai$h2o$sparkling$backend$utils$H2OFrameLifecycle$$h2oFramesToBeDeleted:Lscala/collection/mutable/ArrayBuffer;
       5: return

  public abstract java.lang.String getModelId();

  public abstract scala.reflect.ClassTag<P> paramTag();

  public P parameters();
    Code:
       0: aload_0
       1: getfield      #807                // Field parameters:Lhex/Model$Parameters;
       4: areturn

  public void parameters_$eq(P);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #807                // Field parameters:Lhex/Model$Parameters;
       5: return

  public ai.h2o.sparkling.ml.models.H2OMOJOModel fit(org.apache.spark.sql.Dataset<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #815                // Method prepareDatasetForFitting:(Lorg/apache/spark/sql/Dataset;)Lscala/Tuple2;
       5: astore        4
       7: aload         4
       9: ifnull        47
      12: aload         4
      14: invokevirtual #821                // Method scala/Tuple2._1:()Ljava/lang/Object;
      17: checkcast     #823                // class ai/h2o/sparkling/H2OFrame
      20: astore        5
      22: aload         4
      24: invokevirtual #826                // Method scala/Tuple2._2:()Ljava/lang/Object;
      27: checkcast     #828                // class scala/Option
      30: astore        6
      32: new           #817                // class scala/Tuple2
      35: dup
      36: aload         5
      38: aload         6
      40: invokespecial #832                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      43: astore_2
      44: goto          60
      47: goto          50
      50: new           #834                // class scala/MatchError
      53: dup
      54: aload         4
      56: invokespecial #837                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      59: athrow
      60: aload_2
      61: astore_3
      62: aload_3
      63: invokevirtual #821                // Method scala/Tuple2._1:()Ljava/lang/Object;
      66: checkcast     #823                // class ai/h2o/sparkling/H2OFrame
      69: astore        7
      71: aload_3
      72: invokevirtual #826                // Method scala/Tuple2._2:()Ljava/lang/Object;
      75: checkcast     #828                // class scala/Option
      78: astore        8
      80: aload_0
      81: aload         7
      83: invokevirtual #839                // Method prepareH2OTrainFrameForFitting:(Lai/h2o/sparkling/H2OFrame;)V
      86: aload_0
      87: aload         7
      89: aload         8
      91: invokevirtual #843                // Method trainH2OModel:(Lai/h2o/sparkling/H2OFrame;Lscala/Option;)Lai/h2o/sparkling/ml/models/H2OMOJOModel;
      94: astore        9
      96: aload_0
      97: invokevirtual #845                // Method deleteRegisteredH2OFrames:()V
     100: aload         9
     102: areturn

  public ai.h2o.sparkling.ml.models.H2OMOJOModel trainH2OModel(ai.h2o.sparkling.H2OFrame, scala.Option<ai.h2o.sparkling.H2OFrame>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #854                // Method getH2OAlgorithmParams:(Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: getstatic     #860                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       8: invokevirtual #864                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
      11: getstatic     #860                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      14: iconst_2
      15: anewarray     #817                // class scala/Tuple2
      18: dup
      19: iconst_0
      20: getstatic     #867                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      23: getstatic     #860                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      26: ldc_w         #869                // String training_frame
      29: invokevirtual #873                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      32: aload_1
      33: invokevirtual #876                // Method ai/h2o/sparkling/H2OFrame.frameId:()Ljava/lang/String;
      36: invokevirtual #880                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      39: aastore
      40: dup
      41: iconst_1
      42: getstatic     #867                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      45: getstatic     #860                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      48: ldc_w         #882                // String model_id
      51: invokevirtual #873                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      54: aload_0
      55: aload_0
      56: invokevirtual #884                // Method getModelId:()Ljava/lang/String;
      59: invokevirtual #886                // Method convertModelIdToKey:(Ljava/lang/String;)Ljava/lang/String;
      62: invokevirtual #880                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      65: aastore
      66: checkcast     #888                // class "[Ljava/lang/Object;"
      69: invokevirtual #892                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      72: invokevirtual #898                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
      75: invokeinterface #904,  2          // InterfaceMethod scala/collection/immutable/Map.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/Map;
      80: aload_2
      81: invokedynamic #923,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
      86: invokevirtual #926                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      89: invokedynamic #935,  0            // InvokeDynamic #1:apply:()Lscala/Function0;
      94: invokevirtual #939                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      97: checkcast     #941                // class scala/collection/GenTraversableOnce
     100: invokeinterface #904,  2          // InterfaceMethod scala/collection/immutable/Map.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/Map;
     105: astore_3
     106: aload_0
     107: new           #943                // class java/lang/StringBuilder
     110: dup
     111: ldc_w         #944                // int 17
     114: invokespecial #947                // Method java/lang/StringBuilder."<init>":(I)V
     117: ldc_w         #949                // String /3/ModelBuilders/
     120: invokevirtual #953                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload_0
     124: invokevirtual #955                // Method parameters:()Lhex/Model$Parameters;
     127: invokevirtual #958                // Method hex/Model$Parameters.algoName:()Ljava/lang/String;
     130: invokevirtual #963                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
     133: invokevirtual #953                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: invokevirtual #966                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: aload_3
     140: aload_0
     141: invokevirtual #968                // Method trainAndGetDestinationKey$default$3:()Z
     144: invokevirtual #970                // Method trainAndGetDestinationKey:(Ljava/lang/String;Lscala/collection/immutable/Map;Z)Ljava/lang/String;
     147: astore        4
     149: getstatic     #975                // Field ai/h2o/sparkling/ml/internals/H2OModel$.MODULE$:Lai/h2o/sparkling/ml/internals/H2OModel$;
     152: aload         4
     154: invokevirtual #978                // Method ai/h2o/sparkling/ml/internals/H2OModel$.apply:(Ljava/lang/String;)Lai/h2o/sparkling/ml/internals/H2OModel;
     157: astore        5
     159: aload_0
     160: ldc_w         #980                // String keepCrossValidationModels
     163: invokevirtual #984                // Method hasParam:(Ljava/lang/String;)Z
     166: ifeq          186
     169: aload_0
     170: aload_0
     171: ldc_w         #980                // String keepCrossValidationModels
     174: invokevirtual #988                // Method getParam:(Ljava/lang/String;)Lorg/apache/spark/ml/param/Param;
     177: invokevirtual #992                // Method getOrDefault:(Lorg/apache/spark/ml/param/Param;)Ljava/lang/Object;
     180: invokestatic  #997                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
     183: goto          187
     186: iconst_0
     187: istore        6
     189: aload         5
     191: aload_0
     192: invokevirtual #1000               // Method createMOJOUID:()Ljava/lang/String;
     195: aload_0
     196: invokevirtual #1004               // Method createMOJOSettings:()Lai/h2o/sparkling/ml/models/H2OMOJOSettings;
     199: iload         6
     201: invokevirtual #1010               // Method ai/h2o/sparkling/ml/internals/H2OModel.toMOJOModel:(Ljava/lang/String;Lai/h2o/sparkling/ml/models/H2OMOJOSettings;Z)Lai/h2o/sparkling/ml/models/H2OMOJOModel;
     204: astore        7
     206: getstatic     #1015               // Field ai/h2o/sparkling/H2OContext$.MODULE$:Lai/h2o/sparkling/H2OContext$;
     209: invokevirtual #1018               // Method ai/h2o/sparkling/H2OContext$.get:()Lscala/Option;
     212: invokedynamic #1025,  0           // InvokeDynamic #2:apply:()Lscala/Function1;
     217: invokevirtual #1029               // Method scala/Option.forall:(Lscala/Function1;)Z
     220: ifeq          234
     223: getstatic     #860                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     226: aload         7
     228: invokevirtual #1032               // Method scala/Predef$.println:(Ljava/lang/Object;)V
     231: goto          234
     234: aload_0
     235: invokevirtual #1034               // Method getKeepBinaryModels:()Z
     238: ifeq          319
     241: aload_0
     242: aload         4
     244: getstatic     #1015               // Field ai/h2o/sparkling/H2OContext$.MODULE$:Lai/h2o/sparkling/H2OContext$;
     247: invokedynamic #1040,  0           // InvokeDynamic #3:apply:()Lscala/Function0;
     252: invokevirtual #1044               // Method ai/h2o/sparkling/H2OContext$.ensure:(Lscala/Function0;)Lai/h2o/sparkling/H2OContext;
     255: invokevirtual #1050               // Method ai/h2o/sparkling/H2OContext.getConf:()Lai/h2o/sparkling/H2OConf;
     258: invokevirtual #1052               // Method downloadBinaryModel:(Ljava/lang/String;Lai/h2o/sparkling/H2OConf;)Ljava/io/File;
     261: astore        8
     263: aload_0
     264: new           #1054               // class scala/Some
     267: dup
     268: getstatic     #1059               // Field ai/h2o/sparkling/ml/models/H2OBinaryModel$.MODULE$:Lai/h2o/sparkling/ml/models/H2OBinaryModel$;
     271: new           #943                // class java/lang/StringBuilder
     274: dup
     275: ldc_w         #911                // int 7
     278: invokespecial #947                // Method java/lang/StringBuilder."<init>":(I)V
     281: ldc_w         #1061               // String file://
     284: invokevirtual #953                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     287: aload         8
     289: invokevirtual #1066               // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     292: invokevirtual #953                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     295: invokevirtual #966                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     298: new           #1054               // class scala/Some
     301: dup
     302: aload         4
     304: invokespecial #1067               // Method scala/Some."<init>":(Ljava/lang/Object;)V
     307: invokevirtual #1071               // Method ai/h2o/sparkling/ml/models/H2OBinaryModel$.read:(Ljava/lang/String;Lscala/Option;)Lai/h2o/sparkling/ml/models/H2OBinaryModel;
     310: invokespecial #1067               // Method scala/Some."<init>":(Ljava/lang/Object;)V
     313: invokevirtual #1073               // Method binaryModel_$eq:(Lscala/Option;)V
     316: goto          324
     319: aload         5
     321: invokevirtual #1076               // Method ai/h2o/sparkling/ml/internals/H2OModel.tryDelete:()V
     324: aload         7
     326: areturn

  public java.lang.String createMOJOUID();
    Code:
       0: getstatic     #1088               // Field org/apache/spark/ml/util/Identifiable$.MODULE$:Lorg/apache/spark/ml/util/Identifiable$;
       3: aload_0
       4: invokevirtual #955                // Method parameters:()Lhex/Model$Parameters;
       7: invokevirtual #958                // Method hex/Model$Parameters.algoName:()Ljava/lang/String;
      10: invokevirtual #1091               // Method org/apache/spark/ml/util/Identifiable$.randomUID:(Ljava/lang/String;)Ljava/lang/String;
      13: areturn

  public ai.h2o.sparkling.ml.models.H2OMOJOSettings createMOJOSettings();
    Code:
       0: aload_0
       1: invokevirtual #1093               // Method getConvertUnknownCategoricalLevelsToNa:()Z
       4: istore_1
       5: aload_0
       6: invokevirtual #1095               // Method getConvertInvalidNumbersToNa:()Z
       9: istore_2
      10: aload_0
      11: invokevirtual #1097               // Method getDataFrameSerializer:()Ljava/lang/String;
      14: astore_3
      15: getstatic     #1102               // Field ai/h2o/sparkling/ml/models/H2OMOJOSettings$.MODULE$:Lai/h2o/sparkling/ml/models/H2OMOJOSettings$;
      18: invokevirtual #1105               // Method ai/h2o/sparkling/ml/models/H2OMOJOSettings$.apply$default$1:()Ljava/lang/String;
      21: astore        4
      23: getstatic     #1102               // Field ai/h2o/sparkling/ml/models/H2OMOJOSettings$.MODULE$:Lai/h2o/sparkling/ml/models/H2OMOJOSettings$;
      26: invokevirtual #1108               // Method ai/h2o/sparkling/ml/models/H2OMOJOSettings$.apply$default$2:()Ljava/lang/String;
      29: astore        5
      31: getstatic     #1102               // Field ai/h2o/sparkling/ml/models/H2OMOJOSettings$.MODULE$:Lai/h2o/sparkling/ml/models/H2OMOJOSettings$;
      34: invokevirtual #1111               // Method ai/h2o/sparkling/ml/models/H2OMOJOSettings$.apply$default$5:()Z
      37: istore        6
      39: getstatic     #1102               // Field ai/h2o/sparkling/ml/models/H2OMOJOSettings$.MODULE$:Lai/h2o/sparkling/ml/models/H2OMOJOSettings$;
      42: invokevirtual #1114               // Method ai/h2o/sparkling/ml/models/H2OMOJOSettings$.apply$default$6:()Z
      45: istore        7
      47: getstatic     #1102               // Field ai/h2o/sparkling/ml/models/H2OMOJOSettings$.MODULE$:Lai/h2o/sparkling/ml/models/H2OMOJOSettings$;
      50: invokevirtual #1117               // Method ai/h2o/sparkling/ml/models/H2OMOJOSettings$.apply$default$7:()Z
      53: istore        8
      55: getstatic     #1102               // Field ai/h2o/sparkling/ml/models/H2OMOJOSettings$.MODULE$:Lai/h2o/sparkling/ml/models/H2OMOJOSettings$;
      58: invokevirtual #1120               // Method ai/h2o/sparkling/ml/models/H2OMOJOSettings$.apply$default$8:()Z
      61: istore        9
      63: getstatic     #1102               // Field ai/h2o/sparkling/ml/models/H2OMOJOSettings$.MODULE$:Lai/h2o/sparkling/ml/models/H2OMOJOSettings$;
      66: invokevirtual #1123               // Method ai/h2o/sparkling/ml/models/H2OMOJOSettings$.apply$default$9:()Z
      69: istore        10
      71: getstatic     #1102               // Field ai/h2o/sparkling/ml/models/H2OMOJOSettings$.MODULE$:Lai/h2o/sparkling/ml/models/H2OMOJOSettings$;
      74: invokevirtual #1127               // Method ai/h2o/sparkling/ml/models/H2OMOJOSettings$.apply$default$11:()I
      77: istore        11
      79: new           #1129               // class ai/h2o/sparkling/ml/models/H2OMOJOSettings
      82: dup
      83: aload         4
      85: aload         5
      87: iload_1
      88: iload_2
      89: iload         6
      91: iload         7
      93: iload         8
      95: iload         9
      97: iload         10
      99: aload_3
     100: iload         11
     102: invokespecial #1132               // Method ai/h2o/sparkling/ml/models/H2OMOJOSettings."<init>":(Ljava/lang/String;Ljava/lang/String;ZZZZZZZLjava/lang/String;I)V
     105: areturn

  public ai.h2o.sparkling.ml.algos.H2OEstimator<P> copy(org.apache.spark.ml.param.ParamMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1151               // Method defaultCopy:(Lorg/apache/spark/ml/param/ParamMap;)Lorg/apache/spark/ml/param/Params;
       5: checkcast     #2                  // class ai/h2o/sparkling/ml/algos/H2OEstimator
       8: areturn

  public org.apache.spark.ml.param.Params copy(org.apache.spark.ml.param.ParamMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1154               // Method copy:(Lorg/apache/spark/ml/param/ParamMap;)Lai/h2o/sparkling/ml/algos/H2OEstimator;
       5: areturn

  public org.apache.spark.ml.PipelineStage copy(org.apache.spark.ml.param.ParamMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1154               // Method copy:(Lorg/apache/spark/ml/param/ParamMap;)Lai/h2o/sparkling/ml/algos/H2OEstimator;
       5: areturn

  public org.apache.spark.ml.Estimator copy(org.apache.spark.ml.param.ParamMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1154               // Method copy:(Lorg/apache/spark/ml/param/ParamMap;)Lai/h2o/sparkling/ml/algos/H2OEstimator;
       5: areturn

  public org.apache.spark.ml.Model fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1159               // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OMOJOModel;
       5: areturn

  private final void LoggingLevel$lzycompute$1();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #756                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
       8: ifnonnull     23
      11: aload_0
      12: new           #21                 // class ai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$
      15: dup
      16: aload_0
      17: invokespecial #1162               // Method ai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$."<init>":(Lai/h2o/sparkling/backend/utils/RestCommunication;)V
      20: putfield      #756                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
      23: aload_1
      24: monitorexit
      25: goto          31
      28: aload_1
      29: monitorexit
      30: athrow
      31: return
    Exception table:
       from    to  target type
           4    23    28   any

  public static final scala.collection.immutable.Map $anonfun$trainH2OModel$1(ai.h2o.sparkling.H2OFrame);
    Code:
       0: getstatic     #860                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: invokevirtual #864                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
       6: getstatic     #860                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       9: iconst_1
      10: anewarray     #817                // class scala/Tuple2
      13: dup
      14: iconst_0
      15: getstatic     #867                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      18: getstatic     #860                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      21: ldc_w         #1167               // String validation_frame
      24: invokevirtual #873                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      27: aload_0
      28: invokevirtual #876                // Method ai/h2o/sparkling/H2OFrame.frameId:()Ljava/lang/String;
      31: invokevirtual #880                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      34: aastore
      35: checkcast     #888                // class "[Ljava/lang/Object;"
      38: invokevirtual #892                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      41: invokevirtual #898                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
      44: checkcast     #900                // class scala/collection/immutable/Map
      47: areturn

  public static final scala.collection.immutable.Map $anonfun$trainH2OModel$2();
    Code:
       0: getstatic     #860                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: invokevirtual #864                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
       6: getstatic     #1172               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       9: invokevirtual #898                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
      12: checkcast     #900                // class scala/collection/immutable/Map
      15: areturn

  public static final boolean $anonfun$trainH2OModel$3(ai.h2o.sparkling.H2OContext);
    Code:
       0: aload_0
       1: invokevirtual #1050               // Method ai/h2o/sparkling/H2OContext.getConf:()Lai/h2o/sparkling/H2OConf;
       4: invokevirtual #1179               // Method ai/h2o/sparkling/H2OConf.isModelPrintAfterTrainingEnabled:()Z
       7: ireturn

  public static final java.lang.String $anonfun$trainH2OModel$4();
    Code:
       0: getstatic     #1015               // Field ai/h2o/sparkling/H2OContext$.MODULE$:Lai/h2o/sparkling/H2OContext$;
       3: invokevirtual #1183               // Method ai/h2o/sparkling/H2OContext$.ensure$default$1:()Ljava/lang/String;
       6: areturn

  public ai.h2o.sparkling.ml.algos.H2OEstimator(scala.reflect.ClassTag<P>);
    Code:
       0: aload_0
       1: invokespecial #1187               // Method org/apache/spark/ml/Estimator."<init>":()V
       4: aload_0
       5: invokestatic  #1191               // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.$init$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;)V
       8: aload_0
       9: invokestatic  #1193               // InterfaceMethod ai/h2o/sparkling/backend/utils/H2OFrameLifecycle.$init$:(Lai/h2o/sparkling/backend/utils/H2OFrameLifecycle;)V
      12: aload_0
      13: invokestatic  #1196               // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.$init$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;)V
      16: aload_0
      17: invokestatic  #1199               // InterfaceMethod ai/h2o/sparkling/ml/params/HasDataFrameSerializer.$init$:(Lai/h2o/sparkling/ml/params/HasDataFrameSerializer;)V
      20: aload_0
      21: invokestatic  #1202               // InterfaceMethod ai/h2o/sparkling/ml/params/H2OBaseMOJOParams.$init$:(Lai/h2o/sparkling/ml/params/H2OBaseMOJOParams;)V
      24: aload_0
      25: invokestatic  #1205               // InterfaceMethod ai/h2o/sparkling/ml/params/H2OCommonParams.$init$:(Lai/h2o/sparkling/ml/params/H2OCommonParams;)V
      28: aload_0
      29: invokestatic  #1208               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.$init$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;)V
      32: aload_0
      33: invokestatic  #1210               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.$init$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)V
      36: aload_0
      37: invokestatic  #1213               // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.$init$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;)V
      40: aload_0
      41: invokestatic  #1216               // InterfaceMethod ai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils.$init$:(Lai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils;)V
      44: aload_0
      45: invokestatic  #1219               // InterfaceMethod ai/h2o/sparkling/ml/algos/H2OTrainFramePreparation.$init$:(Lai/h2o/sparkling/ml/algos/H2OTrainFramePreparation;)V
      48: aload_0
      49: invokestatic  #1222               // InterfaceMethod org/apache/spark/ml/util/MLWritable.$init$:(Lorg/apache/spark/ml/util/MLWritable;)V
      52: aload_0
      53: invokestatic  #1225               // InterfaceMethod org/apache/spark/ml/util/DefaultParamsWritable.$init$:(Lorg/apache/spark/ml/util/DefaultParamsWritable;)V
      56: aload_0
      57: aload_0
      58: invokevirtual #1227               // Method paramTag:()Lscala/reflect/ClassTag;
      61: invokeinterface #1233,  1         // InterfaceMethod scala/reflect/ClassTag.runtimeClass:()Ljava/lang/Class;
      66: invokevirtual #1238               // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      69: checkcast     #29                 // class hex/Model$Parameters
      72: putfield      #807                // Field parameters:Lhex/Model$Parameters;
      75: return

  public static final java.lang.Object $anonfun$trainH2OModel$3$adapted(ai.h2o.sparkling.H2OContext);
    Code:
       0: aload_0
       1: invokestatic  #1240               // Method $anonfun$trainH2OModel$3:(Lai/h2o/sparkling/H2OContext;)Z
       4: invokestatic  #1244               // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #1256,  0           // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
