Compiled from "H2OModel.scala"
public class ai.h2o.sparkling.ml.internals.H2OModel implements ai.h2o.sparkling.backend.utils.RestCommunication {
  private final java.lang.String modelId;

  private final ai.h2o.sparkling.H2OConf conf;

  private final java.net.URI endpoint;

  private volatile ai.h2o.sparkling.backend.utils.RestCommunication$LoggingLevel$ LoggingLevel$module;

  private transient org.slf4j.Logger org$apache$spark$internal$Logging$$log_;

  public static ai.h2o.sparkling.ml.internals.H2OModel apply(java.lang.String);
    Code:
       0: getstatic     #46                 // Field ai/h2o/sparkling/ml/internals/H2OModel$.MODULE$:Lai/h2o/sparkling/ml/internals/H2OModel$;
       3: aload_0
       4: invokevirtual #48                 // Method ai/h2o/sparkling/ml/internals/H2OModel$.apply:(Ljava/lang/String;)Lai/h2o/sparkling/ml/internals/H2OModel;
       7: areturn

  public <ResultType> ResultType query(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, scala.Enumeration$Value, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #60                 // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;Lscala/Enumeration$Value;Lscala/reflect/ClassTag;)Ljava/lang/Object;
      15: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> query$default$4();
    Code:
       0: aload_0
       1: invokestatic  #73                 // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> query$default$5();
    Code:
       0: aload_0
       1: invokestatic  #80                 // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> scala.Enumeration$Value query$default$6();
    Code:
       0: aload_0
       1: invokestatic  #87                 // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public <ResultType> ResultType update(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, boolean, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aload         7
      12: invokestatic  #96                 // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;ZLscala/reflect/ClassTag;)Ljava/lang/Object;
      15: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> update$default$4();
    Code:
       0: aload_0
       1: invokestatic  #101                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> update$default$5();
    Code:
       0: aload_0
       1: invokestatic  #105                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> boolean update$default$6();
    Code:
       0: aload_0
       1: invokestatic  #112                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public <ResultType> ResultType delete(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, boolean, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aload         7
      12: invokestatic  #117                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;ZLscala/reflect/ClassTag;)Ljava/lang/Object;
      15: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> delete$default$4();
    Code:
       0: aload_0
       1: invokestatic  #121                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> delete$default$5();
    Code:
       0: aload_0
       1: invokestatic  #125                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> boolean delete$default$6();
    Code:
       0: aload_0
       1: invokestatic  #129                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public java.io.OutputStream insertToNode(ai.h2o.sparkling.backend.NodeDesc, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #137                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insertToNode$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Lai/h2o/sparkling/backend/NodeDesc;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;)Ljava/io/OutputStream;
       9: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> insertToNode$default$4();
    Code:
       0: aload_0
       1: invokestatic  #143                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insertToNode$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public java.io.OutputStream insert(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.Function1<java.io.OutputStream, java.io.OutputStream>, scala.collection.immutable.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #151                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insert$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/Function1;Lscala/collection/immutable/Map;)Ljava/io/OutputStream;
      11: areturn

  public scala.Function1<java.io.OutputStream, java.io.OutputStream> insert$default$4();
    Code:
       0: aload_0
       1: invokestatic  #159                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insert$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Function1;
       4: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> insert$default$5();
    Code:
       0: aload_0
       1: invokestatic  #163                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insert$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public void delete(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #167                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;)V
       7: return

  public <ResultType> ResultType request(java.net.URI, java.lang.String, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, boolean, scala.Enumeration$Value, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: iload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #176                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;ZLscala/Enumeration$Value;Lscala/reflect/ClassTag;)Ljava/lang/Object;
      19: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> request$default$5();
    Code:
       0: aload_0
       1: invokestatic  #180                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> request$default$6();
    Code:
       0: aload_0
       1: invokestatic  #184                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> boolean request$default$7();
    Code:
       0: aload_0
       1: invokestatic  #188                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$7$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public <ResultType> scala.Enumeration$Value request$default$8();
    Code:
       0: aload_0
       1: invokestatic  #192                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$8$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public <ResultType> ResultType deserialize(java.lang.String, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #201                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.deserialize$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/lang/String;Lscala/collection/Seq;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       7: areturn

  public <ResultType> ResultType deserialize(com.google.gson.JsonElement, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #207                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.deserialize$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Lcom/google/gson/JsonElement;Lscala/collection/Seq;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       7: areturn

  public com.google.gson.JsonObject deserializeAsJsonObject(java.lang.String, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #215                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.deserializeAsJsonObject$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/lang/String;Lscala/collection/Seq;)Lcom/google/gson/JsonObject;
       6: areturn

  public void downloadBinaryURLContent(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #222                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.downloadBinaryURLContent$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Ljava/io/File;)V
       9: return

  public void downloadStringURLContent(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #227                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.downloadStringURLContent$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Ljava/io/File;)V
       9: return

  public java.io.InputStream readURLContent(java.net.URI, java.lang.String, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, boolean, scala.Option<java.lang.String>, scala.Enumeration$Value);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #234                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;ZLscala/Option;Lscala/Enumeration$Value;)Ljava/io/InputStream;
      17: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> readURLContent$default$5();
    Code:
       0: aload_0
       1: invokestatic  #239                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public boolean readURLContent$default$6();
    Code:
       0: aload_0
       1: invokestatic  #243                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public scala.Option<java.lang.String> readURLContent$default$7();
    Code:
       0: aload_0
       1: invokestatic  #250                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$7$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Option;
       4: areturn

  public scala.Enumeration$Value readURLContent$default$8();
    Code:
       0: aload_0
       1: invokestatic  #254                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$8$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public void checkResponseCode(java.net.HttpURLConnection, scala.Enumeration$Value);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #261                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.checkResponseCode$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/HttpURLConnection;Lscala/Enumeration$Value;)V
       6: return

  public scala.Enumeration$Value checkResponseCode$default$2();
    Code:
       0: aload_0
       1: invokestatic  #266                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.checkResponseCode$default$2$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public java.lang.String stringifyPrimitiveParam(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #275                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyPrimitiveParam$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  public boolean isPrimitiveType(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #282                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.isPrimitiveType$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Z
       5: ireturn

  public java.lang.String stringifyArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #287                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyArray$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringifyMap(scala.collection.immutable.Map<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #295                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyMap$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Lscala/collection/immutable/Map;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringifyPair(scala.Tuple2<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #303                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyPair$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Lscala/Tuple2;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringify(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #308                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringify$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringifyParams(scala.collection.immutable.Map<java.lang.String, java.lang.Object>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #315                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyParams$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Lscala/collection/immutable/Map;Z)Ljava/lang/String;
       6: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> stringifyParams$default$1();
    Code:
       0: aload_0
       1: invokestatic  #320                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyParams$default$1$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;)Lscala/collection/immutable/Map;
       4: areturn

  public boolean stringifyParams$default$2();
    Code:
       0: aload_0
       1: invokestatic  #325                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyParams$default$2$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;)Z
       4: ireturn

  public java.lang.String logName();
    Code:
       0: aload_0
       1: invokestatic  #333                // InterfaceMethod org/apache/spark/internal/Logging.logName$:(Lorg/apache/spark/internal/Logging;)Ljava/lang/String;
       4: areturn

  public org.slf4j.Logger log();
    Code:
       0: aload_0
       1: invokestatic  #339                // InterfaceMethod org/apache/spark/internal/Logging.log$:(Lorg/apache/spark/internal/Logging;)Lorg/slf4j/Logger;
       4: areturn

  public void logInfo(scala.Function0<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #347                // InterfaceMethod org/apache/spark/internal/Logging.logInfo$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;)V
       5: return

  public void logDebug(scala.Function0<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #352                // InterfaceMethod org/apache/spark/internal/Logging.logDebug$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;)V
       5: return

  public void logTrace(scala.Function0<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #356                // InterfaceMethod org/apache/spark/internal/Logging.logTrace$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;)V
       5: return

  public void logWarning(scala.Function0<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #360                // InterfaceMethod org/apache/spark/internal/Logging.logWarning$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;)V
       5: return

  public void logError(scala.Function0<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #364                // InterfaceMethod org/apache/spark/internal/Logging.logError$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;)V
       5: return

  public void logInfo(scala.Function0<java.lang.String>, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #370                // InterfaceMethod org/apache/spark/internal/Logging.logInfo$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;Ljava/lang/Throwable;)V
       6: return

  public void logDebug(scala.Function0<java.lang.String>, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #373                // InterfaceMethod org/apache/spark/internal/Logging.logDebug$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;Ljava/lang/Throwable;)V
       6: return

  public void logTrace(scala.Function0<java.lang.String>, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #375                // InterfaceMethod org/apache/spark/internal/Logging.logTrace$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;Ljava/lang/Throwable;)V
       6: return

  public void logWarning(scala.Function0<java.lang.String>, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #377                // InterfaceMethod org/apache/spark/internal/Logging.logWarning$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;Ljava/lang/Throwable;)V
       6: return

  public void logError(scala.Function0<java.lang.String>, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #379                // InterfaceMethod org/apache/spark/internal/Logging.logError$:(Lorg/apache/spark/internal/Logging;Lscala/Function0;Ljava/lang/Throwable;)V
       6: return

  public boolean isTraceEnabled();
    Code:
       0: aload_0
       1: invokestatic  #384                // InterfaceMethod org/apache/spark/internal/Logging.isTraceEnabled$:(Lorg/apache/spark/internal/Logging;)Z
       4: ireturn

  public void initializeLogIfNecessary(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #391                // InterfaceMethod org/apache/spark/internal/Logging.initializeLogIfNecessary$:(Lorg/apache/spark/internal/Logging;Z)V
       5: return

  public boolean initializeLogIfNecessary(boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #396                // InterfaceMethod org/apache/spark/internal/Logging.initializeLogIfNecessary$:(Lorg/apache/spark/internal/Logging;ZZ)Z
       6: ireturn

  public boolean initializeLogIfNecessary$default$2();
    Code:
       0: aload_0
       1: invokestatic  #400                // InterfaceMethod org/apache/spark/internal/Logging.initializeLogIfNecessary$default$2$:(Lorg/apache/spark/internal/Logging;)Z
       4: ireturn

  public void initializeForcefully(boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #406                // InterfaceMethod org/apache/spark/internal/Logging.initializeForcefully$:(Lorg/apache/spark/internal/Logging;ZZ)V
       6: return

  public ai.h2o.sparkling.backend.utils.RestCommunication$LoggingLevel$ LoggingLevel();
    Code:
       0: aload_0
       1: getfield      #410                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #414                // Method LoggingLevel$lzycompute$1:()V
      11: aload_0
      12: getfield      #410                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
      15: areturn

  public org.slf4j.Logger org$apache$spark$internal$Logging$$log_();
    Code:
       0: aload_0
       1: getfield      #416                // Field org$apache$spark$internal$Logging$$log_:Lorg/slf4j/Logger;
       4: areturn

  public void org$apache$spark$internal$Logging$$log__$eq(org.slf4j.Logger);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #416                // Field org$apache$spark$internal$Logging$$log_:Lorg/slf4j/Logger;
       5: return

  public java.lang.String modelId();
    Code:
       0: aload_0
       1: getfield      #421                // Field modelId:Ljava/lang/String;
       4: areturn

  private ai.h2o.sparkling.H2OConf conf();
    Code:
       0: aload_0
       1: getfield      #424                // Field conf:Lai/h2o/sparkling/H2OConf;
       4: areturn

  private java.net.URI endpoint();
    Code:
       0: aload_0
       1: getfield      #427                // Field endpoint:Ljava/net/URI;
       4: areturn

  public java.io.File downloadMojo();
    Code:
       0: getstatic     #434                // Field org/apache/spark/expose/Utils$.MODULE$:Lorg/apache/spark/expose/Utils$;
       3: getstatic     #434                // Field org/apache/spark/expose/Utils$.MODULE$:Lorg/apache/spark/expose/Utils$;
       6: aload_0
       7: invokespecial #436                // Method conf:()Lai/h2o/sparkling/H2OConf;
      10: invokevirtual #442                // Method ai/h2o/sparkling/H2OConf.sparkConf:()Lorg/apache/spark/SparkConf;
      13: invokevirtual #446                // Method org/apache/spark/expose/Utils$.getLocalDir:(Lorg/apache/spark/SparkConf;)Ljava/lang/String;
      16: getstatic     #434                // Field org/apache/spark/expose/Utils$.MODULE$:Lorg/apache/spark/expose/Utils$;
      19: invokevirtual #449                // Method org/apache/spark/expose/Utils$.createTempDir$default$2:()Ljava/lang/String;
      22: invokevirtual #453                // Method org/apache/spark/expose/Utils$.createTempDir:(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
      25: astore_1
      26: new           #455                // class java/io/File
      29: dup
      30: aload_1
      31: aload_0
      32: invokevirtual #457                // Method modelId:()Ljava/lang/String;
      35: invokespecial #461                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      38: astore_2
      39: aload_0
      40: aload_0
      41: invokespecial #463                // Method endpoint:()Ljava/net/URI;
      44: new           #465                // class java/lang/StringBuilder
      47: dup
      48: ldc_w         #466                // int 15
      51: invokespecial #469                // Method java/lang/StringBuilder."<init>":(I)V
      54: ldc_w         #471                // String /3/Models/
      57: invokevirtual #475                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #457                // Method modelId:()Ljava/lang/String;
      64: invokevirtual #475                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: ldc_w         #477                // String /mojo
      70: invokevirtual #475                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #480                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: aload_0
      77: invokespecial #436                // Method conf:()Lai/h2o/sparkling/H2OConf;
      80: aload_2
      81: invokevirtual #482                // Method downloadBinaryURLContent:(Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Ljava/io/File;)V
      84: aload_2
      85: areturn

  public com.google.gson.JsonObject getDetails();
    Code:
       0: getstatic     #491                // Field ai/h2o/sparkling/utils/ScalaUtils$.MODULE$:Lai/h2o/sparkling/utils/ScalaUtils$;
       3: aload_0
       4: aload_0
       5: invokespecial #463                // Method endpoint:()Ljava/net/URI;
       8: ldc_w         #493                // String GET
      11: new           #465                // class java/lang/StringBuilder
      14: dup
      15: ldc_w         #494                // int 10
      18: invokespecial #469                // Method java/lang/StringBuilder."<init>":(I)V
      21: ldc_w         #471                // String /3/Models/
      24: invokevirtual #475                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: invokevirtual #457                // Method modelId:()Ljava/lang/String;
      31: invokevirtual #475                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #480                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: aload_0
      38: invokespecial #436                // Method conf:()Lai/h2o/sparkling/H2OConf;
      41: aload_0
      42: invokevirtual #496                // Method readURLContent$default$5:()Lscala/collection/immutable/Map;
      45: aload_0
      46: invokevirtual #498                // Method readURLContent$default$6:()Z
      49: aload_0
      50: invokevirtual #500                // Method readURLContent$default$7:()Lscala/Option;
      53: aload_0
      54: invokevirtual #502                // Method readURLContent$default$8:()Lscala/Enumeration$Value;
      57: invokevirtual #504                // Method readURLContent:(Ljava/net/URI;Ljava/lang/String;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;ZLscala/Option;Lscala/Enumeration$Value;)Ljava/io/InputStream;
      60: aload_0
      61: invokedynamic #527,  0            // InvokeDynamic #0:apply:(Lai/h2o/sparkling/ml/internals/H2OModel;)Lscala/Function1;
      66: invokevirtual #531                // Method ai/h2o/sparkling/utils/ScalaUtils$.withResource:(Ljava/lang/AutoCloseable;Lscala/Function1;)Ljava/lang/Object;
      69: checkcast     #533                // class com/google/gson/JsonObject
      72: astore_1
      73: aload_1
      74: ldc_w         #535                // String models
      77: invokevirtual #539                // Method com/google/gson/JsonObject.getAsJsonArray:(Ljava/lang/String;)Lcom/google/gson/JsonArray;
      80: iconst_0
      81: invokevirtual #545                // Method com/google/gson/JsonArray.get:(I)Lcom/google/gson/JsonElement;
      84: invokevirtual #550                // Method com/google/gson/JsonElement.getAsJsonObject:()Lcom/google/gson/JsonObject;
      87: areturn

  public void delete();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #463                // Method endpoint:()Ljava/net/URI;
       5: new           #465                // class java/lang/StringBuilder
       8: dup
       9: ldc_w         #494                // int 10
      12: invokespecial #469                // Method java/lang/StringBuilder."<init>":(I)V
      15: ldc_w         #471                // String /3/Models/
      18: invokevirtual #475                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: invokevirtual #457                // Method modelId:()Ljava/lang/String;
      25: invokevirtual #475                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #480                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: aload_0
      32: invokespecial #436                // Method conf:()Lai/h2o/sparkling/H2OConf;
      35: invokevirtual #554                // Method delete:(Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;)V
      38: return

  public void tryDelete();
    Code:
       0: aload_0
       1: invokespecial #560                // Method getCrossValidationModels:()Lscala/Option;
       4: invokedynamic #568,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
       9: invokevirtual #574                // Method scala/Option.foreach:(Lscala/Function1;)V
      12: aload_0
      13: invokevirtual #576                // Method delete:()V
      16: goto          34
      19: astore_1
      20: aload_0
      21: aload_0
      22: invokedynamic #587,  0            // InvokeDynamic #2:apply:(Lai/h2o/sparkling/ml/internals/H2OModel;)Lscala/Function0;
      27: aload_1
      28: invokevirtual #589                // Method logWarning:(Lscala/Function0;Ljava/lang/Throwable;)V
      31: goto          34
      34: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/Throwable

  private scala.Option<ai.h2o.sparkling.ml.internals.H2OModel[]> getCrossValidationModels();
    Code:
       0: aload_0
       1: invokevirtual #593                // Method getDetails:()Lcom/google/gson/JsonObject;
       4: ldc_w         #595                // String output
       7: invokevirtual #598                // Method com/google/gson/JsonObject.getAsJsonObject:(Ljava/lang/String;)Lcom/google/gson/JsonObject;
      10: ldc_w         #600                // String cross_validation_models
      13: invokevirtual #603                // Method com/google/gson/JsonObject.get:(Ljava/lang/String;)Lcom/google/gson/JsonElement;
      16: astore_1
      17: aload_1
      18: invokevirtual #606                // Method com/google/gson/JsonElement.isJsonNull:()Z
      21: ifeq          30
      24: getstatic     #611                // Field scala/None$.MODULE$:Lscala/None$;
      27: goto          78
      30: aload_1
      31: invokevirtual #614                // Method com/google/gson/JsonElement.getAsJsonArray:()Lcom/google/gson/JsonArray;
      34: astore_2
      35: aload_2
      36: invokevirtual #618                // Method com/google/gson/JsonArray.size:()I
      39: anewarray     #2                  // class ai/h2o/sparkling/ml/internals/H2OModel
      42: astore_3
      43: getstatic     #623                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
      46: getstatic     #628                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      49: iconst_0
      50: invokevirtual #632                // Method scala/Predef$.intWrapper:(I)I
      53: aload_2
      54: invokevirtual #618                // Method com/google/gson/JsonArray.size:()I
      57: invokevirtual #636                // Method scala/runtime/RichInt$.until$extension0:(II)Lscala/collection/immutable/Range;
      60: aload_2
      61: aload_3
      62: invokedynamic #647,  0            // InvokeDynamic #3:apply$mcVI$sp:(Lcom/google/gson/JsonArray;[Lai/h2o/sparkling/ml/internals/H2OModel;)Lscala/runtime/java8/JFunction1$mcVI$sp;
      67: invokevirtual #652                // Method scala/collection/immutable/Range.foreach$mVc$sp:(Lscala/Function1;)V
      70: new           #654                // class scala/Some
      73: dup
      74: aload_3
      75: invokespecial #657                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      78: areturn

  private ai.h2o.sparkling.ml.models.H2OMOJOModel[] getCrossValidationMOJOModels(java.lang.String, ai.h2o.sparkling.ml.models.H2OMOJOSettings);
    Code:
       0: aload_0
       1: invokespecial #560                // Method getCrossValidationModels:()Lscala/Option;
       4: astore        4
       6: getstatic     #611                // Field scala/None$.MODULE$:Lscala/None$;
       9: aload         4
      11: invokevirtual #669                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      14: ifeq          22
      17: aconst_null
      18: astore_3
      19: goto          147
      22: goto          25
      25: aload         4
      27: instanceof    #654                // class scala/Some
      30: ifeq          134
      33: aload         4
      35: checkcast     #654                // class scala/Some
      38: astore        5
      40: aload         5
      42: invokevirtual #671                // Method scala/Some.value:()Ljava/lang/Object;
      45: checkcast     #672                // class "[Lai/h2o/sparkling/ml/internals/H2OModel;"
      48: astore        6
      50: new           #25                 // class scala/collection/mutable/ArrayOps$ofRef
      53: dup
      54: getstatic     #628                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      57: new           #25                 // class scala/collection/mutable/ArrayOps$ofRef
      60: dup
      61: getstatic     #628                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      64: aload         6
      66: checkcast     #674                // class "[Ljava/lang/Object;"
      69: invokevirtual #678                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
      72: invokespecial #681                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
      75: getstatic     #686                // Field scala/Array$.MODULE$:Lscala/Array$;
      78: getstatic     #691                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      81: ldc_w         #693                // class scala/Tuple2
      84: invokevirtual #696                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      87: invokevirtual #700                // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
      90: invokevirtual #704                // Method scala/collection/mutable/ArrayOps$ofRef.zipWithIndex:(Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      93: checkcast     #674                // class "[Ljava/lang/Object;"
      96: invokevirtual #678                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
      99: invokespecial #681                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     102: aload_1
     103: aload_2
     104: invokedynamic #714,  0            // InvokeDynamic #4:apply:(Ljava/lang/String;Lai/h2o/sparkling/ml/models/H2OMOJOSettings;)Lscala/Function1;
     109: getstatic     #686                // Field scala/Array$.MODULE$:Lscala/Array$;
     112: getstatic     #691                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     115: ldc_w         #716                // class ai/h2o/sparkling/ml/models/H2OMOJOModel
     118: invokevirtual #696                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     121: invokevirtual #700                // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
     124: invokevirtual #719                // Method scala/collection/mutable/ArrayOps$ofRef.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     127: checkcast     #721                // class "[Lai/h2o/sparkling/ml/models/H2OMOJOModel;"
     130: astore_3
     131: goto          147
     134: goto          137
     137: new           #723                // class scala/MatchError
     140: dup
     141: aload         4
     143: invokespecial #724                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     146: athrow
     147: aload_3
     148: areturn

  public ai.h2o.sparkling.ml.models.H2OMOJOModel toMOJOModel(java.lang.String, ai.h2o.sparkling.ml.models.H2OMOJOSettings, boolean);
    Code:
       0: aload_0
       1: invokevirtual #735                // Method downloadMojo:()Ljava/io/File;
       4: astore        4
       6: getstatic     #740                // Field ai/h2o/sparkling/ml/models/H2OMOJOModel$.MODULE$:Lai/h2o/sparkling/ml/models/H2OMOJOModel$;
       9: aload         4
      11: aload_1
      12: aload_2
      13: invokevirtual #744                // Method ai/h2o/sparkling/ml/models/H2OMOJOModel$.createFromMojo:(Ljava/io/File;Ljava/lang/String;Lai/h2o/sparkling/ml/models/H2OMOJOSettings;)Lai/h2o/sparkling/ml/models/H2OMOJOModel;
      16: astore        5
      18: iload_3
      19: ifeq          40
      22: aload_0
      23: aload_1
      24: aload_2
      25: invokespecial #746                // Method getCrossValidationMOJOModels:(Ljava/lang/String;Lai/h2o/sparkling/ml/models/H2OMOJOSettings;)[Lai/h2o/sparkling/ml/models/H2OMOJOModel;
      28: astore        6
      30: aload         5
      32: aload         6
      34: invokevirtual #750                // Method ai/h2o/sparkling/ml/models/H2OMOJOModel.setCrossValidationModels:([Lai/h2o/sparkling/ml/models/H2OMOJOModel;)Lai/h2o/sparkling/ml/models/H2OMOJOModel;
      37: goto          43
      40: getstatic     #756                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      43: pop
      44: aload         5
      46: areturn

  private final void LoggingLevel$lzycompute$1();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #410                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
       8: ifnonnull     23
      11: aload_0
      12: new           #12                 // class ai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$
      15: dup
      16: aload_0
      17: invokespecial #762                // Method ai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$."<init>":(Lai/h2o/sparkling/backend/utils/RestCommunication;)V
      20: putfield      #410                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
      23: aload_1
      24: monitorexit
      25: goto          31
      28: aload_1
      29: monitorexit
      30: athrow
      31: return
    Exception table:
       from    to  target type
           4    23    28   any

  public static final java.lang.String $anonfun$conf$1();
    Code:
       0: ldc_w         #765                // String H2OContext needs to be running!
       3: areturn

  public static final com.google.gson.JsonObject $anonfun$getDetails$1(ai.h2o.sparkling.ml.internals.H2OModel, java.io.InputStream);
    Code:
       0: aload_1
       1: invokestatic  #772                // Method org/apache/commons/io/IOUtils.toString:(Ljava/io/InputStream;)Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: aload_2
       7: getstatic     #777                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      10: checkcast     #779                // class scala/collection/Seq
      13: invokevirtual #781                // Method deserializeAsJsonObject:(Ljava/lang/String;Lscala/collection/Seq;)Lcom/google/gson/JsonObject;
      16: areturn

  public static final void $anonfun$tryDelete$2(ai.h2o.sparkling.ml.internals.H2OModel);
    Code:
       0: aload_0
       1: invokevirtual #787                // Method tryDelete:()V
       4: return

  public static final void $anonfun$tryDelete$1(ai.h2o.sparkling.ml.internals.H2OModel[]);
    Code:
       0: new           #25                 // class scala/collection/mutable/ArrayOps$ofRef
       3: dup
       4: getstatic     #628                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: aload_0
       8: checkcast     #674                // class "[Ljava/lang/Object;"
      11: invokevirtual #678                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
      14: invokespecial #681                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
      17: invokedynamic #796,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
      22: invokevirtual #797                // Method scala/collection/mutable/ArrayOps$ofRef.foreach:(Lscala/Function1;)V
      25: return

  public static final java.lang.String $anonfun$tryDelete$3(ai.h2o.sparkling.ml.internals.H2OModel);
    Code:
       0: new           #465                // class java/lang/StringBuilder
       3: dup
       4: ldc_w         #798                // int 35
       7: invokespecial #469                // Method java/lang/StringBuilder."<init>":(I)V
      10: ldc_w         #800                // String Unsuccessful try to delete model \'
      13: invokevirtual #475                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #457                // Method modelId:()Ljava/lang/String;
      20: invokevirtual #475                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc_w         #802                // String \'
      26: invokevirtual #475                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #480                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: areturn

  public static final void $anonfun$getCrossValidationModels$1(com.google.gson.JsonArray, ai.h2o.sparkling.ml.internals.H2OModel[], int);
    Code:
       0: aload_0
       1: iload_2
       2: invokevirtual #545                // Method com/google/gson/JsonArray.get:(I)Lcom/google/gson/JsonElement;
       5: invokevirtual #550                // Method com/google/gson/JsonElement.getAsJsonObject:()Lcom/google/gson/JsonObject;
       8: ldc_w         #807                // String name
      11: invokevirtual #811                // Method com/google/gson/JsonObject.getAsJsonPrimitive:(Ljava/lang/String;)Lcom/google/gson/JsonPrimitive;
      14: invokevirtual #816                // Method com/google/gson/JsonPrimitive.getAsString:()Ljava/lang/String;
      17: astore_3
      18: aload_1
      19: iload_2
      20: getstatic     #46                 // Field ai/h2o/sparkling/ml/internals/H2OModel$.MODULE$:Lai/h2o/sparkling/ml/internals/H2OModel$;
      23: aload_3
      24: invokevirtual #48                 // Method ai/h2o/sparkling/ml/internals/H2OModel$.apply:(Ljava/lang/String;)Lai/h2o/sparkling/ml/internals/H2OModel;
      27: aastore
      28: return

  public static final ai.h2o.sparkling.ml.models.H2OMOJOModel $anonfun$getCrossValidationMOJOModels$1(java.lang.String, ai.h2o.sparkling.ml.models.H2OMOJOSettings, scala.Tuple2);
    Code:
       0: aload_2
       1: astore        4
       3: aload         4
       5: ifnull        64
       8: aload         4
      10: invokevirtual #824                // Method scala/Tuple2._1:()Ljava/lang/Object;
      13: checkcast     #2                  // class ai/h2o/sparkling/ml/internals/H2OModel
      16: astore        5
      18: aload         4
      20: invokevirtual #827                // Method scala/Tuple2._2$mcI$sp:()I
      23: istore        6
      25: aload         5
      27: new           #465                // class java/lang/StringBuilder
      30: dup
      31: ldc_w         #828                // int 4
      34: invokespecial #469                // Method java/lang/StringBuilder."<init>":(I)V
      37: aload_0
      38: invokevirtual #475                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc_w         #830                // String _cv_
      44: invokevirtual #475                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: iload         6
      49: invokevirtual #833                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      52: invokevirtual #480                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: aload_1
      56: iconst_0
      57: invokevirtual #835                // Method toMOJOModel:(Ljava/lang/String;Lai/h2o/sparkling/ml/models/H2OMOJOSettings;Z)Lai/h2o/sparkling/ml/models/H2OMOJOModel;
      60: astore_3
      61: goto          77
      64: goto          67
      67: new           #723                // class scala/MatchError
      70: dup
      71: aload         4
      73: invokespecial #724                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      76: athrow
      77: aload_3
      78: areturn

  public ai.h2o.sparkling.ml.internals.H2OModel(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #421                // Field modelId:Ljava/lang/String;
       5: aload_0
       6: invokespecial #839                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #843                // InterfaceMethod org/apache/spark/internal/Logging.$init$:(Lorg/apache/spark/internal/Logging;)V
      13: aload_0
      14: invokestatic  #846                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.$init$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;)V
      17: aload_0
      18: invokestatic  #848                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.$init$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)V
      21: aload_0
      22: getstatic     #853                // Field ai/h2o/sparkling/H2OContext$.MODULE$:Lai/h2o/sparkling/H2OContext$;
      25: invokedynamic #859,  0            // InvokeDynamic #6:apply:()Lscala/Function0;
      30: invokevirtual #863                // Method ai/h2o/sparkling/H2OContext$.ensure:(Lscala/Function0;)Lai/h2o/sparkling/H2OContext;
      33: invokevirtual #868                // Method ai/h2o/sparkling/H2OContext.getConf:()Lai/h2o/sparkling/H2OConf;
      36: putfield      #424                // Field conf:Lai/h2o/sparkling/H2OConf;
      39: aload_0
      40: getstatic     #873                // Field ai/h2o/sparkling/backend/utils/RestApiUtils$.MODULE$:Lai/h2o/sparkling/backend/utils/RestApiUtils$;
      43: aload_0
      44: invokespecial #436                // Method conf:()Lai/h2o/sparkling/H2OConf;
      47: invokevirtual #877                // Method ai/h2o/sparkling/backend/utils/RestApiUtils$.getClusterEndpoint:(Lai/h2o/sparkling/H2OConf;)Ljava/net/URI;
      50: putfield      #427                // Field endpoint:Ljava/net/URI;
      53: return

  public static final java.lang.Object $anonfun$tryDelete$1$adapted(ai.h2o.sparkling.ml.internals.H2OModel[]);
    Code:
       0: aload_0
       1: invokestatic  #879                // Method $anonfun$tryDelete$1:([Lai/h2o/sparkling/ml/internals/H2OModel;)V
       4: getstatic     #756                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       7: areturn

  public static final java.lang.Object $anonfun$tryDelete$2$adapted(ai.h2o.sparkling.ml.internals.H2OModel);
    Code:
       0: aload_0
       1: invokestatic  #881                // Method $anonfun$tryDelete$2:(Lai/h2o/sparkling/ml/internals/H2OModel;)V
       4: getstatic     #756                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       7: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #893,  0            // InvokeDynamic #7:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
