Compiled from "H2OWord2VecBase.scala"
public abstract class ai.h2o.sparkling.ml.features.H2OWord2VecBase<P extends hex.Model$Parameters> extends ai.h2o.sparkling.ml.features.H2OFeatureEstimator<P> implements ai.h2o.sparkling.ml.params.H2OWord2VecExtraParams {
  private final org.apache.spark.ml.param.Param<java.lang.String> inputCol;

  private final org.apache.spark.ml.param.Param<java.lang.String> ai$h2o$sparkling$ml$params$HasOutputCol$$outputCol;

  public void validate(org.apache.spark.sql.types.StructType);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #56                 // InterfaceMethod ai/h2o/sparkling/ml/params/H2OWord2VecExtraParams.validate$:(Lai/h2o/sparkling/ml/params/H2OWord2VecExtraParams;Lorg/apache/spark/sql/types/StructType;)V
       5: return

  public scala.collection.Seq<org.apache.spark.sql.types.StructField> outputSchema();
    Code:
       0: aload_0
       1: invokestatic  #66                 // InterfaceMethod ai/h2o/sparkling/ml/params/H2OWord2VecExtraParams.outputSchema$:(Lai/h2o/sparkling/ml/params/H2OWord2VecExtraParams;)Lscala/collection/Seq;
       4: areturn

  public void copyExtraParams(ai.h2o.sparkling.ml.params.H2OWord2VecExtraParams);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #73                 // InterfaceMethod ai/h2o/sparkling/ml/params/H2OWord2VecExtraParams.copyExtraParams$:(Lai/h2o/sparkling/ml/params/H2OWord2VecExtraParams;Lai/h2o/sparkling/ml/params/H2OWord2VecExtraParams;)V
       5: return

  public void ai$h2o$sparkling$ml$params$HasInputColOnMOJO$$super$setSpecificParams(hex.genmodel.MojoModel);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #83                 // InterfaceMethod ai/h2o/sparkling/ml/models/SpecificMOJOParameters.setSpecificParams$:(Lai/h2o/sparkling/ml/models/SpecificMOJOParameters;Lhex/genmodel/MojoModel;)V
       5: return

  public java.lang.String getInputCol();
    Code:
       0: aload_0
       1: invokestatic  #92                 // InterfaceMethod ai/h2o/sparkling/ml/params/HasInputColOnMOJO.getInputCol$:(Lai/h2o/sparkling/ml/params/HasInputColOnMOJO;)Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.params.HasInputColOnMOJO setInputCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #99                 // InterfaceMethod ai/h2o/sparkling/ml/params/HasInputColOnMOJO.setInputCol$:(Lai/h2o/sparkling/ml/params/HasInputColOnMOJO;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/HasInputColOnMOJO;
       5: areturn

  public void setSpecificParams(hex.genmodel.MojoModel);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #105                // InterfaceMethod ai/h2o/sparkling/ml/params/HasInputColOnMOJO.setSpecificParams$:(Lai/h2o/sparkling/ml/params/HasInputColOnMOJO;Lhex/genmodel/MojoModel;)V
       5: return

  public java.lang.String getOutputCol();
    Code:
       0: aload_0
       1: invokestatic  #112                // InterfaceMethod ai/h2o/sparkling/ml/params/HasOutputCol.getOutputCol$:(Lai/h2o/sparkling/ml/params/HasOutputCol;)Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.params.HasOutputCol setOutputCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #118                // InterfaceMethod ai/h2o/sparkling/ml/params/HasOutputCol.setOutputCol$:(Lai/h2o/sparkling/ml/params/HasOutputCol;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/HasOutputCol;
       5: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> inputCol();
    Code:
       0: aload_0
       1: getfield      #122                // Field inputCol:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public void ai$h2o$sparkling$ml$params$HasInputColOnMOJO$_setter_$inputCol_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #122                // Field inputCol:Lorg/apache/spark/ml/param/Param;
       5: return

  public org.apache.spark.ml.param.Param<java.lang.String> ai$h2o$sparkling$ml$params$HasOutputCol$$outputCol();
    Code:
       0: aload_0
       1: getfield      #128                // Field ai$h2o$sparkling$ml$params$HasOutputCol$$outputCol:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$HasOutputCol$_setter_$ai$h2o$sparkling$ml$params$HasOutputCol$$outputCol_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #128                // Field ai$h2o$sparkling$ml$params$HasOutputCol$$outputCol:Lorg/apache/spark/ml/param/Param;
       5: return

  public ai.h2o.sparkling.ml.models.H2OWord2VecMOJOModel fit(org.apache.spark.sql.Dataset<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #138                // Method org/apache/spark/sql/Dataset.schema:()Lorg/apache/spark/sql/types/StructType;
       5: invokevirtual #140                // Method validate:(Lorg/apache/spark/sql/types/StructType;)V
       8: getstatic     #146                // Field org/apache/spark/sql/functions$.MODULE$:Lorg/apache/spark/sql/functions$;
      11: invokedynamic #169,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
      16: getstatic     #174                // Field scala/reflect/runtime/package$.MODULE$:Lscala/reflect/runtime/package$;
      19: invokevirtual #178                // Method scala/reflect/runtime/package$.universe:()Lscala/reflect/api/JavaUniverse;
      22: astore_3
      23: getstatic     #174                // Field scala/reflect/runtime/package$.MODULE$:Lscala/reflect/runtime/package$;
      26: invokevirtual #178                // Method scala/reflect/runtime/package$.universe:()Lscala/reflect/api/JavaUniverse;
      29: ldc           #2                  // class ai/h2o/sparkling/ml/features/H2OWord2VecBase
      31: invokevirtual #184                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      34: invokeinterface #188,  2          // InterfaceMethod scala/reflect/api/JavaUniverse.runtimeMirror:(Ljava/lang/ClassLoader;)Lscala/reflect/api/JavaUniverse$JavaMirror;
      39: astore        4
      41: aload_3
      42: checkcast     #41                 // class scala/reflect/api/TypeTags
      45: invokeinterface #191,  1          // InterfaceMethod scala/reflect/api/TypeTags.TypeTag:()Lscala/reflect/api/TypeTags$TypeTag$;
      50: aload         4
      52: checkcast     #193                // class scala/reflect/api/Mirror
      55: new           #13                 // class ai/h2o/sparkling/ml/features/H2OWord2VecBase$$typecreator1$1
      58: dup
      59: aconst_null
      60: invokespecial #197                // Method ai/h2o/sparkling/ml/features/H2OWord2VecBase$$typecreator1$1."<init>":(Lai/h2o/sparkling/ml/features/H2OWord2VecBase;)V
      63: invokevirtual #200                // Method scala/reflect/api/TypeTags$TypeTag$.apply:(Lscala/reflect/api/Mirror;Lscala/reflect/api/TypeCreator;)Lscala/reflect/api/TypeTags$TypeTag;
      66: getstatic     #174                // Field scala/reflect/runtime/package$.MODULE$:Lscala/reflect/runtime/package$;
      69: invokevirtual #178                // Method scala/reflect/runtime/package$.universe:()Lscala/reflect/api/JavaUniverse;
      72: astore        5
      74: getstatic     #174                // Field scala/reflect/runtime/package$.MODULE$:Lscala/reflect/runtime/package$;
      77: invokevirtual #178                // Method scala/reflect/runtime/package$.universe:()Lscala/reflect/api/JavaUniverse;
      80: ldc           #2                  // class ai/h2o/sparkling/ml/features/H2OWord2VecBase
      82: invokevirtual #184                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      85: invokeinterface #188,  2          // InterfaceMethod scala/reflect/api/JavaUniverse.runtimeMirror:(Ljava/lang/ClassLoader;)Lscala/reflect/api/JavaUniverse$JavaMirror;
      90: astore        6
      92: aload         5
      94: checkcast     #41                 // class scala/reflect/api/TypeTags
      97: invokeinterface #191,  1          // InterfaceMethod scala/reflect/api/TypeTags.TypeTag:()Lscala/reflect/api/TypeTags$TypeTag$;
     102: aload         6
     104: checkcast     #193                // class scala/reflect/api/Mirror
     107: new           #16                 // class ai/h2o/sparkling/ml/features/H2OWord2VecBase$$typecreator2$1
     110: dup
     111: aconst_null
     112: invokespecial #201                // Method ai/h2o/sparkling/ml/features/H2OWord2VecBase$$typecreator2$1."<init>":(Lai/h2o/sparkling/ml/features/H2OWord2VecBase;)V
     115: invokevirtual #200                // Method scala/reflect/api/TypeTags$TypeTag$.apply:(Lscala/reflect/api/Mirror;Lscala/reflect/api/TypeCreator;)Lscala/reflect/api/TypeTags$TypeTag;
     118: invokevirtual #205                // Method org/apache/spark/sql/functions$.udf:(Lscala/Function1;Lscala/reflect/api/TypeTags$TypeTag;Lscala/reflect/api/TypeTags$TypeTag;)Lorg/apache/spark/sql/expressions/UserDefinedFunction;
     121: astore_2
     122: aload_0
     123: invokevirtual #207                // Method getInputCol:()Ljava/lang/String;
     126: astore        7
     128: aload_1
     129: getstatic     #146                // Field org/apache/spark/sql/functions$.MODULE$:Lorg/apache/spark/sql/functions$;
     132: aload         7
     134: invokevirtual #211                // Method org/apache/spark/sql/functions$.col:(Ljava/lang/String;)Lorg/apache/spark/sql/Column;
     137: invokevirtual #217                // Method org/apache/spark/sql/Column.isNotNull:()Lorg/apache/spark/sql/Column;
     140: invokevirtual #221                // Method org/apache/spark/sql/Dataset.filter:(Lorg/apache/spark/sql/Column;)Lorg/apache/spark/sql/Dataset;
     143: getstatic     #146                // Field org/apache/spark/sql/functions$.MODULE$:Lorg/apache/spark/sql/functions$;
     146: getstatic     #146                // Field org/apache/spark/sql/functions$.MODULE$:Lorg/apache/spark/sql/functions$;
     149: aload         7
     151: invokevirtual #211                // Method org/apache/spark/sql/functions$.col:(Ljava/lang/String;)Lorg/apache/spark/sql/Column;
     154: invokevirtual #225                // Method org/apache/spark/sql/functions$.size:(Lorg/apache/spark/sql/Column;)Lorg/apache/spark/sql/Column;
     157: iconst_0
     158: invokestatic  #231                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     161: invokevirtual #235                // Method org/apache/spark/sql/Column.$eq$bang$eq:(Ljava/lang/Object;)Lorg/apache/spark/sql/Column;
     164: invokevirtual #221                // Method org/apache/spark/sql/Dataset.filter:(Lorg/apache/spark/sql/Column;)Lorg/apache/spark/sql/Dataset;
     167: aload         7
     169: aload_2
     170: getstatic     #240                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     173: iconst_1
     174: anewarray     #213                // class org/apache/spark/sql/Column
     177: dup
     178: iconst_0
     179: getstatic     #146                // Field org/apache/spark/sql/functions$.MODULE$:Lorg/apache/spark/sql/functions$;
     182: aload         7
     184: invokevirtual #211                // Method org/apache/spark/sql/functions$.col:(Ljava/lang/String;)Lorg/apache/spark/sql/Column;
     187: aastore
     188: checkcast     #242                // class "[Ljava/lang/Object;"
     191: invokevirtual #246                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     194: invokevirtual #251                // Method org/apache/spark/sql/expressions/UserDefinedFunction.apply:(Lscala/collection/Seq;)Lorg/apache/spark/sql/Column;
     197: invokevirtual #255                // Method org/apache/spark/sql/Dataset.withColumn:(Ljava/lang/String;Lorg/apache/spark/sql/Column;)Lorg/apache/spark/sql/Dataset;
     200: aload         7
     202: getstatic     #146                // Field org/apache/spark/sql/functions$.MODULE$:Lorg/apache/spark/sql/functions$;
     205: getstatic     #146                // Field org/apache/spark/sql/functions$.MODULE$:Lorg/apache/spark/sql/functions$;
     208: aload         7
     210: invokevirtual #211                // Method org/apache/spark/sql/functions$.col:(Ljava/lang/String;)Lorg/apache/spark/sql/Column;
     213: invokevirtual #258                // Method org/apache/spark/sql/functions$.explode:(Lorg/apache/spark/sql/Column;)Lorg/apache/spark/sql/Column;
     216: invokevirtual #255                // Method org/apache/spark/sql/Dataset.withColumn:(Ljava/lang/String;Lorg/apache/spark/sql/Column;)Lorg/apache/spark/sql/Dataset;
     219: aload         7
     221: getstatic     #240                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     224: iconst_0
     225: anewarray     #260                // class java/lang/String
     228: checkcast     #242                // class "[Ljava/lang/Object;"
     231: invokevirtual #246                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     234: invokevirtual #264                // Method org/apache/spark/sql/Dataset.select:(Ljava/lang/String;Lscala/collection/Seq;)Lorg/apache/spark/sql/Dataset;
     237: astore        8
     239: new           #29                 // class scala/collection/mutable/ArrayOps$ofRef
     242: dup
     243: getstatic     #240                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     246: aload         8
     248: iconst_1
     249: invokevirtual #268                // Method org/apache/spark/sql/Dataset.take:(I)Ljava/lang/Object;
     252: checkcast     #242                // class "[Ljava/lang/Object;"
     255: invokevirtual #272                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     258: invokespecial #275                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     261: invokevirtual #279                // Method scala/collection/mutable/ArrayOps$ofRef.isEmpty:()Z
     264: ifeq          278
     267: new           #281                // class java/lang/IllegalArgumentException
     270: dup
     271: ldc_w         #283                // String Empty DataFrame as an input for the H2OWord2Vec is not supported.
     274: invokespecial #286                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     277: athrow
     278: aload_0
     279: aload         8
     281: invokespecial #289                // Method ai/h2o/sparkling/ml/features/H2OFeatureEstimator.fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OFeatureMOJOModel;
     284: checkcast     #291                // class ai/h2o/sparkling/ml/models/H2OWord2VecMOJOModel
     287: astore        9
     289: aload_0
     290: aload         9
     292: invokevirtual #293                // Method copyExtraParams:(Lai/h2o/sparkling/ml/params/H2OWord2VecExtraParams;)V
     295: aload         9
     297: areturn

  public java.lang.String[] getColumnsToString();
    Code:
       0: aload_0
       1: invokevirtual #308                // Method getInputCols:()[Ljava/lang/String;
       4: areturn

  public java.lang.String[] getInputCols();
    Code:
       0: iconst_1
       1: anewarray     #260                // class java/lang/String
       4: dup
       5: iconst_0
       6: aload_0
       7: invokevirtual #207                // Method getInputCol:()Ljava/lang/String;
      10: aastore
      11: checkcast     #242                // class "[Ljava/lang/Object;"
      14: checkcast     #310                // class "[Ljava/lang/String;"
      17: areturn

  public ai.h2o.sparkling.ml.features.H2OWord2VecBase<P> setInputCols(java.lang.String[]);
    Code:
       0: getstatic     #240                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_1
       4: arraylength
       5: iconst_1
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokedynamic #324,  0            // InvokeDynamic #1:apply:()Lscala/Function0;
      19: invokevirtual #328                // Method scala/Predef$.require:(ZLscala/Function0;)V
      22: aload_0
      23: new           #29                 // class scala/collection/mutable/ArrayOps$ofRef
      26: dup
      27: getstatic     #240                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      30: aload_1
      31: checkcast     #242                // class "[Ljava/lang/Object;"
      34: invokevirtual #272                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
      37: invokespecial #275                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
      40: invokevirtual #331                // Method scala/collection/mutable/ArrayOps$ofRef.head:()Ljava/lang/Object;
      43: checkcast     #260                // class java/lang/String
      46: invokevirtual #333                // Method setInputCol:(Ljava/lang/String;)Lai/h2o/sparkling/ml/params/HasInputColOnMOJO;
      49: checkcast     #2                  // class ai/h2o/sparkling/ml/features/H2OWord2VecBase
      52: areturn

  public ai.h2o.sparkling.ml.algos.H2OAlgoCommonUtils setInputCols(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #337                // Method setInputCols:([Ljava/lang/String;)Lai/h2o/sparkling/ml/features/H2OWord2VecBase;
       5: areturn

  public org.apache.spark.ml.Model fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #340                // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OWord2VecMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2OMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #340                // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OWord2VecMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2OFeatureMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #340                // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OWord2VecMOJOModel;
       5: areturn

  public static final scala.collection.Seq $anonfun$fit$1(scala.collection.Seq);
    Code:
       0: aload_0
       1: ldc_w         #343                // String
       4: getstatic     #348                // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
       7: invokevirtual #352                // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      10: invokeinterface #358,  3          // InterfaceMethod scala/collection/Seq.$colon$plus:(Ljava/lang/Object;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      15: checkcast     #354                // class scala/collection/Seq
      18: areturn

  public static final java.lang.String $anonfun$setInputCols$1();
    Code:
       0: ldc_w         #361                // String Word2Vec supports only one input column
       3: areturn

  public ai.h2o.sparkling.ml.features.H2OWord2VecBase(scala.reflect.ClassTag<P>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #366                // Method ai/h2o/sparkling/ml/features/H2OFeatureEstimator."<init>":(Lscala/reflect/ClassTag;)V
       5: aload_0
       6: invokestatic  #370                // InterfaceMethod ai/h2o/sparkling/ml/params/HasOutputCol.$init$:(Lai/h2o/sparkling/ml/params/HasOutputCol;)V
       9: aload_0
      10: invokestatic  #373                // InterfaceMethod ai/h2o/sparkling/ml/models/SpecificMOJOParameters.$init$:(Lai/h2o/sparkling/ml/models/SpecificMOJOParameters;)V
      13: aload_0
      14: invokestatic  #376                // InterfaceMethod ai/h2o/sparkling/ml/params/HasInputColOnMOJO.$init$:(Lai/h2o/sparkling/ml/params/HasInputColOnMOJO;)V
      17: aload_0
      18: invokestatic  #378                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OWord2VecExtraParams.$init$:(Lai/h2o/sparkling/ml/params/H2OWord2VecExtraParams;)V
      21: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #391,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
