Compiled from "H2OAutoEncoder.scala"
public class ai.h2o.sparkling.ml.features.H2OAutoEncoder extends ai.h2o.sparkling.ml.features.H2OAutoEncoderBase<hex.deeplearning.DeepLearningModel$DeepLearningParameters> implements ai.h2o.sparkling.ml.params.H2OAutoEncoderParams {
  private final java.lang.String uid;

  private final org.apache.spark.ml.param.Param<java.lang.String> activation;

  private final org.apache.spark.ml.param.IntArrayParam hidden;

  private final org.apache.spark.ml.param.DoubleParam epochs;

  private final org.apache.spark.ml.param.LongParam trainSamplesPerIteration;

  private final org.apache.spark.ml.param.DoubleParam targetRatioCommToComp;

  private final org.apache.spark.ml.param.LongParam seed;

  private final org.apache.spark.ml.param.BooleanParam adaptiveRate;

  private final org.apache.spark.ml.param.DoubleParam rho;

  private final org.apache.spark.ml.param.DoubleParam epsilon;

  private final org.apache.spark.ml.param.DoubleParam rate;

  private final org.apache.spark.ml.param.DoubleParam rateAnnealing;

  private final org.apache.spark.ml.param.DoubleParam rateDecay;

  private final org.apache.spark.ml.param.DoubleParam momentumStart;

  private final org.apache.spark.ml.param.DoubleParam momentumRamp;

  private final org.apache.spark.ml.param.DoubleParam momentumStable;

  private final org.apache.spark.ml.param.BooleanParam nesterovAcceleratedGradient;

  private final org.apache.spark.ml.param.DoubleParam inputDropoutRatio;

  private final ai.h2o.sparkling.ml.params.NullableDoubleArrayParam hiddenDropoutRatios;

  private final org.apache.spark.ml.param.DoubleParam l1;

  private final org.apache.spark.ml.param.DoubleParam l2;

  private final org.apache.spark.ml.param.FloatParam maxW2;

  private final org.apache.spark.ml.param.Param<java.lang.String> initialWeightDistribution;

  private final org.apache.spark.ml.param.DoubleParam initialWeightScale;

  private final org.apache.spark.ml.param.Param<java.lang.String> loss;

  private final org.apache.spark.ml.param.DoubleParam scoreInterval;

  private final org.apache.spark.ml.param.LongParam scoreTrainingSamples;

  private final org.apache.spark.ml.param.LongParam scoreValidationSamples;

  private final org.apache.spark.ml.param.DoubleParam scoreDutyCycle;

  private final org.apache.spark.ml.param.BooleanParam quietMode;

  private final org.apache.spark.ml.param.Param<java.lang.String> scoreValidationSampling;

  private final org.apache.spark.ml.param.BooleanParam overwriteWithBestModel;

  private final org.apache.spark.ml.param.BooleanParam useAllFactorLevels;

  private final org.apache.spark.ml.param.BooleanParam standardize;

  private final org.apache.spark.ml.param.BooleanParam diagnostics;

  private final org.apache.spark.ml.param.BooleanParam calculateFeatureImportances;

  private final org.apache.spark.ml.param.BooleanParam fastMode;

  private final org.apache.spark.ml.param.BooleanParam forceLoadBalance;

  private final org.apache.spark.ml.param.BooleanParam replicateTrainingData;

  private final org.apache.spark.ml.param.BooleanParam singleNodeMode;

  private final org.apache.spark.ml.param.BooleanParam shuffleTrainingData;

  private final org.apache.spark.ml.param.Param<java.lang.String> missingValuesHandling;

  private final org.apache.spark.ml.param.BooleanParam sparse;

  private final org.apache.spark.ml.param.DoubleParam averageActivation;

  private final org.apache.spark.ml.param.DoubleParam sparsityBeta;

  private final org.apache.spark.ml.param.IntParam maxCategoricalFeatures;

  private final org.apache.spark.ml.param.BooleanParam reproducible;

  private final org.apache.spark.ml.param.BooleanParam exportWeightsAndBiases;

  private final org.apache.spark.ml.param.IntParam miniBatchSize;

  private final org.apache.spark.ml.param.BooleanParam elasticAveraging;

  private final org.apache.spark.ml.param.DoubleParam elasticAveragingMovingRate;

  private final org.apache.spark.ml.param.DoubleParam elasticAveragingRegularization;

  private final ai.h2o.sparkling.ml.params.NullableStringParam modelId;

  private final ai.h2o.sparkling.ml.params.NullableStringParam weightCol;

  private final org.apache.spark.ml.param.Param<java.lang.String> categoricalEncoding;

  private final org.apache.spark.ml.param.BooleanParam ignoreConstCols;

  private final org.apache.spark.ml.param.BooleanParam scoreEachIteration;

  private final org.apache.spark.ml.param.IntParam stoppingRounds;

  private final org.apache.spark.ml.param.DoubleParam maxRuntimeSecs;

  private final org.apache.spark.ml.param.Param<java.lang.String> stoppingMetric;

  private final org.apache.spark.ml.param.DoubleParam stoppingTolerance;

  private final ai.h2o.sparkling.ml.params.NullableStringParam exportCheckpointsDir;

  private final ai.h2o.sparkling.ml.params.NullableStringArrayParam ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols;

  private final ai.h2o.sparkling.ml.params.NullableMatrixArrayParam ai$h2o$sparkling$ml$params$HasInitialWeights$$initialWeights;

  private final ai.h2o.sparkling.ml.params.NullableVectorArrayParam ai$h2o$sparkling$ml$params$HasInitialBiases$$initialBiases;

  public static org.apache.spark.ml.util.MLReader<ai.h2o.sparkling.ml.features.H2OAutoEncoder> read();
    Code:
       0: getstatic     #104                // Field ai/h2o/sparkling/ml/features/H2OAutoEncoder$.MODULE$:Lai/h2o/sparkling/ml/features/H2OAutoEncoder$;
       3: invokevirtual #106                // Method ai/h2o/sparkling/ml/features/H2OAutoEncoder$.read:()Lorg/apache/spark/ml/util/MLReader;
       6: areturn

  public static java.lang.Object load(java.lang.String);
    Code:
       0: getstatic     #104                // Field ai/h2o/sparkling/ml/features/H2OAutoEncoder$.MODULE$:Lai/h2o/sparkling/ml/features/H2OAutoEncoder$;
       3: aload_0
       4: invokevirtual #111                // Method ai/h2o/sparkling/ml/features/H2OAutoEncoder$.load:(Ljava/lang/String;)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$$super$getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #117                // Method ai/h2o/sparkling/ml/features/H2OAutoEncoderBase.getH2OAlgorithmParams:(Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #128                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;)Lscala/collection/immutable/Map;
       4: areturn

  public scala.reflect.ClassTag<hex.deeplearning.DeepLearningModel$DeepLearningParameters> paramTag();
    Code:
       0: aload_0
       1: invokestatic  #135                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.paramTag$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Lscala/reflect/ClassTag;
       4: areturn

  public java.lang.String getActivation();
    Code:
       0: aload_0
       1: invokestatic  #141                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getActivation$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Ljava/lang/String;
       4: areturn

  public int[] getHidden();
    Code:
       0: aload_0
       1: invokestatic  #147                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getHidden$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)[I
       4: areturn

  public double getEpochs();
    Code:
       0: aload_0
       1: invokestatic  #153                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getEpochs$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)D
       4: dreturn

  public long getTrainSamplesPerIteration();
    Code:
       0: aload_0
       1: invokestatic  #159                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getTrainSamplesPerIteration$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)J
       4: lreturn

  public double getTargetRatioCommToComp();
    Code:
       0: aload_0
       1: invokestatic  #163                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getTargetRatioCommToComp$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)D
       4: dreturn

  public long getSeed();
    Code:
       0: aload_0
       1: invokestatic  #167                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getSeed$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)J
       4: lreturn

  public boolean getAdaptiveRate();
    Code:
       0: aload_0
       1: invokestatic  #173                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getAdaptiveRate$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Z
       4: ireturn

  public double getRho();
    Code:
       0: aload_0
       1: invokestatic  #177                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getRho$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)D
       4: dreturn

  public double getEpsilon();
    Code:
       0: aload_0
       1: invokestatic  #181                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getEpsilon$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)D
       4: dreturn

  public double getRate();
    Code:
       0: aload_0
       1: invokestatic  #185                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getRate$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)D
       4: dreturn

  public double getRateAnnealing();
    Code:
       0: aload_0
       1: invokestatic  #189                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getRateAnnealing$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)D
       4: dreturn

  public double getRateDecay();
    Code:
       0: aload_0
       1: invokestatic  #193                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getRateDecay$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)D
       4: dreturn

  public double getMomentumStart();
    Code:
       0: aload_0
       1: invokestatic  #197                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getMomentumStart$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)D
       4: dreturn

  public double getMomentumRamp();
    Code:
       0: aload_0
       1: invokestatic  #201                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getMomentumRamp$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)D
       4: dreturn

  public double getMomentumStable();
    Code:
       0: aload_0
       1: invokestatic  #205                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getMomentumStable$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)D
       4: dreturn

  public boolean getNesterovAcceleratedGradient();
    Code:
       0: aload_0
       1: invokestatic  #209                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getNesterovAcceleratedGradient$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Z
       4: ireturn

  public double getInputDropoutRatio();
    Code:
       0: aload_0
       1: invokestatic  #213                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getInputDropoutRatio$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)D
       4: dreturn

  public double[] getHiddenDropoutRatios();
    Code:
       0: aload_0
       1: invokestatic  #219                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getHiddenDropoutRatios$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)[D
       4: areturn

  public double getL1();
    Code:
       0: aload_0
       1: invokestatic  #223                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getL1$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)D
       4: dreturn

  public double getL2();
    Code:
       0: aload_0
       1: invokestatic  #227                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getL2$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)D
       4: dreturn

  public float getMaxW2();
    Code:
       0: aload_0
       1: invokestatic  #233                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getMaxW2$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)F
       4: freturn

  public java.lang.String getInitialWeightDistribution();
    Code:
       0: aload_0
       1: invokestatic  #237                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getInitialWeightDistribution$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Ljava/lang/String;
       4: areturn

  public double getInitialWeightScale();
    Code:
       0: aload_0
       1: invokestatic  #241                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getInitialWeightScale$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)D
       4: dreturn

  public java.lang.String getLoss();
    Code:
       0: aload_0
       1: invokestatic  #245                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getLoss$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Ljava/lang/String;
       4: areturn

  public double getScoreInterval();
    Code:
       0: aload_0
       1: invokestatic  #249                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getScoreInterval$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)D
       4: dreturn

  public long getScoreTrainingSamples();
    Code:
       0: aload_0
       1: invokestatic  #253                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getScoreTrainingSamples$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)J
       4: lreturn

  public long getScoreValidationSamples();
    Code:
       0: aload_0
       1: invokestatic  #257                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getScoreValidationSamples$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)J
       4: lreturn

  public double getScoreDutyCycle();
    Code:
       0: aload_0
       1: invokestatic  #261                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getScoreDutyCycle$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)D
       4: dreturn

  public boolean getQuietMode();
    Code:
       0: aload_0
       1: invokestatic  #265                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getQuietMode$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Z
       4: ireturn

  public java.lang.String getScoreValidationSampling();
    Code:
       0: aload_0
       1: invokestatic  #269                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getScoreValidationSampling$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Ljava/lang/String;
       4: areturn

  public boolean getOverwriteWithBestModel();
    Code:
       0: aload_0
       1: invokestatic  #273                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getOverwriteWithBestModel$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Z
       4: ireturn

  public boolean getUseAllFactorLevels();
    Code:
       0: aload_0
       1: invokestatic  #277                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getUseAllFactorLevels$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Z
       4: ireturn

  public boolean getStandardize();
    Code:
       0: aload_0
       1: invokestatic  #281                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getStandardize$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Z
       4: ireturn

  public boolean getDiagnostics();
    Code:
       0: aload_0
       1: invokestatic  #285                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getDiagnostics$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Z
       4: ireturn

  public boolean getCalculateFeatureImportances();
    Code:
       0: aload_0
       1: invokestatic  #289                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getCalculateFeatureImportances$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Z
       4: ireturn

  public boolean getFastMode();
    Code:
       0: aload_0
       1: invokestatic  #293                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getFastMode$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Z
       4: ireturn

  public boolean getForceLoadBalance();
    Code:
       0: aload_0
       1: invokestatic  #297                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getForceLoadBalance$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Z
       4: ireturn

  public boolean getReplicateTrainingData();
    Code:
       0: aload_0
       1: invokestatic  #301                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getReplicateTrainingData$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Z
       4: ireturn

  public boolean getSingleNodeMode();
    Code:
       0: aload_0
       1: invokestatic  #305                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getSingleNodeMode$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Z
       4: ireturn

  public boolean getShuffleTrainingData();
    Code:
       0: aload_0
       1: invokestatic  #309                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getShuffleTrainingData$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Z
       4: ireturn

  public java.lang.String getMissingValuesHandling();
    Code:
       0: aload_0
       1: invokestatic  #313                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getMissingValuesHandling$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Ljava/lang/String;
       4: areturn

  public boolean getSparse();
    Code:
       0: aload_0
       1: invokestatic  #317                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getSparse$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Z
       4: ireturn

  public double getAverageActivation();
    Code:
       0: aload_0
       1: invokestatic  #321                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getAverageActivation$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)D
       4: dreturn

  public double getSparsityBeta();
    Code:
       0: aload_0
       1: invokestatic  #325                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getSparsityBeta$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)D
       4: dreturn

  public int getMaxCategoricalFeatures();
    Code:
       0: aload_0
       1: invokestatic  #331                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getMaxCategoricalFeatures$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)I
       4: ireturn

  public boolean getReproducible();
    Code:
       0: aload_0
       1: invokestatic  #335                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getReproducible$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Z
       4: ireturn

  public boolean getExportWeightsAndBiases();
    Code:
       0: aload_0
       1: invokestatic  #339                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getExportWeightsAndBiases$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Z
       4: ireturn

  public int getMiniBatchSize();
    Code:
       0: aload_0
       1: invokestatic  #343                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getMiniBatchSize$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)I
       4: ireturn

  public boolean getElasticAveraging();
    Code:
       0: aload_0
       1: invokestatic  #347                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getElasticAveraging$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Z
       4: ireturn

  public double getElasticAveragingMovingRate();
    Code:
       0: aload_0
       1: invokestatic  #351                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getElasticAveragingMovingRate$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)D
       4: dreturn

  public double getElasticAveragingRegularization();
    Code:
       0: aload_0
       1: invokestatic  #355                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getElasticAveragingRegularization$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)D
       4: dreturn

  public java.lang.String getModelId();
    Code:
       0: aload_0
       1: invokestatic  #359                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getModelId$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getWeightCol();
    Code:
       0: aload_0
       1: invokestatic  #363                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getWeightCol$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getCategoricalEncoding();
    Code:
       0: aload_0
       1: invokestatic  #367                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getCategoricalEncoding$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Ljava/lang/String;
       4: areturn

  public boolean getIgnoreConstCols();
    Code:
       0: aload_0
       1: invokestatic  #371                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getIgnoreConstCols$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Z
       4: ireturn

  public boolean getScoreEachIteration();
    Code:
       0: aload_0
       1: invokestatic  #375                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getScoreEachIteration$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Z
       4: ireturn

  public int getStoppingRounds();
    Code:
       0: aload_0
       1: invokestatic  #379                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getStoppingRounds$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)I
       4: ireturn

  public double getMaxRuntimeSecs();
    Code:
       0: aload_0
       1: invokestatic  #383                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getMaxRuntimeSecs$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)D
       4: dreturn

  public java.lang.String getStoppingMetric();
    Code:
       0: aload_0
       1: invokestatic  #387                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getStoppingMetric$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Ljava/lang/String;
       4: areturn

  public double getStoppingTolerance();
    Code:
       0: aload_0
       1: invokestatic  #391                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getStoppingTolerance$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)D
       4: dreturn

  public java.lang.String getExportCheckpointsDir();
    Code:
       0: aload_0
       1: invokestatic  #395                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getExportCheckpointsDir$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setActivation(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #402                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setActivation$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setHidden(int[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #408                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setHidden$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;[I)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setEpochs(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #415                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setEpochs$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;D)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setTrainSamplesPerIteration(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #422                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setTrainSamplesPerIteration$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;J)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setTargetRatioCommToComp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #427                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setTargetRatioCommToComp$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;D)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setSeed(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #431                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setSeed$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;J)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setAdaptiveRate(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #437                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setAdaptiveRate$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Z)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setRho(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #442                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setRho$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;D)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setEpsilon(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #446                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setEpsilon$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;D)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setRate(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #450                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setRate$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;D)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setRateAnnealing(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #454                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setRateAnnealing$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;D)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setRateDecay(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #458                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setRateDecay$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;D)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setMomentumStart(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #462                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setMomentumStart$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;D)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setMomentumRamp(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #466                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setMomentumRamp$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;D)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setMomentumStable(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #470                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setMomentumStable$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;D)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setNesterovAcceleratedGradient(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #474                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setNesterovAcceleratedGradient$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Z)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setInputDropoutRatio(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #478                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setInputDropoutRatio$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;D)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setHiddenDropoutRatios(double[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #484                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setHiddenDropoutRatios$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;[D)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setL1(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #489                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setL1$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;D)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setL2(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #493                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setL2$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;D)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setMaxW2(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #499                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setMaxW2$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;F)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setInitialWeightDistribution(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #504                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setInitialWeightDistribution$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setInitialWeightScale(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #508                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setInitialWeightScale$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;D)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setLoss(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #512                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setLoss$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setScoreInterval(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #516                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setScoreInterval$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;D)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setScoreTrainingSamples(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #520                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setScoreTrainingSamples$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;J)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setScoreValidationSamples(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #524                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setScoreValidationSamples$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;J)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setScoreDutyCycle(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #528                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setScoreDutyCycle$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;D)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setQuietMode(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #532                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setQuietMode$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Z)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setScoreValidationSampling(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #536                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setScoreValidationSampling$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setOverwriteWithBestModel(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #540                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setOverwriteWithBestModel$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Z)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setUseAllFactorLevels(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #544                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setUseAllFactorLevels$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Z)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setStandardize(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #548                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setStandardize$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Z)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setDiagnostics(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #552                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setDiagnostics$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Z)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setCalculateFeatureImportances(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #556                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setCalculateFeatureImportances$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Z)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setFastMode(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #560                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setFastMode$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Z)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setForceLoadBalance(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #564                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setForceLoadBalance$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Z)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setReplicateTrainingData(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #568                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setReplicateTrainingData$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Z)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setSingleNodeMode(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #572                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setSingleNodeMode$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Z)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setShuffleTrainingData(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #576                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setShuffleTrainingData$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Z)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setMissingValuesHandling(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #580                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setMissingValuesHandling$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setSparse(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #584                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setSparse$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Z)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setAverageActivation(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #588                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setAverageActivation$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;D)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setSparsityBeta(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #592                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setSparsityBeta$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;D)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setMaxCategoricalFeatures(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #598                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setMaxCategoricalFeatures$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;I)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setReproducible(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #603                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setReproducible$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Z)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setExportWeightsAndBiases(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #607                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setExportWeightsAndBiases$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Z)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setMiniBatchSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #611                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setMiniBatchSize$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;I)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setElasticAveraging(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #615                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setElasticAveraging$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Z)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setElasticAveragingMovingRate(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #619                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setElasticAveragingMovingRate$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;D)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setElasticAveragingRegularization(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #623                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setElasticAveragingRegularization$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;D)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setModelId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #627                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setModelId$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setWeightCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #631                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setWeightCol$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setCategoricalEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #635                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setCategoricalEncoding$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setIgnoreConstCols(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #639                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setIgnoreConstCols$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Z)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setScoreEachIteration(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #643                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setScoreEachIteration$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Z)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setStoppingRounds(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #647                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setStoppingRounds$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;I)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setMaxRuntimeSecs(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #651                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setMaxRuntimeSecs$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;D)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setStoppingMetric(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #655                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setStoppingMetric$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setStoppingTolerance(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #659                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setStoppingTolerance$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;D)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoEncoderParams setExportCheckpointsDir(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #663                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.setExportCheckpointsDir$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #668                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getH2OAlgorithmParams$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OAutoEncoderParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #672                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getH2OAutoEncoderParams$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.String> getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #677                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$HasIgnoredCols$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #683                // InterfaceMethod ai/h2o/sparkling/ml/params/HasInitialWeights.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/HasInitialWeights;)Lscala/collection/immutable/Map;
       4: areturn

  public java.lang.String[] getIgnoredCols();
    Code:
       0: aload_0
       1: invokestatic  #689                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.getIgnoredCols$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;)[Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.params.HasIgnoredCols setIgnoredCols(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #695                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.setIgnoredCols$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;[Ljava/lang/String;)Lai/h2o/sparkling/ml/params/HasIgnoredCols;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getIgnoredColsParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #701                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.getIgnoredColsParam$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$HasInitialWeights$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #707                // InterfaceMethod ai/h2o/sparkling/ml/params/HasInitialBiases.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/HasInitialBiases;)Lscala/collection/immutable/Map;
       4: areturn

  public org.apache.spark.ml.linalg.DenseMatrix[] getInitialWeights();
    Code:
       0: aload_0
       1: invokestatic  #713                // InterfaceMethod ai/h2o/sparkling/ml/params/HasInitialWeights.getInitialWeights$:(Lai/h2o/sparkling/ml/params/HasInitialWeights;)[Lorg/apache/spark/ml/linalg/DenseMatrix;
       4: areturn

  public ai.h2o.sparkling.ml.params.HasInitialWeights setInitialWeights(org.apache.spark.ml.linalg.DenseMatrix[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #719                // InterfaceMethod ai/h2o/sparkling/ml/params/HasInitialWeights.setInitialWeights$:(Lai/h2o/sparkling/ml/params/HasInitialWeights;[Lorg/apache/spark/ml/linalg/DenseMatrix;)Lai/h2o/sparkling/ml/params/HasInitialWeights;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getInitialWeightsParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #725                // InterfaceMethod ai/h2o/sparkling/ml/params/HasInitialWeights.getInitialWeightsParam$:(Lai/h2o/sparkling/ml/params/HasInitialWeights;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$HasInitialBiases$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #731                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;)Lscala/collection/immutable/Map;
       4: areturn

  public org.apache.spark.ml.linalg.DenseVector[] getInitialBiases();
    Code:
       0: aload_0
       1: invokestatic  #737                // InterfaceMethod ai/h2o/sparkling/ml/params/HasInitialBiases.getInitialBiases$:(Lai/h2o/sparkling/ml/params/HasInitialBiases;)[Lorg/apache/spark/ml/linalg/DenseVector;
       4: areturn

  public ai.h2o.sparkling.ml.params.HasInitialBiases setInitialBiases(org.apache.spark.ml.linalg.DenseVector[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #743                // InterfaceMethod ai/h2o/sparkling/ml/params/HasInitialBiases.setInitialBiases$:(Lai/h2o/sparkling/ml/params/HasInitialBiases;[Lorg/apache/spark/ml/linalg/DenseVector;)Lai/h2o/sparkling/ml/params/HasInitialBiases;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getInitialBiasesParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #749                // InterfaceMethod ai/h2o/sparkling/ml/params/HasInitialBiases.getInitialBiasesParam$:(Lai/h2o/sparkling/ml/params/HasInitialBiases;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> activation();
    Code:
       0: aload_0
       1: getfield      #753                // Field activation:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.IntArrayParam hidden();
    Code:
       0: aload_0
       1: getfield      #756                // Field hidden:Lorg/apache/spark/ml/param/IntArrayParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam epochs();
    Code:
       0: aload_0
       1: getfield      #759                // Field epochs:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.LongParam trainSamplesPerIteration();
    Code:
       0: aload_0
       1: getfield      #762                // Field trainSamplesPerIteration:Lorg/apache/spark/ml/param/LongParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam targetRatioCommToComp();
    Code:
       0: aload_0
       1: getfield      #764                // Field targetRatioCommToComp:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.LongParam seed();
    Code:
       0: aload_0
       1: getfield      #766                // Field seed:Lorg/apache/spark/ml/param/LongParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam adaptiveRate();
    Code:
       0: aload_0
       1: getfield      #769                // Field adaptiveRate:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam rho();
    Code:
       0: aload_0
       1: getfield      #771                // Field rho:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam epsilon();
    Code:
       0: aload_0
       1: getfield      #773                // Field epsilon:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam rate();
    Code:
       0: aload_0
       1: getfield      #775                // Field rate:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam rateAnnealing();
    Code:
       0: aload_0
       1: getfield      #777                // Field rateAnnealing:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam rateDecay();
    Code:
       0: aload_0
       1: getfield      #779                // Field rateDecay:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam momentumStart();
    Code:
       0: aload_0
       1: getfield      #781                // Field momentumStart:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam momentumRamp();
    Code:
       0: aload_0
       1: getfield      #783                // Field momentumRamp:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam momentumStable();
    Code:
       0: aload_0
       1: getfield      #785                // Field momentumStable:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam nesterovAcceleratedGradient();
    Code:
       0: aload_0
       1: getfield      #787                // Field nesterovAcceleratedGradient:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam inputDropoutRatio();
    Code:
       0: aload_0
       1: getfield      #789                // Field inputDropoutRatio:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableDoubleArrayParam hiddenDropoutRatios();
    Code:
       0: aload_0
       1: getfield      #792                // Field hiddenDropoutRatios:Lai/h2o/sparkling/ml/params/NullableDoubleArrayParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam l1();
    Code:
       0: aload_0
       1: getfield      #794                // Field l1:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam l2();
    Code:
       0: aload_0
       1: getfield      #796                // Field l2:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.FloatParam maxW2();
    Code:
       0: aload_0
       1: getfield      #799                // Field maxW2:Lorg/apache/spark/ml/param/FloatParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> initialWeightDistribution();
    Code:
       0: aload_0
       1: getfield      #801                // Field initialWeightDistribution:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam initialWeightScale();
    Code:
       0: aload_0
       1: getfield      #803                // Field initialWeightScale:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> loss();
    Code:
       0: aload_0
       1: getfield      #805                // Field loss:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam scoreInterval();
    Code:
       0: aload_0
       1: getfield      #807                // Field scoreInterval:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.LongParam scoreTrainingSamples();
    Code:
       0: aload_0
       1: getfield      #809                // Field scoreTrainingSamples:Lorg/apache/spark/ml/param/LongParam;
       4: areturn

  public org.apache.spark.ml.param.LongParam scoreValidationSamples();
    Code:
       0: aload_0
       1: getfield      #811                // Field scoreValidationSamples:Lorg/apache/spark/ml/param/LongParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam scoreDutyCycle();
    Code:
       0: aload_0
       1: getfield      #813                // Field scoreDutyCycle:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam quietMode();
    Code:
       0: aload_0
       1: getfield      #815                // Field quietMode:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> scoreValidationSampling();
    Code:
       0: aload_0
       1: getfield      #817                // Field scoreValidationSampling:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam overwriteWithBestModel();
    Code:
       0: aload_0
       1: getfield      #819                // Field overwriteWithBestModel:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam useAllFactorLevels();
    Code:
       0: aload_0
       1: getfield      #821                // Field useAllFactorLevels:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam standardize();
    Code:
       0: aload_0
       1: getfield      #823                // Field standardize:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam diagnostics();
    Code:
       0: aload_0
       1: getfield      #825                // Field diagnostics:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam calculateFeatureImportances();
    Code:
       0: aload_0
       1: getfield      #827                // Field calculateFeatureImportances:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam fastMode();
    Code:
       0: aload_0
       1: getfield      #829                // Field fastMode:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam forceLoadBalance();
    Code:
       0: aload_0
       1: getfield      #831                // Field forceLoadBalance:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam replicateTrainingData();
    Code:
       0: aload_0
       1: getfield      #833                // Field replicateTrainingData:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam singleNodeMode();
    Code:
       0: aload_0
       1: getfield      #835                // Field singleNodeMode:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam shuffleTrainingData();
    Code:
       0: aload_0
       1: getfield      #837                // Field shuffleTrainingData:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> missingValuesHandling();
    Code:
       0: aload_0
       1: getfield      #839                // Field missingValuesHandling:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam sparse();
    Code:
       0: aload_0
       1: getfield      #841                // Field sparse:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam averageActivation();
    Code:
       0: aload_0
       1: getfield      #843                // Field averageActivation:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam sparsityBeta();
    Code:
       0: aload_0
       1: getfield      #845                // Field sparsityBeta:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam maxCategoricalFeatures();
    Code:
       0: aload_0
       1: getfield      #848                // Field maxCategoricalFeatures:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam reproducible();
    Code:
       0: aload_0
       1: getfield      #850                // Field reproducible:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam exportWeightsAndBiases();
    Code:
       0: aload_0
       1: getfield      #852                // Field exportWeightsAndBiases:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam miniBatchSize();
    Code:
       0: aload_0
       1: getfield      #854                // Field miniBatchSize:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam elasticAveraging();
    Code:
       0: aload_0
       1: getfield      #856                // Field elasticAveraging:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam elasticAveragingMovingRate();
    Code:
       0: aload_0
       1: getfield      #858                // Field elasticAveragingMovingRate:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam elasticAveragingRegularization();
    Code:
       0: aload_0
       1: getfield      #860                // Field elasticAveragingRegularization:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam modelId();
    Code:
       0: aload_0
       1: getfield      #863                // Field modelId:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam weightCol();
    Code:
       0: aload_0
       1: getfield      #865                // Field weightCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> categoricalEncoding();
    Code:
       0: aload_0
       1: getfield      #867                // Field categoricalEncoding:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam ignoreConstCols();
    Code:
       0: aload_0
       1: getfield      #869                // Field ignoreConstCols:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam scoreEachIteration();
    Code:
       0: aload_0
       1: getfield      #871                // Field scoreEachIteration:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam stoppingRounds();
    Code:
       0: aload_0
       1: getfield      #873                // Field stoppingRounds:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam maxRuntimeSecs();
    Code:
       0: aload_0
       1: getfield      #875                // Field maxRuntimeSecs:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> stoppingMetric();
    Code:
       0: aload_0
       1: getfield      #877                // Field stoppingMetric:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam stoppingTolerance();
    Code:
       0: aload_0
       1: getfield      #879                // Field stoppingTolerance:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam exportCheckpointsDir();
    Code:
       0: aload_0
       1: getfield      #881                // Field exportCheckpointsDir:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$activation_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #753                // Field activation:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$hidden_$eq(org.apache.spark.ml.param.IntArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #756                // Field hidden:Lorg/apache/spark/ml/param/IntArrayParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$epochs_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #759                // Field epochs:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$trainSamplesPerIteration_$eq(org.apache.spark.ml.param.LongParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #762                // Field trainSamplesPerIteration:Lorg/apache/spark/ml/param/LongParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$targetRatioCommToComp_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #764                // Field targetRatioCommToComp:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$seed_$eq(org.apache.spark.ml.param.LongParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #766                // Field seed:Lorg/apache/spark/ml/param/LongParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$adaptiveRate_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #769                // Field adaptiveRate:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$rho_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #771                // Field rho:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$epsilon_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #773                // Field epsilon:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$rate_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #775                // Field rate:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$rateAnnealing_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #777                // Field rateAnnealing:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$rateDecay_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #779                // Field rateDecay:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$momentumStart_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #781                // Field momentumStart:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$momentumRamp_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #783                // Field momentumRamp:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$momentumStable_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #785                // Field momentumStable:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$nesterovAcceleratedGradient_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #787                // Field nesterovAcceleratedGradient:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$inputDropoutRatio_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #789                // Field inputDropoutRatio:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$hiddenDropoutRatios_$eq(ai.h2o.sparkling.ml.params.NullableDoubleArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #792                // Field hiddenDropoutRatios:Lai/h2o/sparkling/ml/params/NullableDoubleArrayParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$l1_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #794                // Field l1:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$l2_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #796                // Field l2:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$maxW2_$eq(org.apache.spark.ml.param.FloatParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #799                // Field maxW2:Lorg/apache/spark/ml/param/FloatParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$initialWeightDistribution_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #801                // Field initialWeightDistribution:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$initialWeightScale_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #803                // Field initialWeightScale:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$loss_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #805                // Field loss:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$scoreInterval_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #807                // Field scoreInterval:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$scoreTrainingSamples_$eq(org.apache.spark.ml.param.LongParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #809                // Field scoreTrainingSamples:Lorg/apache/spark/ml/param/LongParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$scoreValidationSamples_$eq(org.apache.spark.ml.param.LongParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #811                // Field scoreValidationSamples:Lorg/apache/spark/ml/param/LongParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$scoreDutyCycle_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #813                // Field scoreDutyCycle:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$quietMode_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #815                // Field quietMode:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$scoreValidationSampling_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #817                // Field scoreValidationSampling:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$overwriteWithBestModel_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #819                // Field overwriteWithBestModel:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$useAllFactorLevels_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #821                // Field useAllFactorLevels:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$standardize_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #823                // Field standardize:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$diagnostics_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #825                // Field diagnostics:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$calculateFeatureImportances_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #827                // Field calculateFeatureImportances:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$fastMode_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #829                // Field fastMode:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$forceLoadBalance_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #831                // Field forceLoadBalance:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$replicateTrainingData_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #833                // Field replicateTrainingData:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$singleNodeMode_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #835                // Field singleNodeMode:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$shuffleTrainingData_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #837                // Field shuffleTrainingData:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$missingValuesHandling_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #839                // Field missingValuesHandling:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$sparse_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #841                // Field sparse:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$averageActivation_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #843                // Field averageActivation:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$sparsityBeta_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #845                // Field sparsityBeta:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$maxCategoricalFeatures_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #848                // Field maxCategoricalFeatures:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$reproducible_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #850                // Field reproducible:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$exportWeightsAndBiases_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #852                // Field exportWeightsAndBiases:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$miniBatchSize_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #854                // Field miniBatchSize:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$elasticAveraging_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #856                // Field elasticAveraging:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$elasticAveragingMovingRate_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #858                // Field elasticAveragingMovingRate:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$elasticAveragingRegularization_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #860                // Field elasticAveragingRegularization:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$modelId_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #863                // Field modelId:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$weightCol_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #865                // Field weightCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$categoricalEncoding_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #867                // Field categoricalEncoding:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$ignoreConstCols_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #869                // Field ignoreConstCols:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$scoreEachIteration_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #871                // Field scoreEachIteration:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$stoppingRounds_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #873                // Field stoppingRounds:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$maxRuntimeSecs_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #875                // Field maxRuntimeSecs:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$stoppingMetric_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #877                // Field stoppingMetric:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$stoppingTolerance_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #879                // Field stoppingTolerance:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoEncoderParams$_setter_$exportCheckpointsDir_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #881                // Field exportCheckpointsDir:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public ai.h2o.sparkling.ml.params.NullableStringArrayParam ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols();
    Code:
       0: aload_0
       1: getfield      #956                // Field ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$HasIgnoredCols$_setter_$ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols_$eq(ai.h2o.sparkling.ml.params.NullableStringArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #956                // Field ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       5: return

  public ai.h2o.sparkling.ml.params.NullableMatrixArrayParam ai$h2o$sparkling$ml$params$HasInitialWeights$$initialWeights();
    Code:
       0: aload_0
       1: getfield      #961                // Field ai$h2o$sparkling$ml$params$HasInitialWeights$$initialWeights:Lai/h2o/sparkling/ml/params/NullableMatrixArrayParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$HasInitialWeights$_setter_$ai$h2o$sparkling$ml$params$HasInitialWeights$$initialWeights_$eq(ai.h2o.sparkling.ml.params.NullableMatrixArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #961                // Field ai$h2o$sparkling$ml$params$HasInitialWeights$$initialWeights:Lai/h2o/sparkling/ml/params/NullableMatrixArrayParam;
       5: return

  public ai.h2o.sparkling.ml.params.NullableVectorArrayParam ai$h2o$sparkling$ml$params$HasInitialBiases$$initialBiases();
    Code:
       0: aload_0
       1: getfield      #966                // Field ai$h2o$sparkling$ml$params$HasInitialBiases$$initialBiases:Lai/h2o/sparkling/ml/params/NullableVectorArrayParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$HasInitialBiases$_setter_$ai$h2o$sparkling$ml$params$HasInitialBiases$$initialBiases_$eq(ai.h2o.sparkling.ml.params.NullableVectorArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #966                // Field ai$h2o$sparkling$ml$params$HasInitialBiases$$initialBiases:Lai/h2o/sparkling/ml/params/NullableVectorArrayParam;
       5: return

  public java.lang.String uid();
    Code:
       0: aload_0
       1: getfield      #970                // Field uid:Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.models.H2OAutoEncoderMOJOModel fit(org.apache.spark.sql.Dataset<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #976                // Method ai/h2o/sparkling/ml/features/H2OAutoEncoderBase.fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OAutoEncoderMOJOModel;
       5: areturn

  public org.apache.spark.ml.Model fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #979                // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OAutoEncoderMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2OMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #979                // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OAutoEncoderMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.models.H2OFeatureMOJOModel fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #979                // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OAutoEncoderMOJOModel;
       5: areturn

  public ai.h2o.sparkling.ml.features.H2OAutoEncoder(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #970                // Field uid:Ljava/lang/String;
       5: aload_0
       6: getstatic     #988                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       9: ldc           #13                 // class hex/deeplearning/DeepLearningModel$DeepLearningParameters
      11: invokevirtual #992                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      14: invokespecial #995                // Method ai/h2o/sparkling/ml/features/H2OAutoEncoderBase."<init>":(Lscala/reflect/ClassTag;)V
      17: aload_0
      18: invokestatic  #999                // InterfaceMethod ai/h2o/sparkling/ml/params/HasInitialBiases.$init$:(Lai/h2o/sparkling/ml/params/HasInitialBiases;)V
      21: aload_0
      22: invokestatic  #1002               // InterfaceMethod ai/h2o/sparkling/ml/params/HasInitialWeights.$init$:(Lai/h2o/sparkling/ml/params/HasInitialWeights;)V
      25: aload_0
      26: invokestatic  #1005               // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.$init$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;)V
      29: aload_0
      30: invokestatic  #1008               // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoEncoderParams.$init$:(Lai/h2o/sparkling/ml/params/H2OAutoEncoderParams;)V
      33: return

  public ai.h2o.sparkling.ml.features.H2OAutoEncoder();
    Code:
       0: aload_0
       1: getstatic     #1014               // Field org/apache/spark/ml/util/Identifiable$.MODULE$:Lorg/apache/spark/ml/util/Identifiable$;
       4: ldc           #2                  // class ai/h2o/sparkling/ml/features/H2OAutoEncoder
       6: invokevirtual #1019               // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       9: invokevirtual #1023               // Method org/apache/spark/ml/util/Identifiable$.randomUID:(Ljava/lang/String;)Ljava/lang/String;
      12: invokespecial #1025               // Method "<init>":(Ljava/lang/String;)V
      15: return
}
