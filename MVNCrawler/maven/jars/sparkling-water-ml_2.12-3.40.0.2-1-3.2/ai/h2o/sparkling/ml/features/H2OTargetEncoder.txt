Compiled from "H2OTargetEncoder.scala"
public class ai.h2o.sparkling.ml.features.H2OTargetEncoder extends org.apache.spark.ml.Estimator<ai.h2o.sparkling.ml.models.H2OTargetEncoderModel> implements ai.h2o.sparkling.ml.models.H2OTargetEncoderBase, org.apache.spark.ml.util.DefaultParamsWritable, ai.h2o.sparkling.ml.utils.EstimatorCommonUtils {
  private final java.lang.String uid;

  private volatile ai.h2o.sparkling.backend.utils.RestCommunication$LoggingLevel$ LoggingLevel$module;

  private final java.lang.String groupColumnsSeparator;

  private final ai.h2o.sparkling.ml.params.NullableStringParam foldCol;

  private final org.apache.spark.ml.param.Param<java.lang.String> labelCol;

  private final ai.h2o.sparkling.ml.params.NullableStringArrayArrayParam inputCols;

  private final org.apache.spark.ml.param.StringArrayParam outputCols;

  private final org.apache.spark.ml.param.Param<java.lang.String> holdoutStrategy;

  private final org.apache.spark.ml.param.BooleanParam blendedAvgEnabled;

  private final org.apache.spark.ml.param.DoubleParam blendedAvgInflectionPoint;

  private final org.apache.spark.ml.param.DoubleParam blendedAvgSmoothing;

  private final org.apache.spark.ml.param.DoubleParam noise;

  private final org.apache.spark.ml.param.LongParam noiseSeed;

  private final org.apache.spark.ml.param.Param<java.lang.String> problemType;

  public static org.apache.spark.ml.util.MLReader<ai.h2o.sparkling.ml.features.H2OTargetEncoder> read();
    Code:
       0: getstatic     #78                 // Field ai/h2o/sparkling/ml/features/H2OTargetEncoder$.MODULE$:Lai/h2o/sparkling/ml/features/H2OTargetEncoder$;
       3: invokevirtual #80                 // Method ai/h2o/sparkling/ml/features/H2OTargetEncoder$.read:()Lorg/apache/spark/ml/util/MLReader;
       6: areturn

  public static java.lang.Object load(java.lang.String);
    Code:
       0: getstatic     #78                 // Field ai/h2o/sparkling/ml/features/H2OTargetEncoder$.MODULE$:Lai/h2o/sparkling/ml/features/H2OTargetEncoder$;
       3: aload_0
       4: invokevirtual #85                 // Method ai/h2o/sparkling/ml/features/H2OTargetEncoder$.load:(Ljava/lang/String;)Ljava/lang/Object;
       7: areturn

  public java.lang.String trainAndGetDestinationKey(java.lang.String, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #95                 // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.trainAndGetDestinationKey$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;Ljava/lang/String;Lscala/collection/immutable/Map;Z)Ljava/lang/String;
       7: areturn

  public boolean trainAndGetDestinationKey$default$3();
    Code:
       0: aload_0
       1: invokestatic  #105                // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.trainAndGetDestinationKey$default$3$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;)Z
       4: ireturn

  public ai.h2o.sparkling.ml.models.H2OMOJOModel trainAndGetMOJOModel(java.lang.String, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #112                // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.trainAndGetMOJOModel$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;Ljava/lang/String;Lscala/collection/immutable/Map;Z)Lai/h2o/sparkling/ml/models/H2OMOJOModel;
       7: areturn

  public boolean trainAndGetMOJOModel$default$3();
    Code:
       0: aload_0
       1: invokestatic  #116                // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.trainAndGetMOJOModel$default$3$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;)Z
       4: ireturn

  public java.io.File downloadBinaryModel(java.lang.String, ai.h2o.sparkling.H2OConf);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #124                // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.downloadBinaryModel$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;)Ljava/io/File;
       6: areturn

  public java.lang.String convertModelIdToKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #132                // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.convertModelIdToKey$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public <ResultType> ResultType query(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, scala.Enumeration$Value, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #144                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;Lscala/Enumeration$Value;Lscala/reflect/ClassTag;)Ljava/lang/Object;
      15: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> query$default$4();
    Code:
       0: aload_0
       1: invokestatic  #155                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> query$default$5();
    Code:
       0: aload_0
       1: invokestatic  #162                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> scala.Enumeration$Value query$default$6();
    Code:
       0: aload_0
       1: invokestatic  #169                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public <ResultType> ResultType update(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, boolean, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aload         7
      12: invokestatic  #177                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;ZLscala/reflect/ClassTag;)Ljava/lang/Object;
      15: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> update$default$4();
    Code:
       0: aload_0
       1: invokestatic  #181                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> update$default$5();
    Code:
       0: aload_0
       1: invokestatic  #185                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> boolean update$default$6();
    Code:
       0: aload_0
       1: invokestatic  #191                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public <ResultType> ResultType delete(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, boolean, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aload         7
      12: invokestatic  #196                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;ZLscala/reflect/ClassTag;)Ljava/lang/Object;
      15: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> delete$default$4();
    Code:
       0: aload_0
       1: invokestatic  #200                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> delete$default$5();
    Code:
       0: aload_0
       1: invokestatic  #204                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> boolean delete$default$6();
    Code:
       0: aload_0
       1: invokestatic  #208                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public java.io.OutputStream insertToNode(ai.h2o.sparkling.backend.NodeDesc, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #216                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insertToNode$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Lai/h2o/sparkling/backend/NodeDesc;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;)Ljava/io/OutputStream;
       9: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> insertToNode$default$4();
    Code:
       0: aload_0
       1: invokestatic  #222                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insertToNode$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public java.io.OutputStream insert(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.Function1<java.io.OutputStream, java.io.OutputStream>, scala.collection.immutable.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #230                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insert$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/Function1;Lscala/collection/immutable/Map;)Ljava/io/OutputStream;
      11: areturn

  public scala.Function1<java.io.OutputStream, java.io.OutputStream> insert$default$4();
    Code:
       0: aload_0
       1: invokestatic  #238                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insert$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Function1;
       4: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> insert$default$5();
    Code:
       0: aload_0
       1: invokestatic  #242                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insert$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public void delete(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #246                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;)V
       7: return

  public <ResultType> ResultType request(java.net.URI, java.lang.String, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, boolean, scala.Enumeration$Value, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: iload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #255                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;ZLscala/Enumeration$Value;Lscala/reflect/ClassTag;)Ljava/lang/Object;
      19: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> request$default$5();
    Code:
       0: aload_0
       1: invokestatic  #259                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> request$default$6();
    Code:
       0: aload_0
       1: invokestatic  #263                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> boolean request$default$7();
    Code:
       0: aload_0
       1: invokestatic  #267                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$7$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public <ResultType> scala.Enumeration$Value request$default$8();
    Code:
       0: aload_0
       1: invokestatic  #271                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$8$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public <ResultType> ResultType deserialize(java.lang.String, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #280                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.deserialize$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/lang/String;Lscala/collection/Seq;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       7: areturn

  public <ResultType> ResultType deserialize(com.google.gson.JsonElement, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #286                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.deserialize$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Lcom/google/gson/JsonElement;Lscala/collection/Seq;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       7: areturn

  public com.google.gson.JsonObject deserializeAsJsonObject(java.lang.String, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #294                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.deserializeAsJsonObject$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/lang/String;Lscala/collection/Seq;)Lcom/google/gson/JsonObject;
       6: areturn

  public void downloadBinaryURLContent(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #301                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.downloadBinaryURLContent$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Ljava/io/File;)V
       9: return

  public void downloadStringURLContent(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #306                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.downloadStringURLContent$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Ljava/io/File;)V
       9: return

  public java.io.InputStream readURLContent(java.net.URI, java.lang.String, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, boolean, scala.Option<java.lang.String>, scala.Enumeration$Value);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #313                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;ZLscala/Option;Lscala/Enumeration$Value;)Ljava/io/InputStream;
      17: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> readURLContent$default$5();
    Code:
       0: aload_0
       1: invokestatic  #318                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public boolean readURLContent$default$6();
    Code:
       0: aload_0
       1: invokestatic  #322                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public scala.Option<java.lang.String> readURLContent$default$7();
    Code:
       0: aload_0
       1: invokestatic  #329                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$7$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Option;
       4: areturn

  public scala.Enumeration$Value readURLContent$default$8();
    Code:
       0: aload_0
       1: invokestatic  #333                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$8$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public void checkResponseCode(java.net.HttpURLConnection, scala.Enumeration$Value);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #340                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.checkResponseCode$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/HttpURLConnection;Lscala/Enumeration$Value;)V
       6: return

  public scala.Enumeration$Value checkResponseCode$default$2();
    Code:
       0: aload_0
       1: invokestatic  #345                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.checkResponseCode$default$2$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public java.lang.String stringifyPrimitiveParam(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #354                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyPrimitiveParam$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  public boolean isPrimitiveType(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #361                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.isPrimitiveType$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Z
       5: ireturn

  public java.lang.String stringifyArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #366                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyArray$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringifyMap(scala.collection.immutable.Map<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #374                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyMap$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Lscala/collection/immutable/Map;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringifyPair(scala.Tuple2<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #382                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyPair$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Lscala/Tuple2;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringify(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #387                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringify$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringifyParams(scala.collection.immutable.Map<java.lang.String, java.lang.Object>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #394                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyParams$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Lscala/collection/immutable/Map;Z)Ljava/lang/String;
       6: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> stringifyParams$default$1();
    Code:
       0: aload_0
       1: invokestatic  #399                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyParams$default$1$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;)Lscala/collection/immutable/Map;
       4: areturn

  public boolean stringifyParams$default$2();
    Code:
       0: aload_0
       1: invokestatic  #404                // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyParams$default$2$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;)Z
       4: ireturn

  public org.apache.spark.ml.util.MLWriter write();
    Code:
       0: aload_0
       1: invokestatic  #410                // InterfaceMethod org/apache/spark/ml/util/DefaultParamsWritable.write$:(Lorg/apache/spark/ml/util/DefaultParamsWritable;)Lorg/apache/spark/ml/util/MLWriter;
       4: areturn

  public void save(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #420                // InterfaceMethod org/apache/spark/ml/util/MLWritable.save$:(Lorg/apache/spark/ml/util/MLWritable;Ljava/lang/String;)V
       5: return

  public org.apache.spark.sql.types.StructType transformSchema(org.apache.spark.sql.types.StructType);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #427                // InterfaceMethod ai/h2o/sparkling/ml/models/H2OTargetEncoderBase.transformSchema$:(Lai/h2o/sparkling/ml/models/H2OTargetEncoderBase;Lorg/apache/spark/sql/types/StructType;)Lorg/apache/spark/sql/types/StructType;
       5: areturn

  public org.apache.spark.sql.Dataset<org.apache.spark.sql.Row> createVectorColumn(org.apache.spark.sql.Dataset<org.apache.spark.sql.Row>, java.lang.String, java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #438                // InterfaceMethod ai/h2o/sparkling/ml/models/H2OTargetEncoderBase.createVectorColumn$:(Lai/h2o/sparkling/ml/models/H2OTargetEncoderBase;Lorg/apache/spark/sql/Dataset;Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/spark/sql/Dataset;
       7: areturn

  public java.lang.String getFoldCol();
    Code:
       0: aload_0
       1: invokestatic  #448                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams.getFoldCol$:(Lai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getLabelCol();
    Code:
       0: aload_0
       1: invokestatic  #452                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams.getLabelCol$:(Lai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String[][] getInputCols();
    Code:
       0: aload_0
       1: invokestatic  #458                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams.getInputCols$:(Lai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams;)[[Ljava/lang/String;
       4: areturn

  public java.lang.String[] getOutputCols();
    Code:
       0: aload_0
       1: invokestatic  #464                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams.getOutputCols$:(Lai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams;)[Ljava/lang/String;
       4: areturn

  public java.lang.String getHoldoutStrategy();
    Code:
       0: aload_0
       1: invokestatic  #468                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams.getHoldoutStrategy$:(Lai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams;)Ljava/lang/String;
       4: areturn

  public boolean getBlendedAvgEnabled();
    Code:
       0: aload_0
       1: invokestatic  #473                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams.getBlendedAvgEnabled$:(Lai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams;)Z
       4: ireturn

  public double getBlendedAvgInflectionPoint();
    Code:
       0: aload_0
       1: invokestatic  #479                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams.getBlendedAvgInflectionPoint$:(Lai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams;)D
       4: dreturn

  public double getBlendedAvgSmoothing();
    Code:
       0: aload_0
       1: invokestatic  #483                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams.getBlendedAvgSmoothing$:(Lai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams;)D
       4: dreturn

  public double getNoise();
    Code:
       0: aload_0
       1: invokestatic  #487                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams.getNoise$:(Lai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams;)D
       4: dreturn

  public long getNoiseSeed();
    Code:
       0: aload_0
       1: invokestatic  #493                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams.getNoiseSeed$:(Lai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams;)J
       4: lreturn

  public java.lang.String getProblemType();
    Code:
       0: aload_0
       1: invokestatic  #497                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams.getProblemType$:(Lai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams;)Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.backend.utils.RestCommunication$LoggingLevel$ LoggingLevel();
    Code:
       0: aload_0
       1: getfield      #501                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #505                // Method LoggingLevel$lzycompute$1:()V
      11: aload_0
      12: getfield      #501                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
      15: areturn

  public java.lang.String groupColumnsSeparator();
    Code:
       0: aload_0
       1: getfield      #507                // Field groupColumnsSeparator:Ljava/lang/String;
       4: areturn

  public final ai.h2o.sparkling.ml.params.NullableStringParam foldCol();
    Code:
       0: aload_0
       1: getfield      #510                // Field foldCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public final org.apache.spark.ml.param.Param<java.lang.String> labelCol();
    Code:
       0: aload_0
       1: getfield      #514                // Field labelCol:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public final ai.h2o.sparkling.ml.params.NullableStringArrayArrayParam inputCols();
    Code:
       0: aload_0
       1: getfield      #517                // Field inputCols:Lai/h2o/sparkling/ml/params/NullableStringArrayArrayParam;
       4: areturn

  public final org.apache.spark.ml.param.StringArrayParam outputCols();
    Code:
       0: aload_0
       1: getfield      #520                // Field outputCols:Lorg/apache/spark/ml/param/StringArrayParam;
       4: areturn

  public final org.apache.spark.ml.param.Param<java.lang.String> holdoutStrategy();
    Code:
       0: aload_0
       1: getfield      #522                // Field holdoutStrategy:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public final org.apache.spark.ml.param.BooleanParam blendedAvgEnabled();
    Code:
       0: aload_0
       1: getfield      #525                // Field blendedAvgEnabled:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public final org.apache.spark.ml.param.DoubleParam blendedAvgInflectionPoint();
    Code:
       0: aload_0
       1: getfield      #528                // Field blendedAvgInflectionPoint:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public final org.apache.spark.ml.param.DoubleParam blendedAvgSmoothing();
    Code:
       0: aload_0
       1: getfield      #530                // Field blendedAvgSmoothing:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public final org.apache.spark.ml.param.DoubleParam noise();
    Code:
       0: aload_0
       1: getfield      #532                // Field noise:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public final org.apache.spark.ml.param.LongParam noiseSeed();
    Code:
       0: aload_0
       1: getfield      #535                // Field noiseSeed:Lorg/apache/spark/ml/param/LongParam;
       4: areturn

  public final org.apache.spark.ml.param.Param<java.lang.String> problemType();
    Code:
       0: aload_0
       1: getfield      #537                // Field problemType:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public void ai$h2o$sparkling$ml$params$H2OTargetEncoderMOJOParams$_setter_$groupColumnsSeparator_$eq(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #507                // Field groupColumnsSeparator:Ljava/lang/String;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OTargetEncoderMOJOParams$_setter_$foldCol_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #510                // Field foldCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OTargetEncoderMOJOParams$_setter_$labelCol_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #514                // Field labelCol:Lorg/apache/spark/ml/param/Param;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OTargetEncoderMOJOParams$_setter_$inputCols_$eq(ai.h2o.sparkling.ml.params.NullableStringArrayArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #517                // Field inputCols:Lai/h2o/sparkling/ml/params/NullableStringArrayArrayParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OTargetEncoderMOJOParams$_setter_$outputCols_$eq(org.apache.spark.ml.param.StringArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #520                // Field outputCols:Lorg/apache/spark/ml/param/StringArrayParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OTargetEncoderMOJOParams$_setter_$holdoutStrategy_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #522                // Field holdoutStrategy:Lorg/apache/spark/ml/param/Param;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OTargetEncoderMOJOParams$_setter_$blendedAvgEnabled_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #525                // Field blendedAvgEnabled:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OTargetEncoderMOJOParams$_setter_$blendedAvgInflectionPoint_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #528                // Field blendedAvgInflectionPoint:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OTargetEncoderMOJOParams$_setter_$blendedAvgSmoothing_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #530                // Field blendedAvgSmoothing:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OTargetEncoderMOJOParams$_setter_$noise_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #532                // Field noise:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OTargetEncoderMOJOParams$_setter_$noiseSeed_$eq(org.apache.spark.ml.param.LongParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #535                // Field noiseSeed:Lorg/apache/spark/ml/param/LongParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OTargetEncoderMOJOParams$_setter_$problemType_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #537                // Field problemType:Lorg/apache/spark/ml/param/Param;
       5: return

  public java.lang.String uid();
    Code:
       0: aload_0
       1: getfield      #560                // Field uid:Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.models.H2OTargetEncoderModel fit(org.apache.spark.sql.Dataset<?>);
    Code:
       0: new           #42                 // class scala/collection/mutable/ArrayOps$ofRef
       3: dup
       4: getstatic     #569                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: aload_0
       8: invokevirtual #571                // Method getInputCols:()[[Ljava/lang/String;
      11: checkcast     #573                // class "[Ljava/lang/Object;"
      14: invokevirtual #577                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
      17: invokespecial #581                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
      20: invokevirtual #584                // Method scala/collection/mutable/ArrayOps$ofRef.isEmpty:()Z
      23: ifeq          32
      26: getstatic     #589                // Field scala/None$.MODULE$:Lscala/None$;
      29: goto          539
      32: getstatic     #594                // Field ai/h2o/sparkling/H2OContext$.MODULE$:Lai/h2o/sparkling/H2OContext$;
      35: invokedynamic #616,  0            // InvokeDynamic #0:apply:()Lscala/Function0;
      40: invokevirtual #620                // Method ai/h2o/sparkling/H2OContext$.ensure:(Lscala/Function0;)Lai/h2o/sparkling/H2OContext;
      43: astore_3
      44: aload_0
      45: invokevirtual #622                // Method getProblemType:()Ljava/lang/String;
      48: invokestatic  #628                // Method ai/h2o/sparkling/ml/params/H2OTargetEncoderProblemType.valueOf:(Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OTargetEncoderProblemType;
      51: astore        4
      53: aload         4
      55: getstatic     #632                // Field ai/h2o/sparkling/ml/params/H2OTargetEncoderProblemType.Regression:Lai/h2o/sparkling/ml/params/H2OTargetEncoderProblemType;
      58: astore        6
      60: dup
      61: ifnonnull     73
      64: pop
      65: aload         6
      67: ifnull        81
      70: goto          108
      73: aload         6
      75: invokevirtual #637                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      78: ifeq          108
      81: aload_1
      82: aload_0
      83: invokevirtual #639                // Method getLabelCol:()Ljava/lang/String;
      86: getstatic     #644                // Field org/apache/spark/sql/functions$.MODULE$:Lorg/apache/spark/sql/functions$;
      89: aload_0
      90: invokevirtual #639                // Method getLabelCol:()Ljava/lang/String;
      93: invokevirtual #648                // Method org/apache/spark/sql/functions$.col:(Ljava/lang/String;)Lorg/apache/spark/sql/Column;
      96: getstatic     #653                // Field org/apache/spark/sql/types/DoubleType$.MODULE$:Lorg/apache/spark/sql/types/DoubleType$;
      99: invokevirtual #659                // Method org/apache/spark/sql/Column.cast:(Lorg/apache/spark/sql/types/DataType;)Lorg/apache/spark/sql/Column;
     102: invokevirtual #665                // Method org/apache/spark/sql/Dataset.withColumn:(Ljava/lang/String;Lorg/apache/spark/sql/Column;)Lorg/apache/spark/sql/Dataset;
     105: goto          112
     108: aload_1
     109: invokevirtual #669                // Method org/apache/spark/sql/Dataset.toDF:()Lorg/apache/spark/sql/Dataset;
     112: astore        5
     114: aload_3
     115: aload         5
     117: invokevirtual #675                // Method ai/h2o/sparkling/H2OContext.asH2OFrame:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/H2OFrame;
     120: astore        7
     122: new           #42                 // class scala/collection/mutable/ArrayOps$ofRef
     125: dup
     126: getstatic     #569                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     129: new           #42                 // class scala/collection/mutable/ArrayOps$ofRef
     132: dup
     133: getstatic     #569                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     136: aload_0
     137: invokevirtual #571                // Method getInputCols:()[[Ljava/lang/String;
     140: checkcast     #573                // class "[Ljava/lang/Object;"
     143: invokevirtual #577                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     146: invokespecial #581                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     149: invokedynamic #685,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
     154: getstatic     #690                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     157: ldc_w         #692                // class java/lang/String
     160: invokevirtual #695                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     163: invokevirtual #699                // Method scala/collection/mutable/ArrayOps$ofRef.flatten:(Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
     166: checkcast     #573                // class "[Ljava/lang/Object;"
     169: invokevirtual #577                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     172: invokespecial #581                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     175: invokevirtual #702                // Method scala/collection/mutable/ArrayOps$ofRef.distinct:()Ljava/lang/Object;
     178: checkcast     #703                // class "[Ljava/lang/String;"
     181: astore        8
     183: aload_0
     184: aload         4
     186: aload_1
     187: invokespecial #707                // Method isLabelColCategorical:(Lai/h2o/sparkling/ml/params/H2OTargetEncoderProblemType;Lorg/apache/spark/sql/Dataset;)Z
     190: ifeq          249
     193: new           #42                 // class scala/collection/mutable/ArrayOps$ofRef
     196: dup
     197: getstatic     #569                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     200: aload         8
     202: checkcast     #573                // class "[Ljava/lang/Object;"
     205: invokevirtual #577                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     208: invokespecial #581                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     211: new           #709                // class scala/collection/immutable/$colon$colon
     214: dup
     215: aload_0
     216: invokevirtual #639                // Method getLabelCol:()Ljava/lang/String;
     219: getstatic     #714                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
     222: invokespecial #717                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
     225: getstatic     #722                // Field scala/Array$.MODULE$:Lscala/Array$;
     228: getstatic     #690                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     231: ldc_w         #692                // class java/lang/String
     234: invokevirtual #695                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     237: invokevirtual #726                // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
     240: invokevirtual #730                // Method scala/collection/mutable/ArrayOps$ofRef.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     243: checkcast     #703                // class "[Ljava/lang/String;"
     246: goto          251
     249: aload         8
     251: astore        9
     253: aload         7
     255: aload         9
     257: invokevirtual #736                // Method ai/h2o/sparkling/H2OFrame.convertColumnsToCategorical:([Ljava/lang/String;)Lai/h2o/sparkling/H2OFrame;
     260: astore        10
     262: getstatic     #569                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     265: invokevirtual #740                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
     268: getstatic     #569                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     271: bipush        9
     273: anewarray     #742                // class scala/Tuple2
     276: dup
     277: iconst_0
     278: getstatic     #745                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     281: getstatic     #569                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     284: ldc_w         #747                // String data_leakage_handling
     287: invokevirtual #750                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     290: aload_0
     291: invokevirtual #752                // Method getHoldoutStrategy:()Ljava/lang/String;
     294: invokevirtual #756                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     297: aastore
     298: dup
     299: iconst_1
     300: getstatic     #745                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     303: getstatic     #569                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     306: ldc_w         #758                // String blending
     309: invokevirtual #750                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     312: aload_0
     313: invokevirtual #760                // Method getBlendedAvgEnabled:()Z
     316: invokestatic  #766                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
     319: invokevirtual #756                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     322: aastore
     323: dup
     324: iconst_2
     325: getstatic     #745                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     328: getstatic     #569                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     331: ldc_w         #768                // String inflection_point
     334: invokevirtual #750                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     337: aload_0
     338: invokevirtual #770                // Method getBlendedAvgInflectionPoint:()D
     341: invokestatic  #774                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
     344: invokevirtual #756                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     347: aastore
     348: dup
     349: iconst_3
     350: getstatic     #745                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     353: getstatic     #569                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     356: ldc_w         #776                // String smoothing
     359: invokevirtual #750                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     362: aload_0
     363: invokevirtual #778                // Method getBlendedAvgSmoothing:()D
     366: invokestatic  #774                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
     369: invokevirtual #756                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     372: aastore
     373: dup
     374: iconst_4
     375: getstatic     #745                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     378: getstatic     #569                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     381: ldc_w         #780                // String response_column
     384: invokevirtual #750                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     387: aload_0
     388: invokevirtual #639                // Method getLabelCol:()Ljava/lang/String;
     391: invokevirtual #756                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     394: aastore
     395: dup
     396: iconst_5
     397: getstatic     #745                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     400: getstatic     #569                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     403: ldc_w         #782                // String fold_column
     406: invokevirtual #750                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     409: aload_0
     410: invokevirtual #784                // Method getFoldCol:()Ljava/lang/String;
     413: invokevirtual #756                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     416: aastore
     417: dup
     418: bipush        6
     420: getstatic     #745                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     423: getstatic     #569                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     426: ldc_w         #786                // String columns_to_encode
     429: invokevirtual #750                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     432: aload_0
     433: invokevirtual #571                // Method getInputCols:()[[Ljava/lang/String;
     436: invokevirtual #756                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     439: aastore
     440: dup
     441: bipush        7
     443: getstatic     #745                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     446: getstatic     #569                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     449: ldc_w         #788                // String seed
     452: invokevirtual #750                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     455: aload_0
     456: invokevirtual #790                // Method getNoiseSeed:()J
     459: invokestatic  #794                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
     462: invokevirtual #756                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     465: aastore
     466: dup
     467: bipush        8
     469: getstatic     #745                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     472: getstatic     #569                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     475: ldc_w         #796                // String training_frame
     478: invokevirtual #750                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     481: aload         10
     483: invokevirtual #799                // Method ai/h2o/sparkling/H2OFrame.frameId:()Ljava/lang/String;
     486: invokevirtual #756                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     489: aastore
     490: checkcast     #573                // class "[Ljava/lang/Object;"
     493: invokevirtual #803                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     496: invokevirtual #808                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
     499: checkcast     #810                // class scala/collection/immutable/Map
     502: astore        11
     504: aload_0
     505: ldc_w         #812                // String /3/ModelBuilders/targetencoder
     508: aload         11
     510: aload_0
     511: invokevirtual #814                // Method trainAndGetDestinationKey$default$3:()Z
     514: invokevirtual #816                // Method trainAndGetDestinationKey:(Ljava/lang/String;Lscala/collection/immutable/Map;Z)Ljava/lang/String;
     517: astore        12
     519: aload         7
     521: invokevirtual #818                // Method ai/h2o/sparkling/H2OFrame.delete:()V
     524: new           #820                // class scala/Some
     527: dup
     528: getstatic     #825                // Field ai/h2o/sparkling/ml/internals/H2OModel$.MODULE$:Lai/h2o/sparkling/ml/internals/H2OModel$;
     531: aload         12
     533: invokevirtual #828                // Method ai/h2o/sparkling/ml/internals/H2OModel$.apply:(Ljava/lang/String;)Lai/h2o/sparkling/ml/internals/H2OModel;
     536: invokespecial #831                // Method scala/Some."<init>":(Ljava/lang/Object;)V
     539: astore_2
     540: new           #833                // class ai/h2o/sparkling/ml/models/H2OTargetEncoderModel
     543: dup
     544: aload_0
     545: invokevirtual #835                // Method uid:()Ljava/lang/String;
     548: aload_2
     549: invokespecial #838                // Method ai/h2o/sparkling/ml/models/H2OTargetEncoderModel."<init>":(Ljava/lang/String;Lscala/Option;)V
     552: aload_0
     553: invokevirtual #842                // Method ai/h2o/sparkling/ml/models/H2OTargetEncoderModel.setParent:(Lorg/apache/spark/ml/Estimator;)Lorg/apache/spark/ml/Model;
     556: checkcast     #833                // class ai/h2o/sparkling/ml/models/H2OTargetEncoderModel
     559: astore        13
     561: aload_0
     562: aload         13
     564: aload_0
     565: invokevirtual #846                // Method copyValues$default$2:()Lorg/apache/spark/ml/param/ParamMap;
     568: invokevirtual #850                // Method copyValues:(Lorg/apache/spark/ml/param/Params;Lorg/apache/spark/ml/param/ParamMap;)Lorg/apache/spark/ml/param/Params;
     571: checkcast     #833                // class ai/h2o/sparkling/ml/models/H2OTargetEncoderModel
     574: areturn

  private boolean isLabelColCategorical(ai.h2o.sparkling.ml.params.H2OTargetEncoderProblemType, org.apache.spark.sql.Dataset<?>);
    Code:
       0: aload_1
       1: getstatic     #868                // Field ai/h2o/sparkling/ml/params/H2OTargetEncoderProblemType.Classification:Lai/h2o/sparkling/ml/params/H2OTargetEncoderProblemType;
       4: astore_3
       5: dup
       6: ifnonnull     17
       9: pop
      10: aload_3
      11: ifnull        138
      14: goto          24
      17: aload_3
      18: invokevirtual #637                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      21: ifne          138
      24: aload_1
      25: getstatic     #871                // Field ai/h2o/sparkling/ml/params/H2OTargetEncoderProblemType.Auto:Lai/h2o/sparkling/ml/params/H2OTargetEncoderProblemType;
      28: astore        4
      30: dup
      31: ifnonnull     43
      34: pop
      35: aload         4
      37: ifnull        51
      40: goto          142
      43: aload         4
      45: invokevirtual #637                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      48: ifeq          142
      51: new           #42                 // class scala/collection/mutable/ArrayOps$ofRef
      54: dup
      55: getstatic     #569                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      58: aload_2
      59: getstatic     #569                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      62: iconst_1
      63: anewarray     #655                // class org/apache/spark/sql/Column
      66: dup
      67: iconst_0
      68: getstatic     #644                // Field org/apache/spark/sql/functions$.MODULE$:Lorg/apache/spark/sql/functions$;
      71: aload_0
      72: invokevirtual #639                // Method getLabelCol:()Ljava/lang/String;
      75: invokevirtual #648                // Method org/apache/spark/sql/functions$.col:(Ljava/lang/String;)Lorg/apache/spark/sql/Column;
      78: aastore
      79: checkcast     #573                // class "[Ljava/lang/Object;"
      82: invokevirtual #803                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      85: invokevirtual #875                // Method org/apache/spark/sql/Dataset.select:(Lscala/collection/Seq;)Lorg/apache/spark/sql/Dataset;
      88: invokevirtual #878                // Method org/apache/spark/sql/Dataset.schema:()Lorg/apache/spark/sql/types/StructType;
      91: invokevirtual #884                // Method org/apache/spark/sql/types/StructType.fields:()[Lorg/apache/spark/sql/types/StructField;
      94: checkcast     #573                // class "[Ljava/lang/Object;"
      97: invokevirtual #577                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     100: invokespecial #581                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     103: invokevirtual #887                // Method scala/collection/mutable/ArrayOps$ofRef.head:()Ljava/lang/Object;
     106: checkcast     #889                // class org/apache/spark/sql/types/StructField
     109: invokevirtual #893                // Method org/apache/spark/sql/types/StructField.dataType:()Lorg/apache/spark/sql/types/DataType;
     112: astore        5
     114: aload         5
     116: instanceof    #895                // class org/apache/spark/sql/types/StringType
     119: ifne          130
     122: aload         5
     124: instanceof    #897                // class org/apache/spark/sql/types/BooleanType
     127: ifeq          134
     130: iconst_1
     131: goto          135
     134: iconst_0
     135: ifeq          142
     138: iconst_1
     139: goto          143
     142: iconst_0
     143: ireturn

  public ai.h2o.sparkling.ml.features.H2OTargetEncoder copy(org.apache.spark.ml.param.ParamMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #907                // Method defaultCopy:(Lorg/apache/spark/ml/param/ParamMap;)Lorg/apache/spark/ml/param/Params;
       5: checkcast     #2                  // class ai/h2o/sparkling/ml/features/H2OTargetEncoder
       8: areturn

  public ai.h2o.sparkling.ml.features.H2OTargetEncoder setFoldCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #912                // Method foldCol:()Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: aload_1
       6: invokevirtual #916                // Method set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
       9: checkcast     #2                  // class ai/h2o/sparkling/ml/features/H2OTargetEncoder
      12: areturn

  public ai.h2o.sparkling.ml.features.H2OTargetEncoder setLabelCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #919                // Method labelCol:()Lorg/apache/spark/ml/param/Param;
       5: aload_1
       6: invokevirtual #916                // Method set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
       9: checkcast     #2                  // class ai/h2o/sparkling/ml/features/H2OTargetEncoder
      12: areturn

  public ai.h2o.sparkling.ml.features.H2OTargetEncoder setInputCols(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #924                // Method inputCols:()Lai/h2o/sparkling/ml/params/NullableStringArrayArrayParam;
       5: new           #42                 // class scala/collection/mutable/ArrayOps$ofRef
       8: dup
       9: getstatic     #569                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      12: aload_1
      13: checkcast     #573                // class "[Ljava/lang/Object;"
      16: invokevirtual #577                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
      19: invokespecial #581                // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
      22: invokedynamic #931,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
      27: getstatic     #722                // Field scala/Array$.MODULE$:Lscala/Array$;
      30: getstatic     #690                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      33: getstatic     #936                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      36: ldc_w         #692                // class java/lang/String
      39: invokevirtual #940                // Method scala/runtime/ScalaRunTime$.arrayClass:(Ljava/lang/Class;)Ljava/lang/Class;
      42: invokevirtual #695                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      45: invokevirtual #726                // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
      48: invokevirtual #943                // Method scala/collection/mutable/ArrayOps$ofRef.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      51: invokevirtual #916                // Method set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      54: checkcast     #2                  // class ai/h2o/sparkling/ml/features/H2OTargetEncoder
      57: areturn

  public ai.h2o.sparkling.ml.features.H2OTargetEncoder setInputCols(java.lang.String[][]);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #924                // Method inputCols:()Lai/h2o/sparkling/ml/params/NullableStringArrayArrayParam;
       5: aload_1
       6: invokevirtual #916                // Method set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
       9: checkcast     #2                  // class ai/h2o/sparkling/ml/features/H2OTargetEncoder
      12: areturn

  public ai.h2o.sparkling.ml.features.H2OTargetEncoder setOutputCols(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #949                // Method outputCols:()Lorg/apache/spark/ml/param/StringArrayParam;
       5: aload_1
       6: invokevirtual #916                // Method set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
       9: checkcast     #2                  // class ai/h2o/sparkling/ml/features/H2OTargetEncoder
      12: areturn

  public ai.h2o.sparkling.ml.features.H2OTargetEncoder setHoldoutStrategy(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #952                // Method holdoutStrategy:()Lorg/apache/spark/ml/param/Param;
       5: getstatic     #957                // Field ai/h2o/sparkling/ml/params/EnumParamValidator$.MODULE$:Lai/h2o/sparkling/ml/params/EnumParamValidator$;
       8: aload_1
       9: getstatic     #690                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      12: ldc           #22                 // class ai/h2o/targetencoding/TargetEncoderModel$DataLeakageHandlingStrategy
      14: invokevirtual #695                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      17: invokevirtual #961                // Method ai/h2o/sparkling/ml/params/EnumParamValidator$.getValidatedEnumValue:(Ljava/lang/String;Lscala/reflect/ClassTag;)Ljava/lang/String;
      20: invokevirtual #916                // Method set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      23: checkcast     #2                  // class ai/h2o/sparkling/ml/features/H2OTargetEncoder
      26: areturn

  public ai.h2o.sparkling.ml.features.H2OTargetEncoder setBlendedAvgEnabled(boolean);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #965                // Method blendedAvgEnabled:()Lorg/apache/spark/ml/param/BooleanParam;
       5: iload_1
       6: invokestatic  #766                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       9: invokevirtual #916                // Method set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      12: checkcast     #2                  // class ai/h2o/sparkling/ml/features/H2OTargetEncoder
      15: areturn

  public ai.h2o.sparkling.ml.features.H2OTargetEncoder setBlendedAvgInflectionPoint(double);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #969                // Method blendedAvgInflectionPoint:()Lorg/apache/spark/ml/param/DoubleParam;
       5: dload_1
       6: invokestatic  #774                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
       9: invokevirtual #916                // Method set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      12: checkcast     #2                  // class ai/h2o/sparkling/ml/features/H2OTargetEncoder
      15: areturn

  public ai.h2o.sparkling.ml.features.H2OTargetEncoder setBlendedAvgSmoothing(double);
    Code:
       0: getstatic     #569                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: dload_1
       4: dconst_0
       5: dcmpl
       6: ifle          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokedynamic #976,  0            // InvokeDynamic #3:apply:()Lscala/Function0;
      19: invokevirtual #980                // Method scala/Predef$.require:(ZLscala/Function0;)V
      22: aload_0
      23: aload_0
      24: invokevirtual #982                // Method blendedAvgSmoothing:()Lorg/apache/spark/ml/param/DoubleParam;
      27: dload_1
      28: invokestatic  #774                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
      31: invokevirtual #916                // Method set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      34: checkcast     #2                  // class ai/h2o/sparkling/ml/features/H2OTargetEncoder
      37: areturn

  public ai.h2o.sparkling.ml.features.H2OTargetEncoder setNoise(double);
    Code:
       0: getstatic     #569                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: dload_1
       4: dconst_0
       5: dcmpl
       6: iflt          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokedynamic #988,  0            // InvokeDynamic #4:apply:()Lscala/Function0;
      19: invokevirtual #980                // Method scala/Predef$.require:(ZLscala/Function0;)V
      22: aload_0
      23: aload_0
      24: invokevirtual #990                // Method noise:()Lorg/apache/spark/ml/param/DoubleParam;
      27: dload_1
      28: invokestatic  #774                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
      31: invokevirtual #916                // Method set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      34: checkcast     #2                  // class ai/h2o/sparkling/ml/features/H2OTargetEncoder
      37: areturn

  public ai.h2o.sparkling.ml.features.H2OTargetEncoder setNoiseSeed(long);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #994                // Method noiseSeed:()Lorg/apache/spark/ml/param/LongParam;
       5: lload_1
       6: invokestatic  #794                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
       9: invokevirtual #916                // Method set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      12: checkcast     #2                  // class ai/h2o/sparkling/ml/features/H2OTargetEncoder
      15: areturn

  public ai.h2o.sparkling.ml.features.H2OTargetEncoder setProblemType(java.lang.String);
    Code:
       0: getstatic     #957                // Field ai/h2o/sparkling/ml/params/EnumParamValidator$.MODULE$:Lai/h2o/sparkling/ml/params/EnumParamValidator$;
       3: aload_1
       4: getstatic     #690                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       7: ldc_w         #624                // class ai/h2o/sparkling/ml/params/H2OTargetEncoderProblemType
      10: invokevirtual #695                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      13: invokevirtual #961                // Method ai/h2o/sparkling/ml/params/EnumParamValidator$.getValidatedEnumValue:(Ljava/lang/String;Lscala/reflect/ClassTag;)Ljava/lang/String;
      16: astore_2
      17: aload_0
      18: aload_0
      19: invokevirtual #998                // Method problemType:()Lorg/apache/spark/ml/param/Param;
      22: aload_2
      23: invokevirtual #916                // Method set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      26: checkcast     #2                  // class ai/h2o/sparkling/ml/features/H2OTargetEncoder
      29: areturn

  public org.apache.spark.ml.param.Params copy(org.apache.spark.ml.param.ParamMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1001               // Method copy:(Lorg/apache/spark/ml/param/ParamMap;)Lai/h2o/sparkling/ml/features/H2OTargetEncoder;
       5: areturn

  public org.apache.spark.ml.PipelineStage copy(org.apache.spark.ml.param.ParamMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1001               // Method copy:(Lorg/apache/spark/ml/param/ParamMap;)Lai/h2o/sparkling/ml/features/H2OTargetEncoder;
       5: areturn

  public org.apache.spark.ml.Estimator copy(org.apache.spark.ml.param.ParamMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1001               // Method copy:(Lorg/apache/spark/ml/param/ParamMap;)Lai/h2o/sparkling/ml/features/H2OTargetEncoder;
       5: areturn

  public org.apache.spark.ml.Model fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1006               // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OTargetEncoderModel;
       5: areturn

  private final void LoggingLevel$lzycompute$1();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #501                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
       8: ifnonnull     23
      11: aload_0
      12: new           #17                 // class ai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$
      15: dup
      16: aload_0
      17: invokespecial #1009               // Method ai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$."<init>":(Lai/h2o/sparkling/backend/utils/RestCommunication;)V
      20: putfield      #501                // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
      23: aload_1
      24: monitorexit
      25: goto          31
      28: aload_1
      29: monitorexit
      30: athrow
      31: return
    Exception table:
       from    to  target type
           4    23    28   any

  public static final java.lang.String $anonfun$fit$1();
    Code:
       0: ldc_w         #1013               // String H2OContext needs to be created in order to use target encoding. Please create one as H2OContext.getOrCreate().
       3: areturn

  public static final scala.collection.mutable.WrappedArray $anonfun$fit$2(java.lang.String[]);
    Code:
       0: getstatic     #569                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: checkcast     #573                // class "[Ljava/lang/Object;"
       7: invokevirtual #803                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      10: areturn

  public static final java.lang.String[] $anonfun$setInputCols$1(java.lang.String);
    Code:
       0: iconst_1
       1: anewarray     #692                // class java/lang/String
       4: dup
       5: iconst_0
       6: aload_0
       7: aastore
       8: checkcast     #573                // class "[Ljava/lang/Object;"
      11: checkcast     #703                // class "[Ljava/lang/String;"
      14: areturn

  public static final java.lang.String $anonfun$setBlendedAvgSmoothing$1();
    Code:
       0: ldc_w         #1017               // String The smoothing value has to be a positive number.
       3: areturn

  public static final java.lang.String $anonfun$setNoise$1();
    Code:
       0: ldc_w         #1019               // String Noise can\'t be a negative value.
       3: areturn

  public ai.h2o.sparkling.ml.features.H2OTargetEncoder(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #560                // Field uid:Ljava/lang/String;
       5: aload_0
       6: invokespecial #1021               // Method org/apache/spark/ml/Estimator."<init>":()V
       9: aload_0
      10: invokestatic  #1025               // InterfaceMethod ai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams.$init$:(Lai/h2o/sparkling/ml/params/H2OTargetEncoderMOJOParams;)V
      13: aload_0
      14: invokestatic  #1028               // InterfaceMethod ai/h2o/sparkling/ml/models/H2OTargetEncoderBase.$init$:(Lai/h2o/sparkling/ml/models/H2OTargetEncoderBase;)V
      17: aload_0
      18: invokestatic  #1031               // InterfaceMethod org/apache/spark/ml/util/MLWritable.$init$:(Lorg/apache/spark/ml/util/MLWritable;)V
      21: aload_0
      22: invokestatic  #1034               // InterfaceMethod org/apache/spark/ml/util/DefaultParamsWritable.$init$:(Lorg/apache/spark/ml/util/DefaultParamsWritable;)V
      25: aload_0
      26: invokestatic  #1037               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.$init$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;)V
      29: aload_0
      30: invokestatic  #1039               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.$init$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)V
      33: aload_0
      34: invokestatic  #1042               // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.$init$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;)V
      37: return

  public ai.h2o.sparkling.ml.features.H2OTargetEncoder();
    Code:
       0: aload_0
       1: getstatic     #1047               // Field org/apache/spark/ml/util/Identifiable$.MODULE$:Lorg/apache/spark/ml/util/Identifiable$;
       4: ldc_w         #1049               // String H2OTargetEncoder
       7: invokevirtual #1052               // Method org/apache/spark/ml/util/Identifiable$.randomUID:(Ljava/lang/String;)Ljava/lang/String;
      10: invokespecial #1054               // Method "<init>":(Ljava/lang/String;)V
      13: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #1066,  0           // InvokeDynamic #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
