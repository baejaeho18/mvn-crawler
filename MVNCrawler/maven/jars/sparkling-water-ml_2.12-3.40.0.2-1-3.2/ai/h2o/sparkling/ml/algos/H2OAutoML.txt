Compiled from "H2OAutoML.scala"
public class ai.h2o.sparkling.ml.algos.H2OAutoML extends org.apache.spark.ml.Estimator<ai.h2o.sparkling.ml.models.H2OMOJOModel> implements ai.h2o.sparkling.ml.algos.H2OAlgoCommonUtils, org.apache.spark.ml.util.DefaultParamsWritable, ai.h2o.sparkling.ml.params.H2OAutoMLParams {
  private final java.lang.String uid;

  private scala.Option<java.lang.String> amlKeyOption;

  private scala.Option<ai.h2o.sparkling.ml.models.H2OMOJOModel[]> allModels;

  private final ai.h2o.sparkling.ml.params.DictionaryParam ai$h2o$sparkling$ml$params$HasMonotoneConstraints$$monotoneConstraints;

  private final org.apache.spark.ml.param.LongParam seed;

  private final org.apache.spark.ml.param.IntParam maxModels;

  private final org.apache.spark.ml.param.DoubleParam maxRuntimeSecs;

  private final org.apache.spark.ml.param.DoubleParam maxRuntimeSecsPerModel;

  private final org.apache.spark.ml.param.IntParam stoppingRounds;

  private final org.apache.spark.ml.param.Param<java.lang.String> stoppingMetric;

  private final org.apache.spark.ml.param.DoubleParam stoppingTolerance;

  private final org.apache.spark.ml.param.Param<java.lang.String> labelCol;

  private final ai.h2o.sparkling.ml.params.NullableStringParam foldCol;

  private final ai.h2o.sparkling.ml.params.NullableStringParam weightCol;

  private final org.apache.spark.ml.param.Param<java.lang.String> sortMetric;

  private final ai.h2o.sparkling.ml.params.NonSerializableNullableDataFrameParam ai$h2o$sparkling$ml$params$HasBlendingDataFrame$$blendingDataFrame;

  private final ai.h2o.sparkling.ml.params.NullableDataFrameParam ai$h2o$sparkling$ml$params$HasLeaderboardDataFrame$$leaderboardDataFrame;

  private final ai.h2o.sparkling.ml.params.NullableStringArrayParam ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols;

  private final ai.h2o.sparkling.ml.params.NullableStringArrayParam excludeAlgos;

  private final org.apache.spark.ml.param.StringArrayParam includeAlgos;

  private final org.apache.spark.ml.param.DoubleParam exploitationRatio;

  private final ai.h2o.sparkling.ml.params.NullableStringParam projectName;

  private final org.apache.spark.ml.param.IntParam nfolds;

  private final org.apache.spark.ml.param.BooleanParam balanceClasses;

  private final ai.h2o.sparkling.ml.params.NullableFloatArrayParam classSamplingFactors;

  private final org.apache.spark.ml.param.FloatParam maxAfterBalanceSize;

  private final org.apache.spark.ml.param.BooleanParam keepCrossValidationPredictions;

  private final org.apache.spark.ml.param.BooleanParam keepCrossValidationModels;

  private final org.apache.spark.ml.param.BooleanParam keepCrossValidationFoldAssignment;

  private final ai.h2o.sparkling.ml.params.NullableStringParam exportCheckpointsDir;

  private final org.apache.spark.ml.param.Param<java.lang.String> distribution;

  private final org.apache.spark.ml.param.DoubleParam tweediePower;

  private final org.apache.spark.ml.param.DoubleParam quantileAlpha;

  private final org.apache.spark.ml.param.DoubleParam huberAlpha;

  private final ai.h2o.sparkling.ml.params.NullableStringParam customDistributionFunc;

  private final org.apache.spark.ml.param.Param<java.lang.String> predictionCol;

  private final org.apache.spark.ml.param.Param<java.lang.String> detailedPredictionCol;

  private final org.apache.spark.ml.param.BooleanParam withContributions;

  private final org.apache.spark.ml.param.StringArrayParam featuresCols;

  private final org.apache.spark.ml.param.BooleanParam withLeafNodeAssignments;

  private final org.apache.spark.ml.param.BooleanParam withStageResults;

  private final ai.h2o.sparkling.ml.params.NonSerializableNullableDataFrameParam validationDataFrame;

  private final org.apache.spark.ml.param.DoubleParam splitRatio;

  private final org.apache.spark.ml.param.StringArrayParam columnsToCategorical;

  private final org.apache.spark.ml.param.BooleanParam keepBinaryModels;

  private final org.apache.spark.ml.param.BooleanParam convertUnknownCategoricalLevelsToNa;

  private final org.apache.spark.ml.param.BooleanParam convertInvalidNumbersToNa;

  private final org.apache.spark.ml.param.Param<java.lang.String> dataFrameSerializer;

  private scala.Option<ai.h2o.sparkling.ml.models.H2OBinaryModel> binaryModel;

  private final scala.collection.mutable.ArrayBuffer<ai.h2o.sparkling.H2OFrame> ai$h2o$sparkling$backend$utils$H2OFrameLifecycle$$h2oFramesToBeDeleted;

  private volatile ai.h2o.sparkling.backend.utils.RestCommunication$LoggingLevel$ LoggingLevel$module;

  public static org.apache.spark.ml.util.MLReader<ai.h2o.sparkling.ml.algos.H2OAutoML> read();
    Code:
       0: getstatic     #134                // Field ai/h2o/sparkling/ml/algos/H2OAutoML$.MODULE$:Lai/h2o/sparkling/ml/algos/H2OAutoML$;
       3: invokevirtual #136                // Method ai/h2o/sparkling/ml/algos/H2OAutoML$.read:()Lorg/apache/spark/ml/util/MLReader;
       6: areturn

  public static java.lang.Object load(java.lang.String);
    Code:
       0: getstatic     #134                // Field ai/h2o/sparkling/ml/algos/H2OAutoML$.MODULE$:Lai/h2o/sparkling/ml/algos/H2OAutoML$;
       3: aload_0
       4: invokevirtual #141                // Method ai/h2o/sparkling/ml/algos/H2OAutoML$.load:(Ljava/lang/String;)Ljava/lang/Object;
       7: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$HasMonotoneConstraints$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #149                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;)Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getMonotoneConstraints();
    Code:
       0: aload_0
       1: invokestatic  #159                // InterfaceMethod ai/h2o/sparkling/ml/params/HasMonotoneConstraints.getMonotoneConstraints$:(Lai/h2o/sparkling/ml/params/HasMonotoneConstraints;)Lscala/collection/immutable/Map;
       4: areturn

  public ai.h2o.sparkling.ml.params.HasMonotoneConstraints setMonotoneConstraints(scala.collection.immutable.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #167                // InterfaceMethod ai/h2o/sparkling/ml/params/HasMonotoneConstraints.setMonotoneConstraints$:(Lai/h2o/sparkling/ml/params/HasMonotoneConstraints;Lscala/collection/immutable/Map;)Lai/h2o/sparkling/ml/params/HasMonotoneConstraints;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getMonotoneConstraintsParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #176                // InterfaceMethod ai/h2o/sparkling/ml/params/HasMonotoneConstraints.getMonotoneConstraintsParam$:(Lai/h2o/sparkling/ml/params/HasMonotoneConstraints;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.String> getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #181                // InterfaceMethod ai/h2o/sparkling/ml/params/HasMonotoneConstraints.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/HasMonotoneConstraints;)Lscala/collection/immutable/Map;
       4: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$$super$getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #188                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLInputParams.getH2OAlgorithmParams$:(Lai/h2o/sparkling/ml/params/H2OAutoMLInputParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #192                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLInputParams.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/H2OAutoMLInputParams;)Lscala/collection/immutable/Map;
       4: areturn

  public long getSeed();
    Code:
       0: aload_0
       1: invokestatic  #198                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams.getSeed$:(Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;)J
       4: lreturn

  public int getMaxModels();
    Code:
       0: aload_0
       1: invokestatic  #204                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams.getMaxModels$:(Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;)I
       4: ireturn

  public double getMaxRuntimeSecs();
    Code:
       0: aload_0
       1: invokestatic  #210                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams.getMaxRuntimeSecs$:(Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;)D
       4: dreturn

  public double getMaxRuntimeSecsPerModel();
    Code:
       0: aload_0
       1: invokestatic  #214                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams.getMaxRuntimeSecsPerModel$:(Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;)D
       4: dreturn

  public int getStoppingRounds();
    Code:
       0: aload_0
       1: invokestatic  #218                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams.getStoppingRounds$:(Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;)I
       4: ireturn

  public java.lang.String getStoppingMetric();
    Code:
       0: aload_0
       1: invokestatic  #224                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams.getStoppingMetric$:(Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;)Ljava/lang/String;
       4: areturn

  public double getStoppingTolerance();
    Code:
       0: aload_0
       1: invokestatic  #228                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams.getStoppingTolerance$:(Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;)D
       4: dreturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams setSeed(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #234                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams.setSeed$:(Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;J)Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams setMaxModels(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #241                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams.setMaxModels$:(Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;I)Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams setMaxRuntimeSecs(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #248                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams.setMaxRuntimeSecs$:(Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;D)Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams setMaxRuntimeSecsPerModel(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #253                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams.setMaxRuntimeSecsPerModel$:(Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;D)Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams setStoppingRounds(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #257                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams.setStoppingRounds$:(Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;I)Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams setStoppingMetric(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #263                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams.setStoppingMetric$:(Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams setStoppingTolerance(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #267                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams.setStoppingTolerance$:(Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;D)Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #271                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams.getH2OAlgorithmParams$:(Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OAutoMLStoppingCriteriaParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #275                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams.getH2OAutoMLStoppingCriteriaParams$:(Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OAutoMLInputParams$$super$getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #281                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildModelsParams.getH2OAlgorithmParams$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildModelsParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OAutoMLInputParams$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #287                // InterfaceMethod ai/h2o/sparkling/ml/params/HasBlendingDataFrame.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/HasBlendingDataFrame;)Lscala/collection/immutable/Map;
       4: areturn

  public java.lang.String getLabelCol();
    Code:
       0: aload_0
       1: invokestatic  #292                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLInputParams.getLabelCol$:(Lai/h2o/sparkling/ml/params/H2OAutoMLInputParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getFoldCol();
    Code:
       0: aload_0
       1: invokestatic  #296                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLInputParams.getFoldCol$:(Lai/h2o/sparkling/ml/params/H2OAutoMLInputParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getWeightCol();
    Code:
       0: aload_0
       1: invokestatic  #300                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLInputParams.getWeightCol$:(Lai/h2o/sparkling/ml/params/H2OAutoMLInputParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getSortMetric();
    Code:
       0: aload_0
       1: invokestatic  #304                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLInputParams.getSortMetric$:(Lai/h2o/sparkling/ml/params/H2OAutoMLInputParams;)Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLInputParams setLabelCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #310                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLInputParams.setLabelCol$:(Lai/h2o/sparkling/ml/params/H2OAutoMLInputParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAutoMLInputParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLInputParams setFoldCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #314                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLInputParams.setFoldCol$:(Lai/h2o/sparkling/ml/params/H2OAutoMLInputParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAutoMLInputParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLInputParams setWeightCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #318                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLInputParams.setWeightCol$:(Lai/h2o/sparkling/ml/params/H2OAutoMLInputParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAutoMLInputParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLInputParams setSortMetric(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #322                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLInputParams.setSortMetric$:(Lai/h2o/sparkling/ml/params/H2OAutoMLInputParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAutoMLInputParams;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OAutoMLInputParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #326                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLInputParams.getH2OAutoMLInputParams$:(Lai/h2o/sparkling/ml/params/H2OAutoMLInputParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$HasBlendingDataFrame$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #332                // InterfaceMethod ai/h2o/sparkling/ml/params/HasLeaderboardDataFrame.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/HasLeaderboardDataFrame;)Lscala/collection/immutable/Map;
       4: areturn

  public org.apache.spark.sql.Dataset<org.apache.spark.sql.Row> getBlendingDataFrame();
    Code:
       0: aload_0
       1: invokestatic  #339                // InterfaceMethod ai/h2o/sparkling/ml/params/HasBlendingDataFrame.getBlendingDataFrame$:(Lai/h2o/sparkling/ml/params/HasBlendingDataFrame;)Lorg/apache/spark/sql/Dataset;
       4: areturn

  public ai.h2o.sparkling.ml.params.HasBlendingDataFrame setBlendingDataFrame(org.apache.spark.sql.Dataset<org.apache.spark.sql.Row>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #346                // InterfaceMethod ai/h2o/sparkling/ml/params/HasBlendingDataFrame.setBlendingDataFrame$:(Lai/h2o/sparkling/ml/params/HasBlendingDataFrame;Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/params/HasBlendingDataFrame;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getBlendingDataFrameParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #352                // InterfaceMethod ai/h2o/sparkling/ml/params/HasBlendingDataFrame.getBlendingDataFrameParam$:(Lai/h2o/sparkling/ml/params/HasBlendingDataFrame;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$HasLeaderboardDataFrame$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #358                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;)Lscala/collection/immutable/Map;
       4: areturn

  public org.apache.spark.sql.Dataset<org.apache.spark.sql.Row> getLeaderboardDataFrame();
    Code:
       0: aload_0
       1: invokestatic  #363                // InterfaceMethod ai/h2o/sparkling/ml/params/HasLeaderboardDataFrame.getLeaderboardDataFrame$:(Lai/h2o/sparkling/ml/params/HasLeaderboardDataFrame;)Lorg/apache/spark/sql/Dataset;
       4: areturn

  public ai.h2o.sparkling.ml.params.HasLeaderboardDataFrame setLeaderboardDataFrame(org.apache.spark.sql.Dataset<org.apache.spark.sql.Row>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #370                // InterfaceMethod ai/h2o/sparkling/ml/params/HasLeaderboardDataFrame.setLeaderboardDataFrame$:(Lai/h2o/sparkling/ml/params/HasLeaderboardDataFrame;Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/params/HasLeaderboardDataFrame;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getLeaderboardDataFrameParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #375                // InterfaceMethod ai/h2o/sparkling/ml/params/HasLeaderboardDataFrame.getLeaderboardDataFrameParam$:(Lai/h2o/sparkling/ml/params/HasLeaderboardDataFrame;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$HasIgnoredCols$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #379                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildModelsParams.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildModelsParams;)Lscala/collection/immutable/Map;
       4: areturn

  public java.lang.String[] getIgnoredCols();
    Code:
       0: aload_0
       1: invokestatic  #385                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.getIgnoredCols$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;)[Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.params.HasIgnoredCols setIgnoredCols(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #391                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.setIgnoredCols$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;[Ljava/lang/String;)Lai/h2o/sparkling/ml/params/HasIgnoredCols;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getIgnoredColsParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #397                // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.getIgnoredColsParam$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OAutoMLBuildModelsParams$$super$getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #403                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.getH2OAlgorithmParams$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OAutoMLBuildModelsParams$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #407                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;)Lscala/collection/immutable/Map;
       4: areturn

  public java.lang.String[] getExcludeAlgos();
    Code:
       0: aload_0
       1: invokestatic  #412                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildModelsParams.getExcludeAlgos$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildModelsParams;)[Ljava/lang/String;
       4: areturn

  public java.lang.String[] getIncludeAlgos();
    Code:
       0: aload_0
       1: invokestatic  #416                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildModelsParams.getIncludeAlgos$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildModelsParams;)[Ljava/lang/String;
       4: areturn

  public double getExploitationRatio();
    Code:
       0: aload_0
       1: invokestatic  #421                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildModelsParams.getExploitationRatio$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildModelsParams;)D
       4: dreturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLBuildModelsParams setExcludeAlgos(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #427                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildModelsParams.setExcludeAlgos$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildModelsParams;[Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAutoMLBuildModelsParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLBuildModelsParams setIncludeAlgos(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #431                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildModelsParams.setIncludeAlgos$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildModelsParams;[Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAutoMLBuildModelsParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLBuildModelsParams setExploitationRatio(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #437                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildModelsParams.setExploitationRatio$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildModelsParams;D)Lai/h2o/sparkling/ml/params/H2OAutoMLBuildModelsParams;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OAutoMLBuildModelsParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #441                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildModelsParams.getH2OAutoMLBuildModelsParams$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildModelsParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OAutoMLBuildControlParams$$super$getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #445                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.getH2OAlgorithmParams$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OAutoMLBuildControlParams$$super$getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokestatic  #449                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.getSWtoH2OParamNameMap$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;)Lscala/collection/immutable/Map;
       4: areturn

  public java.lang.String getProjectName();
    Code:
       0: aload_0
       1: invokestatic  #454                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.getProjectName$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;)Ljava/lang/String;
       4: areturn

  public int getNfolds();
    Code:
       0: aload_0
       1: invokestatic  #459                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.getNfolds$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;)I
       4: ireturn

  public boolean getBalanceClasses();
    Code:
       0: aload_0
       1: invokestatic  #465                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.getBalanceClasses$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;)Z
       4: ireturn

  public float[] getClassSamplingFactors();
    Code:
       0: aload_0
       1: invokestatic  #471                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.getClassSamplingFactors$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;)[F
       4: areturn

  public float getMaxAfterBalanceSize();
    Code:
       0: aload_0
       1: invokestatic  #477                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.getMaxAfterBalanceSize$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;)F
       4: freturn

  public boolean getKeepCrossValidationPredictions();
    Code:
       0: aload_0
       1: invokestatic  #481                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.getKeepCrossValidationPredictions$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;)Z
       4: ireturn

  public boolean getKeepCrossValidationModels();
    Code:
       0: aload_0
       1: invokestatic  #485                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.getKeepCrossValidationModels$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;)Z
       4: ireturn

  public boolean getKeepCrossValidationFoldAssignment();
    Code:
       0: aload_0
       1: invokestatic  #489                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.getKeepCrossValidationFoldAssignment$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;)Z
       4: ireturn

  public java.lang.String getExportCheckpointsDir();
    Code:
       0: aload_0
       1: invokestatic  #493                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.getExportCheckpointsDir$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getDistribution();
    Code:
       0: aload_0
       1: invokestatic  #497                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.getDistribution$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;)Ljava/lang/String;
       4: areturn

  public double getTweediePower();
    Code:
       0: aload_0
       1: invokestatic  #502                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.getTweediePower$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;)D
       4: dreturn

  public double getQuantileAlpha();
    Code:
       0: aload_0
       1: invokestatic  #506                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.getQuantileAlpha$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;)D
       4: dreturn

  public double getHuberAlpha();
    Code:
       0: aload_0
       1: invokestatic  #510                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.getHuberAlpha$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;)D
       4: dreturn

  public java.lang.String getCustomDistributionFunc();
    Code:
       0: aload_0
       1: invokestatic  #514                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.getCustomDistributionFunc$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;)Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLBuildControlParams setProjectName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #520                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.setProjectName$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLBuildControlParams setNfolds(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #526                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.setNfolds$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;I)Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLBuildControlParams setBalanceClasses(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #532                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.setBalanceClasses$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;Z)Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLBuildControlParams setClassSamplingFactors(float[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #539                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.setClassSamplingFactors$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;[F)Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLBuildControlParams setMaxAfterBalanceSize(float);
    Code:
       0: aload_0
       1: fload_1
       2: invokestatic  #546                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.setMaxAfterBalanceSize$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;F)Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLBuildControlParams setKeepCrossValidationPredictions(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #551                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.setKeepCrossValidationPredictions$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;Z)Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLBuildControlParams setKeepCrossValidationModels(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #555                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.setKeepCrossValidationModels$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;Z)Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLBuildControlParams setKeepCrossValidationFoldAssignment(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #559                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.setKeepCrossValidationFoldAssignment$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;Z)Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLBuildControlParams setExportCheckpointsDir(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #563                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.setExportCheckpointsDir$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLBuildControlParams setDistribution(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #567                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.setDistribution$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLBuildControlParams setTweediePower(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #573                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.setTweediePower$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;D)Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLBuildControlParams setQuantileAlpha(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #577                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.setQuantileAlpha$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;D)Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLBuildControlParams setHuberAlpha(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #581                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.setHuberAlpha$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;D)Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAutoMLBuildControlParams setCustomDistributionFunc(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #585                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.setCustomDistributionFunc$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;
       5: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OAutoMLBuildControlParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #589                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.getH2OAutoMLBuildControlParams$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public java.lang.String convert2dArrayToH2OFrame(double[][]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #596                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.convert2dArrayToH2OFrame$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;[[D)Ljava/lang/String;
       5: areturn

  public java.lang.String[] convertVectorArrayToH2OFrameKeyArray(org.apache.spark.ml.linalg.DenseVector[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #604                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.convertVectorArrayToH2OFrameKeyArray$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;[Lorg/apache/spark/ml/linalg/DenseVector;)[Ljava/lang/String;
       5: areturn

  public java.lang.String[] convertMatrixToH2OFrameKeyArray(org.apache.spark.ml.linalg.DenseMatrix[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #612                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.convertMatrixToH2OFrameKeyArray$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;[Lorg/apache/spark/ml/linalg/DenseMatrix;)[Ljava/lang/String;
       5: areturn

  public java.lang.String convertDataFrameToH2OFrameKey(org.apache.spark.sql.Dataset<org.apache.spark.sql.Row>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #621                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.convertDataFrameToH2OFrameKey$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;Lorg/apache/spark/sql/Dataset;)Ljava/lang/String;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAlgoParamsBase$ParametersExtraMethods ParametersExtraMethods(scala.collection.immutable.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #628                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.ParametersExtraMethods$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;Lscala/collection/immutable/Map;)Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase$ParametersExtraMethods;
       5: areturn

  public org.apache.spark.ml.param.BooleanParam booleanParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #638                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.booleanParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/BooleanParam;
       6: areturn

  public org.apache.spark.ml.param.IntParam intParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #644                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.intParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/IntParam;
       6: areturn

  public org.apache.spark.ml.param.LongParam longParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #650                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.longParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/LongParam;
       6: areturn

  public org.apache.spark.ml.param.FloatParam floatParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #656                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.floatParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/FloatParam;
       6: areturn

  public org.apache.spark.ml.param.DoubleParam doubleParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #662                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.doubleParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/DoubleParam;
       6: areturn

  public <T> org.apache.spark.ml.param.Param<T> param(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #669                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.param$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/Param;
       6: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> stringParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #674                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.stringParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/Param;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam nullableStringParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #680                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableStringParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableStringParam;
       6: areturn

  public org.apache.spark.ml.param.StringArrayParam stringArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #686                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.stringArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/StringArrayParam;
       6: areturn

  public org.apache.spark.ml.param.IntArrayParam intArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #692                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.intArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/IntArrayParam;
       6: areturn

  public org.apache.spark.ml.param.DoubleArrayParam doubleArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #698                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.doubleArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/DoubleArrayParam;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableDoubleArrayArrayParam nullableDoubleArrayArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #704                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableDoubleArrayArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableDoubleArrayArrayParam;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableBooleanArrayParam nullableBooleanArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #710                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableBooleanArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableBooleanArrayParam;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableIntArrayParam nullableIntArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #716                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableIntArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableIntArrayParam;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableFloatArrayParam nullableFloatArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #722                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableFloatArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableFloatArrayParam;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableDoubleArrayParam nullableDoubleArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #728                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableDoubleArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableDoubleArrayParam;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableStringArrayParam nullableStringArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #734                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableStringArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableStringPairArrayParam nullableStringPairArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #740                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableStringPairArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableStringPairArrayParam;
       6: areturn

  public ai.h2o.sparkling.ml.params.NullableStringArrayArrayParam nullableStringArrayArrayParam(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #746                // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.nullableStringArrayArrayParam$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;Ljava/lang/String;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/NullableStringArrayArrayParam;
       6: areturn

  public java.lang.String[] getFeaturesCols();
    Code:
       0: aload_0
       1: invokestatic  #753                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams.getFeaturesCols$:(Lai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams;)[Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.params.H2OAlgorithmCommonParams setPredictionCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #760                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams.setPredictionCol$:(Lai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAlgorithmCommonParams setDetailedPredictionCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #764                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams.setDetailedPredictionCol$:(Lai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAlgorithmCommonParams setWithContributions(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #771                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams.setWithContributions$:(Lai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams;Z)Lai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAlgorithmCommonParams setWithLeafNodeAssignments(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #775                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams.setWithLeafNodeAssignments$:(Lai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams;Z)Lai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAlgorithmCommonParams setWithStageResults(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #779                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams.setWithStageResults$:(Lai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams;Z)Lai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAlgorithmCommonParams setFeaturesCol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #784                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams.setFeaturesCol$:(Lai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAlgorithmCommonParams setFeaturesCols(java.lang.String, scala.collection.Seq<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #792                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams.setFeaturesCols$:(Lai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams;Ljava/lang/String;Lscala/collection/Seq;)Lai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams;
       6: areturn

  public ai.h2o.sparkling.ml.params.H2OAlgorithmCommonParams setFeaturesCols(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #798                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams.setFeaturesCols$:(Lai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams;[Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OAlgorithmCommonParams setFeaturesCols(java.util.ArrayList<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #803                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams.setFeaturesCols$:(Lai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams;Ljava/util/ArrayList;)Lai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams;
       5: areturn

  public java.lang.String getPredictionCol();
    Code:
       0: aload_0
       1: invokestatic  #811                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgorithmMOJOParams.getPredictionCol$:(Lai/h2o/sparkling/ml/params/H2OAlgorithmMOJOParams;)Ljava/lang/String;
       4: areturn

  public java.lang.String getDetailedPredictionCol();
    Code:
       0: aload_0
       1: invokestatic  #815                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgorithmMOJOParams.getDetailedPredictionCol$:(Lai/h2o/sparkling/ml/params/H2OAlgorithmMOJOParams;)Ljava/lang/String;
       4: areturn

  public boolean getWithContributions();
    Code:
       0: aload_0
       1: invokestatic  #820                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgorithmMOJOParams.getWithContributions$:(Lai/h2o/sparkling/ml/params/H2OAlgorithmMOJOParams;)Z
       4: ireturn

  public boolean getWithLeafNodeAssignments();
    Code:
       0: aload_0
       1: invokestatic  #824                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgorithmMOJOParams.getWithLeafNodeAssignments$:(Lai/h2o/sparkling/ml/params/H2OAlgorithmMOJOParams;)Z
       4: ireturn

  public boolean getWithStageResults();
    Code:
       0: aload_0
       1: invokestatic  #828                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgorithmMOJOParams.getWithStageResults$:(Lai/h2o/sparkling/ml/params/H2OAlgorithmMOJOParams;)Z
       4: ireturn

  public org.apache.spark.sql.Dataset<org.apache.spark.sql.Row> getValidationDataFrame();
    Code:
       0: aload_0
       1: invokestatic  #835                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OCommonParams.getValidationDataFrame$:(Lai/h2o/sparkling/ml/params/H2OCommonParams;)Lorg/apache/spark/sql/Dataset;
       4: areturn

  public double getSplitRatio();
    Code:
       0: aload_0
       1: invokestatic  #840                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OCommonParams.getSplitRatio$:(Lai/h2o/sparkling/ml/params/H2OCommonParams;)D
       4: dreturn

  public java.lang.String[] getColumnsToCategorical();
    Code:
       0: aload_0
       1: invokestatic  #845                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OCommonParams.getColumnsToCategorical$:(Lai/h2o/sparkling/ml/params/H2OCommonParams;)[Ljava/lang/String;
       4: areturn

  public boolean getKeepBinaryModels();
    Code:
       0: aload_0
       1: invokestatic  #850                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OCommonParams.getKeepBinaryModels$:(Lai/h2o/sparkling/ml/params/H2OCommonParams;)Z
       4: ireturn

  public ai.h2o.sparkling.ml.params.H2OCommonParams setValidationDataFrame(org.apache.spark.sql.Dataset<org.apache.spark.sql.Row>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #857                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OCommonParams.setValidationDataFrame$:(Lai/h2o/sparkling/ml/params/H2OCommonParams;Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/params/H2OCommonParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OCommonParams setSplitRatio(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokestatic  #864                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OCommonParams.setSplitRatio$:(Lai/h2o/sparkling/ml/params/H2OCommonParams;D)Lai/h2o/sparkling/ml/params/H2OCommonParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OCommonParams setColumnsToCategorical(java.lang.String, scala.collection.Seq<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #871                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OCommonParams.setColumnsToCategorical$:(Lai/h2o/sparkling/ml/params/H2OCommonParams;Ljava/lang/String;Lscala/collection/Seq;)Lai/h2o/sparkling/ml/params/H2OCommonParams;
       6: areturn

  public ai.h2o.sparkling.ml.params.H2OCommonParams setColumnsToCategorical(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #876                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OCommonParams.setColumnsToCategorical$:(Lai/h2o/sparkling/ml/params/H2OCommonParams;[Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OCommonParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OCommonParams setColumnsToCategorical(java.util.ArrayList<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #881                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OCommonParams.setColumnsToCategorical$:(Lai/h2o/sparkling/ml/params/H2OCommonParams;Ljava/util/ArrayList;)Lai/h2o/sparkling/ml/params/H2OCommonParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OCommonParams setConvertUnknownCategoricalLevelsToNa(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #887                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OCommonParams.setConvertUnknownCategoricalLevelsToNa$:(Lai/h2o/sparkling/ml/params/H2OCommonParams;Z)Lai/h2o/sparkling/ml/params/H2OCommonParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OCommonParams setConvertInvalidNumbersToNa(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #891                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OCommonParams.setConvertInvalidNumbersToNa$:(Lai/h2o/sparkling/ml/params/H2OCommonParams;Z)Lai/h2o/sparkling/ml/params/H2OCommonParams;
       5: areturn

  public ai.h2o.sparkling.ml.params.H2OCommonParams setKeepBinaryModels(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #895                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OCommonParams.setKeepBinaryModels$:(Lai/h2o/sparkling/ml/params/H2OCommonParams;Z)Lai/h2o/sparkling/ml/params/H2OCommonParams;
       5: areturn

  public boolean getConvertUnknownCategoricalLevelsToNa();
    Code:
       0: aload_0
       1: invokestatic  #902                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OBaseMOJOParams.getConvertUnknownCategoricalLevelsToNa$:(Lai/h2o/sparkling/ml/params/H2OBaseMOJOParams;)Z
       4: ireturn

  public boolean getConvertInvalidNumbersToNa();
    Code:
       0: aload_0
       1: invokestatic  #906                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OBaseMOJOParams.getConvertInvalidNumbersToNa$:(Lai/h2o/sparkling/ml/params/H2OBaseMOJOParams;)Z
       4: ireturn

  public ai.h2o.sparkling.ml.params.H2OBaseMOJOParams setDataFrameSerializer(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #913                // InterfaceMethod ai/h2o/sparkling/ml/params/H2OBaseMOJOParams.setDataFrameSerializer$:(Lai/h2o/sparkling/ml/params/H2OBaseMOJOParams;Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OBaseMOJOParams;
       5: areturn

  public java.lang.String getDataFrameSerializer();
    Code:
       0: aload_0
       1: invokestatic  #920                // InterfaceMethod ai/h2o/sparkling/ml/params/HasDataFrameSerializer.getDataFrameSerializer$:(Lai/h2o/sparkling/ml/params/HasDataFrameSerializer;)Ljava/lang/String;
       4: areturn

  public org.apache.spark.ml.util.MLWriter write();
    Code:
       0: aload_0
       1: invokestatic  #926                // InterfaceMethod org/apache/spark/ml/util/DefaultParamsWritable.write$:(Lorg/apache/spark/ml/util/DefaultParamsWritable;)Lorg/apache/spark/ml/util/MLWriter;
       4: areturn

  public void save(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #936                // InterfaceMethod org/apache/spark/ml/util/MLWritable.save$:(Lorg/apache/spark/ml/util/MLWritable;Ljava/lang/String;)V
       5: return

  public ai.h2o.sparkling.ml.models.H2OBinaryModel getBinaryModel();
    Code:
       0: aload_0
       1: invokestatic  #942                // InterfaceMethod ai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils.getBinaryModel$:(Lai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils;)Lai/h2o/sparkling/ml/models/H2OBinaryModel;
       4: areturn

  public scala.collection.Seq<java.lang.String> getAdditionalCols();
    Code:
       0: aload_0
       1: invokestatic  #949                // InterfaceMethod ai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils.getAdditionalCols$:(Lai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils;)Lscala/collection/Seq;
       4: areturn

  public scala.collection.Seq<java.lang.String> getAdditionalValidationCols();
    Code:
       0: aload_0
       1: invokestatic  #953                // InterfaceMethod ai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils.getAdditionalValidationCols$:(Lai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils;)Lscala/collection/Seq;
       4: areturn

  public java.lang.String[] getColumnsToString();
    Code:
       0: aload_0
       1: invokestatic  #958                // InterfaceMethod ai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils.getColumnsToString$:(Lai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils;)[Ljava/lang/String;
       4: areturn

  public scala.Tuple2<ai.h2o.sparkling.H2OFrame, scala.Option<ai.h2o.sparkling.H2OFrame>> prepareDatasetForFitting(org.apache.spark.sql.Dataset<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #966                // InterfaceMethod ai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils.prepareDatasetForFitting$:(Lai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils;Lorg/apache/spark/sql/Dataset;)Lscala/Tuple2;
       5: areturn

  public java.lang.String sanitize(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #973                // InterfaceMethod ai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils.sanitize$:(Lai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public final void registerH2OFrameForDeletion(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #982                // InterfaceMethod ai/h2o/sparkling/backend/utils/H2OFrameLifecycle.registerH2OFrameForDeletion$:(Lai/h2o/sparkling/backend/utils/H2OFrameLifecycle;Lai/h2o/sparkling/H2OFrame;)V
       5: return

  public final void registerH2OFrameForDeletion(scala.Option<ai.h2o.sparkling.H2OFrame>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #987                // InterfaceMethod ai/h2o/sparkling/backend/utils/H2OFrameLifecycle.registerH2OFrameForDeletion$:(Lai/h2o/sparkling/backend/utils/H2OFrameLifecycle;Lscala/Option;)V
       5: return

  public final void deleteRegisteredH2OFrames();
    Code:
       0: aload_0
       1: invokestatic  #993                // InterfaceMethod ai/h2o/sparkling/backend/utils/H2OFrameLifecycle.deleteRegisteredH2OFrames$:(Lai/h2o/sparkling/backend/utils/H2OFrameLifecycle;)V
       4: return

  public java.lang.String trainAndGetDestinationKey(java.lang.String, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #1005               // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.trainAndGetDestinationKey$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;Ljava/lang/String;Lscala/collection/immutable/Map;Z)Ljava/lang/String;
       7: areturn

  public boolean trainAndGetDestinationKey$default$3();
    Code:
       0: aload_0
       1: invokestatic  #1010               // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.trainAndGetDestinationKey$default$3$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;)Z
       4: ireturn

  public ai.h2o.sparkling.ml.models.H2OMOJOModel trainAndGetMOJOModel(java.lang.String, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #1017               // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.trainAndGetMOJOModel$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;Ljava/lang/String;Lscala/collection/immutable/Map;Z)Lai/h2o/sparkling/ml/models/H2OMOJOModel;
       7: areturn

  public boolean trainAndGetMOJOModel$default$3();
    Code:
       0: aload_0
       1: invokestatic  #1021               // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.trainAndGetMOJOModel$default$3$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;)Z
       4: ireturn

  public java.io.File downloadBinaryModel(java.lang.String, ai.h2o.sparkling.H2OConf);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1029               // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.downloadBinaryModel$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;)Ljava/io/File;
       6: areturn

  public java.lang.String convertModelIdToKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1036               // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.convertModelIdToKey$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  public <ResultType> ResultType query(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, scala.Enumeration$Value, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokestatic  #1048               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;Lscala/Enumeration$Value;Lscala/reflect/ClassTag;)Ljava/lang/Object;
      15: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> query$default$4();
    Code:
       0: aload_0
       1: invokestatic  #1057               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> query$default$5();
    Code:
       0: aload_0
       1: invokestatic  #1063               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> scala.Enumeration$Value query$default$6();
    Code:
       0: aload_0
       1: invokestatic  #1070               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.query$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public <ResultType> ResultType update(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, boolean, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aload         7
      12: invokestatic  #1078               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;ZLscala/reflect/ClassTag;)Ljava/lang/Object;
      15: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> update$default$4();
    Code:
       0: aload_0
       1: invokestatic  #1082               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> update$default$5();
    Code:
       0: aload_0
       1: invokestatic  #1086               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> boolean update$default$6();
    Code:
       0: aload_0
       1: invokestatic  #1092               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.update$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public <ResultType> ResultType delete(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, boolean, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aload         7
      12: invokestatic  #1097               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;ZLscala/reflect/ClassTag;)Ljava/lang/Object;
      15: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> delete$default$4();
    Code:
       0: aload_0
       1: invokestatic  #1101               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> delete$default$5();
    Code:
       0: aload_0
       1: invokestatic  #1105               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> boolean delete$default$6();
    Code:
       0: aload_0
       1: invokestatic  #1109               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public java.io.OutputStream insertToNode(ai.h2o.sparkling.backend.NodeDesc, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1117               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insertToNode$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Lai/h2o/sparkling/backend/NodeDesc;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;)Ljava/io/OutputStream;
       9: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> insertToNode$default$4();
    Code:
       0: aload_0
       1: invokestatic  #1122               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insertToNode$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public java.io.OutputStream insert(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, scala.Function1<java.io.OutputStream, java.io.OutputStream>, scala.collection.immutable.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #1130               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insert$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/Function1;Lscala/collection/immutable/Map;)Ljava/io/OutputStream;
      11: areturn

  public scala.Function1<java.io.OutputStream, java.io.OutputStream> insert$default$4();
    Code:
       0: aload_0
       1: invokestatic  #1138               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insert$default$4$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Function1;
       4: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> insert$default$5();
    Code:
       0: aload_0
       1: invokestatic  #1142               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.insert$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public void delete(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1146               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.delete$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;)V
       7: return

  public <ResultType> ResultType request(java.net.URI, java.lang.String, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, boolean, scala.Enumeration$Value, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: iload         7
      12: aload         8
      14: aload         9
      16: invokestatic  #1155               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;Lscala/collection/Seq;ZLscala/Enumeration$Value;Lscala/reflect/ClassTag;)Ljava/lang/Object;
      19: areturn

  public <ResultType> scala.collection.immutable.Map<java.lang.String, java.lang.Object> request$default$5();
    Code:
       0: aload_0
       1: invokestatic  #1159               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public <ResultType> scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>> request$default$6();
    Code:
       0: aload_0
       1: invokestatic  #1163               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/Seq;
       4: areturn

  public <ResultType> boolean request$default$7();
    Code:
       0: aload_0
       1: invokestatic  #1167               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$7$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public <ResultType> scala.Enumeration$Value request$default$8();
    Code:
       0: aload_0
       1: invokestatic  #1171               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.request$default$8$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public <ResultType> ResultType deserialize(java.lang.String, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1180               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.deserialize$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/lang/String;Lscala/collection/Seq;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       7: areturn

  public <ResultType> ResultType deserialize(com.google.gson.JsonElement, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>, scala.reflect.ClassTag<ResultType>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1186               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.deserialize$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Lcom/google/gson/JsonElement;Lscala/collection/Seq;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       7: areturn

  public com.google.gson.JsonObject deserializeAsJsonObject(java.lang.String, scala.collection.Seq<scala.Tuple2<java.lang.Class<?>, java.lang.String>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1194               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.deserializeAsJsonObject$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/lang/String;Lscala/collection/Seq;)Lcom/google/gson/JsonObject;
       6: areturn

  public void downloadBinaryURLContent(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1201               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.downloadBinaryURLContent$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Ljava/io/File;)V
       9: return

  public void downloadStringURLContent(java.net.URI, java.lang.String, ai.h2o.sparkling.H2OConf, java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #1206               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.downloadStringURLContent$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Ljava/io/File;)V
       9: return

  public java.io.InputStream readURLContent(java.net.URI, java.lang.String, java.lang.String, ai.h2o.sparkling.H2OConf, scala.collection.immutable.Map<java.lang.String, java.lang.Object>, boolean, scala.Option<java.lang.String>, scala.Enumeration$Value);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: iload         6
      10: aload         7
      12: aload         8
      14: invokestatic  #1213               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/URI;Ljava/lang/String;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;ZLscala/Option;Lscala/Enumeration$Value;)Ljava/io/InputStream;
      17: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> readURLContent$default$5();
    Code:
       0: aload_0
       1: invokestatic  #1217               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$5$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/collection/immutable/Map;
       4: areturn

  public boolean readURLContent$default$6();
    Code:
       0: aload_0
       1: invokestatic  #1221               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$6$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Z
       4: ireturn

  public scala.Option<java.lang.String> readURLContent$default$7();
    Code:
       0: aload_0
       1: invokestatic  #1228               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$7$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Option;
       4: areturn

  public scala.Enumeration$Value readURLContent$default$8();
    Code:
       0: aload_0
       1: invokestatic  #1232               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.readURLContent$default$8$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public void checkResponseCode(java.net.HttpURLConnection, scala.Enumeration$Value);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1239               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.checkResponseCode$:(Lai/h2o/sparkling/backend/utils/RestCommunication;Ljava/net/HttpURLConnection;Lscala/Enumeration$Value;)V
       6: return

  public scala.Enumeration$Value checkResponseCode$default$2();
    Code:
       0: aload_0
       1: invokestatic  #1244               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.checkResponseCode$default$2$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)Lscala/Enumeration$Value;
       4: areturn

  public java.lang.String stringifyPrimitiveParam(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1252               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyPrimitiveParam$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  public boolean isPrimitiveType(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1259               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.isPrimitiveType$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Z
       5: ireturn

  public java.lang.String stringifyArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1264               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyArray$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringifyMap(scala.collection.immutable.Map<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1272               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyMap$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Lscala/collection/immutable/Map;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringifyPair(scala.Tuple2<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1280               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyPair$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Lscala/Tuple2;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringify(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1285               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringify$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  public java.lang.String stringifyParams(scala.collection.immutable.Map<java.lang.String, java.lang.Object>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #1292               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyParams$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;Lscala/collection/immutable/Map;Z)Ljava/lang/String;
       6: areturn

  public scala.collection.immutable.Map<java.lang.String, java.lang.Object> stringifyParams$default$1();
    Code:
       0: aload_0
       1: invokestatic  #1297               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyParams$default$1$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;)Lscala/collection/immutable/Map;
       4: areturn

  public boolean stringifyParams$default$2();
    Code:
       0: aload_0
       1: invokestatic  #1302               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.stringifyParams$default$2$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;)Z
       4: ireturn

  public ai.h2o.sparkling.ml.params.DictionaryParam ai$h2o$sparkling$ml$params$HasMonotoneConstraints$$monotoneConstraints();
    Code:
       0: aload_0
       1: getfield      #1305               // Field ai$h2o$sparkling$ml$params$HasMonotoneConstraints$$monotoneConstraints:Lai/h2o/sparkling/ml/params/DictionaryParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$HasMonotoneConstraints$_setter_$ai$h2o$sparkling$ml$params$HasMonotoneConstraints$$monotoneConstraints_$eq(ai.h2o.sparkling.ml.params.DictionaryParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1305               // Field ai$h2o$sparkling$ml$params$HasMonotoneConstraints$$monotoneConstraints:Lai/h2o/sparkling/ml/params/DictionaryParam;
       5: return

  public org.apache.spark.ml.param.LongParam seed();
    Code:
       0: aload_0
       1: getfield      #1311               // Field seed:Lorg/apache/spark/ml/param/LongParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam maxModels();
    Code:
       0: aload_0
       1: getfield      #1314               // Field maxModels:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam maxRuntimeSecs();
    Code:
       0: aload_0
       1: getfield      #1317               // Field maxRuntimeSecs:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam maxRuntimeSecsPerModel();
    Code:
       0: aload_0
       1: getfield      #1319               // Field maxRuntimeSecsPerModel:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam stoppingRounds();
    Code:
       0: aload_0
       1: getfield      #1321               // Field stoppingRounds:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> stoppingMetric();
    Code:
       0: aload_0
       1: getfield      #1325               // Field stoppingMetric:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam stoppingTolerance();
    Code:
       0: aload_0
       1: getfield      #1327               // Field stoppingTolerance:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public void ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$_setter_$seed_$eq(org.apache.spark.ml.param.LongParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1311               // Field seed:Lorg/apache/spark/ml/param/LongParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$_setter_$maxModels_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1314               // Field maxModels:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$_setter_$maxRuntimeSecs_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1317               // Field maxRuntimeSecs:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$_setter_$maxRuntimeSecsPerModel_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1319               // Field maxRuntimeSecsPerModel:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$_setter_$stoppingRounds_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1321               // Field stoppingRounds:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$_setter_$stoppingMetric_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1325               // Field stoppingMetric:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$_setter_$stoppingTolerance_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1327               // Field stoppingTolerance:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public org.apache.spark.ml.param.Param<java.lang.String> labelCol();
    Code:
       0: aload_0
       1: getfield      #1341               // Field labelCol:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam foldCol();
    Code:
       0: aload_0
       1: getfield      #1344               // Field foldCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam weightCol();
    Code:
       0: aload_0
       1: getfield      #1346               // Field weightCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> sortMetric();
    Code:
       0: aload_0
       1: getfield      #1348               // Field sortMetric:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public void ai$h2o$sparkling$ml$params$H2OAutoMLInputParams$_setter_$labelCol_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1341               // Field labelCol:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoMLInputParams$_setter_$foldCol_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1344               // Field foldCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoMLInputParams$_setter_$weightCol_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1346               // Field weightCol:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoMLInputParams$_setter_$sortMetric_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1348               // Field sortMetric:Lorg/apache/spark/ml/param/Param;
       5: return

  public ai.h2o.sparkling.ml.params.NonSerializableNullableDataFrameParam ai$h2o$sparkling$ml$params$HasBlendingDataFrame$$blendingDataFrame();
    Code:
       0: aload_0
       1: getfield      #1356               // Field ai$h2o$sparkling$ml$params$HasBlendingDataFrame$$blendingDataFrame:Lai/h2o/sparkling/ml/params/NonSerializableNullableDataFrameParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$HasBlendingDataFrame$_setter_$ai$h2o$sparkling$ml$params$HasBlendingDataFrame$$blendingDataFrame_$eq(ai.h2o.sparkling.ml.params.NonSerializableNullableDataFrameParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1356               // Field ai$h2o$sparkling$ml$params$HasBlendingDataFrame$$blendingDataFrame:Lai/h2o/sparkling/ml/params/NonSerializableNullableDataFrameParam;
       5: return

  public ai.h2o.sparkling.ml.params.NullableDataFrameParam ai$h2o$sparkling$ml$params$HasLeaderboardDataFrame$$leaderboardDataFrame();
    Code:
       0: aload_0
       1: getfield      #1361               // Field ai$h2o$sparkling$ml$params$HasLeaderboardDataFrame$$leaderboardDataFrame:Lai/h2o/sparkling/ml/params/NullableDataFrameParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$HasLeaderboardDataFrame$_setter_$ai$h2o$sparkling$ml$params$HasLeaderboardDataFrame$$leaderboardDataFrame_$eq(ai.h2o.sparkling.ml.params.NullableDataFrameParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1361               // Field ai$h2o$sparkling$ml$params$HasLeaderboardDataFrame$$leaderboardDataFrame:Lai/h2o/sparkling/ml/params/NullableDataFrameParam;
       5: return

  public ai.h2o.sparkling.ml.params.NullableStringArrayParam ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols();
    Code:
       0: aload_0
       1: getfield      #1366               // Field ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$HasIgnoredCols$_setter_$ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols_$eq(ai.h2o.sparkling.ml.params.NullableStringArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1366               // Field ai$h2o$sparkling$ml$params$HasIgnoredCols$$ignoredCols:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       5: return

  public ai.h2o.sparkling.ml.params.NullableStringArrayParam excludeAlgos();
    Code:
       0: aload_0
       1: getfield      #1370               // Field excludeAlgos:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       4: areturn

  public org.apache.spark.ml.param.StringArrayParam includeAlgos();
    Code:
       0: aload_0
       1: getfield      #1373               // Field includeAlgos:Lorg/apache/spark/ml/param/StringArrayParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam exploitationRatio();
    Code:
       0: aload_0
       1: getfield      #1375               // Field exploitationRatio:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public void ai$h2o$sparkling$ml$params$H2OAutoMLBuildModelsParams$_setter_$excludeAlgos_$eq(ai.h2o.sparkling.ml.params.NullableStringArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1370               // Field excludeAlgos:Lai/h2o/sparkling/ml/params/NullableStringArrayParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoMLBuildModelsParams$_setter_$includeAlgos_$eq(org.apache.spark.ml.param.StringArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1373               // Field includeAlgos:Lorg/apache/spark/ml/param/StringArrayParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoMLBuildModelsParams$_setter_$exploitationRatio_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1375               // Field exploitationRatio:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public ai.h2o.sparkling.ml.params.NullableStringParam projectName();
    Code:
       0: aload_0
       1: getfield      #1381               // Field projectName:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public org.apache.spark.ml.param.IntParam nfolds();
    Code:
       0: aload_0
       1: getfield      #1383               // Field nfolds:Lorg/apache/spark/ml/param/IntParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam balanceClasses();
    Code:
       0: aload_0
       1: getfield      #1386               // Field balanceClasses:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableFloatArrayParam classSamplingFactors();
    Code:
       0: aload_0
       1: getfield      #1389               // Field classSamplingFactors:Lai/h2o/sparkling/ml/params/NullableFloatArrayParam;
       4: areturn

  public org.apache.spark.ml.param.FloatParam maxAfterBalanceSize();
    Code:
       0: aload_0
       1: getfield      #1392               // Field maxAfterBalanceSize:Lorg/apache/spark/ml/param/FloatParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam keepCrossValidationPredictions();
    Code:
       0: aload_0
       1: getfield      #1394               // Field keepCrossValidationPredictions:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam keepCrossValidationModels();
    Code:
       0: aload_0
       1: getfield      #1396               // Field keepCrossValidationModels:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public org.apache.spark.ml.param.BooleanParam keepCrossValidationFoldAssignment();
    Code:
       0: aload_0
       1: getfield      #1398               // Field keepCrossValidationFoldAssignment:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam exportCheckpointsDir();
    Code:
       0: aload_0
       1: getfield      #1400               // Field exportCheckpointsDir:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public org.apache.spark.ml.param.Param<java.lang.String> distribution();
    Code:
       0: aload_0
       1: getfield      #1402               // Field distribution:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam tweediePower();
    Code:
       0: aload_0
       1: getfield      #1404               // Field tweediePower:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam quantileAlpha();
    Code:
       0: aload_0
       1: getfield      #1406               // Field quantileAlpha:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public org.apache.spark.ml.param.DoubleParam huberAlpha();
    Code:
       0: aload_0
       1: getfield      #1408               // Field huberAlpha:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public ai.h2o.sparkling.ml.params.NullableStringParam customDistributionFunc();
    Code:
       0: aload_0
       1: getfield      #1410               // Field customDistributionFunc:Lai/h2o/sparkling/ml/params/NullableStringParam;
       4: areturn

  public void ai$h2o$sparkling$ml$params$H2OAutoMLBuildControlParams$_setter_$projectName_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1381               // Field projectName:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoMLBuildControlParams$_setter_$nfolds_$eq(org.apache.spark.ml.param.IntParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1383               // Field nfolds:Lorg/apache/spark/ml/param/IntParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoMLBuildControlParams$_setter_$balanceClasses_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1386               // Field balanceClasses:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoMLBuildControlParams$_setter_$classSamplingFactors_$eq(ai.h2o.sparkling.ml.params.NullableFloatArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1389               // Field classSamplingFactors:Lai/h2o/sparkling/ml/params/NullableFloatArrayParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoMLBuildControlParams$_setter_$maxAfterBalanceSize_$eq(org.apache.spark.ml.param.FloatParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1392               // Field maxAfterBalanceSize:Lorg/apache/spark/ml/param/FloatParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoMLBuildControlParams$_setter_$keepCrossValidationPredictions_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1394               // Field keepCrossValidationPredictions:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoMLBuildControlParams$_setter_$keepCrossValidationModels_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1396               // Field keepCrossValidationModels:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoMLBuildControlParams$_setter_$keepCrossValidationFoldAssignment_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1398               // Field keepCrossValidationFoldAssignment:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoMLBuildControlParams$_setter_$exportCheckpointsDir_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1400               // Field exportCheckpointsDir:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoMLBuildControlParams$_setter_$distribution_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1402               // Field distribution:Lorg/apache/spark/ml/param/Param;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoMLBuildControlParams$_setter_$tweediePower_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1404               // Field tweediePower:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoMLBuildControlParams$_setter_$quantileAlpha_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1406               // Field quantileAlpha:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoMLBuildControlParams$_setter_$huberAlpha_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1408               // Field huberAlpha:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public void ai$h2o$sparkling$ml$params$H2OAutoMLBuildControlParams$_setter_$customDistributionFunc_$eq(ai.h2o.sparkling.ml.params.NullableStringParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1410               // Field customDistributionFunc:Lai/h2o/sparkling/ml/params/NullableStringParam;
       5: return

  public final org.apache.spark.ml.param.Param<java.lang.String> predictionCol();
    Code:
       0: aload_0
       1: getfield      #1429               // Field predictionCol:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public final org.apache.spark.ml.param.Param<java.lang.String> detailedPredictionCol();
    Code:
       0: aload_0
       1: getfield      #1431               // Field detailedPredictionCol:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public final org.apache.spark.ml.param.BooleanParam withContributions();
    Code:
       0: aload_0
       1: getfield      #1433               // Field withContributions:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public final org.apache.spark.ml.param.StringArrayParam featuresCols();
    Code:
       0: aload_0
       1: getfield      #1435               // Field featuresCols:Lorg/apache/spark/ml/param/StringArrayParam;
       4: areturn

  public final org.apache.spark.ml.param.BooleanParam withLeafNodeAssignments();
    Code:
       0: aload_0
       1: getfield      #1437               // Field withLeafNodeAssignments:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public final org.apache.spark.ml.param.BooleanParam withStageResults();
    Code:
       0: aload_0
       1: getfield      #1439               // Field withStageResults:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$H2OAlgorithmMOJOParams$_setter_$predictionCol_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1429               // Field predictionCol:Lorg/apache/spark/ml/param/Param;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OAlgorithmMOJOParams$_setter_$detailedPredictionCol_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1431               // Field detailedPredictionCol:Lorg/apache/spark/ml/param/Param;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OAlgorithmMOJOParams$_setter_$withContributions_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1433               // Field withContributions:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OAlgorithmMOJOParams$_setter_$featuresCols_$eq(org.apache.spark.ml.param.StringArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1435               // Field featuresCols:Lorg/apache/spark/ml/param/StringArrayParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OAlgorithmMOJOParams$_setter_$withLeafNodeAssignments_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1437               // Field withLeafNodeAssignments:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OAlgorithmMOJOParams$_setter_$withStageResults_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1439               // Field withStageResults:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public final ai.h2o.sparkling.ml.params.NonSerializableNullableDataFrameParam validationDataFrame();
    Code:
       0: aload_0
       1: getfield      #1447               // Field validationDataFrame:Lai/h2o/sparkling/ml/params/NonSerializableNullableDataFrameParam;
       4: areturn

  public final org.apache.spark.ml.param.DoubleParam splitRatio();
    Code:
       0: aload_0
       1: getfield      #1449               // Field splitRatio:Lorg/apache/spark/ml/param/DoubleParam;
       4: areturn

  public final org.apache.spark.ml.param.StringArrayParam columnsToCategorical();
    Code:
       0: aload_0
       1: getfield      #1451               // Field columnsToCategorical:Lorg/apache/spark/ml/param/StringArrayParam;
       4: areturn

  public final org.apache.spark.ml.param.BooleanParam keepBinaryModels();
    Code:
       0: aload_0
       1: getfield      #1453               // Field keepBinaryModels:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$H2OCommonParams$_setter_$validationDataFrame_$eq(ai.h2o.sparkling.ml.params.NonSerializableNullableDataFrameParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1447               // Field validationDataFrame:Lai/h2o/sparkling/ml/params/NonSerializableNullableDataFrameParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OCommonParams$_setter_$splitRatio_$eq(org.apache.spark.ml.param.DoubleParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1449               // Field splitRatio:Lorg/apache/spark/ml/param/DoubleParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OCommonParams$_setter_$columnsToCategorical_$eq(org.apache.spark.ml.param.StringArrayParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1451               // Field columnsToCategorical:Lorg/apache/spark/ml/param/StringArrayParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OCommonParams$_setter_$keepBinaryModels_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1453               // Field keepBinaryModels:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public final org.apache.spark.ml.param.BooleanParam convertUnknownCategoricalLevelsToNa();
    Code:
       0: aload_0
       1: getfield      #1459               // Field convertUnknownCategoricalLevelsToNa:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public final org.apache.spark.ml.param.BooleanParam convertInvalidNumbersToNa();
    Code:
       0: aload_0
       1: getfield      #1461               // Field convertInvalidNumbersToNa:Lorg/apache/spark/ml/param/BooleanParam;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$H2OBaseMOJOParams$_setter_$convertUnknownCategoricalLevelsToNa_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1459               // Field convertUnknownCategoricalLevelsToNa:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public final void ai$h2o$sparkling$ml$params$H2OBaseMOJOParams$_setter_$convertInvalidNumbersToNa_$eq(org.apache.spark.ml.param.BooleanParam);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1461               // Field convertInvalidNumbersToNa:Lorg/apache/spark/ml/param/BooleanParam;
       5: return

  public final org.apache.spark.ml.param.Param<java.lang.String> dataFrameSerializer();
    Code:
       0: aload_0
       1: getfield      #1465               // Field dataFrameSerializer:Lorg/apache/spark/ml/param/Param;
       4: areturn

  public final void ai$h2o$sparkling$ml$params$HasDataFrameSerializer$_setter_$dataFrameSerializer_$eq(org.apache.spark.ml.param.Param<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1465               // Field dataFrameSerializer:Lorg/apache/spark/ml/param/Param;
       5: return

  public scala.Option<ai.h2o.sparkling.ml.models.H2OBinaryModel> binaryModel();
    Code:
       0: aload_0
       1: getfield      #1469               // Field binaryModel:Lscala/Option;
       4: areturn

  public void binaryModel_$eq(scala.Option<ai.h2o.sparkling.ml.models.H2OBinaryModel>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1469               // Field binaryModel:Lscala/Option;
       5: return

  public scala.collection.mutable.ArrayBuffer<ai.h2o.sparkling.H2OFrame> ai$h2o$sparkling$backend$utils$H2OFrameLifecycle$$h2oFramesToBeDeleted();
    Code:
       0: aload_0
       1: getfield      #1475               // Field ai$h2o$sparkling$backend$utils$H2OFrameLifecycle$$h2oFramesToBeDeleted:Lscala/collection/mutable/ArrayBuffer;
       4: areturn

  public final void ai$h2o$sparkling$backend$utils$H2OFrameLifecycle$_setter_$ai$h2o$sparkling$backend$utils$H2OFrameLifecycle$$h2oFramesToBeDeleted_$eq(scala.collection.mutable.ArrayBuffer<ai.h2o.sparkling.H2OFrame>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1475               // Field ai$h2o$sparkling$backend$utils$H2OFrameLifecycle$$h2oFramesToBeDeleted:Lscala/collection/mutable/ArrayBuffer;
       5: return

  public ai.h2o.sparkling.backend.utils.RestCommunication$LoggingLevel$ LoggingLevel();
    Code:
       0: aload_0
       1: getfield      #1482               // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #1485               // Method LoggingLevel$lzycompute$1:()V
      11: aload_0
      12: getfield      #1482               // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
      15: areturn

  public java.lang.String uid();
    Code:
       0: aload_0
       1: getfield      #1487               // Field uid:Ljava/lang/String;
       4: areturn

  private scala.Option<java.lang.String> amlKeyOption();
    Code:
       0: aload_0
       1: getfield      #1489               // Field amlKeyOption:Lscala/Option;
       4: areturn

  private void amlKeyOption_$eq(scala.Option<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1489               // Field amlKeyOption:Lscala/Option;
       5: return

  private scala.Option<ai.h2o.sparkling.ml.models.H2OMOJOModel[]> allModels();
    Code:
       0: aload_0
       1: getfield      #1494               // Field allModels:Lscala/Option;
       4: areturn

  private void allModels_$eq(scala.Option<ai.h2o.sparkling.ml.models.H2OMOJOModel[]>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1494               // Field allModels:Lscala/Option;
       5: return

  private scala.collection.immutable.Map<java.lang.String, java.lang.Object> getInputSpec(ai.h2o.sparkling.H2OFrame, scala.Option<ai.h2o.sparkling.H2OFrame>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1503               // Method getH2OAutoMLInputParams:(Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       8: invokevirtual #1512               // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
      11: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      14: iconst_1
      15: anewarray     #1514               // class scala/Tuple2
      18: dup
      19: iconst_0
      20: getstatic     #1517               // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      23: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      26: ldc_w         #1519               // String training_frame
      29: invokevirtual #1523               // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      32: aload_1
      33: invokevirtual #1528               // Method ai/h2o/sparkling/H2OFrame.frameId:()Ljava/lang/String;
      36: invokevirtual #1532               // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      39: aastore
      40: checkcast     #1534               // class "[Ljava/lang/Object;"
      43: invokevirtual #1538               // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      46: invokevirtual #1544               // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
      49: invokeinterface #1550,  2         // InterfaceMethod scala/collection/immutable/Map.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/Map;
      54: aload_2
      55: invokedynamic #1569,  0           // InvokeDynamic #0:apply:()Lscala/Function1;
      60: invokevirtual #1574               // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      63: invokedynamic #1584,  0           // InvokeDynamic #1:apply:()Lscala/Function0;
      68: invokevirtual #1588               // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      71: checkcast     #1590               // class scala/collection/GenTraversableOnce
      74: invokeinterface #1550,  2         // InterfaceMethod scala/collection/immutable/Map.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/Map;
      79: areturn

  private scala.collection.immutable.Map<java.lang.String, java.lang.Object> getBuildModels(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: invokevirtual #1593               // Method getMonotoneConstraints:()Lscala/collection/immutable/Map;
       4: astore_2
       5: aload_2
       6: ifnull        65
       9: aload_2
      10: invokeinterface #1596,  1         // InterfaceMethod scala/collection/immutable/Map.nonEmpty:()Z
      15: ifeq          65
      18: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      21: invokevirtual #1512               // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
      24: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      27: iconst_1
      28: anewarray     #1514               // class scala/Tuple2
      31: dup
      32: iconst_0
      33: getstatic     #1517               // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      36: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      39: ldc_w         #1598               // String monotone_constrains
      42: invokevirtual #1523               // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      45: aload_2
      46: invokevirtual #1532               // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      49: aastore
      50: checkcast     #1534               // class "[Ljava/lang/Object;"
      53: invokevirtual #1538               // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      56: invokevirtual #1544               // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
      59: checkcast     #1546               // class scala/collection/immutable/Map
      62: goto          80
      65: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      68: invokevirtual #1512               // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
      71: getstatic     #1603               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      74: invokevirtual #1544               // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
      77: checkcast     #1546               // class scala/collection/immutable/Map
      80: astore_3
      81: aload_3
      82: invokeinterface #1596,  1         // InterfaceMethod scala/collection/immutable/Map.nonEmpty:()Z
      87: ifeq          137
      90: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      93: invokevirtual #1512               // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
      96: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      99: iconst_1
     100: anewarray     #1514               // class scala/Tuple2
     103: dup
     104: iconst_0
     105: getstatic     #1517               // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     108: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     111: ldc_w         #1605               // String algo_parameters
     114: invokevirtual #1523               // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     117: aload_3
     118: invokevirtual #1532               // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     121: aastore
     122: checkcast     #1534               // class "[Ljava/lang/Object;"
     125: invokevirtual #1538               // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     128: invokevirtual #1544               // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
     131: checkcast     #1546               // class scala/collection/immutable/Map
     134: goto          152
     137: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     140: invokevirtual #1512               // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
     143: getstatic     #1603               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
     146: invokevirtual #1544               // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
     149: checkcast     #1546               // class scala/collection/immutable/Map
     152: astore        4
     154: aload_0
     155: aload_1
     156: invokevirtual #1607               // Method getH2OAutoMLBuildModelsParams:(Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
     159: ldc_w         #1609               // String include_algos
     162: ldc_w         #1611               // String exclude_algos
     165: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     168: iconst_0
     169: anewarray     #1613               // class java/lang/String
     172: checkcast     #1534               // class "[Ljava/lang/Object;"
     175: invokevirtual #1538               // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     178: invokeinterface #1617,  4         // InterfaceMethod scala/collection/immutable/Map.$minus:(Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Seq;)Lscala/collection/generic/Subtractable;
     183: checkcast     #1546               // class scala/collection/immutable/Map
     186: astore        5
     188: aload         5
     190: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     193: invokevirtual #1512               // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
     196: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     199: iconst_2
     200: anewarray     #1514               // class scala/Tuple2
     203: dup
     204: iconst_0
     205: getstatic     #1517               // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     208: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     211: ldc_w         #1609               // String include_algos
     214: invokevirtual #1523               // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     217: aload_0
     218: invokespecial #1620               // Method determineIncludedAlgos:()[Ljava/lang/String;
     221: invokevirtual #1532               // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     224: aastore
     225: dup
     226: iconst_1
     227: getstatic     #1517               // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     230: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     233: ldc_w         #1611               // String exclude_algos
     236: invokevirtual #1523               // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     239: aconst_null
     240: invokevirtual #1532               // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     243: aastore
     244: checkcast     #1534               // class "[Ljava/lang/Object;"
     247: invokevirtual #1538               // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     250: invokevirtual #1544               // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
     253: invokeinterface #1550,  2         // InterfaceMethod scala/collection/immutable/Map.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/Map;
     258: aload         4
     260: invokeinterface #1550,  2         // InterfaceMethod scala/collection/immutable/Map.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/Map;
     265: areturn

  private scala.collection.immutable.Map<java.lang.String, java.lang.Object> getBuildControl(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1627               // Method getH2OAutoMLStoppingCriteriaParams:(Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: astore_2
       6: aload_0
       7: aload_1
       8: invokevirtual #1629               // Method getH2OAutoMLBuildControlParams:(Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
      11: getstatic     #1517               // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      14: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      17: ldc_w         #1631               // String stopping_criteria
      20: invokevirtual #1523               // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      23: aload_2
      24: invokevirtual #1532               // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      27: invokeinterface #1635,  2         // InterfaceMethod scala/collection/immutable/Map.$plus:(Lscala/Tuple2;)Lscala/collection/immutable/Map;
      32: areturn

  public ai.h2o.sparkling.ml.models.H2OMOJOModel fit(org.apache.spark.sql.Dataset<?>);
    Code:
       0: aload_0
       1: getstatic     #1644               // Field scala/None$.MODULE$:Lscala/None$;
       4: invokespecial #1646               // Method amlKeyOption_$eq:(Lscala/Option;)V
       7: aload_0
       8: aload_1
       9: invokevirtual #1648               // Method prepareDatasetForFitting:(Lorg/apache/spark/sql/Dataset;)Lscala/Tuple2;
      12: astore        5
      14: aload         5
      16: ifnull        54
      19: aload         5
      21: invokevirtual #1651               // Method scala/Tuple2._1:()Ljava/lang/Object;
      24: checkcast     #1525               // class ai/h2o/sparkling/H2OFrame
      27: astore        6
      29: aload         5
      31: invokevirtual #1654               // Method scala/Tuple2._2:()Ljava/lang/Object;
      34: checkcast     #1571               // class scala/Option
      37: astore        7
      39: new           #1514               // class scala/Tuple2
      42: dup
      43: aload         6
      45: aload         7
      47: invokespecial #1658               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      50: astore_3
      51: goto          67
      54: goto          57
      57: new           #1660               // class scala/MatchError
      60: dup
      61: aload         5
      63: invokespecial #1663               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      66: athrow
      67: aload_3
      68: astore        4
      70: aload         4
      72: invokevirtual #1651               // Method scala/Tuple2._1:()Ljava/lang/Object;
      75: checkcast     #1525               // class ai/h2o/sparkling/H2OFrame
      78: astore        8
      80: aload         4
      82: invokevirtual #1654               // Method scala/Tuple2._2:()Ljava/lang/Object;
      85: checkcast     #1571               // class scala/Option
      88: astore        9
      90: aload_0
      91: aload         8
      93: aload         9
      95: invokespecial #1665               // Method getInputSpec:(Lai/h2o/sparkling/H2OFrame;Lscala/Option;)Lscala/collection/immutable/Map;
      98: astore        10
     100: aload_0
     101: aload         8
     103: invokespecial #1667               // Method getBuildModels:(Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
     106: astore        11
     108: aload_0
     109: aload         8
     111: invokespecial #1669               // Method getBuildControl:(Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
     114: astore        12
     116: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     119: invokevirtual #1512               // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
     122: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     125: iconst_3
     126: anewarray     #1514               // class scala/Tuple2
     129: dup
     130: iconst_0
     131: getstatic     #1517               // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     134: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     137: ldc_w         #1671               // String input_spec
     140: invokevirtual #1523               // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     143: aload         10
     145: invokevirtual #1532               // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     148: aastore
     149: dup
     150: iconst_1
     151: getstatic     #1517               // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     154: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     157: ldc_w         #1673               // String build_models
     160: invokevirtual #1523               // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     163: aload         11
     165: invokevirtual #1532               // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     168: aastore
     169: dup
     170: iconst_2
     171: getstatic     #1517               // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     174: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     177: ldc_w         #1675               // String build_control
     180: invokevirtual #1523               // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     183: aload         12
     185: invokevirtual #1532               // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     188: aastore
     189: checkcast     #1534               // class "[Ljava/lang/Object;"
     192: invokevirtual #1538               // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     195: invokevirtual #1544               // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
     198: checkcast     #1546               // class scala/collection/immutable/Map
     201: astore        13
     203: aload_0
     204: ldc_w         #1677               // String /99/AutoMLBuilder
     207: aload         13
     209: iconst_1
     210: invokevirtual #1679               // Method trainAndGetDestinationKey:(Ljava/lang/String;Lscala/collection/immutable/Map;Z)Ljava/lang/String;
     213: astore        14
     215: aload_0
     216: new           #1681               // class scala/Some
     219: dup
     220: aload         14
     222: invokespecial #1682               // Method scala/Some."<init>":(Ljava/lang/Object;)V
     225: invokespecial #1646               // Method amlKeyOption_$eq:(Lscala/Option;)V
     228: aload_0
     229: getstatic     #1603               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
     232: invokevirtual #1686               // Method getLeaderboard:(Lscala/collection/Seq;)Lorg/apache/spark/sql/Dataset;
     235: ldc_w         #1688               // String model_id
     238: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     241: iconst_0
     242: anewarray     #1613               // class java/lang/String
     245: checkcast     #1534               // class "[Ljava/lang/Object;"
     248: invokevirtual #1538               // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     251: invokevirtual #1694               // Method org/apache/spark/sql/Dataset.select:(Ljava/lang/String;Lscala/collection/Seq;)Lorg/apache/spark/sql/Dataset;
     254: invokevirtual #1697               // Method org/apache/spark/sql/Dataset.head:()Ljava/lang/Object;
     257: checkcast     #1699               // class org/apache/spark/sql/Row
     260: iconst_0
     261: invokeinterface #1703,  2         // InterfaceMethod org/apache/spark/sql/Row.getString:(I)Ljava/lang/String;
     266: astore        15
     268: aload_0
     269: aload         14
     271: invokespecial #1706               // Method getLeaderModelId:(Ljava/lang/String;)Ljava/lang/String;
     274: astore        16
     276: aload_0
     277: invokespecial #1709               // Method setAllModels:()V
     280: aload_0
     281: invokevirtual #1711               // Method getKeepBinaryModels:()Z
     284: ifeq          365
     287: aload_0
     288: aload         16
     290: getstatic     #1716               // Field ai/h2o/sparkling/H2OContext$.MODULE$:Lai/h2o/sparkling/H2OContext$;
     293: invokedynamic #1722,  0           // InvokeDynamic #2:apply:()Lscala/Function0;
     298: invokevirtual #1726               // Method ai/h2o/sparkling/H2OContext$.ensure:(Lscala/Function0;)Lai/h2o/sparkling/H2OContext;
     301: invokevirtual #1732               // Method ai/h2o/sparkling/H2OContext.getConf:()Lai/h2o/sparkling/H2OConf;
     304: invokevirtual #1734               // Method downloadBinaryModel:(Ljava/lang/String;Lai/h2o/sparkling/H2OConf;)Ljava/io/File;
     307: astore        17
     309: aload_0
     310: new           #1681               // class scala/Some
     313: dup
     314: getstatic     #1739               // Field ai/h2o/sparkling/ml/models/H2OBinaryModel$.MODULE$:Lai/h2o/sparkling/ml/models/H2OBinaryModel$;
     317: new           #1741               // class java/lang/StringBuilder
     320: dup
     321: ldc_w         #1557               // int 7
     324: invokespecial #1744               // Method java/lang/StringBuilder."<init>":(I)V
     327: ldc_w         #1746               // String file://
     330: invokevirtual #1750               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     333: aload         17
     335: invokevirtual #1755               // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     338: invokevirtual #1750               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     341: invokevirtual #1758               // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     344: new           #1681               // class scala/Some
     347: dup
     348: aload         16
     350: invokespecial #1682               // Method scala/Some."<init>":(Ljava/lang/Object;)V
     353: invokevirtual #1761               // Method ai/h2o/sparkling/ml/models/H2OBinaryModel$.read:(Ljava/lang/String;Lscala/Option;)Lai/h2o/sparkling/ml/models/H2OBinaryModel;
     356: invokespecial #1682               // Method scala/Some."<init>":(Ljava/lang/Object;)V
     359: invokevirtual #1763               // Method binaryModel_$eq:(Lscala/Option;)V
     362: goto          369
     365: aload_0
     366: invokespecial #1766               // Method deleteBinaryModels:()V
     369: aload_0
     370: invokevirtual #1768               // Method deleteRegisteredH2OFrames:()V
     373: aload_0
     374: invokevirtual #1772               // Method getAllModels:()[Lai/h2o/sparkling/ml/models/H2OMOJOModel;
     377: astore        18
     379: new           #49                 // class scala/collection/mutable/ArrayOps$ofRef
     382: dup
     383: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     386: aload         18
     388: checkcast     #1534               // class "[Ljava/lang/Object;"
     391: invokevirtual #1776               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     394: invokespecial #1779               // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     397: invokevirtual #1782               // Method scala/collection/mutable/ArrayOps$ofRef.headOption:()Lscala/Option;
     400: astore        19
     402: aload         19
     404: instanceof    #1681               // class scala/Some
     407: ifeq          501
     410: aload         19
     412: checkcast     #1681               // class scala/Some
     415: astore        20
     417: aload         20
     419: invokevirtual #1784               // Method scala/Some.value:()Ljava/lang/Object;
     422: checkcast     #1786               // class ai/h2o/sparkling/ml/models/H2OMOJOModel
     425: astore        21
     427: getstatic     #1716               // Field ai/h2o/sparkling/H2OContext$.MODULE$:Lai/h2o/sparkling/H2OContext$;
     430: invokevirtual #1789               // Method ai/h2o/sparkling/H2OContext$.get:()Lscala/Option;
     433: invokedynamic #1796,  0           // InvokeDynamic #3:apply:()Lscala/Function1;
     438: invokevirtual #1800               // Method scala/Option.forall:(Lscala/Function1;)Z
     441: ifeq          495
     444: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     447: new           #1741               // class java/lang/StringBuilder
     450: dup
     451: ldc_w         #1801               // int 87
     454: invokespecial #1744               // Method java/lang/StringBuilder."<init>":(I)V
     457: aload         18
     459: arraylength
     460: invokevirtual #1804               // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     463: ldc_w         #1806               // String  models trained. For more details use the getLeaderboard() method on the AutoML object.
     466: invokevirtual #1750               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     469: invokevirtual #1758               // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     472: invokevirtual #1809               // Method scala/Predef$.println:(Ljava/lang/Object;)V
     475: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     478: ldc_w         #1811               // String Returning leader model and printing info about it below.
     481: invokevirtual #1809               // Method scala/Predef$.println:(Ljava/lang/Object;)V
     484: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     487: aload         21
     489: invokevirtual #1809               // Method scala/Predef$.println:(Ljava/lang/Object;)V
     492: goto          495
     495: aload         21
     497: astore_2
     498: goto          539
     501: goto          504
     504: getstatic     #1644               // Field scala/None$.MODULE$:Lscala/None$;
     507: aload         19
     509: invokevirtual #1816               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     512: ifeq          526
     515: new           #1818               // class java/lang/RuntimeException
     518: dup
     519: ldc_w         #1820               // String No model has been trained! Try to increase the value of the maxRuntimeSecs parameter and call the method again.
     522: invokespecial #1822               // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     525: athrow
     526: goto          529
     529: new           #1660               // class scala/MatchError
     532: dup
     533: aload         19
     535: invokespecial #1663               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     538: athrow
     539: aload_2
     540: areturn

  private java.lang.String[] determineIncludedAlgos();
    Code:
       0: new           #49                 // class scala/collection/mutable/ArrayOps$ofRef
       3: dup
       4: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: aload_0
       8: invokevirtual #1836               // Method getIncludeAlgos:()[Ljava/lang/String;
      11: checkcast     #1534               // class "[Ljava/lang/Object;"
      14: invokevirtual #1776               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
      17: invokespecial #1779               // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
      20: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      23: getstatic     #1841               // Field scala/Option$.MODULE$:Lscala/Option$;
      26: aload_0
      27: invokevirtual #1843               // Method getExcludeAlgos:()[Ljava/lang/String;
      30: invokevirtual #1846               // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      33: invokedynamic #1852,  0           // InvokeDynamic #4:apply:()Lscala/Function0;
      38: invokevirtual #1588               // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      41: checkcast     #1534               // class "[Ljava/lang/Object;"
      44: invokevirtual #1538               // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      47: invokevirtual #1856               // Method scala/collection/mutable/ArrayOps$ofRef.intersect:(Lscala/collection/GenSeq;)Ljava/lang/Object;
      50: checkcast     #1857               // class "[Ljava/lang/String;"
      53: astore_1
      54: new           #49                 // class scala/collection/mutable/ArrayOps$ofRef
      57: dup
      58: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      61: aload_1
      62: checkcast     #1534               // class "[Ljava/lang/Object;"
      65: invokevirtual #1776               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
      68: invokespecial #1779               // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
      71: aload_0
      72: invokedynamic #1866,  0           // InvokeDynamic #5:apply:(Lai/h2o/sparkling/ml/algos/H2OAutoML;)Lscala/Function1;
      77: invokevirtual #1870               // Method scala/collection/mutable/ArrayOps$ofRef.foreach:(Lscala/Function1;)V
      80: new           #49                 // class scala/collection/mutable/ArrayOps$ofRef
      83: dup
      84: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      87: aload_0
      88: invokevirtual #1836               // Method getIncludeAlgos:()[Ljava/lang/String;
      91: checkcast     #1534               // class "[Ljava/lang/Object;"
      94: invokevirtual #1776               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
      97: invokespecial #1779               // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     100: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     103: aload_1
     104: checkcast     #1534               // class "[Ljava/lang/Object;"
     107: invokevirtual #1538               // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     110: invokevirtual #1873               // Method scala/collection/mutable/ArrayOps$ofRef.diff:(Lscala/collection/GenSeq;)Ljava/lang/Object;
     113: checkcast     #1857               // class "[Ljava/lang/String;"
     116: areturn

  public org.apache.spark.sql.Dataset<org.apache.spark.sql.Row> getLeaderboard(scala.collection.Seq<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #1881               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       5: ldc_w         #1613               // class java/lang/String
       8: invokevirtual #1884               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      11: invokeinterface #1890,  2         // InterfaceMethod scala/collection/Seq.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
      16: checkcast     #1857               // class "[Ljava/lang/String;"
      19: invokevirtual #1893               // Method getLeaderboard:([Ljava/lang/String;)Lorg/apache/spark/sql/Dataset;
      22: areturn

  public org.apache.spark.sql.Dataset<org.apache.spark.sql.Row> getLeaderboard(java.util.ArrayList<java.lang.String>);
    Code:
       0: aload_0
       1: getstatic     #1900               // Field scala/collection/JavaConverters$.MODULE$:Lscala/collection/JavaConverters$;
       4: aload_1
       5: invokevirtual #1904               // Method scala/collection/JavaConverters$.asScalaBufferConverter:(Ljava/util/List;)Lscala/collection/convert/Decorators$AsScala;
       8: invokevirtual #1907               // Method scala/collection/convert/Decorators$AsScala.asScala:()Ljava/lang/Object;
      11: checkcast     #1909               // class scala/collection/TraversableOnce
      14: getstatic     #1881               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      17: ldc_w         #1613               // class java/lang/String
      20: invokevirtual #1884               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      23: invokeinterface #1910,  2         // InterfaceMethod scala/collection/TraversableOnce.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
      28: checkcast     #1857               // class "[Ljava/lang/String;"
      31: invokevirtual #1893               // Method getLeaderboard:([Ljava/lang/String;)Lorg/apache/spark/sql/Dataset;
      34: areturn

  public org.apache.spark.sql.Dataset<org.apache.spark.sql.Row> getLeaderboard(java.lang.String[]);
    Code:
       0: aload_0
       1: invokespecial #1913               // Method amlKeyOption:()Lscala/Option;
       4: astore_3
       5: aload_3
       6: instanceof    #1681               // class scala/Some
       9: ifeq          39
      12: aload_3
      13: checkcast     #1681               // class scala/Some
      16: astore        4
      18: aload         4
      20: invokevirtual #1784               // Method scala/Some.value:()Ljava/lang/Object;
      23: checkcast     #1613               // class java/lang/String
      26: astore        5
      28: aload_0
      29: aload         5
      31: aload_1
      32: invokespecial #1916               // Method getLeaderboard:(Ljava/lang/String;[Ljava/lang/String;)Lorg/apache/spark/sql/Dataset;
      35: astore_2
      36: goto          75
      39: goto          42
      42: getstatic     #1644               // Field scala/None$.MODULE$:Lscala/None$;
      45: aload_3
      46: invokevirtual #1816               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      49: ifeq          63
      52: new           #1818               // class java/lang/RuntimeException
      55: dup
      56: ldc_w         #1918               // String The \'fit\' method must be called at first!
      59: invokespecial #1822               // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: goto          66
      66: new           #1660               // class scala/MatchError
      69: dup
      70: aload_3
      71: invokespecial #1663               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      74: athrow
      75: aload_2
      76: areturn

  public org.apache.spark.sql.types.StructType transformSchema(org.apache.spark.sql.types.StructType);
    Code:
       0: aload_1
       1: areturn

  private org.apache.spark.sql.Dataset<org.apache.spark.sql.Row> getLeaderboard(java.lang.String, java.lang.String[]);
    Code:
       0: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: invokevirtual #1512               // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
       6: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       9: iconst_1
      10: anewarray     #1514               // class scala/Tuple2
      13: dup
      14: iconst_0
      15: getstatic     #1517               // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      18: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      21: ldc_w         #1928               // String extensions
      24: invokevirtual #1523               // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      27: aload_2
      28: invokevirtual #1532               // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      31: aastore
      32: checkcast     #1534               // class "[Ljava/lang/Object;"
      35: invokevirtual #1538               // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      38: invokevirtual #1544               // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
      41: checkcast     #1546               // class scala/collection/immutable/Map
      44: astore_3
      45: getstatic     #1716               // Field ai/h2o/sparkling/H2OContext$.MODULE$:Lai/h2o/sparkling/H2OContext$;
      48: invokedynamic #1933,  0           // InvokeDynamic #6:apply:()Lscala/Function0;
      53: invokevirtual #1726               // Method ai/h2o/sparkling/H2OContext$.ensure:(Lscala/Function0;)Lai/h2o/sparkling/H2OContext;
      56: invokevirtual #1732               // Method ai/h2o/sparkling/H2OContext.getConf:()Lai/h2o/sparkling/H2OConf;
      59: astore        4
      61: getstatic     #1938               // Field ai/h2o/sparkling/backend/utils/RestApiUtils$.MODULE$:Lai/h2o/sparkling/backend/utils/RestApiUtils$;
      64: aload         4
      66: invokevirtual #1942               // Method ai/h2o/sparkling/backend/utils/RestApiUtils$.getClusterEndpoint:(Lai/h2o/sparkling/H2OConf;)Ljava/net/URI;
      69: astore        5
      71: getstatic     #1947               // Field ai/h2o/sparkling/utils/ScalaUtils$.MODULE$:Lai/h2o/sparkling/utils/ScalaUtils$;
      74: aload_0
      75: aload         5
      77: ldc_w         #1949               // String GET
      80: new           #1741               // class java/lang/StringBuilder
      83: dup
      84: ldc_w         #1950               // int 17
      87: invokespecial #1744               // Method java/lang/StringBuilder."<init>":(I)V
      90: ldc_w         #1952               // String /99/Leaderboards/
      93: invokevirtual #1750               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_1
      97: invokevirtual #1750               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: invokevirtual #1758               // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: aload         4
     105: aload_3
     106: iconst_0
     107: getstatic     #1644               // Field scala/None$.MODULE$:Lscala/None$;
     110: aload_0
     111: invokevirtual #1954               // Method readURLContent$default$8:()Lscala/Enumeration$Value;
     114: invokevirtual #1956               // Method readURLContent:(Ljava/net/URI;Ljava/lang/String;Ljava/lang/String;Lai/h2o/sparkling/H2OConf;Lscala/collection/immutable/Map;ZLscala/Option;Lscala/Enumeration$Value;)Ljava/io/InputStream;
     117: invokedynamic #1963,  0           // InvokeDynamic #7:apply:()Lscala/Function1;
     122: invokevirtual #1967               // Method ai/h2o/sparkling/utils/ScalaUtils$.withResource:(Ljava/lang/AutoCloseable;Lscala/Function1;)Ljava/lang/Object;
     125: checkcast     #1613               // class java/lang/String
     128: astore        6
     130: new           #1969               // class com/google/gson/Gson
     133: dup
     134: invokespecial #1971               // Method com/google/gson/Gson."<init>":()V
     137: astore        7
     139: aload         7
     141: aload         6
     143: ldc_w         #1973               // class com/google/gson/JsonElement
     146: invokevirtual #1977               // Method com/google/gson/Gson.fromJson:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
     149: checkcast     #1973               // class com/google/gson/JsonElement
     152: invokevirtual #1981               // Method com/google/gson/JsonElement.getAsJsonObject:()Lcom/google/gson/JsonObject;
     155: ldc_w         #1983               // String table
     158: invokevirtual #1988               // Method com/google/gson/JsonObject.getAsJsonObject:(Ljava/lang/String;)Lcom/google/gson/JsonObject;
     161: astore        8
     163: getstatic     #1900               // Field scala/collection/JavaConverters$.MODULE$:Lscala/collection/JavaConverters$;
     166: aload         8
     168: ldc_w         #1989               // String columns
     171: invokevirtual #1993               // Method com/google/gson/JsonObject.getAsJsonArray:(Ljava/lang/String;)Lcom/google/gson/JsonArray;
     174: invokevirtual #1999               // Method com/google/gson/JsonArray.iterator:()Ljava/util/Iterator;
     177: invokevirtual #2003               // Method scala/collection/JavaConverters$.asScalaIteratorConverter:(Ljava/util/Iterator;)Lscala/collection/convert/Decorators$AsScala;
     180: invokevirtual #1907               // Method scala/collection/convert/Decorators$AsScala.asScala:()Ljava/lang/Object;
     183: checkcast     #2005               // class scala/collection/Iterator
     186: astore        9
     188: new           #49                 // class scala/collection/mutable/ArrayOps$ofRef
     191: dup
     192: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     195: aload         9
     197: getstatic     #1881               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     200: ldc_w         #1973               // class com/google/gson/JsonElement
     203: invokevirtual #1884               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     206: invokeinterface #2006,  2         // InterfaceMethod scala/collection/Iterator.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
     211: checkcast     #1534               // class "[Ljava/lang/Object;"
     214: invokevirtual #1776               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     217: invokespecial #1779               // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     220: invokedynamic #2013,  0           // InvokeDynamic #8:apply:()Lscala/Function1;
     225: getstatic     #2018               // Field scala/Array$.MODULE$:Lscala/Array$;
     228: getstatic     #1881               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     231: ldc_w         #1613               // class java/lang/String
     234: invokevirtual #1884               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     237: invokevirtual #2022               // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
     240: invokevirtual #2025               // Method scala/collection/mutable/ArrayOps$ofRef.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     243: checkcast     #1857               // class "[Ljava/lang/String;"
     246: astore        10
     248: new           #49                 // class scala/collection/mutable/ArrayOps$ofRef
     251: dup
     252: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     255: getstatic     #1900               // Field scala/collection/JavaConverters$.MODULE$:Lscala/collection/JavaConverters$;
     258: aload         8
     260: ldc_w         #2027               // String data
     263: invokevirtual #1993               // Method com/google/gson/JsonObject.getAsJsonArray:(Ljava/lang/String;)Lcom/google/gson/JsonArray;
     266: invokevirtual #1999               // Method com/google/gson/JsonArray.iterator:()Ljava/util/Iterator;
     269: invokevirtual #2003               // Method scala/collection/JavaConverters$.asScalaIteratorConverter:(Ljava/util/Iterator;)Lscala/collection/convert/Decorators$AsScala;
     272: invokevirtual #1907               // Method scala/collection/convert/Decorators$AsScala.asScala:()Ljava/lang/Object;
     275: checkcast     #1909               // class scala/collection/TraversableOnce
     278: getstatic     #1881               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     281: ldc_w         #1973               // class com/google/gson/JsonElement
     284: invokevirtual #1884               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     287: invokeinterface #1910,  2         // InterfaceMethod scala/collection/TraversableOnce.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
     292: checkcast     #1534               // class "[Ljava/lang/Object;"
     295: invokevirtual #1776               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     298: invokespecial #1779               // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     301: invokedynamic #2034,  0           // InvokeDynamic #9:apply:()Lscala/Function1;
     306: getstatic     #2018               // Field scala/Array$.MODULE$:Lscala/Array$;
     309: getstatic     #1881               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     312: ldc_w         #1995               // class com/google/gson/JsonArray
     315: invokevirtual #1884               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     318: invokevirtual #2022               // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
     321: invokevirtual #2025               // Method scala/collection/mutable/ArrayOps$ofRef.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     324: checkcast     #2036               // class "[Lcom/google/gson/JsonArray;"
     327: astore        11
     329: aload         8
     331: ldc_w         #2038               // String rowcount
     334: invokevirtual #2041               // Method com/google/gson/JsonObject.get:(Ljava/lang/String;)Lcom/google/gson/JsonElement;
     337: invokevirtual #2044               // Method com/google/gson/JsonElement.getAsInt:()I
     340: istore        12
     342: getstatic     #2049               // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
     345: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     348: iconst_0
     349: invokevirtual #2053               // Method scala/Predef$.intWrapper:(I)I
     352: iload         12
     354: invokevirtual #2057               // Method scala/runtime/RichInt$.until$extension0:(II)Lscala/collection/immutable/Range;
     357: aload         11
     359: invokedynamic #2067,  0           // InvokeDynamic #10:apply:([Lcom/google/gson/JsonArray;)Lscala/Function1;
     364: getstatic     #2072               // Field scala/collection/immutable/IndexedSeq$.MODULE$:Lscala/collection/immutable/IndexedSeq$;
     367: invokevirtual #2075               // Method scala/collection/immutable/IndexedSeq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
     370: invokevirtual #2078               // Method scala/collection/immutable/Range.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     373: checkcast     #2080               // class scala/collection/immutable/IndexedSeq
     376: astore        13
     378: getstatic     #2085               // Field ai/h2o/sparkling/utils/SparkSessionUtils$.MODULE$:Lai/h2o/sparkling/utils/SparkSessionUtils$;
     381: invokevirtual #2089               // Method ai/h2o/sparkling/utils/SparkSessionUtils$.active:()Lorg/apache/spark/sql/SparkSession;
     384: astore        14
     386: aload         14
     388: invokevirtual #2095               // Method org/apache/spark/sql/SparkSession.sparkContext:()Lorg/apache/spark/SparkContext;
     391: aload         13
     393: aload         14
     395: invokevirtual #2095               // Method org/apache/spark/sql/SparkSession.sparkContext:()Lorg/apache/spark/SparkContext;
     398: invokevirtual #2100               // Method org/apache/spark/SparkContext.parallelize$default$2:()I
     401: getstatic     #1881               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     404: ldc_w         #1699               // class org/apache/spark/sql/Row
     407: invokevirtual #1884               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     410: invokevirtual #2104               // Method org/apache/spark/SparkContext.parallelize:(Lscala/collection/Seq;ILscala/reflect/ClassTag;)Lorg/apache/spark/rdd/RDD;
     413: astore        15
     415: new           #2106               // class org/apache/spark/sql/types/StructType
     418: dup
     419: new           #49                 // class scala/collection/mutable/ArrayOps$ofRef
     422: dup
     423: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
     426: aload         10
     428: checkcast     #1534               // class "[Ljava/lang/Object;"
     431: invokevirtual #1776               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
     434: invokespecial #1779               // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
     437: invokedynamic #2113,  0           // InvokeDynamic #11:apply:()Lscala/Function1;
     442: getstatic     #2018               // Field scala/Array$.MODULE$:Lscala/Array$;
     445: getstatic     #1881               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
     448: ldc_w         #2115               // class org/apache/spark/sql/types/StructField
     451: invokevirtual #1884               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
     454: invokevirtual #2022               // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
     457: invokevirtual #2025               // Method scala/collection/mutable/ArrayOps$ofRef.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
     460: checkcast     #2117               // class "[Lorg/apache/spark/sql/types/StructField;"
     463: invokespecial #2120               // Method org/apache/spark/sql/types/StructType."<init>":([Lorg/apache/spark/sql/types/StructField;)V
     466: astore        16
     468: aload         14
     470: aload         15
     472: aload         16
     474: invokevirtual #2124               // Method org/apache/spark/sql/SparkSession.createDataFrame:(Lorg/apache/spark/rdd/RDD;Lorg/apache/spark/sql/types/StructType;)Lorg/apache/spark/sql/Dataset;
     477: areturn

  private java.lang.String[] getLeaderboard$default$2();
    Code:
       0: getstatic     #2018               // Field scala/Array$.MODULE$:Lscala/Array$;
       3: getstatic     #1881               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       6: ldc_w         #1613               // class java/lang/String
       9: invokevirtual #1884               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      12: invokevirtual #2142               // Method scala/Array$.empty:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
      15: checkcast     #1857               // class "[Ljava/lang/String;"
      18: areturn

  private java.lang.String getLeaderModelId(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       4: iconst_1
       5: anewarray     #1613               // class java/lang/String
       8: dup
       9: iconst_0
      10: aload_1
      11: aastore
      12: checkcast     #1534               // class "[Ljava/lang/Object;"
      15: invokevirtual #1538               // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      18: invokevirtual #1686               // Method getLeaderboard:(Lscala/collection/Seq;)Lorg/apache/spark/sql/Dataset;
      21: ldc_w         #1688               // String model_id
      24: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      27: iconst_0
      28: anewarray     #1613               // class java/lang/String
      31: checkcast     #1534               // class "[Ljava/lang/Object;"
      34: invokevirtual #1538               // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      37: invokevirtual #1694               // Method org/apache/spark/sql/Dataset.select:(Ljava/lang/String;Lscala/collection/Seq;)Lorg/apache/spark/sql/Dataset;
      40: astore_2
      41: aload_2
      42: invokevirtual #2145               // Method org/apache/spark/sql/Dataset.count:()J
      45: lconst_0
      46: lcmp
      47: ifne          59
      50: new           #22                 // class ai/h2o/sparkling/ml/algos/H2OAutoML$$anon$1
      53: dup
      54: aconst_null
      55: invokespecial #2148               // Method ai/h2o/sparkling/ml/algos/H2OAutoML$$anon$1."<init>":(Lai/h2o/sparkling/ml/algos/H2OAutoML;)V
      58: athrow
      59: aload_2
      60: invokevirtual #1697               // Method org/apache/spark/sql/Dataset.head:()Ljava/lang/Object;
      63: checkcast     #1699               // class org/apache/spark/sql/Row
      66: iconst_0
      67: invokeinterface #1703,  2         // InterfaceMethod org/apache/spark/sql/Row.getString:(I)Ljava/lang/String;
      72: areturn

  private void setAllModels();
    Code:
       0: new           #49                 // class scala/collection/mutable/ArrayOps$ofRef
       3: dup
       4: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: aload_0
       8: getstatic     #1603               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      11: invokevirtual #1686               // Method getLeaderboard:(Lscala/collection/Seq;)Lorg/apache/spark/sql/Dataset;
      14: ldc_w         #1688               // String model_id
      17: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      20: iconst_0
      21: anewarray     #1613               // class java/lang/String
      24: checkcast     #1534               // class "[Ljava/lang/Object;"
      27: invokevirtual #1538               // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      30: invokevirtual #1694               // Method org/apache/spark/sql/Dataset.select:(Ljava/lang/String;Lscala/collection/Seq;)Lorg/apache/spark/sql/Dataset;
      33: invokevirtual #2152               // Method org/apache/spark/sql/Dataset.collect:()Ljava/lang/Object;
      36: checkcast     #1534               // class "[Ljava/lang/Object;"
      39: invokevirtual #1776               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
      42: invokespecial #1779               // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
      45: aload_0
      46: invokedynamic #2160,  0           // InvokeDynamic #12:apply:(Lai/h2o/sparkling/ml/algos/H2OAutoML;)Lscala/Function1;
      51: getstatic     #2018               // Field scala/Array$.MODULE$:Lscala/Array$;
      54: getstatic     #1881               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      57: ldc_w         #1786               // class ai/h2o/sparkling/ml/models/H2OMOJOModel
      60: invokevirtual #1884               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      63: invokevirtual #2022               // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
      66: invokevirtual #2025               // Method scala/collection/mutable/ArrayOps$ofRef.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      69: checkcast     #1834               // class "[Lai/h2o/sparkling/ml/models/H2OMOJOModel;"
      72: astore_1
      73: aload_0
      74: new           #1681               // class scala/Some
      77: dup
      78: aload_1
      79: invokespecial #1682               // Method scala/Some."<init>":(Ljava/lang/Object;)V
      82: invokespecial #2162               // Method allModels_$eq:(Lscala/Option;)V
      85: return

  public ai.h2o.sparkling.ml.models.H2OMOJOModel[] getAllModels();
    Code:
       0: aload_0
       1: invokespecial #2164               // Method allModels:()Lscala/Option;
       4: astore_2
       5: aload_2
       6: instanceof    #1681               // class scala/Some
       9: ifeq          32
      12: aload_2
      13: checkcast     #1681               // class scala/Some
      16: astore_3
      17: aload_3
      18: invokevirtual #1784               // Method scala/Some.value:()Ljava/lang/Object;
      21: checkcast     #1834               // class "[Lai/h2o/sparkling/ml/models/H2OMOJOModel;"
      24: astore        4
      26: aload         4
      28: astore_1
      29: goto          68
      32: goto          35
      35: getstatic     #1644               // Field scala/None$.MODULE$:Lscala/None$;
      38: aload_2
      39: invokevirtual #1816               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      42: ifeq          56
      45: new           #1818               // class java/lang/RuntimeException
      48: dup
      49: ldc_w         #1918               // String The \'fit\' method must be called at first!
      52: invokespecial #1822               // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: goto          59
      59: new           #1660               // class scala/MatchError
      62: dup
      63: aload_2
      64: invokespecial #1663               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      67: athrow
      68: aload_1
      69: areturn

  private void deleteBinaryModels();
    Code:
       0: new           #49                 // class scala/collection/mutable/ArrayOps$ofRef
       3: dup
       4: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: aload_0
       8: getstatic     #1603               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      11: invokevirtual #1686               // Method getLeaderboard:(Lscala/collection/Seq;)Lorg/apache/spark/sql/Dataset;
      14: ldc_w         #1688               // String model_id
      17: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      20: iconst_0
      21: anewarray     #1613               // class java/lang/String
      24: checkcast     #1534               // class "[Ljava/lang/Object;"
      27: invokevirtual #1538               // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      30: invokevirtual #1694               // Method org/apache/spark/sql/Dataset.select:(Ljava/lang/String;Lscala/collection/Seq;)Lorg/apache/spark/sql/Dataset;
      33: invokevirtual #2152               // Method org/apache/spark/sql/Dataset.collect:()Ljava/lang/Object;
      36: checkcast     #1534               // class "[Ljava/lang/Object;"
      39: invokevirtual #1776               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
      42: invokespecial #1779               // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
      45: invokedynamic #2171,  0           // InvokeDynamic #13:apply:()Lscala/Function1;
      50: invokevirtual #2175               // Method scala/collection/mutable/ArrayOps$ofRef.partition:(Lscala/Function1;)Lscala/Tuple2;
      53: invokevirtual #2179               // Method scala/Tuple2.productIterator:()Lscala/collection/Iterator;
      56: invokedynamic #2185,  0           // InvokeDynamic #14:apply:()Lscala/Function1;
      61: invokeinterface #2186,  2         // InterfaceMethod scala/collection/Iterator.foreach:(Lscala/Function1;)V
      66: return

  public scala.collection.Seq<java.lang.String> getExcludedCols();
    Code:
       0: aload_0
       1: invokestatic  #2190               // InterfaceMethod ai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils.getExcludedCols$:(Lai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils;)Lscala/collection/Seq;
       4: new           #2192               // class scala/collection/immutable/$colon$colon
       7: dup
       8: aload_0
       9: invokevirtual #2194               // Method getLabelCol:()Ljava/lang/String;
      12: new           #2192               // class scala/collection/immutable/$colon$colon
      15: dup
      16: aload_0
      17: invokevirtual #2196               // Method getFoldCol:()Ljava/lang/String;
      20: new           #2192               // class scala/collection/immutable/$colon$colon
      23: dup
      24: aload_0
      25: invokevirtual #2198               // Method getWeightCol:()Ljava/lang/String;
      28: getstatic     #1603               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
      31: invokespecial #2201               // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
      34: invokespecial #2201               // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
      37: invokespecial #2201               // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
      40: checkcast     #2203               // class scala/collection/TraversableLike
      43: invokedynamic #2210,  0           // InvokeDynamic #15:apply:()Lscala/Function1;
      48: getstatic     #2215               // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      51: invokevirtual #2216               // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      54: invokeinterface #2219,  3         // InterfaceMethod scala/collection/TraversableLike.flatMap:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      59: checkcast     #1590               // class scala/collection/GenTraversableOnce
      62: getstatic     #2215               // Field scala/collection/Seq$.MODULE$:Lscala/collection/Seq$;
      65: invokevirtual #2216               // Method scala/collection/Seq$.canBuildFrom:()Lscala/collection/generic/CanBuildFrom;
      68: invokeinterface #2222,  3         // InterfaceMethod scala/collection/Seq.$plus$plus:(Lscala/collection/GenTraversableOnce;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      73: checkcast     #1886               // class scala/collection/Seq
      76: areturn

  public java.lang.String[] getInputCols();
    Code:
       0: aload_0
       1: invokevirtual #2225               // Method getFeaturesCols:()[Ljava/lang/String;
       4: areturn

  public ai.h2o.sparkling.ml.algos.H2OAutoML setInputCols(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2229               // Method setFeaturesCols:([Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams;
       5: checkcast     #2                  // class ai/h2o/sparkling/ml/algos/H2OAutoML
       8: areturn

  public ai.h2o.sparkling.ml.algos.H2OAutoML copy(org.apache.spark.ml.param.ParamMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2235               // Method defaultCopy:(Lorg/apache/spark/ml/param/ParamMap;)Lorg/apache/spark/ml/param/Params;
       5: checkcast     #2                  // class ai/h2o/sparkling/ml/algos/H2OAutoML
       8: areturn

  public org.apache.spark.ml.param.Params copy(org.apache.spark.ml.param.ParamMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2238               // Method copy:(Lorg/apache/spark/ml/param/ParamMap;)Lai/h2o/sparkling/ml/algos/H2OAutoML;
       5: areturn

  public org.apache.spark.ml.PipelineStage copy(org.apache.spark.ml.param.ParamMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2238               // Method copy:(Lorg/apache/spark/ml/param/ParamMap;)Lai/h2o/sparkling/ml/algos/H2OAutoML;
       5: areturn

  public org.apache.spark.ml.Estimator copy(org.apache.spark.ml.param.ParamMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2238               // Method copy:(Lorg/apache/spark/ml/param/ParamMap;)Lai/h2o/sparkling/ml/algos/H2OAutoML;
       5: areturn

  public ai.h2o.sparkling.ml.algos.H2OAlgoCommonUtils setInputCols(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2243               // Method setInputCols:([Ljava/lang/String;)Lai/h2o/sparkling/ml/algos/H2OAutoML;
       5: areturn

  public org.apache.spark.ml.Model fit(org.apache.spark.sql.Dataset);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2246               // Method fit:(Lorg/apache/spark/sql/Dataset;)Lai/h2o/sparkling/ml/models/H2OMOJOModel;
       5: areturn

  private final void LoggingLevel$lzycompute$1();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #1482               // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
       8: ifnonnull     23
      11: aload_0
      12: new           #17                 // class ai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$
      15: dup
      16: aload_0
      17: invokespecial #2249               // Method ai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$."<init>":(Lai/h2o/sparkling/backend/utils/RestCommunication;)V
      20: putfield      #1482               // Field LoggingLevel$module:Lai/h2o/sparkling/backend/utils/RestCommunication$LoggingLevel$;
      23: aload_1
      24: monitorexit
      25: goto          31
      28: aload_1
      29: monitorexit
      30: athrow
      31: return
    Exception table:
       from    to  target type
           4    23    28   any

  public static final scala.collection.immutable.Map $anonfun$getInputSpec$1(ai.h2o.sparkling.H2OFrame);
    Code:
       0: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: invokevirtual #1512               // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
       6: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       9: iconst_1
      10: anewarray     #1514               // class scala/Tuple2
      13: dup
      14: iconst_0
      15: getstatic     #1517               // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      18: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      21: ldc_w         #2254               // String validation_frame
      24: invokevirtual #1523               // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      27: aload_0
      28: invokevirtual #1528               // Method ai/h2o/sparkling/H2OFrame.frameId:()Ljava/lang/String;
      31: invokevirtual #1532               // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      34: aastore
      35: checkcast     #1534               // class "[Ljava/lang/Object;"
      38: invokevirtual #1538               // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      41: invokevirtual #1544               // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
      44: checkcast     #1546               // class scala/collection/immutable/Map
      47: areturn

  public static final scala.collection.immutable.Map $anonfun$getInputSpec$2();
    Code:
       0: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: invokevirtual #1512               // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
       6: getstatic     #1603               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       9: invokevirtual #1544               // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
      12: checkcast     #1546               // class scala/collection/immutable/Map
      15: areturn

  public static final java.lang.String $anonfun$fit$1();
    Code:
       0: getstatic     #1716               // Field ai/h2o/sparkling/H2OContext$.MODULE$:Lai/h2o/sparkling/H2OContext$;
       3: invokevirtual #2257               // Method ai/h2o/sparkling/H2OContext$.ensure$default$1:()Ljava/lang/String;
       6: areturn

  public static final boolean $anonfun$fit$2(ai.h2o.sparkling.H2OContext);
    Code:
       0: aload_0
       1: invokevirtual #1732               // Method ai/h2o/sparkling/H2OContext.getConf:()Lai/h2o/sparkling/H2OConf;
       4: invokevirtual #2265               // Method ai/h2o/sparkling/H2OConf.isModelPrintAfterTrainingEnabled:()Z
       7: ireturn

  public static final java.lang.String[] $anonfun$determineIncludedAlgos$1();
    Code:
       0: getstatic     #2018               // Field scala/Array$.MODULE$:Lscala/Array$;
       3: getstatic     #1881               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       6: ldc_w         #1613               // class java/lang/String
       9: invokevirtual #1884               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      12: invokevirtual #2142               // Method scala/Array$.empty:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
      15: checkcast     #1857               // class "[Ljava/lang/String;"
      18: areturn

  public static final java.lang.String $anonfun$determineIncludedAlgos$3(java.lang.String);
    Code:
       0: new           #1741               // class java/lang/StringBuilder
       3: dup
       4: ldc_w         #2269               // int 91
       7: invokespecial #1744               // Method java/lang/StringBuilder."<init>":(I)V
      10: ldc_w         #2271               // String Algorithm \'
      13: invokevirtual #1750               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #1750               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc_w         #2273               // String \' was specified in both include and exclude parameters.
      23: invokevirtual #1750               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc_w         #2275               // String Excluding the algorithm.
      29: invokevirtual #1750               // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #1758               // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: areturn

  public static final void $anonfun$determineIncludedAlgos$2(ai.h2o.sparkling.ml.algos.H2OAutoML, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #2285,  0           // InvokeDynamic #16:apply:(Ljava/lang/String;)Lscala/Function0;
       7: invokevirtual #2289               // Method logWarning:(Lscala/Function0;)V
      10: return

  public static final java.lang.String $anonfun$getLeaderboard$1();
    Code:
       0: getstatic     #1716               // Field ai/h2o/sparkling/H2OContext$.MODULE$:Lai/h2o/sparkling/H2OContext$;
       3: invokevirtual #2257               // Method ai/h2o/sparkling/H2OContext$.ensure$default$1:()Ljava/lang/String;
       6: areturn

  public static final java.lang.String $anonfun$getLeaderboard$2(java.io.InputStream);
    Code:
       0: aload_0
       1: invokestatic  #2294               // Method org/apache/commons/io/IOUtils.toString:(Ljava/io/InputStream;)Ljava/lang/String;
       4: areturn

  public static final java.lang.String $anonfun$getLeaderboard$3(com.google.gson.JsonElement);
    Code:
       0: aload_0
       1: invokevirtual #1981               // Method com/google/gson/JsonElement.getAsJsonObject:()Lcom/google/gson/JsonObject;
       4: ldc_w         #2297               // String name
       7: invokevirtual #2041               // Method com/google/gson/JsonObject.get:(Ljava/lang/String;)Lcom/google/gson/JsonElement;
      10: invokevirtual #2300               // Method com/google/gson/JsonElement.getAsString:()Ljava/lang/String;
      13: areturn

  public static final com.google.gson.JsonArray $anonfun$getLeaderboard$4(com.google.gson.JsonElement);
    Code:
       0: aload_0
       1: invokevirtual #2304               // Method com/google/gson/JsonElement.getAsJsonArray:()Lcom/google/gson/JsonArray;
       4: areturn

  public static final java.lang.String $anonfun$getLeaderboard$6(int, com.google.gson.JsonArray);
    Code:
       0: aload_1
       1: iload_0
       2: invokevirtual #2311               // Method com/google/gson/JsonArray.get:(I)Lcom/google/gson/JsonElement;
       5: astore_2
       6: aload_2
       7: invokevirtual #2314               // Method com/google/gson/JsonElement.isJsonNull:()Z
      10: ifeq          17
      13: aconst_null
      14: goto          21
      17: aload_2
      18: invokevirtual #2300               // Method com/google/gson/JsonElement.getAsString:()Ljava/lang/String;
      21: areturn

  public static final org.apache.spark.sql.Row $anonfun$getLeaderboard$5(com.google.gson.JsonArray[], int);
    Code:
       0: new           #49                 // class scala/collection/mutable/ArrayOps$ofRef
       3: dup
       4: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: aload_0
       8: checkcast     #1534               // class "[Ljava/lang/Object;"
      11: invokevirtual #1776               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
      14: invokespecial #1779               // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
      17: iload_1
      18: invokedynamic #2328,  0           // InvokeDynamic #17:apply:(I)Lscala/Function1;
      23: getstatic     #2018               // Field scala/Array$.MODULE$:Lscala/Array$;
      26: getstatic     #1881               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
      29: ldc_w         #1613               // class java/lang/String
      32: invokevirtual #1884               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      35: invokevirtual #2022               // Method scala/Array$.canBuildFrom:(Lscala/reflect/ClassTag;)Lscala/collection/generic/CanBuildFrom;
      38: invokevirtual #2025               // Method scala/collection/mutable/ArrayOps$ofRef.map:(Lscala/Function1;Lscala/collection/generic/CanBuildFrom;)Ljava/lang/Object;
      41: checkcast     #1857               // class "[Ljava/lang/String;"
      44: astore_2
      45: getstatic     #2333               // Field org/apache/spark/sql/Row$.MODULE$:Lorg/apache/spark/sql/Row$;
      48: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      51: aload_2
      52: checkcast     #1534               // class "[Ljava/lang/Object;"
      55: invokevirtual #2337               // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      58: invokevirtual #2340               // Method org/apache/spark/sql/Row$.apply:(Lscala/collection/Seq;)Lorg/apache/spark/sql/Row;
      61: areturn

  public static final org.apache.spark.sql.types.StructField $anonfun$getLeaderboard$7(java.lang.String);
    Code:
       0: new           #2115               // class org/apache/spark/sql/types/StructField
       3: dup
       4: aload_0
       5: getstatic     #2346               // Field org/apache/spark/sql/types/StringType$.MODULE$:Lorg/apache/spark/sql/types/StringType$;
       8: iconst_1
       9: getstatic     #2351               // Field org/apache/spark/sql/types/StructField$.MODULE$:Lorg/apache/spark/sql/types/StructField$;
      12: invokevirtual #2355               // Method org/apache/spark/sql/types/StructField$.apply$default$4:()Lorg/apache/spark/sql/types/Metadata;
      15: invokespecial #2358               // Method org/apache/spark/sql/types/StructField."<init>":(Ljava/lang/String;Lorg/apache/spark/sql/types/DataType;ZLorg/apache/spark/sql/types/Metadata;)V
      18: areturn

  public static final ai.h2o.sparkling.ml.models.H2OMOJOModel $anonfun$setAllModels$1(ai.h2o.sparkling.ml.algos.H2OAutoML, org.apache.spark.sql.Row);
    Code:
       0: aload_1
       1: iconst_0
       2: invokeinterface #1703,  2         // InterfaceMethod org/apache/spark/sql/Row.getString:(I)Ljava/lang/String;
       7: astore_2
       8: getstatic     #2364               // Field ai/h2o/sparkling/ml/internals/H2OModel$.MODULE$:Lai/h2o/sparkling/ml/internals/H2OModel$;
      11: aload_2
      12: invokevirtual #2367               // Method ai/h2o/sparkling/ml/internals/H2OModel$.apply:(Ljava/lang/String;)Lai/h2o/sparkling/ml/internals/H2OModel;
      15: getstatic     #2372               // Field org/apache/spark/ml/util/Identifiable$.MODULE$:Lorg/apache/spark/ml/util/Identifiable$;
      18: aload_2
      19: invokevirtual #2375               // Method org/apache/spark/ml/util/Identifiable$.randomUID:(Ljava/lang/String;)Ljava/lang/String;
      22: getstatic     #2380               // Field ai/h2o/sparkling/ml/models/H2OMOJOSettings$.MODULE$:Lai/h2o/sparkling/ml/models/H2OMOJOSettings$;
      25: aload_0
      26: invokevirtual #2384               // Method ai/h2o/sparkling/ml/models/H2OMOJOSettings$.createFromModelParams:(Lai/h2o/sparkling/ml/params/H2OAlgorithmMOJOParams;)Lai/h2o/sparkling/ml/models/H2OMOJOSettings;
      29: aload_0
      30: invokevirtual #2386               // Method getKeepCrossValidationModels:()Z
      33: invokevirtual #2392               // Method ai/h2o/sparkling/ml/internals/H2OModel.toMOJOModel:(Ljava/lang/String;Lai/h2o/sparkling/ml/models/H2OMOJOSettings;Z)Lai/h2o/sparkling/ml/models/H2OMOJOModel;
      36: areturn

  public static final boolean $anonfun$deleteBinaryModels$1(org.apache.spark.sql.Row);
    Code:
       0: aload_0
       1: iconst_0
       2: invokeinterface #1703,  2         // InterfaceMethod org/apache/spark/sql/Row.getString:(I)Ljava/lang/String;
       7: ldc_w         #2398               // String StackedEnsemble
      10: invokevirtual #2402               // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      13: ireturn

  public static final void $anonfun$deleteBinaryModels$3(org.apache.spark.sql.Row);
    Code:
       0: aload_0
       1: iconst_0
       2: invokeinterface #1703,  2         // InterfaceMethod org/apache/spark/sql/Row.getString:(I)Ljava/lang/String;
       7: astore_1
       8: getstatic     #2364               // Field ai/h2o/sparkling/ml/internals/H2OModel$.MODULE$:Lai/h2o/sparkling/ml/internals/H2OModel$;
      11: aload_1
      12: invokevirtual #2367               // Method ai/h2o/sparkling/ml/internals/H2OModel$.apply:(Ljava/lang/String;)Lai/h2o/sparkling/ml/internals/H2OModel;
      15: astore_2
      16: aload_2
      17: invokevirtual #2407               // Method ai/h2o/sparkling/ml/internals/H2OModel.tryDelete:()V
      20: return

  public static final void $anonfun$deleteBinaryModels$2(java.lang.Object);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: instanceof    #2412               // class "[Lorg/apache/spark/sql/Row;"
       6: ifeq          46
       9: aload_2
      10: checkcast     #2412               // class "[Lorg/apache/spark/sql/Row;"
      13: astore_3
      14: new           #49                 // class scala/collection/mutable/ArrayOps$ofRef
      17: dup
      18: getstatic     #1508               // Field scala/Predef$.MODULE$:Lscala/Predef$;
      21: aload_3
      22: checkcast     #1534               // class "[Ljava/lang/Object;"
      25: invokevirtual #1776               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)[Ljava/lang/Object;
      28: invokespecial #1779               // Method scala/collection/mutable/ArrayOps$ofRef."<init>":([Ljava/lang/Object;)V
      31: invokedynamic #2417,  0           // InvokeDynamic #18:apply:()Lscala/Function1;
      36: invokevirtual #1870               // Method scala/collection/mutable/ArrayOps$ofRef.foreach:(Lscala/Function1;)V
      39: getstatic     #2423               // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      42: astore_1
      43: goto          58
      46: goto          49
      49: new           #1660               // class scala/MatchError
      52: dup
      53: aload_2
      54: invokespecial #1663               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      57: athrow
      58: return

  public static final scala.collection.Iterable $anonfun$getExcludedCols$1(java.lang.String);
    Code:
       0: getstatic     #1841               // Field scala/Option$.MODULE$:Lscala/Option$;
       3: getstatic     #1841               // Field scala/Option$.MODULE$:Lscala/Option$;
       6: aload_0
       7: invokevirtual #1846               // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      10: invokevirtual #2428               // Method scala/Option$.option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
      13: areturn

  public ai.h2o.sparkling.ml.algos.H2OAutoML(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1487               // Field uid:Ljava/lang/String;
       5: aload_0
       6: invokespecial #2429               // Method org/apache/spark/ml/Estimator."<init>":()V
       9: aload_0
      10: invokestatic  #2433               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestEncodingUtils.$init$:(Lai/h2o/sparkling/backend/utils/RestEncodingUtils;)V
      13: aload_0
      14: invokestatic  #2435               // InterfaceMethod ai/h2o/sparkling/backend/utils/RestCommunication.$init$:(Lai/h2o/sparkling/backend/utils/RestCommunication;)V
      17: aload_0
      18: invokestatic  #2438               // InterfaceMethod ai/h2o/sparkling/ml/utils/EstimatorCommonUtils.$init$:(Lai/h2o/sparkling/ml/utils/EstimatorCommonUtils;)V
      21: aload_0
      22: invokestatic  #2440               // InterfaceMethod ai/h2o/sparkling/backend/utils/H2OFrameLifecycle.$init$:(Lai/h2o/sparkling/backend/utils/H2OFrameLifecycle;)V
      25: aload_0
      26: invokestatic  #2443               // InterfaceMethod ai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils.$init$:(Lai/h2o/sparkling/ml/algos/H2OAlgoCommonUtils;)V
      29: aload_0
      30: invokestatic  #2446               // InterfaceMethod org/apache/spark/ml/util/MLWritable.$init$:(Lorg/apache/spark/ml/util/MLWritable;)V
      33: aload_0
      34: invokestatic  #2449               // InterfaceMethod org/apache/spark/ml/util/DefaultParamsWritable.$init$:(Lorg/apache/spark/ml/util/DefaultParamsWritable;)V
      37: aload_0
      38: invokestatic  #2452               // InterfaceMethod ai/h2o/sparkling/ml/params/HasDataFrameSerializer.$init$:(Lai/h2o/sparkling/ml/params/HasDataFrameSerializer;)V
      41: aload_0
      42: invokestatic  #2455               // InterfaceMethod ai/h2o/sparkling/ml/params/H2OBaseMOJOParams.$init$:(Lai/h2o/sparkling/ml/params/H2OBaseMOJOParams;)V
      45: aload_0
      46: invokestatic  #2458               // InterfaceMethod ai/h2o/sparkling/ml/params/H2OCommonParams.$init$:(Lai/h2o/sparkling/ml/params/H2OCommonParams;)V
      49: aload_0
      50: invokestatic  #2461               // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgorithmMOJOParams.$init$:(Lai/h2o/sparkling/ml/params/H2OAlgorithmMOJOParams;)V
      53: aload_0
      54: invokestatic  #2464               // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams.$init$:(Lai/h2o/sparkling/ml/params/H2OAlgorithmCommonParams;)V
      57: aload_0
      58: invokestatic  #2467               // InterfaceMethod ai/h2o/sparkling/ml/params/ParameterConstructorMethods.$init$:(Lai/h2o/sparkling/ml/params/ParameterConstructorMethods;)V
      61: aload_0
      62: invokestatic  #2470               // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAlgoParamsBase.$init$:(Lai/h2o/sparkling/ml/params/H2OAlgoParamsBase;)V
      65: aload_0
      66: invokestatic  #2473               // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams.$init$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildControlParams;)V
      69: aload_0
      70: invokestatic  #2476               // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLBuildModelsParams.$init$:(Lai/h2o/sparkling/ml/params/H2OAutoMLBuildModelsParams;)V
      73: aload_0
      74: invokestatic  #2479               // InterfaceMethod ai/h2o/sparkling/ml/params/HasIgnoredCols.$init$:(Lai/h2o/sparkling/ml/params/HasIgnoredCols;)V
      77: aload_0
      78: invokestatic  #2482               // InterfaceMethod ai/h2o/sparkling/ml/params/HasLeaderboardDataFrame.$init$:(Lai/h2o/sparkling/ml/params/HasLeaderboardDataFrame;)V
      81: aload_0
      82: invokestatic  #2485               // InterfaceMethod ai/h2o/sparkling/ml/params/HasBlendingDataFrame.$init$:(Lai/h2o/sparkling/ml/params/HasBlendingDataFrame;)V
      85: aload_0
      86: invokestatic  #2488               // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLInputParams.$init$:(Lai/h2o/sparkling/ml/params/H2OAutoMLInputParams;)V
      89: aload_0
      90: invokestatic  #2491               // InterfaceMethod ai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams.$init$:(Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;)V
      93: aload_0
      94: invokestatic  #2494               // InterfaceMethod ai/h2o/sparkling/ml/params/HasMonotoneConstraints.$init$:(Lai/h2o/sparkling/ml/params/HasMonotoneConstraints;)V
      97: aload_0
      98: getstatic     #1644               // Field scala/None$.MODULE$:Lscala/None$;
     101: putfield      #1489               // Field amlKeyOption:Lscala/Option;
     104: aload_0
     105: getstatic     #1644               // Field scala/None$.MODULE$:Lscala/None$;
     108: putfield      #1494               // Field allModels:Lscala/Option;
     111: return

  public ai.h2o.sparkling.ml.algos.H2OAutoML();
    Code:
       0: aload_0
       1: getstatic     #2372               // Field org/apache/spark/ml/util/Identifiable$.MODULE$:Lorg/apache/spark/ml/util/Identifiable$;
       4: ldc           #2                  // class ai/h2o/sparkling/ml/algos/H2OAutoML
       6: invokevirtual #2499               // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       9: invokevirtual #2375               // Method org/apache/spark/ml/util/Identifiable$.randomUID:(Ljava/lang/String;)Ljava/lang/String;
      12: invokespecial #2500               // Method "<init>":(Ljava/lang/String;)V
      15: return

  public static final java.lang.Object $anonfun$fit$2$adapted(ai.h2o.sparkling.H2OContext);
    Code:
       0: aload_0
       1: invokestatic  #2502               // Method $anonfun$fit$2:(Lai/h2o/sparkling/H2OContext;)Z
       4: invokestatic  #2508               // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public static final java.lang.Object $anonfun$determineIncludedAlgos$2$adapted(ai.h2o.sparkling.ml.algos.H2OAutoML, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2510               // Method $anonfun$determineIncludedAlgos$2:(Lai/h2o/sparkling/ml/algos/H2OAutoML;Ljava/lang/String;)V
       5: getstatic     #2423               // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       8: areturn

  public static final org.apache.spark.sql.Row $anonfun$getLeaderboard$5$adapted(com.google.gson.JsonArray[], java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2514               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokestatic  #2516               // Method $anonfun$getLeaderboard$5:([Lcom/google/gson/JsonArray;I)Lorg/apache/spark/sql/Row;
       8: areturn

  public static final java.lang.Object $anonfun$deleteBinaryModels$1$adapted(org.apache.spark.sql.Row);
    Code:
       0: aload_0
       1: invokestatic  #2518               // Method $anonfun$deleteBinaryModels$1:(Lorg/apache/spark/sql/Row;)Z
       4: invokestatic  #2508               // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public static final java.lang.Object $anonfun$deleteBinaryModels$2$adapted(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #2520               // Method $anonfun$deleteBinaryModels$2:(Ljava/lang/Object;)V
       4: getstatic     #2423               // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       7: areturn

  public static final java.lang.Object $anonfun$deleteBinaryModels$3$adapted(org.apache.spark.sql.Row);
    Code:
       0: aload_0
       1: invokestatic  #2522               // Method $anonfun$deleteBinaryModels$3:(Lorg/apache/spark/sql/Row;)V
       4: getstatic     #2423               // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       7: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #2534,  0           // InvokeDynamic #19:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
