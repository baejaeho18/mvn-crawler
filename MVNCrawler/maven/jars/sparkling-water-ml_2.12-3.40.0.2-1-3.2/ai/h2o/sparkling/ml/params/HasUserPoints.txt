Compiled from "HasUserPoints.scala"
public interface ai.h2o.sparkling.ml.params.HasUserPoints extends ai.h2o.sparkling.ml.params.H2OAlgoParamsBase {
  public abstract void ai$h2o$sparkling$ml$params$HasUserPoints$_setter_$ai$h2o$sparkling$ml$params$HasUserPoints$$userPoints_$eq(ai.h2o.sparkling.ml.params.NullableDoubleArrayArrayParam);

  public abstract scala.collection.immutable.Map ai$h2o$sparkling$ml$params$HasUserPoints$$super$getSWtoH2OParamNameMap();

  public abstract ai.h2o.sparkling.ml.params.NullableDoubleArrayArrayParam ai$h2o$sparkling$ml$params$HasUserPoints$$userPoints();

  public static double[][] getUserPoints$(ai.h2o.sparkling.ml.params.HasUserPoints);
    Code:
       0: aload_0
       1: invokespecial #29                 // InterfaceMethod getUserPoints:()[[D
       4: areturn

  public default double[][] getUserPoints();
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #32,  1           // InterfaceMethod ai$h2o$sparkling$ml$params$HasUserPoints$$userPoints:()Lai/h2o/sparkling/ml/params/NullableDoubleArrayArrayParam;
       7: invokeinterface #36,  2           // InterfaceMethod $:(Lorg/apache/spark/ml/param/Param;)Ljava/lang/Object;
      12: checkcast     #38                 // class "[[D"
      15: areturn

  public static ai.h2o.sparkling.ml.params.HasUserPoints setUserPoints$(ai.h2o.sparkling.ml.params.HasUserPoints, double[][]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #46                 // InterfaceMethod setUserPoints:([[D)Lai/h2o/sparkling/ml/params/HasUserPoints;
       5: areturn

  public default ai.h2o.sparkling.ml.params.HasUserPoints setUserPoints(double[][]);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #32,  1           // InterfaceMethod ai$h2o$sparkling$ml$params$HasUserPoints$$userPoints:()Lai/h2o/sparkling/ml/params/NullableDoubleArrayArrayParam;
       7: aload_1
       8: invokeinterface #50,  3           // InterfaceMethod set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      13: checkcast     #2                  // class ai/h2o/sparkling/ml/params/HasUserPoints
      16: areturn

  public static scala.collection.immutable.Map getUserPointsParam$(ai.h2o.sparkling.ml.params.HasUserPoints, ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #57                 // InterfaceMethod getUserPointsParam:(Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public default scala.collection.immutable.Map<java.lang.String, java.lang.Object> getUserPointsParam(ai.h2o.sparkling.H2OFrame);
    Code:
       0: getstatic     #65                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: invokevirtual #69                 // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
       6: getstatic     #65                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       9: iconst_1
      10: anewarray     #71                 // class scala/Tuple2
      13: dup
      14: iconst_0
      15: getstatic     #74                 // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      18: getstatic     #65                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      21: ldc           #76                 // String user_points
      23: invokevirtual #80                 // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      26: aload_0
      27: aload_0
      28: invokeinterface #29,  1           // InterfaceMethod getUserPoints:()[[D
      33: invokeinterface #84,  2           // InterfaceMethod convert2dArrayToH2OFrame:([[D)Ljava/lang/String;
      38: invokevirtual #88                 // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      41: aastore
      42: checkcast     #90                 // class "[Ljava/lang/Object;"
      45: invokevirtual #94                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      48: invokevirtual #100                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
      51: checkcast     #102                // class scala/collection/immutable/Map
      54: areturn

  public static scala.collection.immutable.Map getSWtoH2OParamNameMap$(ai.h2o.sparkling.ml.params.HasUserPoints);
    Code:
       0: aload_0
       1: invokespecial #107                // InterfaceMethod getSWtoH2OParamNameMap:()Lscala/collection/immutable/Map;
       4: areturn

  public default scala.collection.immutable.Map<java.lang.String, java.lang.String> getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokeinterface #110,  1          // InterfaceMethod ai$h2o$sparkling$ml$params$HasUserPoints$$super$getSWtoH2OParamNameMap:()Lscala/collection/immutable/Map;
       6: getstatic     #65                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       9: invokevirtual #69                 // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
      12: getstatic     #65                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      15: iconst_1
      16: anewarray     #71                 // class scala/Tuple2
      19: dup
      20: iconst_0
      21: getstatic     #74                 // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      24: getstatic     #65                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      27: ldc           #112                // String userPoints
      29: invokevirtual #80                 // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      32: ldc           #76                 // String user_points
      34: invokevirtual #88                 // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      37: aastore
      38: checkcast     #90                 // class "[Ljava/lang/Object;"
      41: invokevirtual #94                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      44: invokevirtual #100                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
      47: invokeinterface #116,  2          // InterfaceMethod scala/collection/immutable/Map.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/Map;
      52: areturn

  public static void $init$(ai.h2o.sparkling.ml.params.HasUserPoints);
    Code:
       0: aload_0
       1: new           #120                // class ai/h2o/sparkling/ml/params/NullableDoubleArrayArrayParam
       4: dup
       5: aload_0
       6: ldc           #112                // String userPoints
       8: ldc           #122                // String This option allows you to specify array of points, where each point represents coordinates of an initial cluster center. The user-specified points must have the same number of columns as the training observations. The number of rows must equal the number of clusters.
      10: invokespecial #126                // Method ai/h2o/sparkling/ml/params/NullableDoubleArrayArrayParam."<init>":(Lorg/apache/spark/ml/param/Params;Ljava/lang/String;Ljava/lang/String;)V
      13: invokeinterface #128,  2          // InterfaceMethod ai$h2o$sparkling$ml$params$HasUserPoints$_setter_$ai$h2o$sparkling$ml$params$HasUserPoints$$userPoints_$eq:(Lai/h2o/sparkling/ml/params/NullableDoubleArrayArrayParam;)V
      18: aload_0
      19: getstatic     #65                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      22: iconst_1
      23: anewarray     #130                // class org/apache/spark/ml/param/ParamPair
      26: dup
      27: iconst_0
      28: aload_0
      29: invokeinterface #32,  1           // InterfaceMethod ai$h2o$sparkling$ml$params$HasUserPoints$$userPoints:()Lai/h2o/sparkling/ml/params/NullableDoubleArrayArrayParam;
      34: aconst_null
      35: invokevirtual #134                // Method ai/h2o/sparkling/ml/params/NullableDoubleArrayArrayParam.$minus$greater:(Ljava/lang/Object;)Lorg/apache/spark/ml/param/ParamPair;
      38: aastore
      39: checkcast     #90                 // class "[Ljava/lang/Object;"
      42: invokevirtual #94                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      45: invokeinterface #138,  2          // InterfaceMethod setDefault:(Lscala/collection/Seq;)Lorg/apache/spark/ml/param/Params;
      50: pop
      51: return
}
