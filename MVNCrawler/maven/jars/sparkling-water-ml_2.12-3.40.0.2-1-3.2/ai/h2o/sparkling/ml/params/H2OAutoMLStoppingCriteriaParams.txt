Compiled from "H2OAutoMLStoppingCriteriaParams.scala"
public interface ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams extends ai.h2o.sparkling.ml.params.H2OAlgoParamsBase {
  public abstract void ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$_setter_$seed_$eq(org.apache.spark.ml.param.LongParam);

  public abstract void ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$_setter_$maxModels_$eq(org.apache.spark.ml.param.IntParam);

  public abstract void ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$_setter_$maxRuntimeSecs_$eq(org.apache.spark.ml.param.DoubleParam);

  public abstract void ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$_setter_$maxRuntimeSecsPerModel_$eq(org.apache.spark.ml.param.DoubleParam);

  public abstract void ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$_setter_$stoppingRounds_$eq(org.apache.spark.ml.param.IntParam);

  public abstract void ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$_setter_$stoppingMetric_$eq(org.apache.spark.ml.param.Param<java.lang.String>);

  public abstract void ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$_setter_$stoppingTolerance_$eq(org.apache.spark.ml.param.DoubleParam);

  public abstract scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$$super$getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);

  public abstract scala.collection.immutable.Map ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$$super$getSWtoH2OParamNameMap();

  public abstract org.apache.spark.ml.param.LongParam seed();

  public abstract org.apache.spark.ml.param.IntParam maxModels();

  public abstract org.apache.spark.ml.param.DoubleParam maxRuntimeSecs();

  public abstract org.apache.spark.ml.param.DoubleParam maxRuntimeSecsPerModel();

  public abstract org.apache.spark.ml.param.IntParam stoppingRounds();

  public abstract org.apache.spark.ml.param.Param<java.lang.String> stoppingMetric();

  public abstract org.apache.spark.ml.param.DoubleParam stoppingTolerance();

  public static long getSeed$(ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams);
    Code:
       0: aload_0
       1: invokespecial #57                 // InterfaceMethod getSeed:()J
       4: lreturn

  public default long getSeed();
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #60,  1           // InterfaceMethod seed:()Lorg/apache/spark/ml/param/LongParam;
       7: invokeinterface #64,  2           // InterfaceMethod $:(Lorg/apache/spark/ml/param/Param;)Ljava/lang/Object;
      12: invokestatic  #70                 // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
      15: lreturn

  public static int getMaxModels$(ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams);
    Code:
       0: aload_0
       1: invokespecial #77                 // InterfaceMethod getMaxModels:()I
       4: ireturn

  public default int getMaxModels();
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #79,  1           // InterfaceMethod maxModels:()Lorg/apache/spark/ml/param/IntParam;
       7: invokeinterface #64,  2           // InterfaceMethod $:(Lorg/apache/spark/ml/param/Param;)Ljava/lang/Object;
      12: invokestatic  #83                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      15: ireturn

  public static double getMaxRuntimeSecs$(ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams);
    Code:
       0: aload_0
       1: invokespecial #89                 // InterfaceMethod getMaxRuntimeSecs:()D
       4: dreturn

  public default double getMaxRuntimeSecs();
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #91,  1           // InterfaceMethod maxRuntimeSecs:()Lorg/apache/spark/ml/param/DoubleParam;
       7: invokeinterface #64,  2           // InterfaceMethod $:(Lorg/apache/spark/ml/param/Param;)Ljava/lang/Object;
      12: invokestatic  #95                 // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
      15: dreturn

  public static double getMaxRuntimeSecsPerModel$(ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams);
    Code:
       0: aload_0
       1: invokespecial #99                 // InterfaceMethod getMaxRuntimeSecsPerModel:()D
       4: dreturn

  public default double getMaxRuntimeSecsPerModel();
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #101,  1          // InterfaceMethod maxRuntimeSecsPerModel:()Lorg/apache/spark/ml/param/DoubleParam;
       7: invokeinterface #64,  2           // InterfaceMethod $:(Lorg/apache/spark/ml/param/Param;)Ljava/lang/Object;
      12: invokestatic  #95                 // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
      15: dreturn

  public static int getStoppingRounds$(ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams);
    Code:
       0: aload_0
       1: invokespecial #105                // InterfaceMethod getStoppingRounds:()I
       4: ireturn

  public default int getStoppingRounds();
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #107,  1          // InterfaceMethod stoppingRounds:()Lorg/apache/spark/ml/param/IntParam;
       7: invokeinterface #64,  2           // InterfaceMethod $:(Lorg/apache/spark/ml/param/Param;)Ljava/lang/Object;
      12: invokestatic  #83                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      15: ireturn

  public static java.lang.String getStoppingMetric$(ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams);
    Code:
       0: aload_0
       1: invokespecial #113                // InterfaceMethod getStoppingMetric:()Ljava/lang/String;
       4: areturn

  public default java.lang.String getStoppingMetric();
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #115,  1          // InterfaceMethod stoppingMetric:()Lorg/apache/spark/ml/param/Param;
       7: invokeinterface #64,  2           // InterfaceMethod $:(Lorg/apache/spark/ml/param/Param;)Ljava/lang/Object;
      12: checkcast     #117                // class java/lang/String
      15: areturn

  public static double getStoppingTolerance$(ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams);
    Code:
       0: aload_0
       1: invokespecial #121                // InterfaceMethod getStoppingTolerance:()D
       4: dreturn

  public default double getStoppingTolerance();
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #123,  1          // InterfaceMethod stoppingTolerance:()Lorg/apache/spark/ml/param/DoubleParam;
       7: invokeinterface #64,  2           // InterfaceMethod $:(Lorg/apache/spark/ml/param/Param;)Ljava/lang/Object;
      12: invokestatic  #95                 // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
      15: dreturn

  public static ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams setSeed$(ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams, long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #130                // InterfaceMethod setSeed:(J)Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;
       5: areturn

  public default ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams setSeed(long);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #60,  1           // InterfaceMethod seed:()Lorg/apache/spark/ml/param/LongParam;
       7: lload_1
       8: invokestatic  #135                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      11: invokeinterface #139,  3          // InterfaceMethod set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      16: checkcast     #2                  // class ai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams
      19: areturn

  public static ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams setMaxModels$(ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #145                // InterfaceMethod setMaxModels:(I)Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;
       5: areturn

  public default ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams setMaxModels(int);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #79,  1           // InterfaceMethod maxModels:()Lorg/apache/spark/ml/param/IntParam;
       7: iload_1
       8: invokestatic  #150                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      11: invokeinterface #139,  3          // InterfaceMethod set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      16: checkcast     #2                  // class ai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams
      19: areturn

  public static ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams setMaxRuntimeSecs$(ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams, double);
    Code:
       0: aload_0
       1: dload_1
       2: invokespecial #156                // InterfaceMethod setMaxRuntimeSecs:(D)Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;
       5: areturn

  public default ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams setMaxRuntimeSecs(double);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #91,  1           // InterfaceMethod maxRuntimeSecs:()Lorg/apache/spark/ml/param/DoubleParam;
       7: dload_1
       8: invokestatic  #161                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
      11: invokeinterface #139,  3          // InterfaceMethod set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      16: checkcast     #2                  // class ai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams
      19: areturn

  public static ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams setMaxRuntimeSecsPerModel$(ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams, double);
    Code:
       0: aload_0
       1: dload_1
       2: invokespecial #165                // InterfaceMethod setMaxRuntimeSecsPerModel:(D)Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;
       5: areturn

  public default ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams setMaxRuntimeSecsPerModel(double);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #101,  1          // InterfaceMethod maxRuntimeSecsPerModel:()Lorg/apache/spark/ml/param/DoubleParam;
       7: dload_1
       8: invokestatic  #161                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
      11: invokeinterface #139,  3          // InterfaceMethod set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      16: checkcast     #2                  // class ai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams
      19: areturn

  public static ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams setStoppingRounds$(ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #169                // InterfaceMethod setStoppingRounds:(I)Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;
       5: areturn

  public default ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams setStoppingRounds(int);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #107,  1          // InterfaceMethod stoppingRounds:()Lorg/apache/spark/ml/param/IntParam;
       7: iload_1
       8: invokestatic  #150                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      11: invokeinterface #139,  3          // InterfaceMethod set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      16: checkcast     #2                  // class ai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams
      19: areturn

  public static ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams setStoppingMetric$(ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #175                // InterfaceMethod setStoppingMetric:(Ljava/lang/String;)Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;
       5: areturn

  public default ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams setStoppingMetric(java.lang.String);
    Code:
       0: getstatic     #182                // Field ai/h2o/sparkling/ml/params/EnumParamValidator$.MODULE$:Lai/h2o/sparkling/ml/params/EnumParamValidator$;
       3: aload_1
       4: getstatic     #187                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       7: ldc           #12                 // class hex/ScoreKeeper$StoppingMetric
       9: invokevirtual #191                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
      12: invokevirtual #195                // Method ai/h2o/sparkling/ml/params/EnumParamValidator$.getValidatedEnumValue:(Ljava/lang/String;Lscala/reflect/ClassTag;)Ljava/lang/String;
      15: astore_2
      16: aload_0
      17: aload_0
      18: invokeinterface #115,  1          // InterfaceMethod stoppingMetric:()Lorg/apache/spark/ml/param/Param;
      23: aload_2
      24: invokeinterface #139,  3          // InterfaceMethod set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      29: checkcast     #2                  // class ai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams
      32: areturn

  public static ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams setStoppingTolerance$(ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams, double);
    Code:
       0: aload_0
       1: dload_1
       2: invokespecial #200                // InterfaceMethod setStoppingTolerance:(D)Lai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams;
       5: areturn

  public default ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams setStoppingTolerance(double);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #123,  1          // InterfaceMethod stoppingTolerance:()Lorg/apache/spark/ml/param/DoubleParam;
       7: dload_1
       8: invokestatic  #161                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
      11: invokeinterface #139,  3          // InterfaceMethod set:(Lorg/apache/spark/ml/param/Param;Ljava/lang/Object;)Lorg/apache/spark/ml/param/Params;
      16: checkcast     #2                  // class ai/h2o/sparkling/ml/params/H2OAutoMLStoppingCriteriaParams
      19: areturn

  public static scala.collection.immutable.Map getH2OAlgorithmParams$(ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams, ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #205                // InterfaceMethod getH2OAlgorithmParams:(Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public default scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OAlgorithmParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #209,  2          // InterfaceMethod ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$$super$getH2OAlgorithmParams:(Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       7: aload_0
       8: aload_1
       9: invokeinterface #212,  2          // InterfaceMethod getH2OAutoMLStoppingCriteriaParams:(Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
      14: invokeinterface #218,  2          // InterfaceMethod scala/collection/immutable/Map.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/Map;
      19: areturn

  public static scala.collection.immutable.Map getH2OAutoMLStoppingCriteriaParams$(ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams, ai.h2o.sparkling.H2OFrame);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #212                // InterfaceMethod getH2OAutoMLStoppingCriteriaParams:(Lai/h2o/sparkling/H2OFrame;)Lscala/collection/immutable/Map;
       5: areturn

  public default scala.collection.immutable.Map<java.lang.String, java.lang.Object> getH2OAutoMLStoppingCriteriaParams(ai.h2o.sparkling.H2OFrame);
    Code:
       0: getstatic     #224                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: invokevirtual #228                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
       6: getstatic     #224                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       9: bipush        7
      11: anewarray     #230                // class scala/Tuple2
      14: dup
      15: iconst_0
      16: getstatic     #233                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      19: getstatic     #224                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      22: ldc           #234                // String seed
      24: invokevirtual #238                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      27: aload_0
      28: invokeinterface #57,  1           // InterfaceMethod getSeed:()J
      33: invokestatic  #135                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
      36: invokevirtual #242                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      39: aastore
      40: dup
      41: iconst_1
      42: getstatic     #233                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      45: getstatic     #224                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      48: ldc           #244                // String max_models
      50: invokevirtual #238                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      53: aload_0
      54: invokeinterface #77,  1           // InterfaceMethod getMaxModels:()I
      59: invokestatic  #150                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      62: invokevirtual #242                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      65: aastore
      66: dup
      67: iconst_2
      68: getstatic     #233                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      71: getstatic     #224                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      74: ldc           #246                // String max_runtime_secs
      76: invokevirtual #238                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      79: aload_0
      80: invokeinterface #89,  1           // InterfaceMethod getMaxRuntimeSecs:()D
      85: invokestatic  #161                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
      88: invokevirtual #242                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      91: aastore
      92: dup
      93: iconst_3
      94: getstatic     #233                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      97: getstatic     #224                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     100: ldc           #248                // String max_runtime_secs_per_model
     102: invokevirtual #238                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     105: aload_0
     106: invokeinterface #99,  1           // InterfaceMethod getMaxRuntimeSecsPerModel:()D
     111: invokestatic  #161                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
     114: invokevirtual #242                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     117: aastore
     118: dup
     119: iconst_4
     120: getstatic     #233                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     123: getstatic     #224                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     126: ldc           #250                // String stopping_rounds
     128: invokevirtual #238                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     131: aload_0
     132: invokeinterface #105,  1          // InterfaceMethod getStoppingRounds:()I
     137: invokestatic  #150                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     140: invokevirtual #242                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     143: aastore
     144: dup
     145: iconst_5
     146: getstatic     #233                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     149: getstatic     #224                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     152: ldc           #252                // String stopping_metric
     154: invokevirtual #238                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     157: aload_0
     158: invokeinterface #113,  1          // InterfaceMethod getStoppingMetric:()Ljava/lang/String;
     163: invokevirtual #242                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     166: aastore
     167: dup
     168: bipush        6
     170: getstatic     #233                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     173: getstatic     #224                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     176: ldc           #254                // String stopping_tolerance
     178: invokevirtual #238                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     181: aload_0
     182: invokeinterface #121,  1          // InterfaceMethod getStoppingTolerance:()D
     187: invokestatic  #161                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
     190: invokevirtual #242                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     193: aastore
     194: checkcast     #256                // class "[Ljava/lang/Object;"
     197: invokevirtual #260                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     200: invokevirtual #265                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
     203: checkcast     #214                // class scala/collection/immutable/Map
     206: areturn

  public static scala.collection.immutable.Map getSWtoH2OParamNameMap$(ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams);
    Code:
       0: aload_0
       1: invokespecial #270                // InterfaceMethod getSWtoH2OParamNameMap:()Lscala/collection/immutable/Map;
       4: areturn

  public default scala.collection.immutable.Map<java.lang.String, java.lang.String> getSWtoH2OParamNameMap();
    Code:
       0: aload_0
       1: invokeinterface #273,  1          // InterfaceMethod ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$$super$getSWtoH2OParamNameMap:()Lscala/collection/immutable/Map;
       6: getstatic     #224                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       9: invokevirtual #228                // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
      12: getstatic     #224                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      15: bipush        7
      17: anewarray     #230                // class scala/Tuple2
      20: dup
      21: iconst_0
      22: getstatic     #233                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      25: getstatic     #224                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      28: ldc           #234                // String seed
      30: invokevirtual #238                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      33: ldc           #234                // String seed
      35: invokevirtual #242                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      38: aastore
      39: dup
      40: iconst_1
      41: getstatic     #233                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      44: getstatic     #224                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      47: ldc_w         #274                // String maxModels
      50: invokevirtual #238                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      53: ldc           #244                // String max_models
      55: invokevirtual #242                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      58: aastore
      59: dup
      60: iconst_2
      61: getstatic     #233                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      64: getstatic     #224                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      67: ldc_w         #275                // String maxRuntimeSecs
      70: invokevirtual #238                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      73: ldc           #246                // String max_runtime_secs
      75: invokevirtual #242                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      78: aastore
      79: dup
      80: iconst_3
      81: getstatic     #233                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      84: getstatic     #224                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      87: ldc_w         #276                // String maxRuntimeSecsPerModel
      90: invokevirtual #238                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      93: ldc           #248                // String max_runtime_secs_per_model
      95: invokevirtual #242                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      98: aastore
      99: dup
     100: iconst_4
     101: getstatic     #233                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     104: getstatic     #224                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     107: ldc_w         #277                // String stoppingRounds
     110: invokevirtual #238                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     113: ldc           #250                // String stopping_rounds
     115: invokevirtual #242                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     118: aastore
     119: dup
     120: iconst_5
     121: getstatic     #233                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     124: getstatic     #224                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     127: ldc_w         #278                // String stoppingMetric
     130: invokevirtual #238                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     133: ldc           #252                // String stopping_metric
     135: invokevirtual #242                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     138: aastore
     139: dup
     140: bipush        6
     142: getstatic     #233                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
     145: getstatic     #224                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     148: ldc_w         #279                // String stoppingTolerance
     151: invokevirtual #238                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
     154: ldc           #254                // String stopping_tolerance
     156: invokevirtual #242                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     159: aastore
     160: checkcast     #256                // class "[Ljava/lang/Object;"
     163: invokevirtual #260                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     166: invokevirtual #265                // Method scala/collection/immutable/Map$.apply:(Lscala/collection/Seq;)Lscala/collection/GenMap;
     169: invokeinterface #218,  2          // InterfaceMethod scala/collection/immutable/Map.$plus$plus:(Lscala/collection/GenTraversableOnce;)Lscala/collection/immutable/Map;
     174: areturn

  public static void $init$(ai.h2o.sparkling.ml.params.H2OAutoMLStoppingCriteriaParams);
    Code:
       0: aload_0
       1: aload_0
       2: ldc           #234                // String seed
       4: ldc_w         #283                // String Seed for random number generator; set to a value other than -1 for reproducibility.
       7: invokeinterface #287,  3          // InterfaceMethod longParam:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/LongParam;
      12: invokeinterface #289,  2          // InterfaceMethod ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$_setter_$seed_$eq:(Lorg/apache/spark/ml/param/LongParam;)V
      17: aload_0
      18: aload_0
      19: ldc_w         #274                // String maxModels
      22: ldc_w         #291                // String Maximum number of models to build (optional). Always set this parameter to ensure AutoML reproducibility: all models are then trained until convergence and none is constrained by a time budget.
      25: invokeinterface #295,  3          // InterfaceMethod intParam:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/IntParam;
      30: invokeinterface #297,  2          // InterfaceMethod ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$_setter_$maxModels_$eq:(Lorg/apache/spark/ml/param/IntParam;)V
      35: aload_0
      36: aload_0
      37: ldc_w         #275                // String maxRuntimeSecs
      40: ldc_w         #299                // String This argument specifies the maximum time that the AutoML process will run for. If both max_runtime_secs and max_models are specified, then the AutoML run will stop as soon as it hits either of these limits. If neither max_runtime_secs nor max_models are specified, then max_runtime_secs defaults to 3600 seconds (1 hour).
      43: invokeinterface #303,  3          // InterfaceMethod doubleParam:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/DoubleParam;
      48: invokeinterface #305,  2          // InterfaceMethod ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$_setter_$maxRuntimeSecs_$eq:(Lorg/apache/spark/ml/param/DoubleParam;)V
      53: aload_0
      54: aload_0
      55: ldc_w         #276                // String maxRuntimeSecsPerModel
      58: ldc_w         #307                // String Maximum time to spend on each individual model (optional). Note that models constrained by a time budget are not guaranteed reproducible.
      61: invokeinterface #303,  3          // InterfaceMethod doubleParam:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/DoubleParam;
      66: invokeinterface #309,  2          // InterfaceMethod ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$_setter_$maxRuntimeSecsPerModel_$eq:(Lorg/apache/spark/ml/param/DoubleParam;)V
      71: aload_0
      72: aload_0
      73: ldc_w         #277                // String stoppingRounds
      76: ldc_w         #311                // String Early stopping based on convergence of stopping_metric. Stop if simple moving average of length k of the stopping_metric does not improve for k:=stopping_rounds scoring events (0 to disable).
      79: invokeinterface #295,  3          // InterfaceMethod intParam:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/IntParam;
      84: invokeinterface #313,  2          // InterfaceMethod ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$_setter_$stoppingRounds_$eq:(Lorg/apache/spark/ml/param/IntParam;)V
      89: aload_0
      90: aload_0
      91: ldc_w         #278                // String stoppingMetric
      94: ldc_w         #315                // String Metric to use for early stopping (AUTO: logloss for classification, deviance for regression). Possible values are ``\"AUTO\"``, ``\"deviance\"``, ``\"logloss\"``, ``\"MSE\"``, ``\"RMSE\"``, ``\"MAE\"``, ``\"RMSLE\"``, ``\"AUC\"``, ``\"AUCPR\"``, ``\"lift_top_group\"``, ``\"misclassification\"``, ``\"mean_per_class_error\"``, ``\"anomaly_score\"``, ``\"custom\"``, ``\"custom_increasing\"``.
      97: invokeinterface #319,  3          // InterfaceMethod stringParam:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/Param;
     102: invokeinterface #321,  2          // InterfaceMethod ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$_setter_$stoppingMetric_$eq:(Lorg/apache/spark/ml/param/Param;)V
     107: aload_0
     108: aload_0
     109: ldc_w         #279                // String stoppingTolerance
     112: ldc_w         #323                // String Relative tolerance for metric-based stopping criterion (stop if relative improvement is not at least this much).
     115: invokeinterface #303,  3          // InterfaceMethod doubleParam:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/spark/ml/param/DoubleParam;
     120: invokeinterface #325,  2          // InterfaceMethod ai$h2o$sparkling$ml$params$H2OAutoMLStoppingCriteriaParams$_setter_$stoppingTolerance_$eq:(Lorg/apache/spark/ml/param/DoubleParam;)V
     125: aload_0
     126: getstatic     #224                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     129: bipush        7
     131: anewarray     #327                // class org/apache/spark/ml/param/ParamPair
     134: dup
     135: iconst_0
     136: aload_0
     137: invokeinterface #60,  1           // InterfaceMethod seed:()Lorg/apache/spark/ml/param/LongParam;
     142: ldc2_w        #328                // long -1l
     145: invokestatic  #135                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
     148: invokevirtual #335                // Method org/apache/spark/ml/param/LongParam.$minus$greater:(Ljava/lang/Object;)Lorg/apache/spark/ml/param/ParamPair;
     151: aastore
     152: dup
     153: iconst_1
     154: aload_0
     155: invokeinterface #79,  1           // InterfaceMethod maxModels:()Lorg/apache/spark/ml/param/IntParam;
     160: iconst_0
     161: invokestatic  #150                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     164: invokevirtual #338                // Method org/apache/spark/ml/param/IntParam.$minus$greater:(Ljava/lang/Object;)Lorg/apache/spark/ml/param/ParamPair;
     167: aastore
     168: dup
     169: iconst_2
     170: aload_0
     171: invokeinterface #91,  1           // InterfaceMethod maxRuntimeSecs:()Lorg/apache/spark/ml/param/DoubleParam;
     176: dconst_0
     177: invokestatic  #161                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
     180: invokevirtual #341                // Method org/apache/spark/ml/param/DoubleParam.$minus$greater:(Ljava/lang/Object;)Lorg/apache/spark/ml/param/ParamPair;
     183: aastore
     184: dup
     185: iconst_3
     186: aload_0
     187: invokeinterface #101,  1          // InterfaceMethod maxRuntimeSecsPerModel:()Lorg/apache/spark/ml/param/DoubleParam;
     192: dconst_0
     193: invokestatic  #161                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
     196: invokevirtual #341                // Method org/apache/spark/ml/param/DoubleParam.$minus$greater:(Ljava/lang/Object;)Lorg/apache/spark/ml/param/ParamPair;
     199: aastore
     200: dup
     201: iconst_4
     202: aload_0
     203: invokeinterface #107,  1          // InterfaceMethod stoppingRounds:()Lorg/apache/spark/ml/param/IntParam;
     208: iconst_3
     209: invokestatic  #150                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     212: invokevirtual #338                // Method org/apache/spark/ml/param/IntParam.$minus$greater:(Ljava/lang/Object;)Lorg/apache/spark/ml/param/ParamPair;
     215: aastore
     216: dup
     217: iconst_5
     218: aload_0
     219: invokeinterface #115,  1          // InterfaceMethod stoppingMetric:()Lorg/apache/spark/ml/param/Param;
     224: getstatic     #345                // Field hex/ScoreKeeper$StoppingMetric.AUTO:Lhex/ScoreKeeper$StoppingMetric;
     227: invokevirtual #348                // Method hex/ScoreKeeper$StoppingMetric.name:()Ljava/lang/String;
     230: invokevirtual #351                // Method org/apache/spark/ml/param/Param.$minus$greater:(Ljava/lang/Object;)Lorg/apache/spark/ml/param/ParamPair;
     233: aastore
     234: dup
     235: bipush        6
     237: aload_0
     238: invokeinterface #123,  1          // InterfaceMethod stoppingTolerance:()Lorg/apache/spark/ml/param/DoubleParam;
     243: ldc2_w        #352                // double -1.0d
     246: invokestatic  #161                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
     249: invokevirtual #341                // Method org/apache/spark/ml/param/DoubleParam.$minus$greater:(Ljava/lang/Object;)Lorg/apache/spark/ml/param/ParamPair;
     252: aastore
     253: checkcast     #256                // class "[Ljava/lang/Object;"
     256: invokevirtual #260                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     259: invokeinterface #357,  2          // InterfaceMethod setDefault:(Lscala/collection/Seq;)Lorg/apache/spark/ml/param/Params;
     264: pop
     265: return
}
