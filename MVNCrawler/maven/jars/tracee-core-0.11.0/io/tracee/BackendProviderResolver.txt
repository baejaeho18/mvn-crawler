Compiled from "BackendProviderResolver.java"
class io.tracee.BackendProviderResolver {
  private static volatile java.util.Map<java.lang.ClassLoader, java.util.Set<io.tracee.spi.TraceeBackendProvider>> providersPerClassloader;

  io.tracee.BackendProviderResolver();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.util.Set<io.tracee.spi.TraceeBackendProvider> getBackendProviders();
    Code:
       0: getstatic     #2                  // Field providersPerClassloader:Ljava/util/Map;
       3: astore_1
       4: aload_0
       5: aload_1
       6: invokestatic  #3                  // Method io/tracee/BackendProviderResolver$GetClassLoader.fromContext:()Ljava/lang/ClassLoader;
       9: invokespecial #4                  // Method getTraceeProviderFromClassloader:(Ljava/util/Map;Ljava/lang/ClassLoader;)Ljava/util/Set;
      12: astore_2
      13: aload_2
      14: invokeinterface #5,  1            // InterfaceMethod java/util/Set.isEmpty:()Z
      19: ifne          24
      22: aload_2
      23: areturn
      24: aload_0
      25: aload_1
      26: ldc_w         #6                  // class io/tracee/BackendProviderResolver
      29: invokestatic  #7                  // Method io/tracee/BackendProviderResolver$GetClassLoader.fromClass:(Ljava/lang/Class;)Ljava/lang/ClassLoader;
      32: invokespecial #4                  // Method getTraceeProviderFromClassloader:(Ljava/util/Map;Ljava/lang/ClassLoader;)Ljava/util/Set;
      35: areturn

  private java.util.Set<io.tracee.spi.TraceeBackendProvider> getTraceeProviderFromClassloader(java.util.Map<java.lang.ClassLoader, java.util.Set<io.tracee.spi.TraceeBackendProvider>>, java.lang.ClassLoader);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #8,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #9                  // class java/util/Set
      10: astore_3
      11: aload_0
      12: aload_3
      13: invokevirtual #10                 // Method isLookupNeeded:(Ljava/util/Set;)Z
      16: ifeq          31
      19: aload_0
      20: aload_2
      21: invokespecial #11                 // Method loadProviders:(Ljava/lang/ClassLoader;)Ljava/util/Set;
      24: astore_3
      25: aload_0
      26: aload_2
      27: aload_3
      28: invokespecial #12                 // Method updatedCache:(Ljava/lang/ClassLoader;Ljava/util/Set;)V
      31: aload_3
      32: areturn

  boolean isLookupNeeded(java.util.Set<io.tracee.spi.TraceeBackendProvider>);
    Code:
       0: aload_1
       1: ifnull        20
       4: aload_1
       5: instanceof    #13                 // class io/tracee/BackendProviderResolver$EmptyBackendProviderSet
       8: ifne          24
      11: aload_1
      12: invokeinterface #5,  1            // InterfaceMethod java/util/Set.isEmpty:()Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  private void updatedCache(java.lang.ClassLoader, java.util.Set<io.tracee.spi.TraceeBackendProvider>);
    Code:
       0: new           #14                 // class java/util/WeakHashMap
       3: dup
       4: getstatic     #2                  // Field providersPerClassloader:Ljava/util/Map;
       7: invokespecial #15                 // Method java/util/WeakHashMap."<init>":(Ljava/util/Map;)V
      10: astore_3
      11: aload_2
      12: invokeinterface #5,  1            // InterfaceMethod java/util/Set.isEmpty:()Z
      17: ifne          39
      20: aload_3
      21: aload_1
      22: new           #16                 // class io/tracee/BackendProviderSet
      25: dup
      26: aload_2
      27: invokespecial #17                 // Method io/tracee/BackendProviderSet."<init>":(Ljava/util/Set;)V
      30: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: goto          54
      39: aload_3
      40: aload_1
      41: new           #13                 // class io/tracee/BackendProviderResolver$EmptyBackendProviderSet
      44: dup
      45: invokespecial #19                 // Method io/tracee/BackendProviderResolver$EmptyBackendProviderSet."<init>":()V
      48: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      53: pop
      54: aload_3
      55: putstatic     #2                  // Field providersPerClassloader:Ljava/util/Map;
      58: return

  private java.util.Set<io.tracee.spi.TraceeBackendProvider> loadProviders(java.lang.ClassLoader);
    Code:
       0: ldc_w         #20                 // class io/tracee/spi/TraceeBackendProvider
       3: aload_1
       4: invokestatic  #21                 // Method java/util/ServiceLoader.load:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;
       7: astore_2
       8: aload_2
       9: invokevirtual #22                 // Method java/util/ServiceLoader.iterator:()Ljava/util/Iterator;
      12: astore_3
      13: new           #23                 // class java/util/HashSet
      16: dup
      17: invokespecial #24                 // Method java/util/HashSet."<init>":()V
      20: astore        4
      22: aload_3
      23: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          53
      31: aload         4
      33: aload_3
      34: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: invokeinterface #27,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      44: pop
      45: goto          22
      48: astore        5
      50: goto          22
      53: aload         4
      55: areturn
    Exception table:
       from    to  target type
          31    45    48   Class java/util/ServiceConfigurationError

  static {};
    Code:
       0: new           #14                 // class java/util/WeakHashMap
       3: dup
       4: invokespecial #29                 // Method java/util/WeakHashMap."<init>":()V
       7: putstatic     #2                  // Field providersPerClassloader:Ljava/util/Map;
      10: return
}
