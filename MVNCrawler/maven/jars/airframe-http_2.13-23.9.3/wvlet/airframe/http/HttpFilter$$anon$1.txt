Compiled from "HttpFilter.scala"
public final class wvlet.airframe.http.HttpFilter$$anon$1 implements wvlet.airframe.http.HttpFilter<Req, Resp, F> {
  private final wvlet.airframe.http.HttpBackend baseBackend$1;

  private final scala.Function2 body$1;

  public <A> F toFuture(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #30                 // InterfaceMethod wvlet/airframe/http/HttpFilter.toFuture$:(Lwvlet/airframe/http/HttpFilter;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.String backendName();
    Code:
       0: aload_0
       1: invokestatic  #39                 // InterfaceMethod wvlet/airframe/http/HttpFilter.backendName$:(Lwvlet/airframe/http/HttpFilter;)Ljava/lang/String;
       4: areturn

  public wvlet.airframe.http.HttpFilter<Req, Resp, F> filterAdapter();
    Code:
       0: aload_0
       1: invokestatic  #46                 // InterfaceMethod wvlet/airframe/http/HttpFilter.filterAdapter$:(Lwvlet/airframe/http/HttpFilter;)Lwvlet/airframe/http/HttpFilter;
       4: areturn

  public wvlet.airframe.http.HttpFilter<Req, Resp, F> andThen(wvlet.airframe.http.HttpFilter<Req, Resp, F>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #53                 // InterfaceMethod wvlet/airframe/http/HttpFilter.andThen$:(Lwvlet/airframe/http/HttpFilter;Lwvlet/airframe/http/HttpFilter;)Lwvlet/airframe/http/HttpFilter;
       5: areturn

  public wvlet.airframe.http.HttpContext<Req, Resp, F> andThen(wvlet.airframe.http.HttpContext<Req, Resp, F>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #60                 // InterfaceMethod wvlet/airframe/http/HttpFilter.andThen$:(Lwvlet/airframe/http/HttpFilter;Lwvlet/airframe/http/HttpContext;)Lwvlet/airframe/http/HttpContext;
       5: areturn

  public wvlet.airframe.http.HttpBackend<Req, Resp, F> backend();
    Code:
       0: aload_0
       1: getfield      #66                 // Field baseBackend$1:Lwvlet/airframe/http/HttpBackend;
       4: areturn

  public F apply(Req, wvlet.airframe.http.HttpContext<Req, Resp, F>);
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method backend:()Lwvlet/airframe/http/HttpBackend;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokedynamic #90,  0             // InvokeDynamic #0:apply:(Lwvlet/airframe/http/HttpFilter$$anon$1;Ljava/lang/Object;Lwvlet/airframe/http/HttpContext;)Lscala/Function0;
      12: invokeinterface #96,  2           // InterfaceMethod wvlet/airframe/http/HttpBackend.rescue:(Lscala/Function0;)Ljava/lang/Object;
      17: areturn

  public static final java.lang.Object $anonfun$apply$1(wvlet.airframe.http.HttpFilter$$anon$1, java.lang.Object, wvlet.airframe.http.HttpContext);
    Code:
       0: aload_0
       1: getfield      #101                // Field body$1:Lscala/Function2;
       4: aload_1
       5: aload_2
       6: invokeinterface #106,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public wvlet.airframe.http.HttpFilter$$anon$1(wvlet.airframe.http.HttpBackend, scala.Function2);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #66                 // Field baseBackend$1:Lwvlet/airframe/http/HttpBackend;
       5: aload_0
       6: aload_2
       7: putfield      #101                // Field body$1:Lscala/Function2;
      10: aload_0
      11: invokespecial #111                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: invokestatic  #115                // InterfaceMethod wvlet/airframe/http/HttpFilter.$init$:(Lwvlet/airframe/http/HttpFilter;)V
      18: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #127,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
