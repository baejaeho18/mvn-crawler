Compiled from "Compat.scala"
public final class wvlet.airframe.http.Compat$ implements wvlet.airframe.http.CompatApi {
  public static final wvlet.airframe.http.Compat$ MODULE$;

  private static final java.util.concurrent.atomic.AtomicInteger wvlet$airframe$http$Compat$$threadFactoryId;

  public static {};
    Code:
       0: new           #2                  // class wvlet/airframe/http/Compat$
       3: dup
       4: invokespecial #21                 // Method "<init>":()V
       7: putstatic     #23                 // Field MODULE$:Lwvlet/airframe/http/Compat$;
      10: new           #25                 // class java/util/concurrent/atomic/AtomicInteger
      13: dup
      14: invokespecial #26                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      17: putstatic     #28                 // Field wvlet$airframe$http$Compat$$threadFactoryId:Ljava/util/concurrent/atomic/AtomicInteger;
      20: return

  public java.lang.String urlEncode(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #33                 // String UTF-8
       3: invokestatic  #39                 // Method java/net/URLEncoder.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public wvlet.airframe.http.client.HttpClientBackend defaultHttpClientBackend();
    Code:
       0: getstatic     #48                 // Field wvlet/airframe/http/client/JavaHttpClientBackend$.MODULE$:Lwvlet/airframe/http/client/JavaHttpClientBackend$;
       3: areturn

  public java.util.concurrent.atomic.AtomicInteger wvlet$airframe$http$Compat$$threadFactoryId();
    Code:
       0: getstatic     #28                 // Field wvlet$airframe$http$Compat$$threadFactoryId:Ljava/util/concurrent/atomic/AtomicInteger;
       3: areturn

  public scala.concurrent.ExecutionContext defaultExecutionContext();
    Code:
       0: getstatic     #56                 // Field scala/concurrent/ExecutionContext$.MODULE$:Lscala/concurrent/ExecutionContext$;
       3: getstatic     #61                 // Field wvlet/airframe/control/ThreadUtil$.MODULE$:Lwvlet/airframe/control/ThreadUtil$;
       6: ldc           #63                 // String airframe-http
       8: invokevirtual #67                 // Method wvlet/airframe/control/ThreadUtil$.newDaemonThreadFactory:(Ljava/lang/String;)Ljava/util/concurrent/ThreadFactory;
      11: invokestatic  #73                 // Method java/util/concurrent/Executors.newCachedThreadPool:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;
      14: invokevirtual #77                 // Method scala/concurrent/ExecutionContext$.fromExecutorService:(Ljava/util/concurrent/ExecutorService;)Lscala/concurrent/ExecutionContextExecutorService;
      17: areturn

  public scala.Function1<wvlet.airframe.http.HttpLoggerConfig, wvlet.airframe.http.HttpLogger> defaultHttpClientLoggerFactory();
    Code:
       0: invokedynamic #100,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
       5: areturn

  public wvlet.airframe.http.ServerAddress hostServerAddress();
    Code:
       0: getstatic     #107                // Field wvlet/airframe/http/ServerAddress$.MODULE$:Lwvlet/airframe/http/ServerAddress$;
       3: invokevirtual #110                // Method wvlet/airframe/http/ServerAddress$.empty:()Lwvlet/airframe/http/ServerAddress;
       6: areturn

  public wvlet.airframe.http.RPCContext currentRPCContext();
    Code:
       0: getstatic     #117                // Field wvlet/airframe/http/internal/LocalRPCContext$.MODULE$:Lwvlet/airframe/http/internal/LocalRPCContext$;
       3: invokevirtual #120                // Method wvlet/airframe/http/internal/LocalRPCContext$.current:()Lwvlet/airframe/http/RPCContext;
       6: areturn

  public wvlet.airframe.http.RPCContext attachRPCContext(wvlet.airframe.http.RPCContext);
    Code:
       0: getstatic     #117                // Field wvlet/airframe/http/internal/LocalRPCContext$.MODULE$:Lwvlet/airframe/http/internal/LocalRPCContext$;
       3: aload_1
       4: invokevirtual #126                // Method wvlet/airframe/http/internal/LocalRPCContext$.attach:(Lwvlet/airframe/http/RPCContext;)Lwvlet/airframe/http/RPCContext;
       7: areturn

  public void detachRPCContext(wvlet.airframe.http.RPCContext);
    Code:
       0: getstatic     #117                // Field wvlet/airframe/http/internal/LocalRPCContext$.MODULE$:Lwvlet/airframe/http/internal/LocalRPCContext$;
       3: aload_1
       4: invokevirtual #133                // Method wvlet/airframe/http/internal/LocalRPCContext$.detach:(Lwvlet/airframe/http/RPCContext;)V
       7: return

  public static final wvlet.airframe.http.internal.LogRotationHttpLogger $anonfun$defaultHttpClientLoggerFactory$1(wvlet.airframe.http.HttpLoggerConfig);
    Code:
       0: new           #136                // class wvlet/airframe/http/internal/LogRotationHttpLogger
       3: dup
       4: aload_0
       5: invokespecial #139                // Method wvlet/airframe/http/internal/LogRotationHttpLogger."<init>":(Lwvlet/airframe/http/HttpLoggerConfig;)V
       8: areturn

  private wvlet.airframe.http.Compat$();
    Code:
       0: aload_0
       1: invokespecial #141                // Method java/lang/Object."<init>":()V
       4: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #153,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
