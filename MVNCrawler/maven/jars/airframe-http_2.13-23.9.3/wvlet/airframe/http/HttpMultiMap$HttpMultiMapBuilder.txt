Compiled from "HttpMultiMap.scala"
public class wvlet.airframe.http.HttpMultiMap$HttpMultiMapBuilder {
  private wvlet.airframe.http.HttpMultiMap m;

  private wvlet.airframe.http.HttpMultiMap m();
    Code:
       0: aload_0
       1: getfield      #18                 // Field m:Lwvlet/airframe/http/HttpMultiMap;
       4: areturn

  private void m_$eq(wvlet.airframe.http.HttpMultiMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field m:Lwvlet/airframe/http/HttpMultiMap;
       5: return

  public wvlet.airframe.http.HttpMultiMap$HttpMultiMapBuilder add(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #29                 // Method m:()Lwvlet/airframe/http/HttpMultiMap;
       5: aload_1
       6: aload_2
       7: invokevirtual #32                 // Method wvlet/airframe/http/HttpMultiMap.add:(Ljava/lang/String;Ljava/lang/String;)Lwvlet/airframe/http/HttpMultiMap;
      10: invokespecial #34                 // Method m_$eq:(Lwvlet/airframe/http/HttpMultiMap;)V
      13: aload_0
      14: areturn

  public wvlet.airframe.http.HttpMultiMap$HttpMultiMapBuilder $plus$eq(scala.Tuple2<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #45                 // Method scala/Tuple2._1:()Ljava/lang/Object;
       5: checkcast     #47                 // class java/lang/String
       8: aload_1
       9: invokevirtual #50                 // Method scala/Tuple2._2:()Ljava/lang/Object;
      12: checkcast     #47                 // class java/lang/String
      15: invokevirtual #52                 // Method add:(Ljava/lang/String;Ljava/lang/String;)Lwvlet/airframe/http/HttpMultiMap$HttpMultiMapBuilder;
      18: areturn

  public wvlet.airframe.http.HttpMultiMap$HttpMultiMapBuilder $plus$plus$eq(scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.String>>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #78,  0             // InvokeDynamic #0:apply:()Lscala/Function2;
       7: invokeinterface #84,  3           // InterfaceMethod scala/collection/immutable/Seq.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      12: checkcast     #2                  // class wvlet/airframe/http/HttpMultiMap$HttpMultiMapBuilder
      15: areturn

  public wvlet.airframe.http.HttpMultiMap result();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method m:()Lwvlet/airframe/http/HttpMultiMap;
       4: areturn

  public static final wvlet.airframe.http.HttpMultiMap$HttpMultiMapBuilder $anonfun$$plus$plus$eq$1(wvlet.airframe.http.HttpMultiMap$HttpMultiMapBuilder, scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #45                 // Method scala/Tuple2._1:()Ljava/lang/Object;
       5: checkcast     #47                 // class java/lang/String
       8: aload_1
       9: invokevirtual #50                 // Method scala/Tuple2._2:()Ljava/lang/Object;
      12: checkcast     #47                 // class java/lang/String
      15: invokevirtual #52                 // Method add:(Ljava/lang/String;Ljava/lang/String;)Lwvlet/airframe/http/HttpMultiMap$HttpMultiMapBuilder;
      18: areturn

  public wvlet.airframe.http.HttpMultiMap$HttpMultiMapBuilder(wvlet.airframe.http.HttpMultiMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field m:Lwvlet/airframe/http/HttpMultiMap;
       5: aload_0
       6: invokespecial #91                 // Method java/lang/Object."<init>":()V
       9: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #103,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
