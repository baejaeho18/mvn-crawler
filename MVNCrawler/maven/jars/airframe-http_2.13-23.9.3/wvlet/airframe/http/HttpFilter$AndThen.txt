Compiled from "HttpFilter.scala"
public class wvlet.airframe.http.HttpFilter$AndThen<Req, Resp, F> implements wvlet.airframe.http.HttpFilter<Req, Resp, F> {
  private final wvlet.airframe.http.HttpBackend<Req, Resp, F> backend;

  private final wvlet.airframe.http.HttpFilter<Req, Resp, F> prev;

  private final wvlet.airframe.http.HttpFilter<Req, Resp, F> next;

  public <A> F toFuture(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #29                 // InterfaceMethod wvlet/airframe/http/HttpFilter.toFuture$:(Lwvlet/airframe/http/HttpFilter;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.String backendName();
    Code:
       0: aload_0
       1: invokestatic  #38                 // InterfaceMethod wvlet/airframe/http/HttpFilter.backendName$:(Lwvlet/airframe/http/HttpFilter;)Ljava/lang/String;
       4: areturn

  public wvlet.airframe.http.HttpFilter<Req, Resp, F> filterAdapter();
    Code:
       0: aload_0
       1: invokestatic  #45                 // InterfaceMethod wvlet/airframe/http/HttpFilter.filterAdapter$:(Lwvlet/airframe/http/HttpFilter;)Lwvlet/airframe/http/HttpFilter;
       4: areturn

  public wvlet.airframe.http.HttpFilter<Req, Resp, F> andThen(wvlet.airframe.http.HttpFilter<Req, Resp, F>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #52                 // InterfaceMethod wvlet/airframe/http/HttpFilter.andThen$:(Lwvlet/airframe/http/HttpFilter;Lwvlet/airframe/http/HttpFilter;)Lwvlet/airframe/http/HttpFilter;
       5: areturn

  public wvlet.airframe.http.HttpContext<Req, Resp, F> andThen(wvlet.airframe.http.HttpContext<Req, Resp, F>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #58                 // InterfaceMethod wvlet/airframe/http/HttpFilter.andThen$:(Lwvlet/airframe/http/HttpFilter;Lwvlet/airframe/http/HttpContext;)Lwvlet/airframe/http/HttpContext;
       5: areturn

  public wvlet.airframe.http.HttpBackend<Req, Resp, F> backend();
    Code:
       0: aload_0
       1: getfield      #63                 // Field backend:Lwvlet/airframe/http/HttpBackend;
       4: areturn

  public F apply(Req, wvlet.airframe.http.HttpContext<Req, Resp, F>);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method backend:()Lwvlet/airframe/http/HttpBackend;
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokedynamic #87,  0             // InvokeDynamic #0:apply:(Lwvlet/airframe/http/HttpFilter$AndThen;Ljava/lang/Object;Lwvlet/airframe/http/HttpContext;)Lscala/Function0;
      12: invokeinterface #93,  2           // InterfaceMethod wvlet/airframe/http/HttpBackend.rescue:(Lscala/Function0;)Ljava/lang/Object;
      17: areturn

  public static final java.lang.Object $anonfun$apply$2(wvlet.airframe.http.HttpFilter$AndThen, java.lang.Object, wvlet.airframe.http.HttpContext);
    Code:
       0: aload_0
       1: getfield      #98                 // Field prev:Lwvlet/airframe/http/HttpFilter;
       4: aload_1
       5: aload_0
       6: getfield      #100                // Field next:Lwvlet/airframe/http/HttpFilter;
       9: aload_2
      10: invokeinterface #102,  2          // InterfaceMethod wvlet/airframe/http/HttpFilter.andThen:(Lwvlet/airframe/http/HttpContext;)Lwvlet/airframe/http/HttpContext;
      15: invokeinterface #104,  3          // InterfaceMethod wvlet/airframe/http/HttpFilter.apply:(Ljava/lang/Object;Lwvlet/airframe/http/HttpContext;)Ljava/lang/Object;
      20: areturn

  public wvlet.airframe.http.HttpFilter$AndThen(wvlet.airframe.http.HttpBackend<Req, Resp, F>, wvlet.airframe.http.HttpFilter<Req, Resp, F>, wvlet.airframe.http.HttpFilter<Req, Resp, F>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #63                 // Field backend:Lwvlet/airframe/http/HttpBackend;
       5: aload_0
       6: aload_2
       7: putfield      #98                 // Field prev:Lwvlet/airframe/http/HttpFilter;
      10: aload_0
      11: aload_3
      12: putfield      #100                // Field next:Lwvlet/airframe/http/HttpFilter;
      15: aload_0
      16: invokespecial #110                // Method java/lang/Object."<init>":()V
      19: aload_0
      20: invokestatic  #114                // InterfaceMethod wvlet/airframe/http/HttpFilter.$init$:(Lwvlet/airframe/http/HttpFilter;)V
      23: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #126,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
