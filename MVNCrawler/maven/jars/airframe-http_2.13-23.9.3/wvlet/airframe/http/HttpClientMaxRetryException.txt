Compiled from "HttpClientException.scala"
public class wvlet.airframe.http.HttpClientMaxRetryException extends wvlet.airframe.http.HttpClientException implements scala.Product {
  private final wvlet.airframe.control.Retry$RetryContext retryContext;

  private final java.lang.Throwable cause;

  public static scala.Option<scala.Tuple3<wvlet.airframe.http.HttpResponse<?>, wvlet.airframe.control.Retry$RetryContext, java.lang.Throwable>> unapply(wvlet.airframe.http.HttpClientMaxRetryException);
    Code:
       0: getstatic     #34                 // Field wvlet/airframe/http/HttpClientMaxRetryException$.MODULE$:Lwvlet/airframe/http/HttpClientMaxRetryException$;
       3: aload_0
       4: invokevirtual #36                 // Method wvlet/airframe/http/HttpClientMaxRetryException$.unapply:(Lwvlet/airframe/http/HttpClientMaxRetryException;)Lscala/Option;
       7: areturn

  public static wvlet.airframe.http.HttpClientMaxRetryException apply(wvlet.airframe.http.HttpResponse<?>, wvlet.airframe.control.Retry$RetryContext, java.lang.Throwable);
    Code:
       0: getstatic     #34                 // Field wvlet/airframe/http/HttpClientMaxRetryException$.MODULE$:Lwvlet/airframe/http/HttpClientMaxRetryException$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokevirtual #43                 // Method wvlet/airframe/http/HttpClientMaxRetryException$.apply:(Lwvlet/airframe/http/HttpResponse;Lwvlet/airframe/control/Retry$RetryContext;Ljava/lang/Throwable;)Lwvlet/airframe/http/HttpClientMaxRetryException;
       9: areturn

  public static scala.Function1<scala.Tuple3<wvlet.airframe.http.HttpResponse<?>, wvlet.airframe.control.Retry$RetryContext, java.lang.Throwable>, wvlet.airframe.http.HttpClientMaxRetryException> tupled();
    Code:
       0: getstatic     #34                 // Field wvlet/airframe/http/HttpClientMaxRetryException$.MODULE$:Lwvlet/airframe/http/HttpClientMaxRetryException$;
       3: invokevirtual #49                 // Method wvlet/airframe/http/HttpClientMaxRetryException$.tupled:()Lscala/Function1;
       6: areturn

  public static scala.Function1<wvlet.airframe.http.HttpResponse<?>, scala.Function1<wvlet.airframe.control.Retry$RetryContext, scala.Function1<java.lang.Throwable, wvlet.airframe.http.HttpClientMaxRetryException>>> curried();
    Code:
       0: getstatic     #34                 // Field wvlet/airframe/http/HttpClientMaxRetryException$.MODULE$:Lwvlet/airframe/http/HttpClientMaxRetryException$;
       3: invokevirtual #53                 // Method wvlet/airframe/http/HttpClientMaxRetryException$.curried:()Lscala/Function1;
       6: areturn

  public scala.collection.Iterator<java.lang.String> productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #60                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public wvlet.airframe.http.HttpResponse<?> response();
    Code:
       0: aload_0
       1: invokespecial #65                 // Method wvlet/airframe/http/HttpClientException.response:()Lwvlet/airframe/http/HttpResponse;
       4: areturn

  public wvlet.airframe.control.Retry$RetryContext retryContext();
    Code:
       0: aload_0
       1: getfield      #68                 // Field retryContext:Lwvlet/airframe/control/Retry$RetryContext;
       4: areturn

  public java.lang.Throwable cause();
    Code:
       0: aload_0
       1: getfield      #71                 // Field cause:Ljava/lang/Throwable;
       4: areturn

  public wvlet.airframe.http.HttpClientMaxRetryException copy(wvlet.airframe.http.HttpResponse<?>, wvlet.airframe.control.Retry$RetryContext, java.lang.Throwable);
    Code:
       0: new           #2                  // class wvlet/airframe/http/HttpClientMaxRetryException
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #76                 // Method "<init>":(Lwvlet/airframe/http/HttpResponse;Lwvlet/airframe/control/Retry$RetryContext;Ljava/lang/Throwable;)V
      10: areturn

  public wvlet.airframe.http.HttpResponse<?> copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #78                 // Method response:()Lwvlet/airframe/http/HttpResponse;
       4: areturn

  public wvlet.airframe.control.Retry$RetryContext copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method retryContext:()Lwvlet/airframe/control/Retry$RetryContext;
       4: areturn

  public java.lang.Throwable copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #84                 // Method cause:()Ljava/lang/Throwable;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #88                 // String HttpClientMaxRetryException
       2: areturn

  public int productArity();
    Code:
       0: iconst_3
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 28
                     1: 33
                     2: 38
               default: 43
          }
      28: aload_0
      29: invokevirtual #78                 // Method response:()Lwvlet/airframe/http/HttpResponse;
      32: areturn
      33: aload_0
      34: invokevirtual #81                 // Method retryContext:()Lwvlet/airframe/control/Retry$RetryContext;
      37: areturn
      38: aload_0
      39: invokevirtual #84                 // Method cause:()Ljava/lang/Throwable;
      42: areturn
      43: iload_1
      44: invokestatic  #98                 // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
      47: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #106                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #109                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class wvlet/airframe/http/HttpClientMaxRetryException
       4: ireturn

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 28
                     1: 31
                     2: 34
               default: 37
          }
      28: ldc           #115                // String response
      30: areturn
      31: ldc           #116                // String retryContext
      33: areturn
      34: ldc           #117                // String cause
      36: areturn
      37: iload_1
      38: invokestatic  #98                 // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
      41: checkcast     #119                // class java/lang/String
      44: areturn

  public int hashCode();
    Code:
       0: getstatic     #106                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #124                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     139
       5: aload_1
       6: astore_3
       7: aload_3
       8: instanceof    #2                  // class wvlet/airframe/http/HttpClientMaxRetryException
      11: ifeq          18
      14: iconst_1
      15: goto          25
      18: goto          21
      21: iconst_0
      22: goto          25
      25: ifeq          143
      28: aload_1
      29: checkcast     #2                  // class wvlet/airframe/http/HttpClientMaxRetryException
      32: astore        4
      34: aload_0
      35: invokevirtual #78                 // Method response:()Lwvlet/airframe/http/HttpResponse;
      38: aload         4
      40: invokevirtual #78                 // Method response:()Lwvlet/airframe/http/HttpResponse;
      43: astore        5
      45: dup
      46: ifnonnull     58
      49: pop
      50: aload         5
      52: ifnull        66
      55: goto          143
      58: aload         5
      60: invokevirtual #129                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      63: ifeq          143
      66: aload_0
      67: invokevirtual #81                 // Method retryContext:()Lwvlet/airframe/control/Retry$RetryContext;
      70: aload         4
      72: invokevirtual #81                 // Method retryContext:()Lwvlet/airframe/control/Retry$RetryContext;
      75: astore        6
      77: dup
      78: ifnonnull     90
      81: pop
      82: aload         6
      84: ifnull        98
      87: goto          143
      90: aload         6
      92: invokevirtual #129                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      95: ifeq          143
      98: aload_0
      99: invokevirtual #84                 // Method cause:()Ljava/lang/Throwable;
     102: aload         4
     104: invokevirtual #84                 // Method cause:()Ljava/lang/Throwable;
     107: astore        7
     109: dup
     110: ifnonnull     122
     113: pop
     114: aload         7
     116: ifnull        130
     119: goto          143
     122: aload         7
     124: invokevirtual #129                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     127: ifeq          143
     130: aload         4
     132: aload_0
     133: invokevirtual #131                // Method canEqual:(Ljava/lang/Object;)Z
     136: ifeq          143
     139: iconst_1
     140: goto          144
     143: iconst_0
     144: ireturn

  public wvlet.airframe.http.HttpClientMaxRetryException(wvlet.airframe.http.HttpResponse<?>, wvlet.airframe.control.Retry$RetryContext, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #68                 // Field retryContext:Lwvlet/airframe/control/Retry$RetryContext;
       5: aload_0
       6: aload_3
       7: putfield      #71                 // Field cause:Ljava/lang/Throwable;
      10: aload_0
      11: aload_1
      12: aload_3
      13: astore        5
      15: aload         5
      17: instanceof    #4                  // class wvlet/airframe/http/HttpClientException
      20: ifeq          38
      23: aload         5
      25: checkcast     #4                  // class wvlet/airframe/http/HttpClientException
      28: astore        6
      30: aload         6
      32: invokevirtual #140                // Method wvlet/airframe/http/HttpClientException.status:()Lwvlet/airframe/http/HttpStatus;
      35: goto          47
      38: goto          41
      41: getstatic     #143                // Field wvlet/airframe/http/HttpStatus$InternalServerError_500$.MODULE$:Lwvlet/airframe/http/HttpStatus$InternalServerError_500$;
      44: goto          47
      47: new           #145                // class java/lang/StringBuilder
      50: dup
      51: ldc           #146                // int 31
      53: invokespecial #149                // Method java/lang/StringBuilder."<init>":(I)V
      56: ldc           #151                // String Reached the max retry count
      58: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_2
      62: invokevirtual #158                // Method wvlet/airframe/control/Retry$RetryContext.retryCount:()I
      65: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      68: ldc           #163                // String /
      70: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_2
      74: invokevirtual #166                // Method wvlet/airframe/control/Retry$RetryContext.maxRetry:()I
      77: invokevirtual #161                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      80: ldc           #168                // String :
      82: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload_3
      86: invokevirtual #171                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      89: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: invokevirtual #174                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: aload_3
      96: invokespecial #177                // Method wvlet/airframe/http/HttpClientException."<init>":(Lwvlet/airframe/http/HttpResponse;Lwvlet/airframe/http/HttpStatus;Ljava/lang/String;Ljava/lang/Throwable;)V
      99: aload_0
     100: invokestatic  #181                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
     103: return
}
