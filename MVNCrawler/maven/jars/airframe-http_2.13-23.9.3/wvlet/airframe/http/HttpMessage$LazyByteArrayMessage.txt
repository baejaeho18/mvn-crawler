Compiled from "HttpMessage.scala"
public class wvlet.airframe.http.HttpMessage$LazyByteArrayMessage implements wvlet.airframe.http.HttpMessage$Message {
  private byte[] content;

  private scala.Function0<byte[]> contentReader;

  private volatile boolean bitmap$0;

  public boolean nonEmpty();
    Code:
       0: aload_0
       1: invokestatic  #24                 // InterfaceMethod wvlet/airframe/http/HttpMessage$Message.nonEmpty$:(Lwvlet/airframe/http/HttpMessage$Message;)Z
       4: ireturn

  public int contentHash();
    Code:
       0: aload_0
       1: invokestatic  #32                 // InterfaceMethod wvlet/airframe/http/HttpMessage$Message.contentHash$:(Lwvlet/airframe/http/HttpMessage$Message;)I
       4: ireturn

  private byte[] content$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #36                 // Field bitmap$0:Z
       8: ifne          32
      11: aload_0
      12: aload_0
      13: getfield      #38                 // Field contentReader:Lscala/Function0;
      16: invokeinterface #44,  1           // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
      21: checkcast     #45                 // class "[B"
      24: putfield      #47                 // Field content:[B
      27: aload_0
      28: iconst_1
      29: putfield      #36                 // Field bitmap$0:Z
      32: aload_1
      33: monitorexit
      34: goto          40
      37: aload_1
      38: monitorexit
      39: athrow
      40: aload_0
      41: aconst_null
      42: putfield      #38                 // Field contentReader:Lscala/Function0;
      45: aload_0
      46: getfield      #47                 // Field content:[B
      49: areturn
    Exception table:
       from    to  target type
           4    32    37   any

  private byte[] content();
    Code:
       0: aload_0
       1: getfield      #36                 // Field bitmap$0:Z
       4: ifne          12
       7: aload_0
       8: invokespecial #51                 // Method content$lzycompute:()[B
      11: areturn
      12: aload_0
      13: getfield      #47                 // Field content:[B
      16: areturn

  public boolean isEmpty();
    Code:
       0: getstatic     #58                 // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
       3: getstatic     #63                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: aload_0
       7: invokespecial #65                 // Method content:()[B
      10: invokevirtual #69                 // Method scala/Predef$.byteArrayOps:([B)Ljava/lang/Object;
      13: invokevirtual #73                 // Method scala/collection/ArrayOps$.isEmpty$extension:(Ljava/lang/Object;)Z
      16: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #78                 // Method toContentString:()Ljava/lang/String;
       4: areturn

  public java.lang.String toContentString();
    Code:
       0: new           #80                 // class java/lang/String
       3: dup
       4: aload_0
       5: invokespecial #65                 // Method content:()[B
       8: getstatic     #86                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      11: invokespecial #90                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      14: areturn

  public byte[] toContentBytes();
    Code:
       0: aload_0
       1: invokespecial #65                 // Method content:()[B
       4: areturn

  public wvlet.airframe.http.HttpMessage$LazyByteArrayMessage(scala.Function0<byte[]>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field contentReader:Lscala/Function0;
       5: aload_0
       6: invokespecial #96                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #100                // InterfaceMethod wvlet/airframe/http/HttpMessage$Message.$init$:(Lwvlet/airframe/http/HttpMessage$Message;)V
      13: return
}
