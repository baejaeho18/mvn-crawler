Compiled from "HttpContext.scala"
public interface wvlet.airframe.http.HttpContext<Req, Resp, F> extends wvlet.airframe.http.HttpContextBase {
  public static wvlet.airframe.http.HttpContext<wvlet.airframe.http.HttpMessage$Request, wvlet.airframe.http.HttpMessage$Response, scala.concurrent.Future> mockContext();
    Code:
       0: getstatic     #34                 // Field wvlet/airframe/http/HttpContext$.MODULE$:Lwvlet/airframe/http/HttpContext$;
       3: invokevirtual #36                 // Method wvlet/airframe/http/HttpContext$.mockContext:()Lwvlet/airframe/http/HttpContext;
       6: areturn

  public static <Req, Resp, F> wvlet.airframe.http.HttpContext<Req, Resp, F> newContext(wvlet.airframe.http.HttpBackend<Req, Resp, F>, scala.Function1<Req, F>);
    Code:
       0: getstatic     #34                 // Field wvlet/airframe/http/HttpContext$.MODULE$:Lwvlet/airframe/http/HttpContext$;
       3: aload_0
       4: aload_1
       5: invokevirtual #43                 // Method wvlet/airframe/http/HttpContext$.newContext:(Lwvlet/airframe/http/HttpBackend;Lscala/Function1;)Lwvlet/airframe/http/HttpContext;
       8: areturn

  public abstract wvlet.airframe.http.HttpBackend<Req, Resp, F> backend();

  public static java.lang.String backendName$(wvlet.airframe.http.HttpContext);
    Code:
       0: aload_0
       1: invokespecial #55                 // InterfaceMethod backendName:()Ljava/lang/String;
       4: areturn

  public default java.lang.String backendName();
    Code:
       0: aload_0
       1: invokeinterface #58,  1           // InterfaceMethod backend:()Lwvlet/airframe/http/HttpBackend;
       6: invokeinterface #63,  1           // InterfaceMethod wvlet/airframe/http/HttpBackend.name:()Ljava/lang/String;
      11: areturn

  public abstract F apply(Req);

  public static java.lang.Object withThreadLocalStore$(wvlet.airframe.http.HttpContext, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #74                 // InterfaceMethod withThreadLocalStore:(Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public default F withThreadLocalStore(scala.Function0<F>);
    Code:
       0: aload_0
       1: invokeinterface #58,  1           // InterfaceMethod backend:()Lwvlet/airframe/http/HttpBackend;
       6: aload_1
       7: invokeinterface #77,  2           // InterfaceMethod wvlet/airframe/http/HttpBackend.withThreadLocalStore:(Lscala/Function0;)Ljava/lang/Object;
      12: areturn

  public static void setThreadLocal$(wvlet.airframe.http.HttpContext, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #85                 // InterfaceMethod setThreadLocal:(Ljava/lang/String;Ljava/lang/Object;)V
       6: return

  public default <A> void setThreadLocal(java.lang.String, A);
    Code:
       0: aload_0
       1: invokeinterface #58,  1           // InterfaceMethod backend:()Lwvlet/airframe/http/HttpBackend;
       6: aload_1
       7: aload_2
       8: invokeinterface #89,  3           // InterfaceMethod wvlet/airframe/http/HttpBackend.setThreadLocal:(Ljava/lang/String;Ljava/lang/Object;)V
      13: return

  public static scala.Option getThreadLocal$(wvlet.airframe.http.HttpContext, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #95                 // InterfaceMethod getThreadLocal:(Ljava/lang/String;)Lscala/Option;
       5: areturn

  public default <A> scala.Option<A> getThreadLocal(java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #58,  1           // InterfaceMethod backend:()Lwvlet/airframe/http/HttpBackend;
       6: aload_1
       7: invokeinterface #97,  2           // InterfaceMethod wvlet/airframe/http/HttpBackend.getThreadLocal:(Ljava/lang/String;)Lscala/Option;
      12: areturn

  public static void $init$(wvlet.airframe.http.HttpContext);
    Code:
       0: return
}
