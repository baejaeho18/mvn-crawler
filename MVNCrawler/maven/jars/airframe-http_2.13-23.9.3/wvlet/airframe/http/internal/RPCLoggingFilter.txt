Compiled from "RPCLoggingFilter.scala"
public class wvlet.airframe.http.internal.RPCLoggingFilter implements wvlet.airframe.http.RxHttpFilter,wvlet.log.LogSupport {
  private final wvlet.airframe.http.HttpLogger httpLogger;

  private final wvlet.airframe.http.HttpMultiMap excludeHeaders;

  private wvlet.log.Logger logger;

  private volatile boolean bitmap$0;

  public wvlet.airframe.http.RxHttpFilter andThen(wvlet.airframe.http.RxHttpFilter);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #35                 // InterfaceMethod wvlet/airframe/http/RxHttpFilter.andThen$:(Lwvlet/airframe/http/RxHttpFilter;Lwvlet/airframe/http/RxHttpFilter;)Lwvlet/airframe/http/RxHttpFilter;
       5: areturn

  public wvlet.airframe.http.RxHttpEndpoint andThen(wvlet.airframe.http.RxHttpEndpoint);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #43                 // InterfaceMethod wvlet/airframe/http/RxHttpFilter.andThen$:(Lwvlet/airframe/http/RxHttpFilter;Lwvlet/airframe/http/RxHttpEndpoint;)Lwvlet/airframe/http/RxHttpEndpoint;
       5: areturn

  public wvlet.airframe.http.RxHttpEndpoint andThen(scala.Function1<wvlet.airframe.http.HttpMessage$Request, wvlet.airframe.rx.Rx<wvlet.airframe.http.HttpMessage$Response>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #50                 // InterfaceMethod wvlet/airframe/http/RxHttpFilter.andThen$:(Lwvlet/airframe/http/RxHttpFilter;Lscala/Function1;)Lwvlet/airframe/http/RxHttpEndpoint;
       5: areturn

  private wvlet.log.Logger logger$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #55                 // Field bitmap$0:Z
       8: ifne          24
      11: aload_0
      12: aload_0
      13: invokestatic  #61                 // InterfaceMethod wvlet/log/LazyLogger.logger$:(Lwvlet/log/LazyLogger;)Lwvlet/log/Logger;
      16: putfield      #63                 // Field logger:Lwvlet/log/Logger;
      19: aload_0
      20: iconst_1
      21: putfield      #55                 // Field bitmap$0:Z
      24: aload_1
      25: monitorexit
      26: goto          32
      29: aload_1
      30: monitorexit
      31: athrow
      32: aload_0
      33: getfield      #63                 // Field logger:Lwvlet/log/Logger;
      36: areturn
    Exception table:
       from    to  target type
           4    24    29   any

  public wvlet.log.Logger logger();
    Code:
       0: aload_0
       1: getfield      #55                 // Field bitmap$0:Z
       4: ifne          12
       7: aload_0
       8: invokespecial #67                 // Method logger$lzycompute:()Lwvlet/log/Logger;
      11: areturn
      12: aload_0
      13: getfield      #63                 // Field logger:Lwvlet/log/Logger;
      16: areturn

  private wvlet.airframe.http.HttpMultiMap excludeHeaders();
    Code:
       0: aload_0
       1: getfield      #70                 // Field excludeHeaders:Lwvlet/airframe/http/HttpMultiMap;
       4: areturn

  public wvlet.airframe.rx.Rx<wvlet.airframe.http.HttpMessage$Response> apply(wvlet.airframe.http.HttpMessage$Request, wvlet.airframe.http.RxHttpEndpoint);
    Code:
       0: getstatic     #81                 // Field wvlet/airframe/http/RPCContext$.MODULE$:Lwvlet/airframe/http/RPCContext$;
       3: invokevirtual #85                 // Method wvlet/airframe/http/RPCContext$.current:()Lwvlet/airframe/http/RPCContext;
       6: astore_3
       7: getstatic     #90                 // Field wvlet/airframe/http/internal/HttpLogs$.MODULE$:Lwvlet/airframe/http/internal/HttpLogs$;
      10: aload_0
      11: getfield      #92                 // Field httpLogger:Lwvlet/airframe/http/HttpLogger;
      14: aload_0
      15: invokespecial #94                 // Method excludeHeaders:()Lwvlet/airframe/http/HttpMultiMap;
      18: aload_1
      19: aload_2
      20: getstatic     #99                 // Field scala/None$.MODULE$:Lscala/None$;
      23: new           #101                // class scala/Some
      26: dup
      27: aload_3
      28: invokespecial #105                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      31: invokevirtual #109                // Method wvlet/airframe/http/internal/HttpLogs$.reportLog:(Lwvlet/airframe/http/HttpLogger;Lwvlet/airframe/http/HttpMultiMap;Lwvlet/airframe/http/HttpMessage$Request;Lwvlet/airframe/http/RxHttpEndpoint;Lscala/Option;Lscala/Option;)Lwvlet/airframe/rx/Rx;
      34: areturn

  public wvlet.airframe.http.internal.RPCLoggingFilter(wvlet.airframe.http.HttpLogger);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #92                 // Field httpLogger:Lwvlet/airframe/http/HttpLogger;
       5: aload_0
       6: invokespecial #116                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #120                // InterfaceMethod wvlet/airframe/http/RxHttpFilter.$init$:(Lwvlet/airframe/http/RxHttpFilter;)V
      13: aload_0
      14: invokestatic  #125                // InterfaceMethod wvlet/log/LoggingMethods.$init$:(Lwvlet/log/LoggingMethods;)V
      17: aload_0
      18: invokestatic  #128                // InterfaceMethod wvlet/log/LazyLogger.$init$:(Lwvlet/log/LazyLogger;)V
      21: aload_0
      22: getstatic     #133                // Field wvlet/airframe/http/HttpMultiMap$.MODULE$:Lwvlet/airframe/http/HttpMultiMap$;
      25: aload_1
      26: invokeinterface #139,  1          // InterfaceMethod wvlet/airframe/http/HttpLogger.config:()Lwvlet/airframe/http/HttpLoggerConfig;
      31: invokevirtual #144                // Method wvlet/airframe/http/HttpLoggerConfig.excludeHeaders:()Lscala/collection/immutable/Set;
      34: invokevirtual #148                // Method wvlet/airframe/http/HttpMultiMap$.fromHeaderNames:(Lscala/collection/Iterable;)Lwvlet/airframe/http/HttpMultiMap;
      37: putfield      #70                 // Field excludeHeaders:Lwvlet/airframe/http/HttpMultiMap;
      40: return
}
