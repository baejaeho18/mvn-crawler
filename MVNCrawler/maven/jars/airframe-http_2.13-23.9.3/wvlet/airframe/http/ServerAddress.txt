Compiled from "ServerAddress.scala"
public class wvlet.airframe.http.ServerAddress implements scala.Product,java.io.Serializable {
  private final java.lang.String host;

  private final int port;

  private final java.lang.String scheme;

  public static java.lang.String $lessinit$greater$default$3();
    Code:
       0: getstatic     #30                 // Field wvlet/airframe/http/ServerAddress$.MODULE$:Lwvlet/airframe/http/ServerAddress$;
       3: invokevirtual #32                 // Method wvlet/airframe/http/ServerAddress$.$lessinit$greater$default$3:()Ljava/lang/String;
       6: areturn

  public static scala.Option<scala.Tuple3<java.lang.String, java.lang.Object, java.lang.String>> unapply(wvlet.airframe.http.ServerAddress);
    Code:
       0: getstatic     #30                 // Field wvlet/airframe/http/ServerAddress$.MODULE$:Lwvlet/airframe/http/ServerAddress$;
       3: aload_0
       4: invokevirtual #38                 // Method wvlet/airframe/http/ServerAddress$.unapply:(Lwvlet/airframe/http/ServerAddress;)Lscala/Option;
       7: areturn

  public static java.lang.String apply$default$3();
    Code:
       0: getstatic     #30                 // Field wvlet/airframe/http/ServerAddress$.MODULE$:Lwvlet/airframe/http/ServerAddress$;
       3: invokevirtual #42                 // Method wvlet/airframe/http/ServerAddress$.apply$default$3:()Ljava/lang/String;
       6: areturn

  public static wvlet.airframe.http.ServerAddress apply(java.lang.String, int, java.lang.String);
    Code:
       0: getstatic     #30                 // Field wvlet/airframe/http/ServerAddress$.MODULE$:Lwvlet/airframe/http/ServerAddress$;
       3: aload_0
       4: iload_1
       5: aload_2
       6: invokevirtual #46                 // Method wvlet/airframe/http/ServerAddress$.apply:(Ljava/lang/String;ILjava/lang/String;)Lwvlet/airframe/http/ServerAddress;
       9: areturn

  public static wvlet.airframe.http.ServerAddress apply(java.lang.String);
    Code:
       0: getstatic     #30                 // Field wvlet/airframe/http/ServerAddress$.MODULE$:Lwvlet/airframe/http/ServerAddress$;
       3: aload_0
       4: invokevirtual #50                 // Method wvlet/airframe/http/ServerAddress$.apply:(Ljava/lang/String;)Lwvlet/airframe/http/ServerAddress;
       7: areturn

  public static wvlet.airframe.http.ServerAddress empty();
    Code:
       0: getstatic     #30                 // Field wvlet/airframe/http/ServerAddress$.MODULE$:Lwvlet/airframe/http/ServerAddress$;
       3: invokevirtual #54                 // Method wvlet/airframe/http/ServerAddress$.empty:()Lwvlet/airframe/http/ServerAddress;
       6: areturn

  public scala.collection.Iterator<java.lang.String> productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #61                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public java.lang.String host();
    Code:
       0: aload_0
       1: getfield      #64                 // Field host:Ljava/lang/String;
       4: areturn

  public int port();
    Code:
       0: aload_0
       1: getfield      #67                 // Field port:I
       4: ireturn

  public java.lang.String scheme();
    Code:
       0: aload_0
       1: getfield      #69                 // Field scheme:Ljava/lang/String;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method hostAndPort:()Ljava/lang/String;
       4: areturn

  public java.lang.String hostAndPort();
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method port:()I
       4: iconst_m1
       5: if_icmpne     13
       8: ldc           #77                 // String
      10: goto          37
      13: new           #79                 // class java/lang/StringBuilder
      16: dup
      17: ldc           #80                 // int 1
      19: invokespecial #84                 // Method java/lang/StringBuilder."<init>":(I)V
      22: ldc           #86                 // String :
      24: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: invokevirtual #75                 // Method port:()I
      31: invokevirtual #93                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: invokevirtual #95                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: astore_1
      38: new           #79                 // class java/lang/StringBuilder
      41: dup
      42: ldc           #96                 // int 0
      44: invokespecial #84                 // Method java/lang/StringBuilder."<init>":(I)V
      47: aload_0
      48: invokevirtual #98                 // Method host:()Ljava/lang/String;
      51: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_1
      55: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #95                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: areturn

  public java.lang.String uri();
    Code:
       0: aload_0
       1: invokevirtual #98                 // Method host:()Ljava/lang/String;
       4: invokevirtual #106                // Method java/lang/String.isEmpty:()Z
       7: ifeq          13
      10: ldc           #77                 // String
      12: areturn
      13: new           #79                 // class java/lang/StringBuilder
      16: dup
      17: ldc           #107                // int 3
      19: invokespecial #84                 // Method java/lang/StringBuilder."<init>":(I)V
      22: aload_0
      23: invokevirtual #109                // Method scheme:()Ljava/lang/String;
      26: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #111                // String ://
      31: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: invokevirtual #98                 // Method host:()Ljava/lang/String;
      38: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #95                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: astore_1
      45: aload_0
      46: invokevirtual #75                 // Method port:()I
      49: iconst_m1
      50: if_icmpeq     82
      53: new           #79                 // class java/lang/StringBuilder
      56: dup
      57: ldc           #80                 // int 1
      59: invokespecial #84                 // Method java/lang/StringBuilder."<init>":(I)V
      62: aload_1
      63: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: ldc           #86                 // String :
      68: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload_0
      72: invokevirtual #75                 // Method port:()I
      75: invokevirtual #93                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      78: invokevirtual #95                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: areturn
      82: aload_1
      83: areturn

  public wvlet.airframe.http.ServerAddress copy(java.lang.String, int, java.lang.String);
    Code:
       0: new           #2                  // class wvlet/airframe/http/ServerAddress
       3: dup
       4: aload_1
       5: iload_2
       6: aload_3
       7: invokespecial #116                // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      10: areturn

  public java.lang.String copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #98                 // Method host:()Ljava/lang/String;
       4: areturn

  public int copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method port:()I
       4: ireturn

  public java.lang.String copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #109                // Method scheme:()Ljava/lang/String;
       4: areturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #122                // String ServerAddress
       2: areturn

  public int productArity();
    Code:
       0: iconst_3
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 28
                     1: 33
                     2: 41
               default: 46
          }
      28: aload_0
      29: invokevirtual #98                 // Method host:()Ljava/lang/String;
      32: areturn
      33: aload_0
      34: invokevirtual #75                 // Method port:()I
      37: invokestatic  #132                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      40: areturn
      41: aload_0
      42: invokevirtual #109                // Method scheme:()Ljava/lang/String;
      45: areturn
      46: iload_1
      47: invokestatic  #137                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
      50: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #147                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class wvlet/airframe/http/ServerAddress
       4: ireturn

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 2
                     0: 28
                     1: 31
                     2: 34
               default: 37
          }
      28: ldc           #153                // String host
      30: areturn
      31: ldc           #154                // String port
      33: areturn
      34: ldc           #155                // String scheme
      36: areturn
      37: iload_1
      38: invokestatic  #137                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
      41: checkcast     #101                // class java/lang/String
      44: areturn

  public int hashCode();
    Code:
       0: ldc           #157                // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #159                // Method productPrefix:()Ljava/lang/String;
       8: invokevirtual #161                // Method java/lang/String.hashCode:()I
      11: invokestatic  #165                // Method scala/runtime/Statics.mix:(II)I
      14: istore_1
      15: iload_1
      16: aload_0
      17: invokevirtual #98                 // Method host:()Ljava/lang/String;
      20: invokestatic  #169                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      23: invokestatic  #165                // Method scala/runtime/Statics.mix:(II)I
      26: istore_1
      27: iload_1
      28: aload_0
      29: invokevirtual #75                 // Method port:()I
      32: invokestatic  #165                // Method scala/runtime/Statics.mix:(II)I
      35: istore_1
      36: iload_1
      37: aload_0
      38: invokevirtual #109                // Method scheme:()Ljava/lang/String;
      41: invokestatic  #169                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
      44: invokestatic  #165                // Method scala/runtime/Statics.mix:(II)I
      47: istore_1
      48: iload_1
      49: iconst_3
      50: invokestatic  #172                // Method scala/runtime/Statics.finalizeHash:(II)I
      53: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     119
       5: aload_1
       6: astore_3
       7: aload_3
       8: instanceof    #2                  // class wvlet/airframe/http/ServerAddress
      11: ifeq          18
      14: iconst_1
      15: goto          25
      18: goto          21
      21: iconst_0
      22: goto          25
      25: ifeq          123
      28: aload_1
      29: checkcast     #2                  // class wvlet/airframe/http/ServerAddress
      32: astore        4
      34: aload_0
      35: invokevirtual #75                 // Method port:()I
      38: aload         4
      40: invokevirtual #75                 // Method port:()I
      43: if_icmpne     123
      46: aload_0
      47: invokevirtual #98                 // Method host:()Ljava/lang/String;
      50: aload         4
      52: invokevirtual #98                 // Method host:()Ljava/lang/String;
      55: astore        5
      57: dup
      58: ifnonnull     70
      61: pop
      62: aload         5
      64: ifnull        78
      67: goto          123
      70: aload         5
      72: invokevirtual #175                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      75: ifeq          123
      78: aload_0
      79: invokevirtual #109                // Method scheme:()Ljava/lang/String;
      82: aload         4
      84: invokevirtual #109                // Method scheme:()Ljava/lang/String;
      87: astore        6
      89: dup
      90: ifnonnull     102
      93: pop
      94: aload         6
      96: ifnull        110
      99: goto          123
     102: aload         6
     104: invokevirtual #175                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     107: ifeq          123
     110: aload         4
     112: aload_0
     113: invokevirtual #177                // Method canEqual:(Ljava/lang/Object;)Z
     116: ifeq          123
     119: iconst_1
     120: goto          124
     123: iconst_0
     124: ireturn

  public static final java.lang.String $anonfun$new$1();
    Code:
       0: ldc           #180                // String host must not be null
       2: areturn

  public wvlet.airframe.http.ServerAddress(java.lang.String, int, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #64                 // Field host:Ljava/lang/String;
       5: aload_0
       6: iload_2
       7: putfield      #67                 // Field port:I
      10: aload_0
      11: aload_3
      12: putfield      #69                 // Field scheme:Ljava/lang/String;
      15: aload_0
      16: invokespecial #183                // Method java/lang/Object."<init>":()V
      19: aload_0
      20: invokestatic  #187                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
      23: getstatic     #192                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      26: aload_1
      27: ifnull        34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: invokedynamic #209,  0            // InvokeDynamic #0:apply:()Lscala/Function0;
      40: invokevirtual #213                // Method scala/Predef$.require:(ZLscala/Function0;)V
      43: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #225,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
