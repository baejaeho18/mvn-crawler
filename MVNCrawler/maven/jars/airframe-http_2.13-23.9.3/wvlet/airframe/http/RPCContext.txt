Compiled from "RPCContext.scala"
public interface wvlet.airframe.http.RPCContext {
  public static wvlet.airframe.http.RPCContext current();
    Code:
       0: getstatic     #21                 // Field wvlet/airframe/http/RPCContext$.MODULE$:Lwvlet/airframe/http/RPCContext$;
       3: invokevirtual #23                 // Method wvlet/airframe/http/RPCContext$.current:()Lwvlet/airframe/http/RPCContext;
       6: areturn

  public abstract wvlet.airframe.http.HttpMessage$Request httpRequest();

  public static scala.Option rpcCallContext$(wvlet.airframe.http.RPCContext);
    Code:
       0: aload_0
       1: invokespecial #32                 // InterfaceMethod rpcCallContext:()Lscala/Option;
       4: areturn

  public default scala.Option<wvlet.airframe.http.internal.RPCCallContext> rpcCallContext();
    Code:
       0: aload_0
       1: getstatic     #39                 // Field wvlet/airframe/http/HttpBackend$.MODULE$:Lwvlet/airframe/http/HttpBackend$;
       4: invokevirtual #43                 // Method wvlet/airframe/http/HttpBackend$.TLS_KEY_RPC:()Ljava/lang/String;
       7: invokeinterface #47,  2           // InterfaceMethod getThreadLocal:(Ljava/lang/String;)Lscala/Option;
      12: areturn

  public abstract <A> void setThreadLocal(java.lang.String, A);

  public abstract <A> scala.Option<A> getThreadLocal(java.lang.String);

  public static void $init$(wvlet.airframe.http.RPCContext);
    Code:
       0: return
}
