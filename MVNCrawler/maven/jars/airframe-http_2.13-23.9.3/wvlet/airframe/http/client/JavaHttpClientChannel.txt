Compiled from "JavaHttpClientChannel.scala"
public class wvlet.airframe.http.client.JavaHttpClientChannel implements wvlet.airframe.http.client.HttpChannel {
  private final wvlet.airframe.http.ServerAddress serverAddress;

  private final wvlet.airframe.http.client.HttpClientConfig config;

  private final java.net.http.HttpClient javaHttpClient;

  public wvlet.airframe.http.client.HttpClientConfig config();
    Code:
       0: aload_0
       1: getfield      #82                 // Field config:Lwvlet/airframe/http/client/HttpClientConfig;
       4: areturn

  private java.net.http.HttpClient javaHttpClient();
    Code:
       0: aload_0
       1: getfield      #87                 // Field javaHttpClient:Ljava/net/http/HttpClient;
       4: areturn

  private java.net.http.HttpClient initClient(wvlet.airframe.http.client.HttpClientConfig);
    Code:
       0: invokestatic  #93                 // Method java/net/http/HttpClient.newBuilder:()Ljava/net/http/HttpClient$Builder;
       3: getstatic     #97                 // Field java/net/http/HttpClient$Redirect.NORMAL:Ljava/net/http/HttpClient$Redirect;
       6: invokeinterface #101,  2          // InterfaceMethod java/net/http/HttpClient$Builder.followRedirects:(Ljava/net/http/HttpClient$Redirect;)Ljava/net/http/HttpClient$Builder;
      11: invokeinterface #104,  1          // InterfaceMethod java/net/http/HttpClient$Builder.build:()Ljava/net/http/HttpClient;
      16: areturn

  public void close();
    Code:
       0: return

  public wvlet.airframe.http.HttpMessage$Response send(wvlet.airframe.http.HttpMessage$Request, wvlet.airframe.http.client.HttpChannelConfig);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #112                // Field serverAddress:Lwvlet/airframe/http/ServerAddress;
       5: aload_1
       6: aload_2
       7: invokespecial #116                // Method buildRequest:(Lwvlet/airframe/http/ServerAddress;Lwvlet/airframe/http/HttpMessage$Request;Lwvlet/airframe/http/client/HttpChannelConfig;)Ljava/net/http/HttpRequest;
      10: astore_3
      11: aload_0
      12: invokespecial #118                // Method javaHttpClient:()Ljava/net/http/HttpClient;
      15: aload_3
      16: invokestatic  #122                // Method java/net/http/HttpResponse$BodyHandlers.ofInputStream:()Ljava/net/http/HttpResponse$BodyHandler;
      19: invokevirtual #125                // Method java/net/http/HttpClient.send:(Ljava/net/http/HttpRequest;Ljava/net/http/HttpResponse$BodyHandler;)Ljava/net/http/HttpResponse;
      22: astore        4
      24: aload_0
      25: aload         4
      27: invokevirtual #129                // Method wvlet$airframe$http$client$JavaHttpClientChannel$$readResponse:(Ljava/net/http/HttpResponse;)Lwvlet/airframe/http/HttpMessage$Response;
      30: areturn

  public wvlet.airframe.rx.Rx<wvlet.airframe.http.HttpMessage$Response> sendAsync(wvlet.airframe.http.HttpMessage$Request, wvlet.airframe.http.client.HttpChannelConfig);
    Code:
       0: getstatic     #146                // Field wvlet/airframe/rx/Rx$.MODULE$:Lwvlet/airframe/rx/Rx$;
       3: getstatic     #151                // Field scala/None$.MODULE$:Lscala/None$;
       6: invokevirtual #155                // Method wvlet/airframe/rx/Rx$.variable:(Ljava/lang/Object;)Lwvlet/airframe/rx/RxVar;
       9: astore_3
      10: aload_0
      11: aload_0
      12: getfield      #112                // Field serverAddress:Lwvlet/airframe/http/ServerAddress;
      15: aload_1
      16: aload_2
      17: invokespecial #116                // Method buildRequest:(Lwvlet/airframe/http/ServerAddress;Lwvlet/airframe/http/HttpMessage$Request;Lwvlet/airframe/http/client/HttpChannelConfig;)Ljava/net/http/HttpRequest;
      20: astore        4
      22: aload_0
      23: invokespecial #118                // Method javaHttpClient:()Ljava/net/http/HttpClient;
      26: aload         4
      28: invokestatic  #122                // Method java/net/http/HttpResponse$BodyHandlers.ofInputStream:()Ljava/net/http/HttpResponse$BodyHandler;
      31: invokevirtual #158                // Method java/net/http/HttpClient.sendAsync:(Ljava/net/http/HttpRequest;Ljava/net/http/HttpResponse$BodyHandler;)Ljava/util/concurrent/CompletableFuture;
      34: new           #73                 // class wvlet/airframe/http/client/JavaHttpClientChannel$$anon$1
      37: dup
      38: aload_0
      39: aload_3
      40: invokespecial #162                // Method wvlet/airframe/http/client/JavaHttpClientChannel$$anon$1."<init>":(Lwvlet/airframe/http/client/JavaHttpClientChannel;Lwvlet/airframe/rx/RxVar;)V
      43: invokevirtual #168                // Method java/util/concurrent/CompletableFuture.thenAccept:(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;
      46: aload_3
      47: invokedynamic #190,  0            // InvokeDynamic #0:apply:(Lwvlet/airframe/rx/RxVar;)Ljava/util/function/Function;
      52: invokevirtual #194                // Method java/util/concurrent/CompletableFuture.exceptionally:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      55: goto          72
      58: astore        5
      60: aload_3
      61: aload         5
      63: invokevirtual #200                // Method wvlet/airframe/rx/RxVar.setException:(Ljava/lang/Throwable;)V
      66: getstatic     #206                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      69: goto          72
      72: pop
      73: aload_3
      74: invokedynamic #216,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
      79: invokevirtual #220                // Method wvlet/airframe/rx/RxVar.filter:(Lscala/Function1;)Lwvlet/airframe/rx/Rx;
      82: invokedynamic #227,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
      87: invokeinterface #232,  2          // InterfaceMethod wvlet/airframe/rx/Rx.map:(Lscala/Function1;)Lwvlet/airframe/rx/Rx;
      92: areturn
    Exception table:
       from    to  target type
          10    55    58   Class java/lang/Throwable

  private java.net.http.HttpRequest buildRequest(wvlet.airframe.http.ServerAddress, wvlet.airframe.http.HttpMessage$Request, wvlet.airframe.http.client.HttpChannelConfig);
    Code:
       0: new           #241                // class java/lang/StringBuilder
       3: dup
       4: ldc           #242                // int 0
       6: invokespecial #245                // Method java/lang/StringBuilder."<init>":(I)V
       9: aload_1
      10: invokevirtual #251                // Method wvlet/airframe/http/ServerAddress.uri:()Ljava/lang/String;
      13: invokevirtual #255                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_2
      17: invokevirtual #256                // Method wvlet/airframe/http/HttpMessage$Request.uri:()Ljava/lang/String;
      20: ldc_w         #258                // String /
      23: invokevirtual #264                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      26: ifeq          36
      29: aload_2
      30: invokevirtual #256                // Method wvlet/airframe/http/HttpMessage$Request.uri:()Ljava/lang/String;
      33: goto          61
      36: new           #241                // class java/lang/StringBuilder
      39: dup
      40: ldc           #179                // int 1
      42: invokespecial #245                // Method java/lang/StringBuilder."<init>":(I)V
      45: ldc_w         #258                // String /
      48: invokevirtual #255                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_2
      52: invokevirtual #256                // Method wvlet/airframe/http/HttpMessage$Request.uri:()Ljava/lang/String;
      55: invokevirtual #255                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #267                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokevirtual #270                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      64: invokevirtual #267                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: astore        5
      69: aload         5
      71: invokestatic  #276                // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
      74: invokestatic  #279                // Method java/net/http/HttpRequest.newBuilder:(Ljava/net/URI;)Ljava/net/http/HttpRequest$Builder;
      77: aload_3
      78: invokeinterface #283,  1          // InterfaceMethod wvlet/airframe/http/client/HttpChannelConfig.readTimeout:()Lscala/concurrent/duration/Duration;
      83: invokevirtual #289                // Method scala/concurrent/duration/Duration.toMillis:()J
      86: invokestatic  #295                // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;
      89: invokeinterface #299,  2          // InterfaceMethod java/net/http/HttpRequest$Builder.timeout:(Ljava/time/Duration;)Ljava/net/http/HttpRequest$Builder;
      94: astore        6
      96: aload_2
      97: invokevirtual #303                // Method wvlet/airframe/http/HttpMessage$Request.header:()Lwvlet/airframe/http/HttpMultiMap;
     100: invokevirtual #307                // Method wvlet/airframe/http/HttpMultiMap.entries:()Lscala/collection/immutable/Seq;
     103: aload         6
     105: invokedynamic #317,  0            // InvokeDynamic #3:apply:(Ljava/net/http/HttpRequest$Builder;)Lscala/Function1;
     110: invokeinterface #323,  2          // InterfaceMethod scala/collection/immutable/Seq.foreach:(Lscala/Function1;)V
     115: aload         6
     117: aload_2
     118: invokevirtual #326                // Method wvlet/airframe/http/HttpMessage$Request.method:()Ljava/lang/String;
     121: aload_2
     122: invokevirtual #330                // Method wvlet/airframe/http/HttpMessage$Request.message:()Lwvlet/airframe/http/HttpMessage$Message;
     125: astore        7
     127: getstatic     #333                // Field wvlet/airframe/http/HttpMessage$EmptyMessage$.MODULE$:Lwvlet/airframe/http/HttpMessage$EmptyMessage$;
     130: aload         7
     132: invokevirtual #337                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     135: ifeq          144
     138: invokestatic  #341                // Method java/net/http/HttpRequest$BodyPublishers.noBody:()Ljava/net/http/HttpRequest$BodyPublisher;
     141: goto          189
     144: goto          147
     147: aload         7
     149: instanceof    #65                 // class wvlet/airframe/http/HttpMessage$StringMessage
     152: ifeq          173
     155: aload         7
     157: checkcast     #65                 // class wvlet/airframe/http/HttpMessage$StringMessage
     160: astore        8
     162: aload         8
     164: invokevirtual #344                // Method wvlet/airframe/http/HttpMessage$StringMessage.toContentString:()Ljava/lang/String;
     167: invokestatic  #348                // Method java/net/http/HttpRequest$BodyPublishers.ofString:(Ljava/lang/String;)Ljava/net/http/HttpRequest$BodyPublisher;
     170: goto          189
     173: goto          176
     176: aload         7
     178: invokeinterface #352,  1          // InterfaceMethod wvlet/airframe/http/HttpMessage$Message.toContentBytes:()[B
     183: invokestatic  #356                // Method java/net/http/HttpRequest$BodyPublishers.ofByteArray:([B)Ljava/net/http/HttpRequest$BodyPublisher;
     186: goto          189
     189: invokeinterface #359,  3          // InterfaceMethod java/net/http/HttpRequest$Builder.method:(Ljava/lang/String;Ljava/net/http/HttpRequest$BodyPublisher;)Ljava/net/http/HttpRequest$Builder;
     194: pop
     195: aload         6
     197: invokeinterface #362,  1          // InterfaceMethod java/net/http/HttpRequest$Builder.build:()Ljava/net/http/HttpRequest;
     202: areturn

  public wvlet.airframe.http.HttpMessage$Response wvlet$airframe$http$client$JavaHttpClientChannel$$readResponse(java.net.http.HttpResponse<java.io.InputStream>);
    Code:
       0: getstatic     #371                // Field wvlet/airframe/http/HttpMultiMap$.MODULE$:Lwvlet/airframe/http/HttpMultiMap$;
       3: invokevirtual #374                // Method wvlet/airframe/http/HttpMultiMap$.newBuilder:()Lwvlet/airframe/http/HttpMultiMap$HttpMultiMapBuilder;
       6: astore        4
       8: getstatic     #379                // Field scala/jdk/CollectionConverters$.MODULE$:Lscala/jdk/CollectionConverters$;
      11: aload_1
      12: invokeinterface #383,  1          // InterfaceMethod java/net/http/HttpResponse.headers:()Ljava/net/http/HttpHeaders;
      17: invokevirtual #388                // Method java/net/http/HttpHeaders.map:()Ljava/util/Map;
      20: invokevirtual #391                // Method scala/jdk/CollectionConverters$.MapHasAsScala:(Ljava/util/Map;)Lscala/collection/convert/AsScalaExtensions$MapHasAsScala;
      23: invokevirtual #395                // Method scala/collection/convert/AsScalaExtensions$MapHasAsScala.asScala:()Lscala/collection/mutable/Map;
      26: aload         4
      28: invokedynamic #405,  0            // InvokeDynamic #4:apply:(Lwvlet/airframe/http/HttpMultiMap$HttpMultiMapBuilder;)Lscala/Function1;
      33: invokeinterface #408,  2          // InterfaceMethod scala/collection/mutable/Map.foreach:(Lscala/Function1;)V
      38: aload         4
      40: invokevirtual #411                // Method wvlet/airframe/http/HttpMultiMap$HttpMultiMapBuilder.result:()Lwvlet/airframe/http/HttpMultiMap;
      43: astore_3
      44: getstatic     #416                // Field wvlet/airframe/control/Control$.MODULE$:Lwvlet/airframe/control/Control$;
      47: iconst_0
      48: istore        6
      50: aconst_null
      51: astore        7
      53: aload_3
      54: ldc_w         #418                // String Content-Encoding
      57: invokevirtual #422                // Method wvlet/airframe/http/HttpMultiMap.get:(Ljava/lang/String;)Lscala/Option;
      60: invokedynamic #429,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
      65: invokevirtual #434                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      68: astore        8
      70: aload         8
      72: instanceof    #436                // class scala/Some
      75: ifeq          131
      78: iconst_1
      79: istore        6
      81: aload         8
      83: checkcast     #436                // class scala/Some
      86: astore        7
      88: aload         7
      90: invokevirtual #440                // Method scala/Some.value:()Ljava/lang/Object;
      93: checkcast     #260                // class java/lang/String
      96: astore        9
      98: ldc_w         #442                // String gzip
     101: aload         9
     103: invokevirtual #337                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     106: ifeq          128
     109: new           #444                // class java/util/zip/GZIPInputStream
     112: dup
     113: aload_1
     114: invokeinterface #447,  1          // InterfaceMethod java/net/http/HttpResponse.body:()Ljava/lang/Object;
     119: checkcast     #449                // class java/io/InputStream
     122: invokespecial #452                // Method java/util/zip/GZIPInputStream."<init>":(Ljava/io/InputStream;)V
     125: goto          197
     128: goto          134
     131: goto          134
     134: iload         6
     136: ifeq          182
     139: aload         7
     141: invokevirtual #440                // Method scala/Some.value:()Ljava/lang/Object;
     144: checkcast     #260                // class java/lang/String
     147: astore        10
     149: ldc_w         #454                // String deflate
     152: aload         10
     154: invokevirtual #337                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     157: ifeq          179
     160: new           #456                // class java/util/zip/InflaterInputStream
     163: dup
     164: aload_1
     165: invokeinterface #447,  1          // InterfaceMethod java/net/http/HttpResponse.body:()Ljava/lang/Object;
     170: checkcast     #449                // class java/io/InputStream
     173: invokespecial #457                // Method java/util/zip/InflaterInputStream."<init>":(Ljava/io/InputStream;)V
     176: goto          197
     179: goto          185
     182: goto          185
     185: aload_1
     186: invokeinterface #447,  1          // InterfaceMethod java/net/http/HttpResponse.body:()Ljava/lang/Object;
     191: checkcast     #449                // class java/io/InputStream
     194: goto          197
     197: invokedynamic #464,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
     202: invokevirtual #468                // Method wvlet/airframe/control/Control$.withResource:(Ljava/lang/AutoCloseable;Lscala/Function1;)Ljava/lang/Object;
     205: checkcast     #470                // class "[B"
     208: astore        5
     210: getstatic     #475                // Field wvlet/airframe/http/Http$.MODULE$:Lwvlet/airframe/http/Http$;
     213: getstatic     #480                // Field wvlet/airframe/http/HttpStatus$.MODULE$:Lwvlet/airframe/http/HttpStatus$;
     216: aload_1
     217: invokeinterface #484,  1          // InterfaceMethod java/net/http/HttpResponse.statusCode:()I
     222: invokevirtual #488                // Method wvlet/airframe/http/HttpStatus$.ofCode:(I)Lwvlet/airframe/http/HttpStatus;
     225: invokevirtual #492                // Method wvlet/airframe/http/Http$.response:(Lwvlet/airframe/http/HttpStatus;)Lwvlet/airframe/http/HttpMessage$Response;
     228: aload_3
     229: invokevirtual #496                // Method wvlet/airframe/http/HttpMessage$Response.withHeader:(Lwvlet/airframe/http/HttpMultiMap;)Ljava/lang/Object;
     232: checkcast     #53                 // class wvlet/airframe/http/HttpMessage
     235: getstatic     #501                // Field wvlet/airframe/http/HttpMessage$.MODULE$:Lwvlet/airframe/http/HttpMessage$;
     238: aload         5
     240: invokevirtual #505                // Method wvlet/airframe/http/HttpMessage$.byteArrayMessage:([B)Lwvlet/airframe/http/HttpMessage$Message;
     243: invokeinterface #509,  2          // InterfaceMethod wvlet/airframe/http/HttpMessage.withContent:(Lwvlet/airframe/http/HttpMessage$Message;)Ljava/lang/Object;
     248: checkcast     #62                 // class wvlet/airframe/http/HttpMessage$Response
     251: areturn

  public static final scala.runtime.Null$ $anonfun$sendAsync$1(wvlet.airframe.rx.RxVar, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #200                // Method wvlet/airframe/rx/RxVar.setException:(Ljava/lang/Throwable;)V
       5: aconst_null
       6: areturn

  public static final boolean $anonfun$sendAsync$2(scala.Option);
    Code:
       0: aload_0
       1: invokevirtual #521                // Method scala/Option.isDefined:()Z
       4: ireturn

  public static final wvlet.airframe.http.HttpMessage$Response $anonfun$sendAsync$3(scala.Option);
    Code:
       0: aload_0
       1: invokevirtual #525                // Method scala/Option.get:()Ljava/lang/Object;
       4: checkcast     #62                 // class wvlet/airframe/http/HttpMessage$Response
       7: areturn

  public static final java.net.http.HttpRequest$Builder $anonfun$buildRequest$1(java.net.http.HttpRequest$Builder, wvlet.airframe.http.HttpMultiMapEntry);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #531                // Method wvlet/airframe/http/HttpMultiMapEntry.key:()Ljava/lang/String;
       5: aload_1
       6: invokevirtual #533                // Method wvlet/airframe/http/HttpMultiMapEntry.value:()Ljava/lang/String;
       9: invokeinterface #537,  3          // InterfaceMethod java/net/http/HttpRequest$Builder.setHeader:(Ljava/lang/String;Ljava/lang/String;)Ljava/net/http/HttpRequest$Builder;
      14: areturn

  public static final wvlet.airframe.http.HttpMultiMap$HttpMultiMapBuilder $anonfun$readResponse$2(wvlet.airframe.http.HttpMultiMap$HttpMultiMapBuilder, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #546                // Method wvlet/airframe/http/HttpMultiMap$HttpMultiMapBuilder.add:(Ljava/lang/String;Ljava/lang/String;)Lwvlet/airframe/http/HttpMultiMap$HttpMultiMapBuilder;
       6: areturn

  public static final void $anonfun$readResponse$1(wvlet.airframe.http.HttpMultiMap$HttpMultiMapBuilder, scala.Tuple2);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: ifnull        69
       6: aload_3
       7: invokevirtual #554                // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: checkcast     #260                // class java/lang/String
      13: astore        4
      15: aload_3
      16: invokevirtual #557                // Method scala/Tuple2._2:()Ljava/lang/Object;
      19: checkcast     #559                // class java/util/List
      22: astore        5
      24: aload         4
      26: ldc_w         #561                // String :
      29: invokevirtual #264                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      32: ifne          64
      35: getstatic     #379                // Field scala/jdk/CollectionConverters$.MODULE$:Lscala/jdk/CollectionConverters$;
      38: aload         5
      40: invokevirtual #564                // Method scala/jdk/CollectionConverters$.ListHasAsScala:(Ljava/util/List;)Lscala/collection/convert/AsScalaExtensions$ListHasAsScala;
      43: invokevirtual #567                // Method scala/collection/convert/AsScalaExtensions$ListHasAsScala.asScala:()Lscala/collection/mutable/Buffer;
      46: aload_0
      47: aload         4
      49: invokedynamic #575,  0            // InvokeDynamic #7:apply:(Lwvlet/airframe/http/HttpMultiMap$HttpMultiMapBuilder;Ljava/lang/String;)Lscala/Function1;
      54: invokeinterface #578,  2          // InterfaceMethod scala/collection/mutable/Buffer.foreach:(Lscala/Function1;)V
      59: getstatic     #206                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      62: pop
      63: return
      64: getstatic     #206                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      67: pop
      68: return
      69: goto          72
      72: new           #580                // class scala/MatchError
      75: dup
      76: aload_3
      77: invokespecial #583                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      80: athrow

  public static final java.lang.String $anonfun$readResponse$3(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #590                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       4: areturn

  public static final byte[] $anonfun$readResponse$4(java.io.InputStream);
    Code:
       0: getstatic     #596                // Field wvlet/airframe/control/IO$.MODULE$:Lwvlet/airframe/control/IO$;
       3: aload_0
       4: invokevirtual #599                // Method wvlet/airframe/control/IO$.readFully:(Ljava/io/InputStream;)[B
       7: areturn

  public wvlet.airframe.http.client.JavaHttpClientChannel(wvlet.airframe.http.ServerAddress, wvlet.airframe.http.client.HttpClientConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #112                // Field serverAddress:Lwvlet/airframe/http/ServerAddress;
       5: aload_0
       6: aload_2
       7: putfield      #82                 // Field config:Lwvlet/airframe/http/client/HttpClientConfig;
      10: aload_0
      11: invokespecial #603                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: aload_0
      16: aload_2
      17: invokespecial #605                // Method initClient:(Lwvlet/airframe/http/client/HttpClientConfig;)Ljava/net/http/HttpClient;
      20: putfield      #87                 // Field javaHttpClient:Ljava/net/http/HttpClient;
      23: return

  public static final java.lang.Object $anonfun$sendAsync$2$adapted(scala.Option);
    Code:
       0: aload_0
       1: invokestatic  #607                // Method $anonfun$sendAsync$2:(Lscala/Option;)Z
       4: invokestatic  #613                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public static final java.lang.Object $anonfun$readResponse$1$adapted(wvlet.airframe.http.HttpMultiMap$HttpMultiMapBuilder, scala.Tuple2);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #615                // Method $anonfun$readResponse$1:(Lwvlet/airframe/http/HttpMultiMap$HttpMultiMapBuilder;Lscala/Tuple2;)V
       5: getstatic     #206                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       8: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #627,  0            // InvokeDynamic #8:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
