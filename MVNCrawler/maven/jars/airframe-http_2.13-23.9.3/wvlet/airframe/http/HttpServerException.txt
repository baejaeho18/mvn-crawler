Compiled from "HttpServerException.scala"
public class wvlet.airframe.http.HttpServerException extends java.lang.Exception implements wvlet.airframe.http.HttpServerExceptionBase {
  private final wvlet.airframe.http.HttpStatus status;

  private wvlet.airframe.http.HttpMessage$Response response;

  public wvlet.airframe.http.HttpStatus status();
    Code:
       0: aload_0
       1: getfield      #33                 // Field status:Lwvlet/airframe/http/HttpStatus;
       4: areturn

  private wvlet.airframe.http.HttpMessage$Response response();
    Code:
       0: aload_0
       1: getfield      #38                 // Field response:Lwvlet/airframe/http/HttpMessage$Response;
       4: areturn

  private void response_$eq(wvlet.airframe.http.HttpMessage$Response);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field response:Lwvlet/airframe/http/HttpMessage$Response;
       5: return

  public int statusCode();
    Code:
       0: aload_0
       1: invokespecial #45                 // Method response:()Lwvlet/airframe/http/HttpMessage$Response;
       4: invokevirtual #47                 // Method wvlet/airframe/http/HttpMessage$Response.statusCode:()I
       7: ireturn

  public wvlet.airframe.http.HttpMessage$Response toResponse();
    Code:
       0: aload_0
       1: invokespecial #45                 // Method response:()Lwvlet/airframe/http/HttpMessage$Response;
       4: areturn

  public wvlet.airframe.http.HttpMultiMap header();
    Code:
       0: aload_0
       1: invokespecial #45                 // Method response:()Lwvlet/airframe/http/HttpMessage$Response;
       4: invokevirtual #52                 // Method wvlet/airframe/http/HttpMessage$Response.header:()Lwvlet/airframe/http/HttpMultiMap;
       7: areturn

  public wvlet.airframe.http.HttpMessage$Message message();
    Code:
       0: aload_0
       1: invokespecial #45                 // Method response:()Lwvlet/airframe/http/HttpMessage$Response;
       4: invokevirtual #56                 // Method wvlet/airframe/http/HttpMessage$Response.message:()Lwvlet/airframe/http/HttpMessage$Message;
       7: areturn

  public java.lang.String contentString();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method message:()Lwvlet/airframe/http/HttpMessage$Message;
       4: invokeinterface #62,  1           // InterfaceMethod wvlet/airframe/http/HttpMessage$Message.toContentString:()Ljava/lang/String;
       9: areturn

  public byte[] contentBytes();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method message:()Lwvlet/airframe/http/HttpMessage$Message;
       4: invokeinterface #67,  1           // InterfaceMethod wvlet/airframe/http/HttpMessage$Message.toContentBytes:()[B
       9: areturn

  public scala.Option<java.lang.String> getHeader(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method header:()Lwvlet/airframe/http/HttpMultiMap;
       4: aload_1
       5: invokevirtual #77                 // Method wvlet/airframe/http/HttpMultiMap.get:(Ljava/lang/String;)Lscala/Option;
       8: areturn

  public scala.collection.immutable.Seq<java.lang.String> getAllHeader(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method header:()Lwvlet/airframe/http/HttpMultiMap;
       4: aload_1
       5: invokevirtual #84                 // Method wvlet/airframe/http/HttpMultiMap.getAll:(Ljava/lang/String;)Lscala/collection/immutable/Seq;
       8: areturn

  public scala.Option<java.lang.String> allow();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method header:()Lwvlet/airframe/http/HttpMultiMap;
       4: ldc           #89                 // String Allow
       6: invokevirtual #77                 // Method wvlet/airframe/http/HttpMultiMap.get:(Ljava/lang/String;)Lscala/Option;
       9: areturn

  public scala.collection.immutable.Seq<java.lang.String> accept();
    Code:
       0: getstatic     #98                 // Field wvlet/airframe/http/Http$.MODULE$:Lwvlet/airframe/http/Http$;
       3: aload_0
       4: invokevirtual #72                 // Method header:()Lwvlet/airframe/http/HttpMultiMap;
       7: ldc           #100                // String Accept
       9: invokevirtual #77                 // Method wvlet/airframe/http/HttpMultiMap.get:(Ljava/lang/String;)Lscala/Option;
      12: invokevirtual #104                // Method wvlet/airframe/http/Http$.parseAcceptHeader:(Lscala/Option;)Lscala/collection/immutable/Seq;
      15: areturn

  public scala.Option<java.lang.String> authorization();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method header:()Lwvlet/airframe/http/HttpMultiMap;
       4: ldc           #107                // String Authorization
       6: invokevirtual #77                 // Method wvlet/airframe/http/HttpMultiMap.get:(Ljava/lang/String;)Lscala/Option;
       9: areturn

  public scala.Option<java.lang.String> cacheControl();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method header:()Lwvlet/airframe/http/HttpMultiMap;
       4: ldc           #110                // String Cache-Control
       6: invokevirtual #77                 // Method wvlet/airframe/http/HttpMultiMap.get:(Ljava/lang/String;)Lscala/Option;
       9: areturn

  public scala.Option<java.lang.String> contentType();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method header:()Lwvlet/airframe/http/HttpMultiMap;
       4: ldc           #113                // String Content-Type
       6: invokevirtual #77                 // Method wvlet/airframe/http/HttpMultiMap.get:(Ljava/lang/String;)Lscala/Option;
       9: areturn

  public scala.Option<java.lang.String> contentEncoding();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method header:()Lwvlet/airframe/http/HttpMultiMap;
       4: ldc           #116                // String Content-Encoding
       6: invokevirtual #77                 // Method wvlet/airframe/http/HttpMultiMap.get:(Ljava/lang/String;)Lscala/Option;
       9: areturn

  public scala.Option<java.lang.Object> contentLength();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method header:()Lwvlet/airframe/http/HttpMultiMap;
       4: ldc           #120                // String Content-Length
       6: invokevirtual #77                 // Method wvlet/airframe/http/HttpMultiMap.get:(Ljava/lang/String;)Lscala/Option;
       9: invokedynamic #141,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
      14: invokevirtual #147                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
      17: areturn

  public scala.Option<java.lang.String> date();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method header:()Lwvlet/airframe/http/HttpMultiMap;
       4: ldc           #150                // String Date
       6: invokevirtual #77                 // Method wvlet/airframe/http/HttpMultiMap.get:(Ljava/lang/String;)Lscala/Option;
       9: areturn

  public scala.Option<java.lang.String> expires();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method header:()Lwvlet/airframe/http/HttpMultiMap;
       4: ldc           #153                // String Expires
       6: invokevirtual #77                 // Method wvlet/airframe/http/HttpMultiMap.get:(Ljava/lang/String;)Lscala/Option;
       9: areturn

  public scala.Option<java.lang.String> host();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method header:()Lwvlet/airframe/http/HttpMultiMap;
       4: ldc           #156                // String Host
       6: invokevirtual #77                 // Method wvlet/airframe/http/HttpMultiMap.get:(Ljava/lang/String;)Lscala/Option;
       9: areturn

  public scala.Option<java.lang.String> lastModified();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method header:()Lwvlet/airframe/http/HttpMultiMap;
       4: ldc           #159                // String Last-Modified
       6: invokevirtual #77                 // Method wvlet/airframe/http/HttpMultiMap.get:(Ljava/lang/String;)Lscala/Option;
       9: areturn

  public scala.Option<java.lang.String> referer();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method header:()Lwvlet/airframe/http/HttpMultiMap;
       4: ldc           #162                // String Referer
       6: invokevirtual #77                 // Method wvlet/airframe/http/HttpMultiMap.get:(Ljava/lang/String;)Lscala/Option;
       9: areturn

  public scala.Option<java.lang.String> userAgent();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method header:()Lwvlet/airframe/http/HttpMultiMap;
       4: ldc           #165                // String User-Agent
       6: invokevirtual #77                 // Method wvlet/airframe/http/HttpMultiMap.get:(Ljava/lang/String;)Lscala/Option;
       9: areturn

  public scala.Option<java.lang.String> xForwardedFor();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method header:()Lwvlet/airframe/http/HttpMultiMap;
       4: ldc           #168                // String X-Forwarded-For
       6: invokevirtual #77                 // Method wvlet/airframe/http/HttpMultiMap.get:(Ljava/lang/String;)Lscala/Option;
       9: areturn

  public scala.Option<java.lang.String> xForwardedProto();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method header:()Lwvlet/airframe/http/HttpMultiMap;
       4: ldc           #171                // String X-Forwarded-Proto
       6: invokevirtual #77                 // Method wvlet/airframe/http/HttpMultiMap.get:(Ljava/lang/String;)Lscala/Option;
       9: areturn

  public boolean isContentTypeJson();
    Code:
       0: aload_0
       1: invokevirtual #175                // Method contentType:()Lscala/Option;
       4: invokedynamic #180,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
       9: invokevirtual #184                // Method scala/Option.exists:(Lscala/Function1;)Z
      12: ireturn

  public boolean isContentTypeMsgPack();
    Code:
       0: aload_0
       1: invokevirtual #175                // Method contentType:()Lscala/Option;
       4: invokedynamic #190,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
       9: invokevirtual #184                // Method scala/Option.exists:(Lscala/Function1;)Z
      12: ireturn

  public boolean acceptsJson();
    Code:
       0: aload_0
       1: invokevirtual #193                // Method accept:()Lscala/collection/immutable/Seq;
       4: invokedynamic #198,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
       9: invokeinterface #201,  2          // InterfaceMethod scala/collection/immutable/Seq.exists:(Lscala/Function1;)Z
      14: ireturn

  public boolean acceptsMsgPack();
    Code:
       0: aload_0
       1: invokevirtual #193                // Method accept:()Lscala/collection/immutable/Seq;
       4: invokedynamic #207,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
       9: invokeinterface #201,  2          // InterfaceMethod scala/collection/immutable/Seq.exists:(Lscala/Function1;)Z
      14: ireturn

  public wvlet.airframe.http.HttpServerException withHeader(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #72                 // Method header:()Lwvlet/airframe/http/HttpMultiMap;
       5: aload_1
       6: aload_2
       7: invokevirtual #214                // Method wvlet/airframe/http/HttpMultiMap.set:(Ljava/lang/String;Ljava/lang/String;)Lwvlet/airframe/http/HttpMultiMap;
      10: invokevirtual #218                // Method updateWith:(Lwvlet/airframe/http/HttpMultiMap;)Lwvlet/airframe/http/HttpServerException;
      13: areturn

  public wvlet.airframe.http.HttpServerException withHeader(wvlet.airframe.http.HttpMultiMap);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #218                // Method updateWith:(Lwvlet/airframe/http/HttpMultiMap;)Lwvlet/airframe/http/HttpServerException;
       5: areturn

  public wvlet.airframe.http.HttpServerException addHeader(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #72                 // Method header:()Lwvlet/airframe/http/HttpMultiMap;
       5: aload_1
       6: aload_2
       7: invokevirtual #224                // Method wvlet/airframe/http/HttpMultiMap.add:(Ljava/lang/String;Ljava/lang/String;)Lwvlet/airframe/http/HttpMultiMap;
      10: invokevirtual #218                // Method updateWith:(Lwvlet/airframe/http/HttpMultiMap;)Lwvlet/airframe/http/HttpServerException;
      13: areturn

  public wvlet.airframe.http.HttpServerException removeHeader(java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #72                 // Method header:()Lwvlet/airframe/http/HttpMultiMap;
       5: aload_1
       6: invokevirtual #230                // Method wvlet/airframe/http/HttpMultiMap.remove:(Ljava/lang/String;)Lwvlet/airframe/http/HttpMultiMap;
       9: invokevirtual #218                // Method updateWith:(Lwvlet/airframe/http/HttpMultiMap;)Lwvlet/airframe/http/HttpServerException;
      12: areturn

  public wvlet.airframe.http.HttpServerException withContent(wvlet.airframe.http.HttpMessage$Message);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #235                // Method updateWith:(Lwvlet/airframe/http/HttpMessage$Message;)Lwvlet/airframe/http/HttpServerException;
       5: areturn

  public wvlet.airframe.http.HttpServerException withContent(java.lang.String);
    Code:
       0: aload_0
       1: new           #25                 // class wvlet/airframe/http/HttpMessage$StringMessage
       4: dup
       5: aload_1
       6: invokespecial #240                // Method wvlet/airframe/http/HttpMessage$StringMessage."<init>":(Ljava/lang/String;)V
       9: invokevirtual #235                // Method updateWith:(Lwvlet/airframe/http/HttpMessage$Message;)Lwvlet/airframe/http/HttpServerException;
      12: areturn

  public wvlet.airframe.http.HttpServerException withContent(byte[]);
    Code:
       0: aload_0
       1: getstatic     #246                // Field wvlet/airframe/http/HttpMessage$.MODULE$:Lwvlet/airframe/http/HttpMessage$;
       4: aload_1
       5: invokevirtual #250                // Method wvlet/airframe/http/HttpMessage$.byteArrayMessage:([B)Lwvlet/airframe/http/HttpMessage$Message;
       8: invokevirtual #235                // Method updateWith:(Lwvlet/airframe/http/HttpMessage$Message;)Lwvlet/airframe/http/HttpServerException;
      11: areturn

  public wvlet.airframe.http.HttpServerException withJson(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #246                // Field wvlet/airframe/http/HttpMessage$.MODULE$:Lwvlet/airframe/http/HttpMessage$;
       4: aload_1
       5: invokevirtual #257                // Method wvlet/airframe/http/HttpMessage$.stringMessage:(Ljava/lang/String;)Lwvlet/airframe/http/HttpMessage$Message;
       8: invokevirtual #235                // Method updateWith:(Lwvlet/airframe/http/HttpMessage$Message;)Lwvlet/airframe/http/HttpServerException;
      11: invokevirtual #261                // Method withContentTypeJson:()Lwvlet/airframe/http/HttpServerException;
      14: areturn

  public wvlet.airframe.http.HttpServerException withMsgPack(byte[]);
    Code:
       0: aload_0
       1: getstatic     #246                // Field wvlet/airframe/http/HttpMessage$.MODULE$:Lwvlet/airframe/http/HttpMessage$;
       4: aload_1
       5: invokevirtual #250                // Method wvlet/airframe/http/HttpMessage$.byteArrayMessage:([B)Lwvlet/airframe/http/HttpMessage$Message;
       8: invokevirtual #235                // Method updateWith:(Lwvlet/airframe/http/HttpMessage$Message;)Lwvlet/airframe/http/HttpServerException;
      11: invokevirtual #266                // Method withContentTypeMsgPack:()Lwvlet/airframe/http/HttpServerException;
      14: areturn

  public wvlet.airframe.http.HttpServerException withAccept(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #100                // String Accept
       3: aload_1
       4: invokevirtual #270                // Method withHeader:(Ljava/lang/String;Ljava/lang/String;)Lwvlet/airframe/http/HttpServerException;
       7: areturn

  public wvlet.airframe.http.HttpServerException withAcceptMsgPack();
    Code:
       0: aload_0
       1: ldc           #100                // String Accept
       3: ldc_w         #273                // String application/msgpack
       6: invokevirtual #270                // Method withHeader:(Ljava/lang/String;Ljava/lang/String;)Lwvlet/airframe/http/HttpServerException;
       9: areturn

  public wvlet.airframe.http.HttpServerException withAllow(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #89                 // String Allow
       3: aload_1
       4: invokevirtual #270                // Method withHeader:(Ljava/lang/String;Ljava/lang/String;)Lwvlet/airframe/http/HttpServerException;
       7: areturn

  public wvlet.airframe.http.HttpServerException withAuthorization(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #107                // String Authorization
       3: aload_1
       4: invokevirtual #270                // Method withHeader:(Ljava/lang/String;Ljava/lang/String;)Lwvlet/airframe/http/HttpServerException;
       7: areturn

  public wvlet.airframe.http.HttpServerException withCacheControl(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #110                // String Cache-Control
       3: aload_1
       4: invokevirtual #270                // Method withHeader:(Ljava/lang/String;Ljava/lang/String;)Lwvlet/airframe/http/HttpServerException;
       7: areturn

  public wvlet.airframe.http.HttpServerException withContentType(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #113                // String Content-Type
       3: aload_1
       4: invokevirtual #270                // Method withHeader:(Ljava/lang/String;Ljava/lang/String;)Lwvlet/airframe/http/HttpServerException;
       7: areturn

  public wvlet.airframe.http.HttpServerException withContentTypeJson();
    Code:
       0: aload_0
       1: ldc_w         #279                // String application/json;charset=utf-8
       4: invokevirtual #281                // Method withContentType:(Ljava/lang/String;)Lwvlet/airframe/http/HttpServerException;
       7: areturn

  public wvlet.airframe.http.HttpServerException withContentTypeMsgPack();
    Code:
       0: aload_0
       1: ldc_w         #273                // String application/msgpack
       4: invokevirtual #281                // Method withContentType:(Ljava/lang/String;)Lwvlet/airframe/http/HttpServerException;
       7: areturn

  public wvlet.airframe.http.HttpServerException withContentLength(long);
    Code:
       0: aload_0
       1: ldc           #120                // String Content-Length
       3: lload_1
       4: invokestatic  #290                // Method java/lang/Long.toString:(J)Ljava/lang/String;
       7: invokevirtual #270                // Method withHeader:(Ljava/lang/String;Ljava/lang/String;)Lwvlet/airframe/http/HttpServerException;
      10: areturn

  public wvlet.airframe.http.HttpServerException withDate(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #150                // String Date
       3: aload_1
       4: invokevirtual #270                // Method withHeader:(Ljava/lang/String;Ljava/lang/String;)Lwvlet/airframe/http/HttpServerException;
       7: areturn

  public wvlet.airframe.http.HttpServerException withDate(java.time.Instant);
    Code:
       0: aload_0
       1: ldc           #150                // String Date
       3: getstatic     #98                 // Field wvlet/airframe/http/Http$.MODULE$:Lwvlet/airframe/http/Http$;
       6: aload_1
       7: invokevirtual #297                // Method wvlet/airframe/http/Http$.formatInstant:(Ljava/time/Instant;)Ljava/lang/String;
      10: invokevirtual #270                // Method withHeader:(Ljava/lang/String;Ljava/lang/String;)Lwvlet/airframe/http/HttpServerException;
      13: areturn

  public wvlet.airframe.http.HttpServerException withExpires(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #153                // String Expires
       3: aload_1
       4: invokevirtual #270                // Method withHeader:(Ljava/lang/String;Ljava/lang/String;)Lwvlet/airframe/http/HttpServerException;
       7: areturn

  public wvlet.airframe.http.HttpServerException withHost(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #156                // String Host
       3: aload_1
       4: invokevirtual #270                // Method withHeader:(Ljava/lang/String;Ljava/lang/String;)Lwvlet/airframe/http/HttpServerException;
       7: areturn

  public wvlet.airframe.http.HttpServerException withLastModified(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #159                // String Last-Modified
       3: aload_1
       4: invokevirtual #270                // Method withHeader:(Ljava/lang/String;Ljava/lang/String;)Lwvlet/airframe/http/HttpServerException;
       7: areturn

  public wvlet.airframe.http.HttpServerException withReferer(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #162                // String Referer
       3: aload_1
       4: invokevirtual #270                // Method withHeader:(Ljava/lang/String;Ljava/lang/String;)Lwvlet/airframe/http/HttpServerException;
       7: areturn

  public wvlet.airframe.http.HttpServerException withUserAgent(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #165                // String User-Agent
       3: aload_1
       4: invokevirtual #270                // Method withHeader:(Ljava/lang/String;Ljava/lang/String;)Lwvlet/airframe/http/HttpServerException;
       7: areturn

  public wvlet.airframe.http.HttpServerException withXForwardedFor(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #168                // String X-Forwarded-For
       3: aload_1
       4: invokevirtual #270                // Method withHeader:(Ljava/lang/String;Ljava/lang/String;)Lwvlet/airframe/http/HttpServerException;
       7: areturn

  public wvlet.airframe.http.HttpServerException withXForwardedProto(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #171                // String X-Forwarded-Proto
       3: aload_1
       4: invokevirtual #270                // Method withHeader:(Ljava/lang/String;Ljava/lang/String;)Lwvlet/airframe/http/HttpServerException;
       7: areturn

  public wvlet.airframe.http.HttpServerException updateWith(wvlet.airframe.http.HttpMultiMap);
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #45                 // Method response:()Lwvlet/airframe/http/HttpMessage$Response;
       5: aload_1
       6: invokevirtual #308                // Method wvlet/airframe/http/HttpMessage$Response.withHeader:(Lwvlet/airframe/http/HttpMultiMap;)Ljava/lang/Object;
       9: checkcast     #22                 // class wvlet/airframe/http/HttpMessage$Response
      12: invokespecial #310                // Method response_$eq:(Lwvlet/airframe/http/HttpMessage$Response;)V
      15: aload_0
      16: areturn

  public wvlet.airframe.http.HttpServerException updateWith(wvlet.airframe.http.HttpMessage$Message);
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #45                 // Method response:()Lwvlet/airframe/http/HttpMessage$Response;
       5: aload_1
       6: invokevirtual #314                // Method wvlet/airframe/http/HttpMessage$Response.withContent:(Lwvlet/airframe/http/HttpMessage$Message;)Ljava/lang/Object;
       9: checkcast     #22                 // class wvlet/airframe/http/HttpMessage$Response
      12: invokespecial #310                // Method response_$eq:(Lwvlet/airframe/http/HttpMessage$Response;)V
      15: aload_0
      16: areturn

  public static final long $anonfun$contentLength$1(java.lang.String);
    Code:
       0: getstatic     #321                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
       3: getstatic     #326                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: aload_0
       7: invokevirtual #330                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
      10: invokevirtual #333                // Method scala/collection/StringOps$.toLong$extension:(Ljava/lang/String;)J
      13: lreturn

  public static final boolean $anonfun$isContentTypeJson$1(java.lang.String);
    Code:
       0: aload_0
       1: ldc_w         #338                // String application/json
       4: invokevirtual #343                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       7: ireturn

  public static final boolean $anonfun$isContentTypeMsgPack$1(java.lang.String);
    Code:
       0: aload_0
       1: ldc_w         #273                // String application/msgpack
       4: astore_1
       5: dup
       6: ifnonnull     17
       9: pop
      10: aload_1
      11: ifnull        24
      14: goto          28
      17: aload_1
      18: invokevirtual #351                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public static final boolean $anonfun$acceptsJson$1(java.lang.String);
    Code:
       0: aload_0
       1: ldc_w         #279                // String application/json;charset=utf-8
       4: astore_1
       5: dup
       6: ifnonnull     17
       9: pop
      10: aload_1
      11: ifnull        34
      14: goto          24
      17: aload_1
      18: invokevirtual #351                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      21: ifne          34
      24: aload_0
      25: ldc_w         #338                // String application/json
      28: invokevirtual #343                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      31: ifeq          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ireturn

  public static final boolean $anonfun$acceptsMsgPack$1(java.lang.String);
    Code:
       0: aload_0
       1: ldc_w         #273                // String application/msgpack
       4: astore_1
       5: dup
       6: ifnonnull     17
       9: pop
      10: aload_1
      11: ifnull        24
      14: goto          28
      17: aload_1
      18: invokevirtual #351                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public wvlet.airframe.http.HttpServerException(wvlet.airframe.http.HttpStatus, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field status:Lwvlet/airframe/http/HttpStatus;
       5: aload_0
       6: aload_2
       7: aload_3
       8: invokespecial #361                // Method java/lang/Exception."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      11: aload_0
      12: invokestatic  #365                // InterfaceMethod wvlet/airframe/http/HttpServerExceptionBase.$init$:(Lwvlet/airframe/http/HttpServerExceptionBase;)V
      15: aload_0
      16: getstatic     #98                 // Field wvlet/airframe/http/Http$.MODULE$:Lwvlet/airframe/http/Http$;
      19: aload_1
      20: aload_2
      21: invokevirtual #368                // Method wvlet/airframe/http/Http$.response:(Lwvlet/airframe/http/HttpStatus;Ljava/lang/String;)Lwvlet/airframe/http/HttpMessage$Response;
      24: putfield      #38                 // Field response:Lwvlet/airframe/http/HttpMessage$Response;
      27: return

  public wvlet.airframe.http.HttpServerException(wvlet.airframe.http.HttpStatus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #374                // Method wvlet/airframe/http/HttpStatus.toString:()Ljava/lang/String;
       6: aconst_null
       7: invokespecial #376                // Method "<init>":(Lwvlet/airframe/http/HttpStatus;Ljava/lang/String;Ljava/lang/Throwable;)V
      10: return

  public static final java.lang.Object $anonfun$contentLength$1$adapted(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #378                // Method $anonfun$contentLength$1:(Ljava/lang/String;)J
       4: invokestatic  #384                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
       7: areturn

  public static final java.lang.Object $anonfun$isContentTypeJson$1$adapted(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #386                // Method $anonfun$isContentTypeJson$1:(Ljava/lang/String;)Z
       4: invokestatic  #390                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public static final java.lang.Object $anonfun$isContentTypeMsgPack$1$adapted(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #392                // Method $anonfun$isContentTypeMsgPack$1:(Ljava/lang/String;)Z
       4: invokestatic  #390                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public static final java.lang.Object $anonfun$acceptsJson$1$adapted(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #394                // Method $anonfun$acceptsJson$1:(Ljava/lang/String;)Z
       4: invokestatic  #390                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  public static final java.lang.Object $anonfun$acceptsMsgPack$1$adapted(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #396                // Method $anonfun$acceptsMsgPack$1:(Ljava/lang/String;)Z
       4: invokestatic  #390                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #408,  0            // InvokeDynamic #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
