Compiled from "HttpFilter.scala"
public class wvlet.airframe.http.HttpFilter$SafeFilter<Req, Resp, F> implements wvlet.airframe.http.HttpFilter<Req, Resp, F> {
  private final wvlet.airframe.http.HttpBackend<Req, Resp, F> backend;

  public <A> F toFuture(A);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #25                 // InterfaceMethod wvlet/airframe/http/HttpFilter.toFuture$:(Lwvlet/airframe/http/HttpFilter;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  public java.lang.String backendName();
    Code:
       0: aload_0
       1: invokestatic  #34                 // InterfaceMethod wvlet/airframe/http/HttpFilter.backendName$:(Lwvlet/airframe/http/HttpFilter;)Ljava/lang/String;
       4: areturn

  public wvlet.airframe.http.HttpFilter<Req, Resp, F> filterAdapter();
    Code:
       0: aload_0
       1: invokestatic  #41                 // InterfaceMethod wvlet/airframe/http/HttpFilter.filterAdapter$:(Lwvlet/airframe/http/HttpFilter;)Lwvlet/airframe/http/HttpFilter;
       4: areturn

  public wvlet.airframe.http.HttpFilter<Req, Resp, F> andThen(wvlet.airframe.http.HttpFilter<Req, Resp, F>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #48                 // InterfaceMethod wvlet/airframe/http/HttpFilter.andThen$:(Lwvlet/airframe/http/HttpFilter;Lwvlet/airframe/http/HttpFilter;)Lwvlet/airframe/http/HttpFilter;
       5: areturn

  public wvlet.airframe.http.HttpContext<Req, Resp, F> andThen(wvlet.airframe.http.HttpContext<Req, Resp, F>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #55                 // InterfaceMethod wvlet/airframe/http/HttpFilter.andThen$:(Lwvlet/airframe/http/HttpFilter;Lwvlet/airframe/http/HttpContext;)Lwvlet/airframe/http/HttpContext;
       5: areturn

  public wvlet.airframe.http.HttpBackend<Req, Resp, F> backend();
    Code:
       0: aload_0
       1: getfield      #60                 // Field backend:Lwvlet/airframe/http/HttpBackend;
       4: areturn

  public F apply(Req, wvlet.airframe.http.HttpContext<Req, Resp, F>);
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method backend:()Lwvlet/airframe/http/HttpBackend;
       4: aload_2
       5: aload_1
       6: invokedynamic #84,  0             // InvokeDynamic #0:apply:(Lwvlet/airframe/http/HttpContext;Ljava/lang/Object;)Lscala/Function0;
      11: invokeinterface #90,  2           // InterfaceMethod wvlet/airframe/http/HttpBackend.rescue:(Lscala/Function0;)Ljava/lang/Object;
      16: areturn

  public static final java.lang.Object $anonfun$apply$3(wvlet.airframe.http.HttpContext, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #96,  2           // InterfaceMethod wvlet/airframe/http/HttpContext.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public wvlet.airframe.http.HttpFilter$SafeFilter(wvlet.airframe.http.HttpBackend<Req, Resp, F>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #60                 // Field backend:Lwvlet/airframe/http/HttpBackend;
       5: aload_0
       6: invokespecial #102                // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #106                // InterfaceMethod wvlet/airframe/http/HttpFilter.$init$:(Lwvlet/airframe/http/HttpFilter;)V
      13: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #118,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
