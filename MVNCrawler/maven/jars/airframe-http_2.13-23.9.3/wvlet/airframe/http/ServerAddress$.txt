Compiled from "ServerAddress.scala"
public final class wvlet.airframe.http.ServerAddress$ implements wvlet.log.LogSupport {
  public static final wvlet.airframe.http.ServerAddress$ MODULE$;

  private static final wvlet.airframe.http.ServerAddress empty;

  private static wvlet.log.Logger logger;

  private static volatile boolean bitmap$0;

  public static {};
    Code:
       0: new           #2                  // class wvlet/airframe/http/ServerAddress$
       3: dup
       4: invokespecial #25                 // Method "<init>":()V
       7: putstatic     #27                 // Field MODULE$:Lwvlet/airframe/http/ServerAddress$;
      10: getstatic     #27                 // Field MODULE$:Lwvlet/airframe/http/ServerAddress$;
      13: invokestatic  #33                 // InterfaceMethod wvlet/log/LoggingMethods.$init$:(Lwvlet/log/LoggingMethods;)V
      16: getstatic     #27                 // Field MODULE$:Lwvlet/airframe/http/ServerAddress$;
      19: invokestatic  #38                 // InterfaceMethod wvlet/log/LazyLogger.$init$:(Lwvlet/log/LazyLogger;)V
      22: new           #40                 // class wvlet/airframe/http/ServerAddress
      25: dup
      26: ldc           #42                 // String
      28: iconst_m1
      29: getstatic     #27                 // Field MODULE$:Lwvlet/airframe/http/ServerAddress$;
      32: invokevirtual #46                 // Method apply$default$3:()Ljava/lang/String;
      35: invokespecial #49                 // Method wvlet/airframe/http/ServerAddress."<init>":(Ljava/lang/String;ILjava/lang/String;)V
      38: putstatic     #51                 // Field empty:Lwvlet/airframe/http/ServerAddress;
      41: return

  private wvlet.log.Logger logger$lzycompute();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: getstatic     #55                 // Field bitmap$0:Z
       7: ifne          21
      10: aload_0
      11: invokestatic  #59                 // InterfaceMethod wvlet/log/LazyLogger.logger$:(Lwvlet/log/LazyLogger;)Lwvlet/log/Logger;
      14: putstatic     #61                 // Field logger:Lwvlet/log/Logger;
      17: iconst_1
      18: putstatic     #55                 // Field bitmap$0:Z
      21: aload_1
      22: monitorexit
      23: goto          29
      26: aload_1
      27: monitorexit
      28: athrow
      29: getstatic     #61                 // Field logger:Lwvlet/log/Logger;
      32: areturn
    Exception table:
       from    to  target type
           4    21    26   any

  public wvlet.log.Logger logger();
    Code:
       0: getstatic     #55                 // Field bitmap$0:Z
       3: ifne          11
       6: aload_0
       7: invokespecial #66                 // Method logger$lzycompute:()Lwvlet/log/Logger;
      10: areturn
      11: getstatic     #61                 // Field logger:Lwvlet/log/Logger;
      14: areturn

  public java.lang.String $lessinit$greater$default$3();
    Code:
       0: ldc           #69                 // String http
       2: areturn

  public wvlet.airframe.http.ServerAddress empty();
    Code:
       0: getstatic     #51                 // Field empty:Lwvlet/airframe/http/ServerAddress;
       3: areturn

  public wvlet.airframe.http.ServerAddress apply(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #79                 // Method java/lang/String.isEmpty:()Z
       8: ifeq          16
      11: aload_0
      12: invokevirtual #81                 // Method empty:()Lwvlet/airframe/http/ServerAddress;
      15: areturn
      16: aload_1
      17: ldc           #83                 // String \\w+:\\/\\/.*
      19: invokevirtual #87                 // Method java/lang/String.matches:(Ljava/lang/String;)Z
      22: ifeq          309
      25: aload_1
      26: invokestatic  #93                 // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
      29: astore        4
      31: getstatic     #98                 // Field scala/Option$.MODULE$:Lscala/Option$;
      34: aload         4
      36: invokevirtual #101                // Method java/net/URI.getScheme:()Ljava/lang/String;
      39: invokevirtual #104                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      42: astore        5
      44: aload         4
      46: invokevirtual #108                // Method java/net/URI.getPort:()I
      49: istore        8
      51: iload         8
      53: lookupswitch  { // 2
                    -1: 106
                   443: 80
               default: 194
          }
      80: new           #110                // class scala/Tuple2
      83: dup
      84: sipush        443
      87: invokestatic  #116                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      90: aload         5
      92: invokedynamic #135,  0            // InvokeDynamic #0:apply:()Lscala/Function0;
      97: invokevirtual #141                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
     100: invokespecial #144                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     103: goto          219
     106: aload         5
     108: astore        9
     110: aload         9
     112: instanceof    #146                // class scala/Some
     115: ifeq          166
     118: aload         9
     120: checkcast     #146                // class scala/Some
     123: astore        10
     125: aload         10
     127: invokevirtual #149                // Method scala/Some.value:()Ljava/lang/Object;
     130: checkcast     #75                 // class java/lang/String
     133: astore        11
     135: ldc           #151                // String https
     137: aload         11
     139: invokevirtual #155                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     142: ifeq          163
     145: new           #110                // class scala/Tuple2
     148: dup
     149: sipush        443
     152: invokestatic  #116                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     155: ldc           #151                // String https
     157: invokespecial #144                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     160: goto          219
     163: goto          169
     166: goto          169
     169: new           #110                // class scala/Tuple2
     172: dup
     173: bipush        80
     175: invokestatic  #116                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     178: aload         5
     180: invokedynamic #160,  0            // InvokeDynamic #1:apply:()Lscala/Function0;
     185: invokevirtual #141                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
     188: invokespecial #144                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     191: goto          219
     194: new           #110                // class scala/Tuple2
     197: dup
     198: iload         8
     200: invokestatic  #116                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     203: aload         5
     205: invokedynamic #165,  0            // InvokeDynamic #2:apply:()Lscala/Function0;
     210: invokevirtual #141                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
     213: invokespecial #144                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     216: goto          219
     219: astore        7
     221: aload         7
     223: ifnull        260
     226: aload         7
     228: invokevirtual #168                // Method scala/Tuple2._1$mcI$sp:()I
     231: istore        12
     233: aload         7
     235: invokevirtual #171                // Method scala/Tuple2._2:()Ljava/lang/Object;
     238: checkcast     #75                 // class java/lang/String
     241: astore        13
     243: new           #110                // class scala/Tuple2
     246: dup
     247: iload         12
     249: invokestatic  #116                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     252: aload         13
     254: invokespecial #144                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
     257: goto          273
     260: goto          263
     263: new           #173                // class scala/MatchError
     266: dup
     267: aload         7
     269: invokespecial #176                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     272: athrow
     273: astore        6
     275: aload         6
     277: invokevirtual #168                // Method scala/Tuple2._1$mcI$sp:()I
     280: istore        14
     282: aload         6
     284: invokevirtual #171                // Method scala/Tuple2._2:()Ljava/lang/Object;
     287: checkcast     #75                 // class java/lang/String
     290: astore        15
     292: new           #40                 // class wvlet/airframe/http/ServerAddress
     295: dup
     296: aload         4
     298: invokevirtual #179                // Method java/net/URI.getHost:()Ljava/lang/String;
     301: iload         14
     303: aload         15
     305: invokespecial #49                 // Method wvlet/airframe/http/ServerAddress."<init>":(Ljava/lang/String;ILjava/lang/String;)V
     308: areturn
     309: aload_1
     310: ldc           #181                // String :
     312: invokevirtual #185                // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
     315: istore        16
     317: iload         16
     319: iconst_0
     320: if_icmple     403
     323: getstatic     #190                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
     326: getstatic     #195                // Field scala/Predef$.MODULE$:Lscala/Predef$;
     329: aload_1
     330: iload         16
     332: iconst_1
     333: iadd
     334: aload_1
     335: invokevirtual #198                // Method java/lang/String.length:()I
     338: invokevirtual #202                // Method java/lang/String.substring:(II)Ljava/lang/String;
     341: invokevirtual #206                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
     344: invokevirtual #209                // Method scala/collection/StringOps$.toInt$extension:(Ljava/lang/String;)I
     347: istore        17
     349: iload         17
     351: istore        19
     353: iload         19
     355: tableswitch   { // 443 to 443
                   443: 372
               default: 377
          }
     372: ldc           #151                // String https
     374: goto          382
     377: ldc           #69                 // String http
     379: goto          382
     382: astore        18
     384: new           #40                 // class wvlet/airframe/http/ServerAddress
     387: dup
     388: aload_1
     389: iconst_0
     390: iload         16
     392: invokevirtual #202                // Method java/lang/String.substring:(II)Ljava/lang/String;
     395: iload         17
     397: aload         18
     399: invokespecial #49                 // Method wvlet/airframe/http/ServerAddress."<init>":(Ljava/lang/String;ILjava/lang/String;)V
     402: areturn
     403: new           #40                 // class wvlet/airframe/http/ServerAddress
     406: dup
     407: aload_1
     408: bipush        80
     410: ldc           #69                 // String http
     412: invokespecial #49                 // Method wvlet/airframe/http/ServerAddress."<init>":(Ljava/lang/String;ILjava/lang/String;)V
     415: areturn

  public java.lang.String apply$default$3();
    Code:
       0: ldc           #69                 // String http
       2: areturn

  public wvlet.airframe.http.ServerAddress apply(java.lang.String, int, java.lang.String);
    Code:
       0: new           #40                 // class wvlet/airframe/http/ServerAddress
       3: dup
       4: aload_1
       5: iload_2
       6: aload_3
       7: invokespecial #49                 // Method wvlet/airframe/http/ServerAddress."<init>":(Ljava/lang/String;ILjava/lang/String;)V
      10: areturn

  public scala.Option<scala.Tuple3<java.lang.String, java.lang.Object, java.lang.String>> unapply(wvlet.airframe.http.ServerAddress);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: getstatic     #229                // Field scala/None$.MODULE$:Lscala/None$;
       7: areturn
       8: new           #146                // class scala/Some
      11: dup
      12: new           #231                // class scala/Tuple3
      15: dup
      16: aload_1
      17: invokevirtual #233                // Method wvlet/airframe/http/ServerAddress.host:()Ljava/lang/String;
      20: aload_1
      21: invokevirtual #235                // Method wvlet/airframe/http/ServerAddress.port:()I
      24: invokestatic  #116                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      27: aload_1
      28: invokevirtual #237                // Method wvlet/airframe/http/ServerAddress.scheme:()Ljava/lang/String;
      31: invokespecial #240                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      34: invokespecial #241                // Method scala/Some."<init>":(Ljava/lang/Object;)V
      37: areturn

  private java.lang.Object writeReplace();
    Code:
       0: new           #244                // class scala/runtime/ModuleSerializationProxy
       3: dup
       4: ldc           #2                  // class wvlet/airframe/http/ServerAddress$
       6: invokespecial #247                // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
       9: areturn

  public static final java.lang.String $anonfun$apply$1();
    Code:
       0: ldc           #151                // String https
       2: areturn

  public static final java.lang.String $anonfun$apply$2();
    Code:
       0: ldc           #69                 // String http
       2: areturn

  public static final java.lang.String $anonfun$apply$3();
    Code:
       0: ldc           #69                 // String http
       2: areturn

  private wvlet.airframe.http.ServerAddress$();
    Code:
       0: aload_0
       1: invokespecial #248                // Method java/lang/Object."<init>":()V
       4: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #260,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
