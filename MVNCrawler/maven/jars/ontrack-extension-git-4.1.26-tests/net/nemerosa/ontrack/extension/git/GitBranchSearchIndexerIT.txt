Compiled from "GitBranchSearchIndexerIT.kt"
public class net.nemerosa.ontrack.extension.git.GitBranchSearchIndexerIT extends net.nemerosa.ontrack.extension.git.AbstractGitSearchTestSupport {
  protected net.nemerosa.ontrack.extension.git.GitBranchSearchIndexer gitBranchSearchIndexer;

  public net.nemerosa.ontrack.extension.git.GitBranchSearchIndexerIT();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method net/nemerosa/ontrack/extension/git/AbstractGitSearchTestSupport."<init>":()V
       4: return

  protected net.nemerosa.ontrack.extension.git.GitBranchSearchIndexer getGitBranchSearchIndexer();
    Code:
       0: aload_0
       1: getfield      #17                 // Field gitBranchSearchIndexer:Lnet/nemerosa/ontrack/extension/git/GitBranchSearchIndexer;
       4: astore_1
       5: aload_1
       6: ifnull        11
       9: aload_1
      10: areturn
      11: ldc           #18                 // String gitBranchSearchIndexer
      13: invokestatic  #24                 // Method kotlin/jvm/internal/Intrinsics.throwUninitializedPropertyAccessException:(Ljava/lang/String;)V
      16: aconst_null
      17: areturn

  protected void setGitBranchSearchIndexer(net.nemerosa.ontrack.extension.git.GitBranchSearchIndexer);
    Code:
       0: aload_1
       1: ldc           #30                 // String <set-?>
       3: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #17                 // Field gitBranchSearchIndexer:Lnet/nemerosa/ontrack/extension/git/GitBranchSearchIndexer;
      11: return

  public void Looking for a Git branch();
    Code:
       0: aload_0
       1: new           #38                 // class "net/nemerosa/ontrack/extension/git/GitBranchSearchIndexerIT$Looking for a Git branch$1"
       4: dup
       5: aload_0
       6: invokespecial #41                 // Method "net/nemerosa/ontrack/extension/git/GitBranchSearchIndexerIT$Looking for a Git branch$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/GitBranchSearchIndexerIT;)V
       9: checkcast     #43                 // class kotlin/jvm/functions/Function1
      12: invokevirtual #47                 // Method createRepo:(Lkotlin/jvm/functions/Function1;)Lnet/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions;
      15: new           #49                 // class "net/nemerosa/ontrack/extension/git/GitBranchSearchIndexerIT$Looking for a Git branch$2"
      18: dup
      19: aload_0
      20: invokespecial #50                 // Method "net/nemerosa/ontrack/extension/git/GitBranchSearchIndexerIT$Looking for a Git branch$2"."<init>":(Lnet/nemerosa/ontrack/extension/git/GitBranchSearchIndexerIT;)V
      23: checkcast     #52                 // class kotlin/jvm/functions/Function2
      26: invokevirtual #58                 // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions.and:(Lkotlin/jvm/functions/Function2;)V
      29: return

  public void Looking for a Git branch after the Ontrack branch is deleted();
    Code:
       0: aload_0
       1: new           #61                 // class "net/nemerosa/ontrack/extension/git/GitBranchSearchIndexerIT$Looking for a Git branch after the Ontrack branch is deleted$1"
       4: dup
       5: aload_0
       6: invokespecial #62                 // Method "net/nemerosa/ontrack/extension/git/GitBranchSearchIndexerIT$Looking for a Git branch after the Ontrack branch is deleted$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/GitBranchSearchIndexerIT;)V
       9: checkcast     #43                 // class kotlin/jvm/functions/Function1
      12: invokevirtual #47                 // Method createRepo:(Lkotlin/jvm/functions/Function1;)Lnet/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions;
      15: new           #64                 // class "net/nemerosa/ontrack/extension/git/GitBranchSearchIndexerIT$Looking for a Git branch after the Ontrack branch is deleted$2"
      18: dup
      19: aload_0
      20: invokespecial #65                 // Method "net/nemerosa/ontrack/extension/git/GitBranchSearchIndexerIT$Looking for a Git branch after the Ontrack branch is deleted$2"."<init>":(Lnet/nemerosa/ontrack/extension/git/GitBranchSearchIndexerIT;)V
      23: checkcast     #52                 // class kotlin/jvm/functions/Function2
      26: invokevirtual #58                 // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions.and:(Lkotlin/jvm/functions/Function2;)V
      29: return

  public void Looking for a Git branch just after it has been assigned();
    Code:
       0: aload_0
       1: new           #68                 // class "net/nemerosa/ontrack/extension/git/GitBranchSearchIndexerIT$Looking for a Git branch just after it has been assigned$1"
       4: dup
       5: aload_0
       6: invokespecial #69                 // Method "net/nemerosa/ontrack/extension/git/GitBranchSearchIndexerIT$Looking for a Git branch just after it has been assigned$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/GitBranchSearchIndexerIT;)V
       9: checkcast     #43                 // class kotlin/jvm/functions/Function1
      12: invokevirtual #47                 // Method createRepo:(Lkotlin/jvm/functions/Function1;)Lnet/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions;
      15: new           #71                 // class "net/nemerosa/ontrack/extension/git/GitBranchSearchIndexerIT$Looking for a Git branch just after it has been assigned$2"
      18: dup
      19: aload_0
      20: invokespecial #72                 // Method "net/nemerosa/ontrack/extension/git/GitBranchSearchIndexerIT$Looking for a Git branch just after it has been assigned$2"."<init>":(Lnet/nemerosa/ontrack/extension/git/GitBranchSearchIndexerIT;)V
      23: checkcast     #52                 // class kotlin/jvm/functions/Function2
      26: invokevirtual #58                 // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions.and:(Lkotlin/jvm/functions/Function2;)V
      29: return

  public void Looking for a Git branch just after it has been unassigned();
    Code:
       0: aload_0
       1: new           #75                 // class "net/nemerosa/ontrack/extension/git/GitBranchSearchIndexerIT$Looking for a Git branch just after it has been unassigned$1"
       4: dup
       5: aload_0
       6: invokespecial #76                 // Method "net/nemerosa/ontrack/extension/git/GitBranchSearchIndexerIT$Looking for a Git branch just after it has been unassigned$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/GitBranchSearchIndexerIT;)V
       9: checkcast     #43                 // class kotlin/jvm/functions/Function1
      12: invokevirtual #47                 // Method createRepo:(Lkotlin/jvm/functions/Function1;)Lnet/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions;
      15: new           #78                 // class "net/nemerosa/ontrack/extension/git/GitBranchSearchIndexerIT$Looking for a Git branch just after it has been unassigned$2"
      18: dup
      19: aload_0
      20: invokespecial #79                 // Method "net/nemerosa/ontrack/extension/git/GitBranchSearchIndexerIT$Looking for a Git branch just after it has been unassigned$2"."<init>":(Lnet/nemerosa/ontrack/extension/git/GitBranchSearchIndexerIT;)V
      23: checkcast     #52                 // class kotlin/jvm/functions/Function2
      26: invokevirtual #58                 // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions.and:(Lkotlin/jvm/functions/Function2;)V
      29: return

  public static final void access$deleteProperty(net.nemerosa.ontrack.extension.git.GitBranchSearchIndexerIT, net.nemerosa.ontrack.model.structure.ProjectEntity, java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #85                 // Method deleteProperty:(Lnet/nemerosa/ontrack/model/structure/ProjectEntity;Ljava/lang/Class;)V
       6: return
}
