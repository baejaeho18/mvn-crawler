Compiled from "GitIssueSearchIT.kt"
public class net.nemerosa.ontrack.extension.git.service.GitIssueSearchIT extends net.nemerosa.ontrack.extension.git.AbstractGitTestSupport {
  private net.nemerosa.ontrack.extension.issues.support.MockIssueServiceExtension mockIssueServiceExtension;

  public net.nemerosa.ontrack.extension.git.service.GitIssueSearchIT();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport."<init>":()V
       4: return

  public void Issue search on one branch();
    Code:
       0: aload_0
       1: getstatic     #18                 // Field "net/nemerosa/ontrack/extension/git/service/GitIssueSearchIT$Issue search on one branch$1".INSTANCE:Lnet/nemerosa/ontrack/extension/git/service/GitIssueSearchIT$Issue search on one branch$1;
       4: checkcast     #20                 // class kotlin/jvm/functions/Function1
       7: invokevirtual #24                 // Method createRepo:(Lkotlin/jvm/functions/Function1;)Lnet/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions;
      10: new           #26                 // class "net/nemerosa/ontrack/extension/git/service/GitIssueSearchIT$Issue search on one branch$2"
      13: dup
      14: aload_0
      15: invokespecial #29                 // Method "net/nemerosa/ontrack/extension/git/service/GitIssueSearchIT$Issue search on one branch$2"."<init>":(Lnet/nemerosa/ontrack/extension/git/service/GitIssueSearchIT;)V
      18: checkcast     #31                 // class kotlin/jvm/functions/Function2
      21: invokevirtual #37                 // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions.and:(Lkotlin/jvm/functions/Function2;)V
      24: return

  public void Issue search between two branches();
    Code:
       0: aload_0
       1: getstatic     #43                 // Field "net/nemerosa/ontrack/extension/git/service/GitIssueSearchIT$Issue search between two branches$1".INSTANCE:Lnet/nemerosa/ontrack/extension/git/service/GitIssueSearchIT$Issue search between two branches$1;
       4: checkcast     #20                 // class kotlin/jvm/functions/Function1
       7: invokevirtual #24                 // Method createRepo:(Lkotlin/jvm/functions/Function1;)Lnet/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions;
      10: new           #45                 // class "net/nemerosa/ontrack/extension/git/service/GitIssueSearchIT$Issue search between two branches$2"
      13: dup
      14: aload_0
      15: invokespecial #46                 // Method "net/nemerosa/ontrack/extension/git/service/GitIssueSearchIT$Issue search between two branches$2"."<init>":(Lnet/nemerosa/ontrack/extension/git/service/GitIssueSearchIT;)V
      18: checkcast     #31                 // class kotlin/jvm/functions/Function2
      21: invokevirtual #37                 // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions.and:(Lkotlin/jvm/functions/Function2;)V
      24: return

  public static final net.nemerosa.ontrack.extension.git.model.ConfiguredBuildGitCommitLink access$buildNameAsCommit(net.nemerosa.ontrack.extension.git.service.GitIssueSearchIT, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #52                 // Method buildNameAsCommit:(Z)Lnet/nemerosa/ontrack/extension/git/model/ConfiguredBuildGitCommitLink;
       5: areturn

  public static final net.nemerosa.ontrack.extension.git.service.GitService access$getGitService(net.nemerosa.ontrack.extension.git.service.GitIssueSearchIT);
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method getGitService:()Lnet/nemerosa/ontrack/extension/git/service/GitService;
       4: areturn

  public static final net.nemerosa.ontrack.it.AbstractServiceTestJUnit4Support$ConfigurableAccountCall access$asUserWithView(net.nemerosa.ontrack.extension.git.service.GitIssueSearchIT, net.nemerosa.ontrack.model.structure.ProjectEntity...);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #67                 // Method asUserWithView:([Lnet/nemerosa/ontrack/model/structure/ProjectEntity;)Lnet/nemerosa/ontrack/it/AbstractServiceTestJUnit4Support$ConfigurableAccountCall;
       5: areturn

  public static final void access$assertBranchInfos(net.nemerosa.ontrack.extension.git.service.GitIssueSearchIT, net.nemerosa.ontrack.extension.git.model.OntrackGitCommitInfo, kotlin.Pair...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #75                 // Method assertBranchInfos:(Lnet/nemerosa/ontrack/extension/git/model/OntrackGitCommitInfo;[Lkotlin/Pair;)V
       6: return

  public static final void access$gitBranch(net.nemerosa.ontrack.extension.git.service.GitIssueSearchIT, net.nemerosa.ontrack.model.structure.Branch, java.lang.String, kotlin.jvm.functions.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #85                 // Method gitBranch:(Lnet/nemerosa/ontrack/model/structure/Branch;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
       7: return

  public static final net.nemerosa.ontrack.extension.git.model.ConfiguredBuildGitCommitLink access$commitAsProperty(net.nemerosa.ontrack.extension.git.service.GitIssueSearchIT);
    Code:
       0: aload_0
       1: invokevirtual #96                 // Method commitAsProperty:()Lnet/nemerosa/ontrack/extension/git/model/ConfiguredBuildGitCommitLink;
       4: areturn

  public static final void access$gitCommitProperty(net.nemerosa.ontrack.extension.git.service.GitIssueSearchIT, net.nemerosa.ontrack.model.structure.Build, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #102                // Method gitCommitProperty:(Lnet/nemerosa/ontrack/model/structure/Build;Ljava/lang/String;)V
       6: return

  public static final net.nemerosa.ontrack.extension.issues.support.MockIssueServiceExtension access$getMockIssueServiceExtension$p(net.nemerosa.ontrack.extension.git.service.GitIssueSearchIT);
    Code:
       0: aload_0
       1: getfield      #110                // Field mockIssueServiceExtension:Lnet/nemerosa/ontrack/extension/issues/support/MockIssueServiceExtension;
       4: areturn
}
