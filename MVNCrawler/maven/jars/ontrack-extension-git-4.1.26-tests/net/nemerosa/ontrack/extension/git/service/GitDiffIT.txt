Compiled from "GitDiffIT.kt"
public class net.nemerosa.ontrack.extension.git.service.GitDiffIT extends net.nemerosa.ontrack.extension.git.AbstractGitTestSupport {
  private java.lang.String oldPrefix;

  private java.lang.String newPrefix;

  public net.nemerosa.ontrack.extension.git.service.GitDiffIT();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport."<init>":()V
       4: return

  public void Load user git diff config();
    Code:
       0: new           #14                 // class org/eclipse/jgit/diff/DiffFormatter
       3: dup
       4: new           #16                 // class java/io/ByteArrayOutputStream
       7: dup
       8: invokespecial #17                 // Method java/io/ByteArrayOutputStream."<init>":()V
      11: checkcast     #19                 // class java/io/OutputStream
      14: invokespecial #22                 // Method org/eclipse/jgit/diff/DiffFormatter."<init>":(Ljava/io/OutputStream;)V
      17: astore_1
      18: aload_1
      19: new           #24                 // class org/eclipse/jgit/internal/storage/file/FileRepository
      22: dup
      23: ldc           #26                 // String
      25: invokespecial #29                 // Method org/eclipse/jgit/internal/storage/file/FileRepository."<init>":(Ljava/lang/String;)V
      28: checkcast     #31                 // class org/eclipse/jgit/lib/Repository
      31: invokevirtual #35                 // Method org/eclipse/jgit/diff/DiffFormatter.setRepository:(Lorg/eclipse/jgit/lib/Repository;)V
      34: aload_0
      35: aload_1
      36: invokevirtual #39                 // Method org/eclipse/jgit/diff/DiffFormatter.getOldPrefix:()Ljava/lang/String;
      39: astore_2
      40: aload_2
      41: ldc           #41                 // String userGitDiffFormat.oldPrefix
      43: invokestatic  #47                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      46: aload_2
      47: putfield      #51                 // Field oldPrefix:Ljava/lang/String;
      50: aload_0
      51: aload_1
      52: invokevirtual #54                 // Method org/eclipse/jgit/diff/DiffFormatter.getNewPrefix:()Ljava/lang/String;
      55: astore_2
      56: aload_2
      57: ldc           #56                 // String userGitDiffFormat.newPrefix
      59: invokestatic  #47                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      62: aload_2
      63: putfield      #59                 // Field newPrefix:Ljava/lang/String;
      66: return

  public void File change indicator();
    Code:
       0: aload_0
       1: new           #65                 // class "net/nemerosa/ontrack/extension/git/service/GitDiffIT$File change indicator$1"
       4: dup
       5: aload_0
       6: invokespecial #68                 // Method "net/nemerosa/ontrack/extension/git/service/GitDiffIT$File change indicator$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/service/GitDiffIT;)V
       9: checkcast     #70                 // class kotlin/jvm/functions/Function1
      12: invokespecial #74                 // Method changeLog:(Lkotlin/jvm/functions/Function1;)V
      15: return

  public void Full diff();
    Code:
       0: aload_0
       1: new           #77                 // class "net/nemerosa/ontrack/extension/git/service/GitDiffIT$Full diff$1"
       4: dup
       5: aload_0
       6: invokespecial #78                 // Method "net/nemerosa/ontrack/extension/git/service/GitDiffIT$Full diff$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/service/GitDiffIT;)V
       9: checkcast     #70                 // class kotlin/jvm/functions/Function1
      12: invokespecial #74                 // Method changeLog:(Lkotlin/jvm/functions/Function1;)V
      15: return

  public void Filtered diff();
    Code:
       0: aload_0
       1: new           #81                 // class "net/nemerosa/ontrack/extension/git/service/GitDiffIT$Filtered diff$1"
       4: dup
       5: aload_0
       6: invokespecial #82                 // Method "net/nemerosa/ontrack/extension/git/service/GitDiffIT$Filtered diff$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/service/GitDiffIT;)V
       9: checkcast     #70                 // class kotlin/jvm/functions/Function1
      12: invokespecial #74                 // Method changeLog:(Lkotlin/jvm/functions/Function1;)V
      15: return

  private void changeLog(kotlin.jvm.functions.Function1<? super net.nemerosa.ontrack.extension.git.model.GitChangeLog, kotlin.Unit>);
    Code:
       0: aload_0
       1: getstatic     #89                 // Field net/nemerosa/ontrack/extension/git/service/GitDiffIT$changeLog$1.INSTANCE:Lnet/nemerosa/ontrack/extension/git/service/GitDiffIT$changeLog$1;
       4: checkcast     #70                 // class kotlin/jvm/functions/Function1
       7: invokevirtual #93                 // Method createRepo:(Lkotlin/jvm/functions/Function1;)Lnet/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions;
      10: new           #95                 // class net/nemerosa/ontrack/extension/git/service/GitDiffIT$changeLog$2
      13: dup
      14: aload_0
      15: aload_1
      16: invokespecial #98                 // Method net/nemerosa/ontrack/extension/git/service/GitDiffIT$changeLog$2."<init>":(Lnet/nemerosa/ontrack/extension/git/service/GitDiffIT;Lkotlin/jvm/functions/Function1;)V
      19: checkcast     #100                // class kotlin/jvm/functions/Function2
      22: invokevirtual #106                // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions.and:(Lkotlin/jvm/functions/Function2;)V
      25: return

  public static final net.nemerosa.ontrack.extension.git.service.GitService access$getGitService(net.nemerosa.ontrack.extension.git.service.GitDiffIT);
    Code:
       0: aload_0
       1: invokevirtual #114                // Method getGitService:()Lnet/nemerosa/ontrack/extension/git/service/GitService;
       4: areturn

  public static final java.lang.String access$getOldPrefix$p(net.nemerosa.ontrack.extension.git.service.GitDiffIT);
    Code:
       0: aload_0
       1: getfield      #51                 // Field oldPrefix:Ljava/lang/String;
       4: areturn

  public static final java.lang.String access$getNewPrefix$p(net.nemerosa.ontrack.extension.git.service.GitDiffIT);
    Code:
       0: aload_0
       1: getfield      #59                 // Field newPrefix:Ljava/lang/String;
       4: areturn

  public static final net.nemerosa.ontrack.extension.git.model.ConfiguredBuildGitCommitLink access$buildNameAsCommit(net.nemerosa.ontrack.extension.git.service.GitDiffIT, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #124                // Method buildNameAsCommit:(Z)Lnet/nemerosa/ontrack/extension/git/model/ConfiguredBuildGitCommitLink;
       5: areturn

  public static final net.nemerosa.ontrack.it.AbstractServiceTestJUnit4Support$ConfigurableAccountCall access$asUserWithView(net.nemerosa.ontrack.extension.git.service.GitDiffIT, net.nemerosa.ontrack.model.structure.ProjectEntity...);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #132                // Method asUserWithView:([Lnet/nemerosa/ontrack/model/structure/ProjectEntity;)Lnet/nemerosa/ontrack/it/AbstractServiceTestJUnit4Support$ConfigurableAccountCall;
       5: areturn

  public static final net.nemerosa.ontrack.model.structure.StructureService access$getStructureService(net.nemerosa.ontrack.extension.git.service.GitDiffIT);
    Code:
       0: aload_0
       1: invokevirtual #140                // Method getStructureService:()Lnet/nemerosa/ontrack/model/structure/StructureService;
       4: areturn
}
