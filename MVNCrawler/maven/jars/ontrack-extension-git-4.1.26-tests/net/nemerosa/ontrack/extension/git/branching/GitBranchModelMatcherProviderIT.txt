Compiled from "GitBranchModelMatcherProviderIT.kt"
public class net.nemerosa.ontrack.extension.git.branching.GitBranchModelMatcherProviderIT extends net.nemerosa.ontrack.extension.git.AbstractGitTestSupport {
  private net.nemerosa.ontrack.model.structure.BranchModelMatcherService branchModelMatcherService;

  public net.nemerosa.ontrack.extension.git.branching.GitBranchModelMatcherProviderIT();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport."<init>":()V
       4: return

  public void List of project branches restricted to the default branching model for a Git project();
    Code:
       0: aload_0
       1: new           #14                 // class "net/nemerosa/ontrack/extension/git/branching/GitBranchModelMatcherProviderIT$List of project branches restricted to the default branching model for a Git project$1"
       4: dup
       5: aload_0
       6: invokespecial #17                 // Method "net/nemerosa/ontrack/extension/git/branching/GitBranchModelMatcherProviderIT$List of project branches restricted to the default branching model for a Git project$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/branching/GitBranchModelMatcherProviderIT;)V
       9: checkcast     #19                 // class kotlin/jvm/functions/Function1
      12: invokevirtual #23                 // Method createRepo:(Lkotlin/jvm/functions/Function1;)Lnet/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions;
      15: new           #25                 // class "net/nemerosa/ontrack/extension/git/branching/GitBranchModelMatcherProviderIT$List of project branches restricted to the default branching model for a Git project$2"
      18: dup
      19: aload_0
      20: invokespecial #26                 // Method "net/nemerosa/ontrack/extension/git/branching/GitBranchModelMatcherProviderIT$List of project branches restricted to the default branching model for a Git project$2"."<init>":(Lnet/nemerosa/ontrack/extension/git/branching/GitBranchModelMatcherProviderIT;)V
      23: checkcast     #28                 // class kotlin/jvm/functions/Function2
      26: invokevirtual #34                 // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions.and:(Lkotlin/jvm/functions/Function2;)V
      29: return

  public void List of project branches restricted to a custom branching model for a Git project();
    Code:
       0: aload_0
       1: new           #37                 // class "net/nemerosa/ontrack/extension/git/branching/GitBranchModelMatcherProviderIT$List of project branches restricted to a custom branching model for a Git project$1"
       4: dup
       5: aload_0
       6: invokespecial #38                 // Method "net/nemerosa/ontrack/extension/git/branching/GitBranchModelMatcherProviderIT$List of project branches restricted to a custom branching model for a Git project$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/branching/GitBranchModelMatcherProviderIT;)V
       9: checkcast     #19                 // class kotlin/jvm/functions/Function1
      12: invokevirtual #23                 // Method createRepo:(Lkotlin/jvm/functions/Function1;)Lnet/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions;
      15: new           #40                 // class "net/nemerosa/ontrack/extension/git/branching/GitBranchModelMatcherProviderIT$List of project branches restricted to a custom branching model for a Git project$2"
      18: dup
      19: aload_0
      20: invokespecial #41                 // Method "net/nemerosa/ontrack/extension/git/branching/GitBranchModelMatcherProviderIT$List of project branches restricted to a custom branching model for a Git project$2"."<init>":(Lnet/nemerosa/ontrack/extension/git/branching/GitBranchModelMatcherProviderIT;)V
      23: checkcast     #28                 // class kotlin/jvm/functions/Function2
      26: invokevirtual #34                 // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions.and:(Lkotlin/jvm/functions/Function2;)V
      29: return

  public void List of project branches restricted to a maintenance branching model for a Git project();
    Code:
       0: aload_0
       1: new           #44                 // class "net/nemerosa/ontrack/extension/git/branching/GitBranchModelMatcherProviderIT$List of project branches restricted to a maintenance branching model for a Git project$1"
       4: dup
       5: aload_0
       6: invokespecial #45                 // Method "net/nemerosa/ontrack/extension/git/branching/GitBranchModelMatcherProviderIT$List of project branches restricted to a maintenance branching model for a Git project$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/branching/GitBranchModelMatcherProviderIT;)V
       9: checkcast     #19                 // class kotlin/jvm/functions/Function1
      12: invokevirtual #23                 // Method createRepo:(Lkotlin/jvm/functions/Function1;)Lnet/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions;
      15: new           #47                 // class "net/nemerosa/ontrack/extension/git/branching/GitBranchModelMatcherProviderIT$List of project branches restricted to a maintenance branching model for a Git project$2"
      18: dup
      19: aload_0
      20: invokespecial #48                 // Method "net/nemerosa/ontrack/extension/git/branching/GitBranchModelMatcherProviderIT$List of project branches restricted to a maintenance branching model for a Git project$2"."<init>":(Lnet/nemerosa/ontrack/extension/git/branching/GitBranchModelMatcherProviderIT;)V
      23: checkcast     #28                 // class kotlin/jvm/functions/Function2
      26: invokevirtual #34                 // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions.and:(Lkotlin/jvm/functions/Function2;)V
      29: return

  public void List of project branches unrestricted for a non-Git project();
    Code:
       0: aload_0
       1: checkcast     #51                 // class net/nemerosa/ontrack/it/AbstractDSLTestJUnit4Support
       4: aconst_null
       5: new           #53                 // class "net/nemerosa/ontrack/extension/git/branching/GitBranchModelMatcherProviderIT$List of project branches unrestricted for a non-Git project$1"
       8: dup
       9: aload_0
      10: invokespecial #54                 // Method "net/nemerosa/ontrack/extension/git/branching/GitBranchModelMatcherProviderIT$List of project branches unrestricted for a non-Git project$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/branching/GitBranchModelMatcherProviderIT;)V
      13: checkcast     #19                 // class kotlin/jvm/functions/Function1
      16: iconst_1
      17: aconst_null
      18: invokestatic  #58                 // Method net/nemerosa/ontrack/it/AbstractDSLTestJUnit4Support.project$default:(Lnet/nemerosa/ontrack/it/AbstractDSLTestJUnit4Support;Lnet/nemerosa/ontrack/model/structure/NameDescription;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lnet/nemerosa/ontrack/model/structure/Project;
      21: pop
      22: return

  public static final net.nemerosa.ontrack.model.structure.BranchModelMatcherService access$getBranchModelMatcherService$p(net.nemerosa.ontrack.extension.git.branching.GitBranchModelMatcherProviderIT);
    Code:
       0: aload_0
       1: getfield      #64                 // Field branchModelMatcherService:Lnet/nemerosa/ontrack/model/structure/BranchModelMatcherService;
       4: areturn

  public static final void access$setProperty(net.nemerosa.ontrack.extension.git.branching.GitBranchModelMatcherProviderIT, net.nemerosa.ontrack.model.structure.ProjectEntity, java.lang.Class, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #71                 // Method setProperty:(Lnet/nemerosa/ontrack/model/structure/ProjectEntity;Ljava/lang/Class;Ljava/lang/Object;)V
       7: return
}
