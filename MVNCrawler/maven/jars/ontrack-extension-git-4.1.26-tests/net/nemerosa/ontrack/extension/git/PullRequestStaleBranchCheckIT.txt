Compiled from "PullRequestStaleBranchCheckIT.kt"
public class net.nemerosa.ontrack.extension.git.PullRequestStaleBranchCheckIT extends net.nemerosa.ontrack.extension.git.AbstractGitTestSupport {
  private net.nemerosa.ontrack.extension.git.PullRequestStaleBranchCheck check;

  private net.nemerosa.ontrack.extension.git.mocking.GitMockingConfigurator gitMockingConfigurator;

  public net.nemerosa.ontrack.extension.git.PullRequestStaleBranchCheckIT();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport."<init>":()V
       4: return

  public void init();
    Code:
       0: aload_0
       1: getfield      #16                 // Field gitMockingConfigurator:Lnet/nemerosa/ontrack/extension/git/mocking/GitMockingConfigurator;
       4: dup
       5: ifnonnull     15
       8: pop
       9: ldc           #17                 // String gitMockingConfigurator
      11: invokestatic  #23                 // Method kotlin/jvm/internal/Intrinsics.throwUninitializedPropertyAccessException:(Ljava/lang/String;)V
      14: aconst_null
      15: invokevirtual #28                 // Method net/nemerosa/ontrack/extension/git/mocking/GitMockingConfigurator.clearPullRequests:()V
      18: return

  public void Project not eligible if not configured for Git();
    Code:
       0: aload_0
       1: checkcast     #32                 // class net/nemerosa/ontrack/it/AbstractDSLTestJUnit4Support
       4: aconst_null
       5: new           #34                 // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Project not eligible if not configured for Git$1"
       8: dup
       9: aload_0
      10: invokespecial #37                 // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Project not eligible if not configured for Git$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
      13: checkcast     #39                 // class kotlin/jvm/functions/Function1
      16: iconst_1
      17: aconst_null
      18: invokestatic  #43                 // Method net/nemerosa/ontrack/it/AbstractDSLTestJUnit4Support.project$default:(Lnet/nemerosa/ontrack/it/AbstractDSLTestJUnit4Support;Lnet/nemerosa/ontrack/model/structure/NameDescription;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lnet/nemerosa/ontrack/model/structure/Project;
      21: pop
      22: return

  public void Project not eligible if PR are not enabled();
    Code:
       0: aload_0
       1: new           #46                 // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Project not eligible if PR are not enabled$1"
       4: dup
       5: aload_0
       6: invokespecial #47                 // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Project not eligible if PR are not enabled$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
       9: checkcast     #39                 // class kotlin/jvm/functions/Function1
      12: invokevirtual #51                 // Method createRepo:(Lkotlin/jvm/functions/Function1;)Lnet/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions;
      15: new           #53                 // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Project not eligible if PR are not enabled$2"
      18: dup
      19: aload_0
      20: invokespecial #54                 // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Project not eligible if PR are not enabled$2"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
      23: checkcast     #56                 // class kotlin/jvm/functions/Function2
      26: invokevirtual #62                 // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions.and:(Lkotlin/jvm/functions/Function2;)V
      29: return

  public void Project not eligible if PR cleanup is not enabled();
    Code:
       0: aload_0
       1: new           #65                 // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Project not eligible if PR cleanup is not enabled$1"
       4: dup
       5: aload_0
       6: invokespecial #66                 // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Project not eligible if PR cleanup is not enabled$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
       9: checkcast     #39                 // class kotlin/jvm/functions/Function1
      12: invokevirtual #51                 // Method createRepo:(Lkotlin/jvm/functions/Function1;)Lnet/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions;
      15: new           #68                 // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Project not eligible if PR cleanup is not enabled$2"
      18: dup
      19: aload_0
      20: invokespecial #69                 // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Project not eligible if PR cleanup is not enabled$2"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
      23: checkcast     #56                 // class kotlin/jvm/functions/Function2
      26: invokevirtual #62                 // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions.and:(Lkotlin/jvm/functions/Function2;)V
      29: return

  public void Branch not eligible if not configured for Git();
    Code:
       0: aload_0
       1: new           #72                 // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Branch not eligible if not configured for Git$1"
       4: dup
       5: aload_0
       6: invokespecial #73                 // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Branch not eligible if not configured for Git$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
       9: checkcast     #39                 // class kotlin/jvm/functions/Function1
      12: invokevirtual #51                 // Method createRepo:(Lkotlin/jvm/functions/Function1;)Lnet/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions;
      15: new           #75                 // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Branch not eligible if not configured for Git$2"
      18: dup
      19: aload_0
      20: invokespecial #76                 // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Branch not eligible if not configured for Git$2"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
      23: checkcast     #56                 // class kotlin/jvm/functions/Function2
      26: invokevirtual #62                 // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions.and:(Lkotlin/jvm/functions/Function2;)V
      29: return

  public void Branch not eligible if not a PR();
    Code:
       0: aload_0
       1: new           #79                 // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Branch not eligible if not a PR$1"
       4: dup
       5: aload_0
       6: invokespecial #80                 // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Branch not eligible if not a PR$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
       9: checkcast     #39                 // class kotlin/jvm/functions/Function1
      12: invokevirtual #51                 // Method createRepo:(Lkotlin/jvm/functions/Function1;)Lnet/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions;
      15: new           #82                 // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Branch not eligible if not a PR$2"
      18: dup
      19: aload_0
      20: invokespecial #83                 // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Branch not eligible if not a PR$2"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
      23: checkcast     #56                 // class kotlin/jvm/functions/Function2
      26: invokevirtual #62                 // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions.and:(Lkotlin/jvm/functions/Function2;)V
      29: return

  public void Branch not eligible if PR are not enabled();
    Code:
       0: aload_0
       1: new           #86                 // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Branch not eligible if PR are not enabled$1"
       4: dup
       5: aload_0
       6: invokespecial #87                 // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Branch not eligible if PR are not enabled$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
       9: checkcast     #39                 // class kotlin/jvm/functions/Function1
      12: invokevirtual #51                 // Method createRepo:(Lkotlin/jvm/functions/Function1;)Lnet/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions;
      15: new           #89                 // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Branch not eligible if PR are not enabled$2"
      18: dup
      19: aload_0
      20: invokespecial #90                 // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Branch not eligible if PR are not enabled$2"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
      23: checkcast     #56                 // class kotlin/jvm/functions/Function2
      26: invokevirtual #62                 // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions.and:(Lkotlin/jvm/functions/Function2;)V
      29: return

  public void Branch not eligible if PR cleanup is not enabled();
    Code:
       0: aload_0
       1: new           #93                 // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Branch not eligible if PR cleanup is not enabled$1"
       4: dup
       5: aload_0
       6: invokespecial #94                 // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Branch not eligible if PR cleanup is not enabled$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
       9: checkcast     #39                 // class kotlin/jvm/functions/Function1
      12: invokevirtual #51                 // Method createRepo:(Lkotlin/jvm/functions/Function1;)Lnet/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions;
      15: new           #96                 // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Branch not eligible if PR cleanup is not enabled$2"
      18: dup
      19: aload_0
      20: invokespecial #97                 // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Branch not eligible if PR cleanup is not enabled$2"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
      23: checkcast     #56                 // class kotlin/jvm/functions/Function2
      26: invokevirtual #62                 // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions.and:(Lkotlin/jvm/functions/Function2;)V
      29: return

  public void Valid PR on recent build();
    Code:
       0: aload_0
       1: new           #100                // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Valid PR on recent build$1"
       4: dup
       5: aload_0
       6: invokespecial #101                // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Valid PR on recent build$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
       9: checkcast     #39                 // class kotlin/jvm/functions/Function1
      12: invokevirtual #51                 // Method createRepo:(Lkotlin/jvm/functions/Function1;)Lnet/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions;
      15: new           #103                // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Valid PR on recent build$2"
      18: dup
      19: aload_0
      20: invokespecial #104                // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Valid PR on recent build$2"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
      23: checkcast     #56                 // class kotlin/jvm/functions/Function2
      26: invokevirtual #62                 // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions.and:(Lkotlin/jvm/functions/Function2;)V
      29: return

  public void Valid PR on old build();
    Code:
       0: aload_0
       1: new           #107                // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Valid PR on old build$1"
       4: dup
       5: aload_0
       6: invokespecial #108                // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Valid PR on old build$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
       9: checkcast     #39                 // class kotlin/jvm/functions/Function1
      12: invokevirtual #51                 // Method createRepo:(Lkotlin/jvm/functions/Function1;)Lnet/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions;
      15: new           #110                // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Valid PR on old build$2"
      18: dup
      19: aload_0
      20: invokespecial #111                // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Valid PR on old build$2"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
      23: checkcast     #56                 // class kotlin/jvm/functions/Function2
      26: invokevirtual #62                 // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions.and:(Lkotlin/jvm/functions/Function2;)V
      29: return

  public void Missing PR on recent build();
    Code:
       0: aload_0
       1: new           #114                // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Missing PR on recent build$1"
       4: dup
       5: aload_0
       6: invokespecial #115                // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Missing PR on recent build$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
       9: checkcast     #39                 // class kotlin/jvm/functions/Function1
      12: invokevirtual #51                 // Method createRepo:(Lkotlin/jvm/functions/Function1;)Lnet/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions;
      15: new           #117                // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Missing PR on recent build$2"
      18: dup
      19: aload_0
      20: invokespecial #118                // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Missing PR on recent build$2"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
      23: checkcast     #56                 // class kotlin/jvm/functions/Function2
      26: invokevirtual #62                 // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions.and:(Lkotlin/jvm/functions/Function2;)V
      29: return

  public void Missing PR on build to disable();
    Code:
       0: aload_0
       1: new           #121                // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Missing PR on build to disable$1"
       4: dup
       5: aload_0
       6: invokespecial #122                // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Missing PR on build to disable$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
       9: checkcast     #39                 // class kotlin/jvm/functions/Function1
      12: invokevirtual #51                 // Method createRepo:(Lkotlin/jvm/functions/Function1;)Lnet/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions;
      15: new           #124                // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Missing PR on build to disable$2"
      18: dup
      19: aload_0
      20: invokespecial #125                // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Missing PR on build to disable$2"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
      23: checkcast     #56                 // class kotlin/jvm/functions/Function2
      26: invokevirtual #62                 // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions.and:(Lkotlin/jvm/functions/Function2;)V
      29: return

  public void Missing PR on build to delete();
    Code:
       0: aload_0
       1: new           #128                // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Missing PR on build to delete$1"
       4: dup
       5: aload_0
       6: invokespecial #129                // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Missing PR on build to delete$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
       9: checkcast     #39                 // class kotlin/jvm/functions/Function1
      12: invokevirtual #51                 // Method createRepo:(Lkotlin/jvm/functions/Function1;)Lnet/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions;
      15: new           #131                // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Missing PR on build to delete$2"
      18: dup
      19: aload_0
      20: invokespecial #132                // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Missing PR on build to delete$2"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
      23: checkcast     #56                 // class kotlin/jvm/functions/Function2
      26: invokevirtual #62                 // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions.and:(Lkotlin/jvm/functions/Function2;)V
      29: return

  public void Invalid PR on recent build();
    Code:
       0: aload_0
       1: new           #135                // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Invalid PR on recent build$1"
       4: dup
       5: aload_0
       6: invokespecial #136                // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Invalid PR on recent build$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
       9: checkcast     #39                 // class kotlin/jvm/functions/Function1
      12: invokevirtual #51                 // Method createRepo:(Lkotlin/jvm/functions/Function1;)Lnet/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions;
      15: new           #138                // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Invalid PR on recent build$2"
      18: dup
      19: aload_0
      20: invokespecial #139                // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Invalid PR on recent build$2"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
      23: checkcast     #56                 // class kotlin/jvm/functions/Function2
      26: invokevirtual #62                 // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions.and:(Lkotlin/jvm/functions/Function2;)V
      29: return

  public void Invalid PR on build to disable();
    Code:
       0: aload_0
       1: new           #142                // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Invalid PR on build to disable$1"
       4: dup
       5: aload_0
       6: invokespecial #143                // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Invalid PR on build to disable$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
       9: checkcast     #39                 // class kotlin/jvm/functions/Function1
      12: invokevirtual #51                 // Method createRepo:(Lkotlin/jvm/functions/Function1;)Lnet/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions;
      15: new           #145                // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Invalid PR on build to disable$2"
      18: dup
      19: aload_0
      20: invokespecial #146                // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Invalid PR on build to disable$2"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
      23: checkcast     #56                 // class kotlin/jvm/functions/Function2
      26: invokevirtual #62                 // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions.and:(Lkotlin/jvm/functions/Function2;)V
      29: return

  public void Invalid PR on build to delete();
    Code:
       0: aload_0
       1: new           #149                // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Invalid PR on build to delete$1"
       4: dup
       5: aload_0
       6: invokespecial #150                // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Invalid PR on build to delete$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
       9: checkcast     #39                 // class kotlin/jvm/functions/Function1
      12: invokevirtual #51                 // Method createRepo:(Lkotlin/jvm/functions/Function1;)Lnet/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions;
      15: new           #152                // class "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Invalid PR on build to delete$2"
      18: dup
      19: aload_0
      20: invokespecial #153                // Method "net/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT$Invalid PR on build to delete$2"."<init>":(Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheckIT;)V
      23: checkcast     #56                 // class kotlin/jvm/functions/Function2
      26: invokevirtual #62                 // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions.and:(Lkotlin/jvm/functions/Function2;)V
      29: return

  public static final net.nemerosa.ontrack.extension.git.PullRequestStaleBranchCheck access$getCheck$p(net.nemerosa.ontrack.extension.git.PullRequestStaleBranchCheckIT);
    Code:
       0: aload_0
       1: getfield      #159                // Field check:Lnet/nemerosa/ontrack/extension/git/PullRequestStaleBranchCheck;
       4: areturn

  public static final net.nemerosa.ontrack.extension.git.mocking.GitMockingConfigurator access$getGitMockingConfigurator$p(net.nemerosa.ontrack.extension.git.PullRequestStaleBranchCheckIT);
    Code:
       0: aload_0
       1: getfield      #16                 // Field gitMockingConfigurator:Lnet/nemerosa/ontrack/extension/git/mocking/GitMockingConfigurator;
       4: areturn
}
