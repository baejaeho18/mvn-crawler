Compiled from "IssueReportingIT.kt"
public class net.nemerosa.ontrack.extension.git.reporting.IssueReportingIT extends net.nemerosa.ontrack.extension.git.AbstractGitTestSupport {
  private net.nemerosa.ontrack.extension.issues.support.MockIssueServiceExtension mockIssueServiceExtension;

  public net.nemerosa.ontrack.extension.git.reporting.IssueReportingIT();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport."<init>":()V
       4: return

  public void Getting last open issues on a branch();
    Code:
       0: aload_0
       1: new           #14                 // class "net/nemerosa/ontrack/extension/git/reporting/IssueReportingIT$Getting last open issues on a branch$1"
       4: dup
       5: aload_0
       6: invokespecial #17                 // Method "net/nemerosa/ontrack/extension/git/reporting/IssueReportingIT$Getting last open issues on a branch$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/reporting/IssueReportingIT;)V
       9: checkcast     #19                 // class kotlin/jvm/functions/Function1
      12: invokespecial #23                 // Method withTestContext:(Lkotlin/jvm/functions/Function1;)V
      15: return

  public void Getting last issues using the branch();
    Code:
       0: aload_0
       1: new           #26                 // class "net/nemerosa/ontrack/extension/git/reporting/IssueReportingIT$Getting last issues using the branch$1"
       4: dup
       5: aload_0
       6: invokespecial #27                 // Method "net/nemerosa/ontrack/extension/git/reporting/IssueReportingIT$Getting last issues using the branch$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/reporting/IssueReportingIT;)V
       9: checkcast     #19                 // class kotlin/jvm/functions/Function1
      12: invokespecial #23                 // Method withTestContext:(Lkotlin/jvm/functions/Function1;)V
      15: return

  public void Getting last issues on a validation stamp using the branch();
    Code:
       0: aload_0
       1: new           #30                 // class "net/nemerosa/ontrack/extension/git/reporting/IssueReportingIT$Getting last issues on a validation stamp using the branch$1"
       4: dup
       5: aload_0
       6: invokespecial #31                 // Method "net/nemerosa/ontrack/extension/git/reporting/IssueReportingIT$Getting last issues on a validation stamp using the branch$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/reporting/IssueReportingIT;)V
       9: checkcast     #19                 // class kotlin/jvm/functions/Function1
      12: invokespecial #23                 // Method withTestContext:(Lkotlin/jvm/functions/Function1;)V
      15: return

  public void Getting last issues on failed validation runs using the branch();
    Code:
       0: aload_0
       1: new           #34                 // class "net/nemerosa/ontrack/extension/git/reporting/IssueReportingIT$Getting last issues on failed validation runs using the branch$1"
       4: dup
       5: aload_0
       6: invokespecial #35                 // Method "net/nemerosa/ontrack/extension/git/reporting/IssueReportingIT$Getting last issues on failed validation runs using the branch$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/reporting/IssueReportingIT;)V
       9: checkcast     #19                 // class kotlin/jvm/functions/Function1
      12: invokespecial #23                 // Method withTestContext:(Lkotlin/jvm/functions/Function1;)V
      15: return

  public void Getting last open issues on failed validation runs using the branch();
    Code:
       0: aload_0
       1: new           #38                 // class "net/nemerosa/ontrack/extension/git/reporting/IssueReportingIT$Getting last open issues on failed validation runs using the branch$1"
       4: dup
       5: aload_0
       6: invokespecial #39                 // Method "net/nemerosa/ontrack/extension/git/reporting/IssueReportingIT$Getting last open issues on failed validation runs using the branch$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/reporting/IssueReportingIT;)V
       9: checkcast     #19                 // class kotlin/jvm/functions/Function1
      12: invokespecial #23                 // Method withTestContext:(Lkotlin/jvm/functions/Function1;)V
      15: return

  public void Getting last issues on a branch();
    Code:
       0: aload_0
       1: new           #42                 // class "net/nemerosa/ontrack/extension/git/reporting/IssueReportingIT$Getting last issues on a branch$1"
       4: dup
       5: aload_0
       6: invokespecial #43                 // Method "net/nemerosa/ontrack/extension/git/reporting/IssueReportingIT$Getting last issues on a branch$1"."<init>":(Lnet/nemerosa/ontrack/extension/git/reporting/IssueReportingIT;)V
       9: checkcast     #19                 // class kotlin/jvm/functions/Function1
      12: invokespecial #23                 // Method withTestContext:(Lkotlin/jvm/functions/Function1;)V
      15: return

  private void withTestContext(kotlin.jvm.functions.Function1<? super net.nemerosa.ontrack.model.structure.Project, kotlin.Unit>);
    Code:
       0: aload_0
       1: new           #46                 // class net/nemerosa/ontrack/extension/git/reporting/IssueReportingIT$withTestContext$1
       4: dup
       5: aload_0
       6: invokespecial #47                 // Method net/nemerosa/ontrack/extension/git/reporting/IssueReportingIT$withTestContext$1."<init>":(Lnet/nemerosa/ontrack/extension/git/reporting/IssueReportingIT;)V
       9: checkcast     #19                 // class kotlin/jvm/functions/Function1
      12: invokevirtual #51                 // Method createRepo:(Lkotlin/jvm/functions/Function1;)Lnet/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions;
      15: new           #53                 // class net/nemerosa/ontrack/extension/git/reporting/IssueReportingIT$withTestContext$2
      18: dup
      19: aload_0
      20: aload_1
      21: invokespecial #56                 // Method net/nemerosa/ontrack/extension/git/reporting/IssueReportingIT$withTestContext$2."<init>":(Lnet/nemerosa/ontrack/extension/git/reporting/IssueReportingIT;Lkotlin/jvm/functions/Function1;)V
      24: checkcast     #58                 // class kotlin/jvm/functions/Function2
      27: invokevirtual #64                 // Method net/nemerosa/ontrack/extension/git/AbstractGitTestSupport$RepoTestActions.and:(Lkotlin/jvm/functions/Function2;)V
      30: return

  public static final net.nemerosa.ontrack.extension.issues.support.MockIssueServiceExtension access$getMockIssueServiceExtension$p(net.nemerosa.ontrack.extension.git.reporting.IssueReportingIT);
    Code:
       0: aload_0
       1: getfield      #72                 // Field mockIssueServiceExtension:Lnet/nemerosa/ontrack/extension/issues/support/MockIssueServiceExtension;
       4: areturn

  public static final net.nemerosa.ontrack.extension.git.model.ConfiguredBuildGitCommitLink access$commitAsProperty(net.nemerosa.ontrack.extension.git.reporting.IssueReportingIT);
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method commitAsProperty:()Lnet/nemerosa/ontrack/extension/git/model/ConfiguredBuildGitCommitLink;
       4: areturn
}
