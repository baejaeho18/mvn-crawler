Compiled from "Optional.java"
public abstract class org.whispersystems.libsignal.util.guava.Optional<T> implements java.io.Serializable {
  private static final long serialVersionUID;

  public static <T> org.whispersystems.libsignal.util.guava.Optional<T> absent();
    Code:
       0: getstatic     #1                  // Field org/whispersystems/libsignal/util/guava/Absent.INSTANCE:Lorg/whispersystems/libsignal/util/guava/Absent;
       3: areturn

  public static <T> org.whispersystems.libsignal.util.guava.Optional<T> of(T);
    Code:
       0: new           #2                  // class org/whispersystems/libsignal/util/guava/Present
       3: dup
       4: aload_0
       5: invokestatic  #3                  // Method org/whispersystems/libsignal/util/guava/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: invokespecial #4                  // Method org/whispersystems/libsignal/util/guava/Present."<init>":(Ljava/lang/Object;)V
      11: areturn

  public static <T> org.whispersystems.libsignal.util.guava.Optional<T> fromNullable(T);
    Code:
       0: aload_0
       1: ifnonnull     10
       4: invokestatic  #5                  // Method absent:()Lorg/whispersystems/libsignal/util/guava/Optional;
       7: goto          18
      10: new           #2                  // class org/whispersystems/libsignal/util/guava/Present
      13: dup
      14: aload_0
      15: invokespecial #4                  // Method org/whispersystems/libsignal/util/guava/Present."<init>":(Ljava/lang/Object;)V
      18: areturn

  org.whispersystems.libsignal.util.guava.Optional();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract boolean isPresent();

  public abstract T get();

  public abstract T or(T);

  public abstract org.whispersystems.libsignal.util.guava.Optional<T> or(org.whispersystems.libsignal.util.guava.Optional<? extends T>);

  public abstract T or(org.whispersystems.libsignal.util.guava.Supplier<? extends T>);

  public abstract T orNull();

  public abstract java.util.Set<T> asSet();

  public abstract <V> org.whispersystems.libsignal.util.guava.Optional<V> transform(org.whispersystems.libsignal.util.guava.Function<? super T, V>);

  public abstract boolean equals(java.lang.Object);

  public abstract int hashCode();

  public abstract java.lang.String toString();
}
