Compiled from "Native.java"
public final class org.signal.client.internal.Native {
  private static void copyToTempFileAndLoad(java.io.InputStream, java.lang.String) throws java.io.IOException;
    Code:
       0: ldc           #1                  // String resource
       2: aload_1
       3: iconst_0
       4: anewarray     #2                  // class java/nio/file/attribute/FileAttribute
       7: invokestatic  #3                  // Method java/nio/file/Files.createTempFile:(Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
      10: invokeinterface #4,  1            // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      15: astore_2
      16: aload_2
      17: invokevirtual #5                  // Method java/io/File.deleteOnExit:()V
      20: new           #6                  // class java/io/FileOutputStream
      23: dup
      24: aload_2
      25: invokespecial #7                  // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
      28: astore_3
      29: aconst_null
      30: astore        4
      32: sipush        4096
      35: newarray       byte
      37: astore        5
      39: aload_0
      40: aload         5
      42: invokevirtual #8                  // Method java/io/InputStream.read:([B)I
      45: dup
      46: istore        6
      48: iconst_m1
      49: if_icmpeq     64
      52: aload_3
      53: aload         5
      55: iconst_0
      56: iload         6
      58: invokevirtual #9                  // Method java/io/OutputStream.write:([BII)V
      61: goto          39
      64: aload_3
      65: ifnull        145
      68: aload         4
      70: ifnull        92
      73: aload_3
      74: invokevirtual #10                 // Method java/io/OutputStream.close:()V
      77: goto          145
      80: astore        5
      82: aload         4
      84: aload         5
      86: invokevirtual #12                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      89: goto          145
      92: aload_3
      93: invokevirtual #10                 // Method java/io/OutputStream.close:()V
      96: goto          145
      99: astore        5
     101: aload         5
     103: astore        4
     105: aload         5
     107: athrow
     108: astore        7
     110: aload_3
     111: ifnull        142
     114: aload         4
     116: ifnull        138
     119: aload_3
     120: invokevirtual #10                 // Method java/io/OutputStream.close:()V
     123: goto          142
     126: astore        8
     128: aload         4
     130: aload         8
     132: invokevirtual #12                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     135: goto          142
     138: aload_3
     139: invokevirtual #10                 // Method java/io/OutputStream.close:()V
     142: aload         7
     144: athrow
     145: aload_2
     146: invokevirtual #13                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     149: invokestatic  #14                 // Method java/lang/System.load:(Ljava/lang/String;)V
     152: return
    Exception table:
       from    to  target type
          73    77    80   Class java/lang/Throwable
          32    64    99   Class java/lang/Throwable
          32    64   108   any
         119   123   126   Class java/lang/Throwable
          99   110   108   any

  private static void loadLibrary();
    Code:
       0: ldc           #15                 // String os.name
       2: invokestatic  #16                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: getstatic     #17                 // Field java/util/Locale.ROOT:Ljava/util/Locale;
       8: invokevirtual #18                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      11: astore_0
      12: aload_0
      13: ldc           #19                 // String mac os
      15: invokevirtual #20                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      18: istore_1
      19: iload_1
      20: ifeq          28
      23: ldc           #21                 // String .dylib
      25: goto          30
      28: ldc           #22                 // String .so
      30: astore_2
      31: ldc           #23                 // class org/signal/client/internal/Native
      33: new           #24                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #26                 // String /libsignal_jni
      42: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_2
      46: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokevirtual #29                 // Method java/lang/Class.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
      55: astore_3
      56: aconst_null
      57: astore        4
      59: aload_3
      60: ifnull        71
      63: aload_3
      64: aload_2
      65: invokestatic  #30                 // Method copyToTempFileAndLoad:(Ljava/io/InputStream;Ljava/lang/String;)V
      68: goto          76
      71: ldc           #31                 // String signal_jni
      73: invokestatic  #32                 // Method java/lang/System.loadLibrary:(Ljava/lang/String;)V
      76: aload_3
      77: ifnull        157
      80: aload         4
      82: ifnull        104
      85: aload_3
      86: invokevirtual #33                 // Method java/io/InputStream.close:()V
      89: goto          157
      92: astore        5
      94: aload         4
      96: aload         5
      98: invokevirtual #12                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     101: goto          157
     104: aload_3
     105: invokevirtual #33                 // Method java/io/InputStream.close:()V
     108: goto          157
     111: astore        5
     113: aload         5
     115: astore        4
     117: aload         5
     119: athrow
     120: astore        6
     122: aload_3
     123: ifnull        154
     126: aload         4
     128: ifnull        150
     131: aload_3
     132: invokevirtual #33                 // Method java/io/InputStream.close:()V
     135: goto          154
     138: astore        7
     140: aload         4
     142: aload         7
     144: invokevirtual #12                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     147: goto          154
     150: aload_3
     151: invokevirtual #33                 // Method java/io/InputStream.close:()V
     154: aload         6
     156: athrow
     157: goto          170
     160: astore_0
     161: new           #35                 // class java/lang/RuntimeException
     164: dup
     165: aload_0
     166: invokespecial #36                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     169: athrow
     170: return
    Exception table:
       from    to  target type
          85    89    92   Class java/lang/Throwable
          59    76   111   Class java/lang/Throwable
          59    76   120   any
         131   135   138   Class java/lang/Throwable
         111   122   120   any
           0   157   160   Class java/lang/Exception

  private org.signal.client.internal.Native();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method java/lang/Object."<init>":()V
       4: return

  public static native void Aes256Ctr32_Destroy(long);

  public static native long Aes256Ctr32_New(byte[], byte[], int);

  public static native void Aes256Ctr32_Process(long, byte[], int, int);

  public static native void Aes256GcmDecryption_Destroy(long);

  public static native long Aes256GcmDecryption_New(byte[], byte[], byte[]);

  public static native void Aes256GcmDecryption_Update(long, byte[], int, int);

  public static native boolean Aes256GcmDecryption_VerifyTag(long, byte[]);

  public static native byte[] Aes256GcmEncryption_ComputeTag(long);

  public static native void Aes256GcmEncryption_Destroy(long);

  public static native long Aes256GcmEncryption_New(byte[], byte[], byte[]);

  public static native void Aes256GcmEncryption_Update(long, byte[], int, int);

  public static native byte[] Aes256GcmSiv_Decrypt(long, byte[], byte[], byte[]);

  public static native void Aes256GcmSiv_Destroy(long);

  public static native byte[] Aes256GcmSiv_Encrypt(long, byte[], byte[], byte[]);

  public static native long Aes256GcmSiv_New(byte[]);

  public static native void CryptographicHash_Destroy(long);

  public static native byte[] CryptographicHash_Finalize(long);

  public static native long CryptographicHash_New(java.lang.String);

  public static native void CryptographicHash_Update(long, byte[]);

  public static native void CryptographicHash_UpdateWithOffset(long, byte[], int, int);

  public static native void CryptographicMac_Destroy(long);

  public static native byte[] CryptographicMac_Finalize(long);

  public static native long CryptographicMac_New(java.lang.String, byte[]);

  public static native void CryptographicMac_Update(long, byte[]);

  public static native void CryptographicMac_UpdateWithOffset(long, byte[], int, int);

  public static native long DecryptionErrorMessage_Deserialize(byte[]);

  public static native void DecryptionErrorMessage_Destroy(long);

  public static native long DecryptionErrorMessage_ExtractFromSerializedContent(byte[]);

  public static native long DecryptionErrorMessage_ForOriginalMessage(byte[], int, long, int);

  public static native int DecryptionErrorMessage_GetDeviceId(long);

  public static native long DecryptionErrorMessage_GetRatchetKey(long);

  public static native byte[] DecryptionErrorMessage_GetSerialized(long);

  public static native long DecryptionErrorMessage_GetTimestamp(long);

  public static native byte[] DeviceTransfer_GenerateCertificate(byte[], java.lang.String, int);

  public static native byte[] DeviceTransfer_GeneratePrivateKey();

  public static native byte[] ECPrivateKey_Agree(long, long);

  public static native long ECPrivateKey_Deserialize(byte[]);

  public static native void ECPrivateKey_Destroy(long);

  public static native long ECPrivateKey_Generate();

  public static native long ECPrivateKey_GetPublicKey(long);

  public static native byte[] ECPrivateKey_Serialize(long);

  public static native byte[] ECPrivateKey_Sign(long, byte[]);

  public static native int ECPublicKey_Compare(long, long);

  public static native long ECPublicKey_Deserialize(byte[], int);

  public static native void ECPublicKey_Destroy(long);

  public static native byte[] ECPublicKey_GetPublicKeyBytes(long);

  public static native byte[] ECPublicKey_Serialize(long);

  public static native boolean ECPublicKey_Verify(long, byte[], byte[]);

  public static native byte[] GroupCipher_DecryptMessage(long, byte[], org.whispersystems.libsignal.groups.state.SenderKeyStore, java.lang.Object);

  public static native org.whispersystems.libsignal.protocol.CiphertextMessage GroupCipher_EncryptMessage(long, java.util.UUID, byte[], org.whispersystems.libsignal.groups.state.SenderKeyStore, java.lang.Object);

  public static native long GroupSessionBuilder_CreateSenderKeyDistributionMessage(long, java.util.UUID, org.whispersystems.libsignal.groups.state.SenderKeyStore, java.lang.Object);

  public static native void GroupSessionBuilder_ProcessSenderKeyDistributionMessage(long, long, org.whispersystems.libsignal.groups.state.SenderKeyStore, java.lang.Object);

  public static native byte[] HKDF_DeriveSecrets(int, int, byte[], byte[], byte[]);

  public static native long[] IdentityKeyPair_Deserialize(byte[]);

  public static native byte[] IdentityKeyPair_Serialize(long, long);

  public static native void Logger_Initialize(int, java.lang.Class);

  public static native void Logger_SetMaxLevel(int);

  public static native void NumericFingerprintGenerator_Destroy(long);

  public static native java.lang.String NumericFingerprintGenerator_GetDisplayString(long);

  public static native byte[] NumericFingerprintGenerator_GetScannableEncoding(long);

  public static native long NumericFingerprintGenerator_New(int, int, byte[], byte[], byte[], byte[]);

  public static native long PlaintextContent_Deserialize(byte[]);

  public static native byte[] PlaintextContent_DeserializeAndGetContent(byte[]);

  public static native void PlaintextContent_Destroy(long);

  public static native long PlaintextContent_FromDecryptionErrorMessage(long);

  public static native byte[] PlaintextContent_GetBody(long);

  public static native byte[] PlaintextContent_GetSerialized(long);

  public static native void PreKeyBundle_Destroy(long);

  public static native int PreKeyBundle_GetDeviceId(long);

  public static native long PreKeyBundle_GetIdentityKey(long);

  public static native int PreKeyBundle_GetPreKeyId(long);

  public static native long PreKeyBundle_GetPreKeyPublic(long);

  public static native int PreKeyBundle_GetRegistrationId(long);

  public static native int PreKeyBundle_GetSignedPreKeyId(long);

  public static native long PreKeyBundle_GetSignedPreKeyPublic(long);

  public static native byte[] PreKeyBundle_GetSignedPreKeySignature(long);

  public static native long PreKeyBundle_New(int, int, int, long, int, long, byte[], long);

  public static native long PreKeyRecord_Deserialize(byte[]);

  public static native void PreKeyRecord_Destroy(long);

  public static native int PreKeyRecord_GetId(long);

  public static native long PreKeyRecord_GetPrivateKey(long);

  public static native long PreKeyRecord_GetPublicKey(long);

  public static native byte[] PreKeyRecord_GetSerialized(long);

  public static native long PreKeyRecord_New(int, long, long);

  public static native long PreKeySignalMessage_Deserialize(byte[]);

  public static native void PreKeySignalMessage_Destroy(long);

  public static native byte[] PreKeySignalMessage_GetBaseKey(long);

  public static native byte[] PreKeySignalMessage_GetIdentityKey(long);

  public static native int PreKeySignalMessage_GetPreKeyId(long);

  public static native int PreKeySignalMessage_GetRegistrationId(long);

  public static native byte[] PreKeySignalMessage_GetSerialized(long);

  public static native byte[] PreKeySignalMessage_GetSignalMessage(long);

  public static native int PreKeySignalMessage_GetSignedPreKeyId(long);

  public static native int PreKeySignalMessage_GetVersion(long);

  public static native long PreKeySignalMessage_New(int, int, int, int, long, long, long);

  public static native void ProtocolAddress_Destroy(long);

  public static native int ProtocolAddress_DeviceId(long);

  public static native java.lang.String ProtocolAddress_Name(long);

  public static native long ProtocolAddress_New(java.lang.String, int);

  public static native boolean ScannableFingerprint_Compare(byte[], byte[]);

  public static native long SealedSessionCipher_DecryptToUsmc(byte[], org.whispersystems.libsignal.state.IdentityKeyStore, java.lang.Object);

  public static native byte[] SealedSessionCipher_Encrypt(long, long, org.whispersystems.libsignal.state.IdentityKeyStore, java.lang.Object);

  public static native byte[] SealedSessionCipher_MultiRecipientEncrypt(long[], long[], long, org.whispersystems.libsignal.state.IdentityKeyStore, java.lang.Object);

  public static native byte[] SealedSessionCipher_MultiRecipientMessageForSingleRecipient(byte[]);

  public static native long SenderCertificate_Deserialize(byte[]);

  public static native void SenderCertificate_Destroy(long);

  public static native byte[] SenderCertificate_GetCertificate(long);

  public static native int SenderCertificate_GetDeviceId(long);

  public static native long SenderCertificate_GetExpiration(long);

  public static native long SenderCertificate_GetKey(long);

  public static native java.lang.String SenderCertificate_GetSenderE164(long);

  public static native java.lang.String SenderCertificate_GetSenderUuid(long);

  public static native byte[] SenderCertificate_GetSerialized(long);

  public static native long SenderCertificate_GetServerCertificate(long);

  public static native byte[] SenderCertificate_GetSignature(long);

  public static native long SenderCertificate_New(java.lang.String, java.lang.String, int, long, long, long, long);

  public static native boolean SenderCertificate_Validate(long, long, long);

  public static native long SenderKeyDistributionMessage_Deserialize(byte[]);

  public static native void SenderKeyDistributionMessage_Destroy(long);

  public static native int SenderKeyDistributionMessage_GetChainId(long);

  public static native byte[] SenderKeyDistributionMessage_GetChainKey(long);

  public static native java.util.UUID SenderKeyDistributionMessage_GetDistributionId(long);

  public static native int SenderKeyDistributionMessage_GetIteration(long);

  public static native byte[] SenderKeyDistributionMessage_GetSerialized(long);

  public static native byte[] SenderKeyDistributionMessage_GetSignatureKey(long);

  public static native long SenderKeyDistributionMessage_New(int, java.util.UUID, int, int, byte[], long);

  public static native long SenderKeyMessage_Deserialize(byte[]);

  public static native void SenderKeyMessage_Destroy(long);

  public static native int SenderKeyMessage_GetChainId(long);

  public static native byte[] SenderKeyMessage_GetCipherText(long);

  public static native java.util.UUID SenderKeyMessage_GetDistributionId(long);

  public static native int SenderKeyMessage_GetIteration(long);

  public static native byte[] SenderKeyMessage_GetSerialized(long);

  public static native long SenderKeyMessage_New(int, java.util.UUID, int, int, byte[], long);

  public static native boolean SenderKeyMessage_VerifySignature(long, long);

  public static native long SenderKeyRecord_Deserialize(byte[]);

  public static native void SenderKeyRecord_Destroy(long);

  public static native byte[] SenderKeyRecord_GetSerialized(long);

  public static native long SenderKeyRecord_New();

  public static native long ServerCertificate_Deserialize(byte[]);

  public static native void ServerCertificate_Destroy(long);

  public static native byte[] ServerCertificate_GetCertificate(long);

  public static native long ServerCertificate_GetKey(long);

  public static native int ServerCertificate_GetKeyId(long);

  public static native byte[] ServerCertificate_GetSerialized(long);

  public static native byte[] ServerCertificate_GetSignature(long);

  public static native long ServerCertificate_New(int, long, long);

  public static native void SessionBuilder_ProcessPreKeyBundle(long, long, org.whispersystems.libsignal.state.SessionStore, org.whispersystems.libsignal.state.IdentityKeyStore, java.lang.Object);

  public static native byte[] SessionCipher_DecryptPreKeySignalMessage(long, long, org.whispersystems.libsignal.state.SessionStore, org.whispersystems.libsignal.state.IdentityKeyStore, org.whispersystems.libsignal.state.PreKeyStore, org.whispersystems.libsignal.state.SignedPreKeyStore, java.lang.Object);

  public static native byte[] SessionCipher_DecryptSignalMessage(long, long, org.whispersystems.libsignal.state.SessionStore, org.whispersystems.libsignal.state.IdentityKeyStore, java.lang.Object);

  public static native org.whispersystems.libsignal.protocol.CiphertextMessage SessionCipher_EncryptMessage(byte[], long, org.whispersystems.libsignal.state.SessionStore, org.whispersystems.libsignal.state.IdentityKeyStore, java.lang.Object);

  public static native void SessionRecord_ArchiveCurrentState(long);

  public static native boolean SessionRecord_CurrentRatchetKeyMatches(long, long);

  public static native long SessionRecord_Deserialize(byte[]);

  public static native void SessionRecord_Destroy(long);

  public static native long SessionRecord_FromSingleSessionState(byte[]);

  public static native byte[] SessionRecord_GetAliceBaseKey(long);

  public static native byte[] SessionRecord_GetLocalIdentityKeyPublic(long);

  public static native int SessionRecord_GetLocalRegistrationId(long);

  public static native byte[] SessionRecord_GetReceiverChainKeyValue(long, long);

  public static native byte[] SessionRecord_GetRemoteIdentityKeyPublic(long);

  public static native int SessionRecord_GetRemoteRegistrationId(long);

  public static native byte[] SessionRecord_GetSenderChainKeyValue(long);

  public static native int SessionRecord_GetSessionVersion(long);

  public static native boolean SessionRecord_HasSenderChain(long);

  public static native long SessionRecord_InitializeAliceSession(long, long, long, long, long, long, long);

  public static native long SessionRecord_InitializeBobSession(long, long, long, long, long, long, long, long);

  public static native long SessionRecord_NewFresh();

  public static native byte[] SessionRecord_Serialize(long);

  public static native long SignalMessage_Deserialize(byte[]);

  public static native void SignalMessage_Destroy(long);

  public static native byte[] SignalMessage_GetBody(long);

  public static native int SignalMessage_GetCounter(long);

  public static native int SignalMessage_GetMessageVersion(long);

  public static native byte[] SignalMessage_GetSenderRatchetKey(long);

  public static native byte[] SignalMessage_GetSerialized(long);

  public static native long SignalMessage_New(int, byte[], long, int, int, byte[], long, long);

  public static native boolean SignalMessage_VerifyMac(long, long, long, byte[]);

  public static native long SignedPreKeyRecord_Deserialize(byte[]);

  public static native void SignedPreKeyRecord_Destroy(long);

  public static native int SignedPreKeyRecord_GetId(long);

  public static native long SignedPreKeyRecord_GetPrivateKey(long);

  public static native long SignedPreKeyRecord_GetPublicKey(long);

  public static native byte[] SignedPreKeyRecord_GetSerialized(long);

  public static native byte[] SignedPreKeyRecord_GetSignature(long);

  public static native long SignedPreKeyRecord_GetTimestamp(long);

  public static native long SignedPreKeyRecord_New(int, long, long, long, byte[]);

  public static native long UnidentifiedSenderMessageContent_Deserialize(byte[]);

  public static native void UnidentifiedSenderMessageContent_Destroy(long);

  public static native int UnidentifiedSenderMessageContent_GetContentHint(long);

  public static native byte[] UnidentifiedSenderMessageContent_GetContents(long);

  public static native byte[] UnidentifiedSenderMessageContent_GetGroupId(long);

  public static native int UnidentifiedSenderMessageContent_GetMsgType(long);

  public static native long UnidentifiedSenderMessageContent_GetSenderCert(long);

  public static native byte[] UnidentifiedSenderMessageContent_GetSerialized(long);

  public static native long UnidentifiedSenderMessageContent_New(org.whispersystems.libsignal.protocol.CiphertextMessage, long, int, byte[]);

  static {};
    Code:
       0: invokestatic  #38                 // Method loadLibrary:()V
       3: iconst_4
       4: ldc           #40                 // class org/whispersystems/libsignal/logging/Log
       6: invokestatic  #41                 // Method Logger_Initialize:(ILjava/lang/Class;)V
       9: return
}
