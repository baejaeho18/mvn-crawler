Compiled from "histogram.kt"
public final class org.jetbrains.kotlinx.ggdsl.letsplot.layers.HistogramKt {
  private static final org.jetbrains.kotlinx.ggdsl.letsplot.LetsPlotGeom HISTOGRAM;

  private static final org.jetbrains.kotlinx.ggdsl.ir.aes.AesName BINS;

  private static final org.jetbrains.kotlinx.ggdsl.ir.aes.AesName BIN_WIDTH;

  private static final org.jetbrains.kotlinx.ggdsl.ir.aes.AesName BOUNDARY;

  public static final org.jetbrains.kotlinx.ggdsl.letsplot.LetsPlotGeom getHISTOGRAM();
    Code:
       0: getstatic     #11                 // Field HISTOGRAM:Lorg/jetbrains/kotlinx/ggdsl/letsplot/LetsPlotGeom;
       3: areturn

  public static final org.jetbrains.kotlinx.ggdsl.ir.aes.AesName getBINS();
    Code:
       0: getstatic     #17                 // Field BINS:Lorg/jetbrains/kotlinx/ggdsl/ir/aes/AesName;
       3: areturn

  public static final org.jetbrains.kotlinx.ggdsl.ir.aes.AesName getBIN_WIDTH();
    Code:
       0: getstatic     #21                 // Field BIN_WIDTH:Lorg/jetbrains/kotlinx/ggdsl/ir/aes/AesName;
       3: areturn

  public static final org.jetbrains.kotlinx.ggdsl.ir.aes.AesName getBOUNDARY();
    Code:
       0: getstatic     #25                 // Field BOUNDARY:Lorg/jetbrains/kotlinx/ggdsl/ir/aes/AesName;
       3: areturn

  public static final <T> void histogram(org.jetbrains.kotlinx.ggdsl.dsl.PlotContext, org.jetbrains.kotlinx.ggdsl.ir.data.DataSource<T>, kotlin.jvm.functions.Function1<? super org.jetbrains.kotlinx.ggdsl.letsplot.layers.HistogramContext, kotlin.Unit>);
    Code:
       0: aload_0
       1: ldc           #30                 // String <this>
       3: invokestatic  #36                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #38                 // String source
       9: invokestatic  #36                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_2
      13: ldc           #40                 // String block
      15: invokestatic  #36                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: iconst_0
      19: istore_3
      20: aload_0
      21: invokevirtual #46                 // Method org/jetbrains/kotlinx/ggdsl/dsl/PlotContext.getLayers:()Ljava/util/List;
      24: new           #48                 // class org/jetbrains/kotlinx/ggdsl/letsplot/layers/HistogramContext
      27: dup
      28: aload_0
      29: invokevirtual #52                 // Method org/jetbrains/kotlinx/ggdsl/dsl/PlotContext.getData:()Ljava/util/Map;
      32: invokespecial #56                 // Method org/jetbrains/kotlinx/ggdsl/letsplot/layers/HistogramContext."<init>":(Ljava/util/Map;)V
      35: astore        4
      37: aload         4
      39: checkcast     #48                 // class org/jetbrains/kotlinx/ggdsl/letsplot/layers/HistogramContext
      42: astore        5
      44: astore        10
      46: iconst_0
      47: istore        6
      49: aload         5
      51: checkcast     #58                 // class org/jetbrains/kotlinx/ggdsl/dsl/BindingContext
      54: aload_0
      55: checkcast     #58                 // class org/jetbrains/kotlinx/ggdsl/dsl/BindingContext
      58: iconst_0
      59: iconst_2
      60: aconst_null
      61: invokestatic  #62                 // Method org/jetbrains/kotlinx/ggdsl/dsl/BindingContext.copyFrom$default:(Lorg/jetbrains/kotlinx/ggdsl/dsl/BindingContext;Lorg/jetbrains/kotlinx/ggdsl/dsl/BindingContext;ZILjava/lang/Object;)V
      64: aload         5
      66: invokevirtual #66                 // Method org/jetbrains/kotlinx/ggdsl/letsplot/layers/HistogramContext.getX:()Lorg/jetbrains/kotlinx/ggdsl/letsplot/XAes;
      69: checkcast     #68                 // class org/jetbrains/kotlinx/ggdsl/ir/aes/ScalablePositionalAes
      72: astore        7
      74: iconst_0
      75: istore        8
      77: new           #70                 // class org/jetbrains/kotlinx/ggdsl/ir/bindings/ScaledUnspecifiedDefaultPositionalMapping
      80: dup
      81: aload         7
      83: invokeinterface #73,  1           // InterfaceMethod org/jetbrains/kotlinx/ggdsl/ir/aes/ScalablePositionalAes.getName:()Lorg/jetbrains/kotlinx/ggdsl/ir/aes/AesName;
      88: aload_1
      89: invokestatic  #79                 // Method org/jetbrains/kotlinx/ggdsl/dsl/SourceScaledKt.scaled:(Lorg/jetbrains/kotlinx/ggdsl/ir/data/DataSource;)Lorg/jetbrains/kotlinx/ggdsl/ir/bindings/SourceScaledUnspecifiedDefault;
      92: bipush        6
      94: ldc           #81                 // String T
      96: invokestatic  #85                 // Method kotlin/jvm/internal/Intrinsics.reifiedOperationMarker:(ILjava/lang/String;)V
      99: aconst_null
     100: invokespecial #88                 // Method org/jetbrains/kotlinx/ggdsl/ir/bindings/ScaledUnspecifiedDefaultPositionalMapping."<init>":(Lorg/jetbrains/kotlinx/ggdsl/ir/aes/AesName;Lorg/jetbrains/kotlinx/ggdsl/ir/bindings/SourceScaledUnspecifiedDefault;Lkotlin/reflect/KType;)V
     103: astore        9
     105: aload         7
     107: invokeinterface #92,  1           // InterfaceMethod org/jetbrains/kotlinx/ggdsl/ir/aes/ScalablePositionalAes.getContext:()Lorg/jetbrains/kotlinx/ggdsl/dsl/BindingContext;
     112: invokevirtual #96                 // Method org/jetbrains/kotlinx/ggdsl/dsl/BindingContext.getBindingCollector:()Lorg/jetbrains/kotlinx/ggdsl/dsl/BindingCollector;
     115: invokevirtual #101                // Method org/jetbrains/kotlinx/ggdsl/dsl/BindingCollector.getMappings:()Ljava/util/Map;
     118: aload         7
     120: invokeinterface #73,  1           // InterfaceMethod org/jetbrains/kotlinx/ggdsl/ir/aes/ScalablePositionalAes.getName:()Lorg/jetbrains/kotlinx/ggdsl/ir/aes/AesName;
     125: aload         9
     127: invokeinterface #107,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     132: pop
     133: nop
     134: nop
     135: aload         10
     137: aload         4
     139: astore        4
     141: aload_2
     142: aload         4
     144: invokeinterface #113,  2          // InterfaceMethod kotlin/jvm/functions/Function1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
     149: pop
     150: aload         4
     152: checkcast     #115                // class org/jetbrains/kotlinx/ggdsl/dsl/LayerContext
     155: invokestatic  #117                // Method getHISTOGRAM:()Lorg/jetbrains/kotlinx/ggdsl/letsplot/LetsPlotGeom;
     158: checkcast     #119                // class org/jetbrains/kotlinx/ggdsl/ir/geom/Geom
     161: invokestatic  #125                // Method org/jetbrains/kotlinx/ggdsl/dsl/ContextsKt.toLayer:(Lorg/jetbrains/kotlinx/ggdsl/dsl/LayerContext;Lorg/jetbrains/kotlinx/ggdsl/ir/geom/Geom;)Lorg/jetbrains/kotlinx/ggdsl/ir/Layer;
     164: invokeinterface #131,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     169: pop
     170: return

  public static final <T> void histogram(org.jetbrains.kotlinx.ggdsl.dsl.PlotContext, java.lang.Iterable<? extends T>, kotlin.jvm.functions.Function1<? super org.jetbrains.kotlinx.ggdsl.letsplot.layers.HistogramContext, kotlin.Unit>);
    Code:
       0: aload_0
       1: ldc           #30                 // String <this>
       3: invokestatic  #36                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #38                 // String source
       9: invokestatic  #36                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_2
      13: ldc           #40                 // String block
      15: invokestatic  #36                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: iconst_0
      19: istore_3
      20: aload_0
      21: invokevirtual #46                 // Method org/jetbrains/kotlinx/ggdsl/dsl/PlotContext.getLayers:()Ljava/util/List;
      24: new           #48                 // class org/jetbrains/kotlinx/ggdsl/letsplot/layers/HistogramContext
      27: dup
      28: aload_0
      29: invokevirtual #52                 // Method org/jetbrains/kotlinx/ggdsl/dsl/PlotContext.getData:()Ljava/util/Map;
      32: invokespecial #56                 // Method org/jetbrains/kotlinx/ggdsl/letsplot/layers/HistogramContext."<init>":(Ljava/util/Map;)V
      35: astore        4
      37: aload         4
      39: checkcast     #48                 // class org/jetbrains/kotlinx/ggdsl/letsplot/layers/HistogramContext
      42: astore        5
      44: astore        22
      46: iconst_0
      47: istore        6
      49: aload         5
      51: checkcast     #58                 // class org/jetbrains/kotlinx/ggdsl/dsl/BindingContext
      54: aload_0
      55: checkcast     #58                 // class org/jetbrains/kotlinx/ggdsl/dsl/BindingContext
      58: iconst_0
      59: iconst_2
      60: aconst_null
      61: invokestatic  #62                 // Method org/jetbrains/kotlinx/ggdsl/dsl/BindingContext.copyFrom$default:(Lorg/jetbrains/kotlinx/ggdsl/dsl/BindingContext;Lorg/jetbrains/kotlinx/ggdsl/dsl/BindingContext;ZILjava/lang/Object;)V
      64: aload         5
      66: invokevirtual #66                 // Method org/jetbrains/kotlinx/ggdsl/letsplot/layers/HistogramContext.getX:()Lorg/jetbrains/kotlinx/ggdsl/letsplot/XAes;
      69: checkcast     #68                 // class org/jetbrains/kotlinx/ggdsl/ir/aes/ScalablePositionalAes
      72: astore        7
      74: iconst_0
      75: istore        8
      77: aload         7
      79: invokeinterface #73,  1           // InterfaceMethod org/jetbrains/kotlinx/ggdsl/ir/aes/ScalablePositionalAes.getName:()Lorg/jetbrains/kotlinx/ggdsl/ir/aes/AesName;
      84: aload         7
      86: invokeinterface #92,  1           // InterfaceMethod org/jetbrains/kotlinx/ggdsl/ir/aes/ScalablePositionalAes.getContext:()Lorg/jetbrains/kotlinx/ggdsl/dsl/BindingContext;
      91: checkcast     #58                 // class org/jetbrains/kotlinx/ggdsl/dsl/BindingContext
      94: astore        9
      96: astore        10
      98: iconst_0
      99: istore        11
     101: aload         9
     103: astore        12
     105: aload_1
     106: astore        13
     108: iconst_0
     109: istore        14
     111: aload         13
     113: invokestatic  #153                // Method kotlin/collections/CollectionsKt.toList:(Ljava/lang/Iterable;)Ljava/util/List;
     116: astore        15
     118: aload         12
     120: invokevirtual #157                // Method org/jetbrains/kotlinx/ggdsl/dsl/BindingContext.generateID:()Ljava/lang/String;
     123: astore        16
     125: aload         12
     127: invokevirtual #158                // Method org/jetbrains/kotlinx/ggdsl/dsl/BindingContext.getData:()Ljava/util/Map;
     130: aload         16
     132: aload         15
     134: invokeinterface #107,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     139: pop
     140: iconst_0
     141: istore        17
     143: new           #160                // class org/jetbrains/kotlinx/ggdsl/ir/data/DataSource
     146: dup
     147: aload         16
     149: bipush        6
     151: ldc           #81                 // String T
     153: invokestatic  #85                 // Method kotlin/jvm/internal/Intrinsics.reifiedOperationMarker:(ILjava/lang/String;)V
     156: aconst_null
     157: invokespecial #163                // Method org/jetbrains/kotlinx/ggdsl/ir/data/DataSource."<init>":(Ljava/lang/String;Lkotlin/reflect/KType;)V
     160: nop
     161: nop
     162: aload         10
     164: swap
     165: checkcast     #160                // class org/jetbrains/kotlinx/ggdsl/ir/data/DataSource
     168: invokestatic  #79                 // Method org/jetbrains/kotlinx/ggdsl/dsl/SourceScaledKt.scaled:(Lorg/jetbrains/kotlinx/ggdsl/ir/data/DataSource;)Lorg/jetbrains/kotlinx/ggdsl/ir/bindings/SourceScaledUnspecifiedDefault;
     171: bipush        6
     173: ldc           #81                 // String T
     175: invokestatic  #85                 // Method kotlin/jvm/internal/Intrinsics.reifiedOperationMarker:(ILjava/lang/String;)V
     178: aconst_null
     179: astore        18
     181: astore        19
     183: astore        20
     185: new           #70                 // class org/jetbrains/kotlinx/ggdsl/ir/bindings/ScaledUnspecifiedDefaultPositionalMapping
     188: dup
     189: aload         20
     191: aload         19
     193: aload         18
     195: invokespecial #88                 // Method org/jetbrains/kotlinx/ggdsl/ir/bindings/ScaledUnspecifiedDefaultPositionalMapping."<init>":(Lorg/jetbrains/kotlinx/ggdsl/ir/aes/AesName;Lorg/jetbrains/kotlinx/ggdsl/ir/bindings/SourceScaledUnspecifiedDefault;Lkotlin/reflect/KType;)V
     198: astore        21
     200: aload         7
     202: invokeinterface #92,  1           // InterfaceMethod org/jetbrains/kotlinx/ggdsl/ir/aes/ScalablePositionalAes.getContext:()Lorg/jetbrains/kotlinx/ggdsl/dsl/BindingContext;
     207: invokevirtual #96                 // Method org/jetbrains/kotlinx/ggdsl/dsl/BindingContext.getBindingCollector:()Lorg/jetbrains/kotlinx/ggdsl/dsl/BindingCollector;
     210: invokevirtual #101                // Method org/jetbrains/kotlinx/ggdsl/dsl/BindingCollector.getMappings:()Ljava/util/Map;
     213: aload         7
     215: invokeinterface #73,  1           // InterfaceMethod org/jetbrains/kotlinx/ggdsl/ir/aes/ScalablePositionalAes.getName:()Lorg/jetbrains/kotlinx/ggdsl/ir/aes/AesName;
     220: aload         21
     222: invokeinterface #107,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     227: pop
     228: nop
     229: nop
     230: aload         22
     232: aload         4
     234: astore        4
     236: aload_2
     237: aload         4
     239: invokeinterface #113,  2          // InterfaceMethod kotlin/jvm/functions/Function1.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
     244: pop
     245: aload         4
     247: checkcast     #115                // class org/jetbrains/kotlinx/ggdsl/dsl/LayerContext
     250: invokestatic  #117                // Method getHISTOGRAM:()Lorg/jetbrains/kotlinx/ggdsl/letsplot/LetsPlotGeom;
     253: checkcast     #119                // class org/jetbrains/kotlinx/ggdsl/ir/geom/Geom
     256: invokestatic  #125                // Method org/jetbrains/kotlinx/ggdsl/dsl/ContextsKt.toLayer:(Lorg/jetbrains/kotlinx/ggdsl/dsl/LayerContext;Lorg/jetbrains/kotlinx/ggdsl/ir/geom/Geom;)Lorg/jetbrains/kotlinx/ggdsl/ir/Layer;
     259: invokeinterface #131,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     264: pop
     265: return

  static {};
    Code:
       0: new           #181                // class org/jetbrains/kotlinx/ggdsl/letsplot/LetsPlotGeom
       3: dup
       4: ldc           #182                // String histogram
       6: invokespecial #185                // Method org/jetbrains/kotlinx/ggdsl/letsplot/LetsPlotGeom."<init>":(Ljava/lang/String;)V
       9: putstatic     #11                 // Field HISTOGRAM:Lorg/jetbrains/kotlinx/ggdsl/letsplot/LetsPlotGeom;
      12: new           #187                // class org/jetbrains/kotlinx/ggdsl/ir/aes/AesName
      15: dup
      16: ldc           #189                // String bins
      18: invokespecial #190                // Method org/jetbrains/kotlinx/ggdsl/ir/aes/AesName."<init>":(Ljava/lang/String;)V
      21: putstatic     #17                 // Field BINS:Lorg/jetbrains/kotlinx/ggdsl/ir/aes/AesName;
      24: new           #187                // class org/jetbrains/kotlinx/ggdsl/ir/aes/AesName
      27: dup
      28: ldc           #192                // String binWidth
      30: invokespecial #190                // Method org/jetbrains/kotlinx/ggdsl/ir/aes/AesName."<init>":(Ljava/lang/String;)V
      33: putstatic     #21                 // Field BIN_WIDTH:Lorg/jetbrains/kotlinx/ggdsl/ir/aes/AesName;
      36: new           #187                // class org/jetbrains/kotlinx/ggdsl/ir/aes/AesName
      39: dup
      40: ldc           #194                // String boundary
      42: invokespecial #190                // Method org/jetbrains/kotlinx/ggdsl/ir/aes/AesName."<init>":(Ljava/lang/String;)V
      45: putstatic     #25                 // Field BOUNDARY:Lorg/jetbrains/kotlinx/ggdsl/ir/aes/AesName;
      48: return
}
