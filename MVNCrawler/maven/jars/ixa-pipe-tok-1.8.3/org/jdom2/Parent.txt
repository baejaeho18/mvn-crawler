Compiled from "Parent.java"
public interface org.jdom2.Parent extends java.lang.Cloneable,org.jdom2.NamespaceAware,java.io.Serializable {
  public abstract int getContentSize();

  public abstract int indexOf(org.jdom2.Content);

  public abstract java.util.List<org.jdom2.Content> cloneContent();

  public abstract org.jdom2.Content getContent(int);

  public abstract java.util.List<org.jdom2.Content> getContent();

  public abstract <E extends org.jdom2.Content> java.util.List<E> getContent(org.jdom2.filter.Filter<E>);

  public abstract java.util.List<org.jdom2.Content> removeContent();

  public abstract <E extends org.jdom2.Content> java.util.List<E> removeContent(org.jdom2.filter.Filter<E>);

  public abstract boolean removeContent(org.jdom2.Content);

  public abstract org.jdom2.Content removeContent(int);

  public abstract java.lang.Object clone();

  public abstract org.jdom2.util.IteratorIterable<org.jdom2.Content> getDescendants();

  public abstract <E extends org.jdom2.Content> org.jdom2.util.IteratorIterable<E> getDescendants(org.jdom2.filter.Filter<E>);

  public abstract org.jdom2.Parent getParent();

  public abstract org.jdom2.Document getDocument();

  public abstract void canContainContent(org.jdom2.Content, int, boolean) throws org.jdom2.IllegalAddException;

  public abstract org.jdom2.Parent addContent(org.jdom2.Content);

  public abstract org.jdom2.Parent addContent(java.util.Collection<? extends org.jdom2.Content>);

  public abstract org.jdom2.Parent addContent(int, org.jdom2.Content);

  public abstract org.jdom2.Parent addContent(int, java.util.Collection<? extends org.jdom2.Content>);
}
