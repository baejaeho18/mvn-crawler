Compiled from "WalkerTRIM_FULL_WHITE.java"
public class org.jdom2.output.support.WalkerTRIM_FULL_WHITE extends org.jdom2.output.support.AbstractFormattedWalker {
  public org.jdom2.output.support.WalkerTRIM_FULL_WHITE(java.util.List<? extends org.jdom2.Content>, org.jdom2.output.support.FormatStack, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #1                  // Method org/jdom2/output/support/AbstractFormattedWalker."<init>":(Ljava/util/List;Lorg/jdom2/output/support/FormatStack;Z)V
       7: return

  protected void analyzeMultiText(org.jdom2.output.support.AbstractFormattedWalker$MultiText, int, int);
    Code:
       0: iload_3
       1: istore        4
       3: iinc          4, -1
       6: iload         4
       8: iflt          46
      11: aload_0
      12: iload_2
      13: iload         4
      15: iadd
      16: invokevirtual #2                  // Method get:(I)Lorg/jdom2/Content;
      19: astore        5
      21: aload         5
      23: instanceof    #3                  // class org/jdom2/Text
      26: ifeq          46
      29: aload         5
      31: invokevirtual #4                  // Method org/jdom2/Content.getValue:()Ljava/lang/String;
      34: invokestatic  #5                  // Method org/jdom2/Verifier.isAllXMLWhitespace:(Ljava/lang/String;)Z
      37: ifne          43
      40: goto          46
      43: goto          3
      46: iload         4
      48: ifge          52
      51: return
      52: iconst_0
      53: istore        5
      55: iload         5
      57: iload_3
      58: if_icmpge     150
      61: aload_0
      62: iload_2
      63: iload         5
      65: iadd
      66: invokevirtual #2                  // Method get:(I)Lorg/jdom2/Content;
      69: astore        6
      71: getstatic     #6                  // Field org/jdom2/output/support/WalkerTRIM_FULL_WHITE$1.$SwitchMap$org$jdom2$Content$CType:[I
      74: aload         6
      76: invokevirtual #7                  // Method org/jdom2/Content.getCType:()Lorg/jdom2/Content$CType;
      79: invokevirtual #8                  // Method org/jdom2/Content$CType.ordinal:()I
      82: iaload
      83: tableswitch   { // 1 to 3
                     1: 108
                     2: 123
                     3: 138
               default: 138
          }
     108: aload_1
     109: getstatic     #9                  // Field org/jdom2/output/support/AbstractFormattedWalker$Trim.NONE:Lorg/jdom2/output/support/AbstractFormattedWalker$Trim;
     112: aload         6
     114: invokevirtual #4                  // Method org/jdom2/Content.getValue:()Ljava/lang/String;
     117: invokevirtual #10                 // Method org/jdom2/output/support/AbstractFormattedWalker$MultiText.appendText:(Lorg/jdom2/output/support/AbstractFormattedWalker$Trim;Ljava/lang/String;)V
     120: goto          144
     123: aload_1
     124: getstatic     #9                  // Field org/jdom2/output/support/AbstractFormattedWalker$Trim.NONE:Lorg/jdom2/output/support/AbstractFormattedWalker$Trim;
     127: aload         6
     129: invokevirtual #4                  // Method org/jdom2/Content.getValue:()Ljava/lang/String;
     132: invokevirtual #11                 // Method org/jdom2/output/support/AbstractFormattedWalker$MultiText.appendCDATA:(Lorg/jdom2/output/support/AbstractFormattedWalker$Trim;Ljava/lang/String;)V
     135: goto          144
     138: aload_1
     139: aload         6
     141: invokevirtual #12                 // Method org/jdom2/output/support/AbstractFormattedWalker$MultiText.appendRaw:(Lorg/jdom2/Content;)V
     144: iinc          5, 1
     147: goto          55
     150: return
}
