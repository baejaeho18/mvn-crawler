Compiled from "Namespace.java"
public final class org.jdom2.Namespace implements java.io.Serializable {
  private static final java.util.concurrent.ConcurrentMap<java.lang.String, java.util.concurrent.ConcurrentMap<java.lang.String, org.jdom2.Namespace>> namespacemap;

  public static final org.jdom2.Namespace NO_NAMESPACE;

  public static final org.jdom2.Namespace XML_NAMESPACE;

  private final transient java.lang.String prefix;

  private final transient java.lang.String uri;

  private static final long serialVersionUID;

  public static org.jdom2.Namespace getNamespace(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     35
       4: aload_0
       5: ifnull        17
       8: ldc           #1                  // String
      10: aload_0
      11: invokevirtual #2                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      14: ifeq          21
      17: getstatic     #3                  // Field NO_NAMESPACE:Lorg/jdom2/Namespace;
      20: areturn
      21: new           #4                  // class org/jdom2/IllegalNameException
      24: dup
      25: ldc           #1                  // String
      27: ldc           #5                  // String namespace
      29: ldc           #6                  // String Namespace URIs must be non-null and non-empty Strings
      31: invokespecial #7                  // Method org/jdom2/IllegalNameException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      34: athrow
      35: getstatic     #8                  // Field namespacemap:Ljava/util/concurrent/ConcurrentMap;
      38: aload_1
      39: invokeinterface #9,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #10                 // class java/util/concurrent/ConcurrentMap
      47: astore_2
      48: aload_2
      49: ifnonnull     104
      52: aload_1
      53: invokestatic  #11                 // Method org/jdom2/Verifier.checkNamespaceURI:(Ljava/lang/String;)Ljava/lang/String;
      56: dup
      57: astore_3
      58: ifnull        73
      61: new           #4                  // class org/jdom2/IllegalNameException
      64: dup
      65: aload_1
      66: ldc           #12                 // String Namespace URI
      68: aload_3
      69: invokespecial #7                  // Method org/jdom2/IllegalNameException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      72: athrow
      73: new           #13                 // class java/util/concurrent/ConcurrentHashMap
      76: dup
      77: invokespecial #14                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      80: astore_2
      81: getstatic     #8                  // Field namespacemap:Ljava/util/concurrent/ConcurrentMap;
      84: aload_1
      85: aload_2
      86: invokeinterface #15,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      91: checkcast     #10                 // class java/util/concurrent/ConcurrentMap
      94: astore        4
      96: aload         4
      98: ifnull        104
     101: aload         4
     103: astore_2
     104: aload_2
     105: aload_0
     106: ifnonnull     114
     109: ldc           #1                  // String
     111: goto          115
     114: aload_0
     115: invokeinterface #9,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     120: checkcast     #16                 // class org/jdom2/Namespace
     123: astore_3
     124: aload_3
     125: ifnull        130
     128: aload_3
     129: areturn
     130: ldc           #1                  // String
     132: aload_1
     133: invokevirtual #2                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     136: ifeq          153
     139: new           #4                  // class org/jdom2/IllegalNameException
     142: dup
     143: ldc           #1                  // String
     145: ldc           #5                  // String namespace
     147: ldc           #6                  // String Namespace URIs must be non-null and non-empty Strings
     149: invokespecial #7                  // Method org/jdom2/IllegalNameException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     152: athrow
     153: ldc           #17                 // String http://www.w3.org/XML/1998/namespace
     155: aload_1
     156: invokevirtual #2                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     159: ifeq          175
     162: new           #4                  // class org/jdom2/IllegalNameException
     165: dup
     166: aload_1
     167: ldc           #12                 // String Namespace URI
     169: ldc           #18                 // String The http://www.w3.org/XML/1998/namespace must be bound to only the \'xml\' prefix.
     171: invokespecial #7                  // Method org/jdom2/IllegalNameException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     174: athrow
     175: aload_0
     176: ifnonnull     184
     179: ldc           #1                  // String
     181: goto          185
     184: aload_0
     185: astore        4
     187: aload         4
     189: invokestatic  #19                 // Method org/jdom2/Verifier.checkNamespacePrefix:(Ljava/lang/String;)Ljava/lang/String;
     192: dup
     193: astore        5
     195: ifnull        212
     198: new           #4                  // class org/jdom2/IllegalNameException
     201: dup
     202: aload         4
     204: ldc           #20                 // String Namespace prefix
     206: aload         5
     208: invokespecial #7                  // Method org/jdom2/IllegalNameException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     211: athrow
     212: new           #16                 // class org/jdom2/Namespace
     215: dup
     216: aload         4
     218: aload_1
     219: invokespecial #21                 // Method "<init>":(Ljava/lang/String;Ljava/lang/String;)V
     222: astore_3
     223: aload_2
     224: aload         4
     226: aload_3
     227: invokeinterface #15,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     232: checkcast     #16                 // class org/jdom2/Namespace
     235: astore        6
     237: aload         6
     239: ifnull        245
     242: aload         6
     244: astore_3
     245: aload_3
     246: areturn

  public static org.jdom2.Namespace getNamespace(java.lang.String);
    Code:
       0: ldc           #1                  // String
       2: aload_0
       3: invokestatic  #22                 // Method getNamespace:(Ljava/lang/String;Ljava/lang/String;)Lorg/jdom2/Namespace;
       6: areturn

  private org.jdom2.Namespace(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #24                 // Field prefix:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #25                 // Field uri:Ljava/lang/String;
      14: return

  public java.lang.String getPrefix();
    Code:
       0: aload_0
       1: getfield      #24                 // Field prefix:Ljava/lang/String;
       4: areturn

  public java.lang.String getURI();
    Code:
       0: aload_0
       1: getfield      #25                 // Field uri:Ljava/lang/String;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #16                 // class org/jdom2/Namespace
      11: ifeq          29
      14: aload_0
      15: getfield      #25                 // Field uri:Ljava/lang/String;
      18: aload_1
      19: checkcast     #16                 // class org/jdom2/Namespace
      22: getfield      #25                 // Field uri:Ljava/lang/String;
      25: invokevirtual #2                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      28: ireturn
      29: iconst_0
      30: ireturn

  public java.lang.String toString();
    Code:
       0: new           #26                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #28                 // String [Namespace: prefix \"
       9: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #24                 // Field prefix:Ljava/lang/String;
      16: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #30                 // String \" is mapped to URI \"
      21: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #25                 // Field uri:Ljava/lang/String;
      28: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #31                 // String \"]
      33: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #25                 // Field uri:Ljava/lang/String;
       4: invokevirtual #33                 // Method java/lang/String.hashCode:()I
       7: ireturn

  private java.lang.Object writeReplace();
    Code:
       0: new           #34                 // class org/jdom2/Namespace$NamespaceSerializationProxy
       3: dup
       4: aload_0
       5: getfield      #24                 // Field prefix:Ljava/lang/String;
       8: aload_0
       9: getfield      #25                 // Field uri:Ljava/lang/String;
      12: invokespecial #35                 // Method org/jdom2/Namespace$NamespaceSerializationProxy."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      15: areturn

  private java.lang.Object readResolve() throws java.io.InvalidObjectException;
    Code:
       0: new           #36                 // class java/io/InvalidObjectException
       3: dup
       4: ldc           #37                 // String Namespace is serialized through a proxy
       6: invokespecial #38                 // Method java/io/InvalidObjectException."<init>":(Ljava/lang/String;)V
       9: athrow

  static {};
    Code:
       0: new           #13                 // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: sipush        512
       7: ldc           #39                 // float 0.75f
       9: bipush        64
      11: invokespecial #40                 // Method java/util/concurrent/ConcurrentHashMap."<init>":(IFI)V
      14: putstatic     #8                  // Field namespacemap:Ljava/util/concurrent/ConcurrentMap;
      17: new           #16                 // class org/jdom2/Namespace
      20: dup
      21: ldc           #1                  // String
      23: ldc           #1                  // String
      25: invokespecial #21                 // Method "<init>":(Ljava/lang/String;Ljava/lang/String;)V
      28: putstatic     #3                  // Field NO_NAMESPACE:Lorg/jdom2/Namespace;
      31: new           #16                 // class org/jdom2/Namespace
      34: dup
      35: ldc           #41                 // String xml
      37: ldc           #17                 // String http://www.w3.org/XML/1998/namespace
      39: invokespecial #21                 // Method "<init>":(Ljava/lang/String;Ljava/lang/String;)V
      42: putstatic     #42                 // Field XML_NAMESPACE:Lorg/jdom2/Namespace;
      45: new           #13                 // class java/util/concurrent/ConcurrentHashMap
      48: dup
      49: invokespecial #14                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      52: astore_0
      53: aload_0
      54: getstatic     #3                  // Field NO_NAMESPACE:Lorg/jdom2/Namespace;
      57: invokevirtual #43                 // Method getPrefix:()Ljava/lang/String;
      60: getstatic     #3                  // Field NO_NAMESPACE:Lorg/jdom2/Namespace;
      63: invokeinterface #44,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      68: pop
      69: getstatic     #8                  // Field namespacemap:Ljava/util/concurrent/ConcurrentMap;
      72: getstatic     #3                  // Field NO_NAMESPACE:Lorg/jdom2/Namespace;
      75: invokevirtual #45                 // Method getURI:()Ljava/lang/String;
      78: aload_0
      79: invokeinterface #44,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      84: pop
      85: new           #13                 // class java/util/concurrent/ConcurrentHashMap
      88: dup
      89: invokespecial #14                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      92: astore_1
      93: aload_1
      94: getstatic     #42                 // Field XML_NAMESPACE:Lorg/jdom2/Namespace;
      97: invokevirtual #43                 // Method getPrefix:()Ljava/lang/String;
     100: getstatic     #42                 // Field XML_NAMESPACE:Lorg/jdom2/Namespace;
     103: invokeinterface #44,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     108: pop
     109: getstatic     #8                  // Field namespacemap:Ljava/util/concurrent/ConcurrentMap;
     112: getstatic     #42                 // Field XML_NAMESPACE:Lorg/jdom2/Namespace;
     115: invokevirtual #45                 // Method getURI:()Ljava/lang/String;
     118: aload_1
     119: invokeinterface #44,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     124: pop
     125: return
}
