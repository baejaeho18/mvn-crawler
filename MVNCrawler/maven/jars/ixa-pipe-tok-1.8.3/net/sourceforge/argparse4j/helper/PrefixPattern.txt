Compiled from "PrefixPattern.java"
public class net.sourceforge.argparse4j.helper.PrefixPattern {
  private java.lang.String prefixChars_;

  private java.util.regex.Pattern prefixPattern_;

  public net.sourceforge.argparse4j.helper.PrefixPattern(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field prefixChars_:Ljava/lang/String;
       9: aload_0
      10: aload_1
      11: invokestatic  #3                  // Method compilePrefixPattern:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      14: putfield      #4                  // Field prefixPattern_:Ljava/util/regex/Pattern;
      17: return

  public boolean match(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field prefixPattern_:Ljava/util/regex/Pattern;
       4: aload_1
       5: invokevirtual #5                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       8: astore_2
       9: aload_2
      10: invokevirtual #6                  // Method java/util/regex/Matcher.find:()Z
      13: ifeq          32
      16: aload_2
      17: iconst_0
      18: invokevirtual #7                  // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      21: aload_1
      22: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      25: ifne          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public boolean matchLongFlag(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field prefixPattern_:Ljava/util/regex/Pattern;
       4: aload_1
       5: invokevirtual #5                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       8: astore_2
       9: aload_2
      10: invokevirtual #6                  // Method java/util/regex/Matcher.find:()Z
      13: ifeq          44
      16: aload_2
      17: iconst_0
      18: invokevirtual #7                  // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      21: aload_1
      22: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      25: ifne          44
      28: aload_2
      29: iconst_0
      30: invokevirtual #7                  // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      33: invokevirtual #9                  // Method java/lang/String.length:()I
      36: iconst_2
      37: if_icmplt     44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn

  public java.lang.String removePrefix(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field prefixPattern_:Ljava/util/regex/Pattern;
       4: aload_1
       5: invokevirtual #5                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       8: astore_2
       9: aload_2
      10: invokevirtual #6                  // Method java/util/regex/Matcher.find:()Z
      13: ifeq          35
      16: aload_2
      17: iconst_0
      18: invokevirtual #7                  // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      21: aload_1
      22: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      25: ifne          35
      28: aload_2
      29: ldc           #10                 // String
      31: invokevirtual #11                 // Method java/util/regex/Matcher.replaceFirst:(Ljava/lang/String;)Ljava/lang/String;
      34: areturn
      35: aload_1
      36: areturn

  public java.lang.String getPrefixChars();
    Code:
       0: aload_0
       1: getfield      #2                  // Field prefixChars_:Ljava/lang/String;
       4: areturn

  public java.util.regex.Pattern getPrefixPattern();
    Code:
       0: aload_0
       1: getfield      #4                  // Field prefixPattern_:Ljava/util/regex/Pattern;
       4: areturn

  private static java.util.regex.Pattern compilePrefixPattern(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #12                 // Method java/util/regex/Pattern.quote:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_1
       5: new           #13                 // class java/lang/StringBuilder
       8: dup
       9: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      12: ldc           #15                 // String ^[
      14: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: aload_1
      18: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #17                 // String ]+
      23: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokestatic  #19                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      32: areturn
}
