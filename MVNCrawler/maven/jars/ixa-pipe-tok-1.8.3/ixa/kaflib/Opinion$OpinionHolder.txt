Compiled from "Opinion.java"
public class ixa.kaflib.Opinion$OpinionHolder extends ixa.kaflib.Annotation {
  private java.lang.String type;

  private ixa.kaflib.Span<ixa.kaflib.Term> span;

  ixa.kaflib.Opinion$OpinionHolder(ixa.kaflib.Span<ixa.kaflib.Term>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method ixa/kaflib/Annotation."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field span:Lixa/kaflib/Span;
       9: return

  ixa.kaflib.Opinion$OpinionHolder(ixa.kaflib.Opinion$OpinionHolder, java.util.HashMap<java.lang.String, ixa.kaflib.Term>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method ixa/kaflib/Annotation."<init>":()V
       4: aload_1
       5: getfield      #2                  // Field span:Lixa/kaflib/Span;
       8: astore_3
       9: aload_3
      10: invokevirtual #3                  // Method ixa/kaflib/Span.getTargets:()Ljava/util/List;
      13: astore        4
      15: new           #4                  // class java/util/ArrayList
      18: dup
      19: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      22: astore        5
      24: aload         4
      26: invokeinterface #6,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      31: astore        6
      33: aload         6
      35: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          97
      43: aload         6
      45: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #9                  // class ixa/kaflib/Term
      53: astore        7
      55: aload_2
      56: aload         7
      58: invokevirtual #10                 // Method ixa/kaflib/Term.getId:()Ljava/lang/String;
      61: invokevirtual #11                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      64: checkcast     #9                  // class ixa/kaflib/Term
      67: astore        8
      69: aload         8
      71: ifnonnull     84
      74: new           #12                 // class java/lang/IllegalStateException
      77: dup
      78: ldc           #13                 // String Term not found when copying opinion_holder
      80: invokespecial #14                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      83: athrow
      84: aload         5
      86: aload         8
      88: invokeinterface #15,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      93: pop
      94: goto          33
      97: aload_3
      98: invokevirtual #16                 // Method ixa/kaflib/Span.hasHead:()Z
     101: ifeq          141
     104: aload_2
     105: aload_3
     106: invokevirtual #17                 // Method ixa/kaflib/Span.getHead:()Lixa/kaflib/IdentifiableAnnotation;
     109: checkcast     #9                  // class ixa/kaflib/Term
     112: invokevirtual #10                 // Method ixa/kaflib/Term.getId:()Ljava/lang/String;
     115: invokevirtual #11                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     118: checkcast     #9                  // class ixa/kaflib/Term
     121: astore        6
     123: aload_0
     124: new           #18                 // class ixa/kaflib/Span
     127: dup
     128: aload         5
     130: aload         6
     132: invokespecial #19                 // Method ixa/kaflib/Span."<init>":(Ljava/util/List;Lixa/kaflib/IdentifiableAnnotation;)V
     135: putfield      #2                  // Field span:Lixa/kaflib/Span;
     138: goto          154
     141: aload_0
     142: new           #18                 // class ixa/kaflib/Span
     145: dup
     146: aload         5
     148: invokespecial #20                 // Method ixa/kaflib/Span."<init>":(Ljava/util/List;)V
     151: putfield      #2                  // Field span:Lixa/kaflib/Span;
     154: return

  public boolean hasType();
    Code:
       0: aload_0
       1: getfield      #21                 // Field type:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.String getType();
    Code:
       0: aload_0
       1: getfield      #21                 // Field type:Ljava/lang/String;
       4: areturn

  public void setType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field type:Ljava/lang/String;
       5: return

  public java.util.List<ixa.kaflib.Term> getTerms();
    Code:
       0: aload_0
       1: getfield      #2                  // Field span:Lixa/kaflib/Span;
       4: invokevirtual #3                  // Method ixa/kaflib/Span.getTargets:()Ljava/util/List;
       7: areturn

  public void addTerm(ixa.kaflib.Term);
    Code:
       0: aload_0
       1: getfield      #2                  // Field span:Lixa/kaflib/Span;
       4: aload_1
       5: invokevirtual #22                 // Method ixa/kaflib/Span.addTarget:(Lixa/kaflib/IdentifiableAnnotation;)V
       8: return

  public void addTerm(ixa.kaflib.Term, boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field span:Lixa/kaflib/Span;
       4: aload_1
       5: iload_2
       6: invokevirtual #23                 // Method ixa/kaflib/Span.addTarget:(Lixa/kaflib/IdentifiableAnnotation;Z)V
       9: return

  public ixa.kaflib.Span<ixa.kaflib.Term> getSpan();
    Code:
       0: aload_0
       1: getfield      #2                  // Field span:Lixa/kaflib/Span;
       4: areturn

  public void setSpan(ixa.kaflib.Span<ixa.kaflib.Term>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field span:Lixa/kaflib/Span;
       5: return

  java.util.Map<ixa.kaflib.KAFDocument$AnnotationType, java.util.List<ixa.kaflib.Annotation>> getReferencedAnnotations();
    Code:
       0: new           #24                 // class java/util/HashMap
       3: dup
       4: invokespecial #25                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_1
       9: getstatic     #26                 // Field ixa/kaflib/KAFDocument$AnnotationType.TERM:Lixa/kaflib/KAFDocument$AnnotationType;
      12: aload_0
      13: invokevirtual #27                 // Method getSpan:()Lixa/kaflib/Span;
      16: invokevirtual #3                  // Method ixa/kaflib/Span.getTargets:()Ljava/util/List;
      19: invokeinterface #28,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: aload_1
      26: areturn
}
