Compiled from "Term.java"
public class ixa.kaflib.Term extends ixa.kaflib.IdentifiableAnnotation implements ixa.kaflib.SentenceLevelAnnotation {
  private java.lang.String type;

  private java.lang.String lemma;

  private java.lang.String pos;

  private java.lang.String morphofeat;

  private java.lang.String termcase;

  private ixa.kaflib.Term$Sentiment sentiment;

  private java.util.List<ixa.kaflib.Term> components;

  private ixa.kaflib.Term head;

  private ixa.kaflib.Span<ixa.kaflib.WF> span;

  private java.util.List<ixa.kaflib.ExternalRef> externalReferences;

  private boolean isComponent;

  private ixa.kaflib.Term compound;

  ixa.kaflib.Term(java.lang.String, ixa.kaflib.Span<ixa.kaflib.WF>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method ixa/kaflib/IdentifiableAnnotation."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: new           #2                  // class java/util/ArrayList
       9: dup
      10: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      13: putfield      #4                  // Field components:Ljava/util/List;
      16: aload_0
      17: aload_2
      18: putfield      #5                  // Field span:Lixa/kaflib/Span;
      21: aload_0
      22: new           #2                  // class java/util/ArrayList
      25: dup
      26: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      29: putfield      #6                  // Field externalReferences:Ljava/util/List;
      32: aload_0
      33: iload_3
      34: putfield      #7                  // Field isComponent:Z
      37: return

  ixa.kaflib.Term(ixa.kaflib.Term, java.util.HashMap<java.lang.String, ixa.kaflib.WF>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method getId:()Ljava/lang/String;
       5: invokespecial #1                  // Method ixa/kaflib/IdentifiableAnnotation."<init>":(Ljava/lang/String;)V
       8: aload_0
       9: aload_1
      10: getfield      #9                  // Field type:Ljava/lang/String;
      13: putfield      #9                  // Field type:Ljava/lang/String;
      16: aload_0
      17: aload_1
      18: getfield      #10                 // Field lemma:Ljava/lang/String;
      21: putfield      #10                 // Field lemma:Ljava/lang/String;
      24: aload_0
      25: aload_1
      26: getfield      #11                 // Field pos:Ljava/lang/String;
      29: putfield      #11                 // Field pos:Ljava/lang/String;
      32: aload_0
      33: aload_1
      34: getfield      #12                 // Field morphofeat:Ljava/lang/String;
      37: putfield      #12                 // Field morphofeat:Ljava/lang/String;
      40: aload_0
      41: aload_1
      42: getfield      #13                 // Field termcase:Ljava/lang/String;
      45: putfield      #13                 // Field termcase:Ljava/lang/String;
      48: aload_1
      49: invokevirtual #14                 // Method hasSentiment:()Z
      52: ifeq          70
      55: aload_0
      56: new           #15                 // class ixa/kaflib/Term$Sentiment
      59: dup
      60: aload_1
      61: getfield      #16                 // Field sentiment:Lixa/kaflib/Term$Sentiment;
      64: invokespecial #17                 // Method ixa/kaflib/Term$Sentiment."<init>":(Lixa/kaflib/Term$Sentiment;)V
      67: putfield      #16                 // Field sentiment:Lixa/kaflib/Term$Sentiment;
      70: new           #18                 // class java/util/HashMap
      73: dup
      74: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      77: astore_3
      78: aload_0
      79: new           #2                  // class java/util/ArrayList
      82: dup
      83: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      86: putfield      #4                  // Field components:Ljava/util/List;
      89: aload_1
      90: getfield      #4                  // Field components:Ljava/util/List;
      93: invokeinterface #20,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      98: astore        4
     100: aload         4
     102: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     107: ifeq          161
     110: aload         4
     112: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     117: checkcast     #23                 // class ixa/kaflib/Term
     120: astore        5
     122: new           #23                 // class ixa/kaflib/Term
     125: dup
     126: aload         5
     128: aload_2
     129: invokespecial #24                 // Method "<init>":(Lixa/kaflib/Term;Ljava/util/HashMap;)V
     132: astore        6
     134: aload_0
     135: getfield      #4                  // Field components:Ljava/util/List;
     138: aload         6
     140: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     145: pop
     146: aload_3
     147: aload         5
     149: invokevirtual #8                  // Method getId:()Ljava/lang/String;
     152: aload         6
     154: invokevirtual #26                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     157: pop
     158: goto          100
     161: aload_1
     162: invokevirtual #27                 // Method hasHead:()Z
     165: ifeq          186
     168: aload_0
     169: aload_3
     170: aload_1
     171: getfield      #28                 // Field head:Lixa/kaflib/Term;
     174: invokevirtual #8                  // Method getId:()Ljava/lang/String;
     177: invokevirtual #29                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     180: checkcast     #23                 // class ixa/kaflib/Term
     183: putfield      #28                 // Field head:Lixa/kaflib/Term;
     186: aload_1
     187: getfield      #5                  // Field span:Lixa/kaflib/Span;
     190: invokevirtual #30                 // Method ixa/kaflib/Span.getTargets:()Ljava/util/List;
     193: astore        4
     195: new           #2                  // class java/util/ArrayList
     198: dup
     199: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
     202: astore        5
     204: aload         4
     206: invokeinterface #20,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     211: astore        6
     213: aload         6
     215: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     220: ifeq          297
     223: aload         6
     225: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     230: checkcast     #31                 // class ixa/kaflib/WF
     233: astore        7
     235: aload_2
     236: aload         7
     238: invokevirtual #32                 // Method ixa/kaflib/WF.getId:()Ljava/lang/String;
     241: invokevirtual #29                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     244: checkcast     #31                 // class ixa/kaflib/WF
     247: astore        8
     249: aload         8
     251: ifnonnull     284
     254: new           #33                 // class java/lang/IllegalStateException
     257: dup
     258: new           #34                 // class java/lang/StringBuilder
     261: dup
     262: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     265: ldc           #36                 // String WF not found when copying Term
     267: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     270: aload_1
     271: invokevirtual #8                  // Method getId:()Ljava/lang/String;
     274: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     277: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     280: invokespecial #39                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     283: athrow
     284: aload         5
     286: aload         8
     288: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     293: pop
     294: goto          213
     297: aload_1
     298: getfield      #5                  // Field span:Lixa/kaflib/Span;
     301: invokevirtual #40                 // Method ixa/kaflib/Span.hasHead:()Z
     304: ifeq          347
     307: aload_2
     308: aload_1
     309: getfield      #5                  // Field span:Lixa/kaflib/Span;
     312: invokevirtual #41                 // Method ixa/kaflib/Span.getHead:()Lixa/kaflib/IdentifiableAnnotation;
     315: checkcast     #31                 // class ixa/kaflib/WF
     318: invokevirtual #32                 // Method ixa/kaflib/WF.getId:()Ljava/lang/String;
     321: invokevirtual #29                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     324: checkcast     #31                 // class ixa/kaflib/WF
     327: astore        6
     329: aload_0
     330: new           #42                 // class ixa/kaflib/Span
     333: dup
     334: aload         5
     336: aload         6
     338: invokespecial #43                 // Method ixa/kaflib/Span."<init>":(Ljava/util/List;Lixa/kaflib/IdentifiableAnnotation;)V
     341: putfield      #5                  // Field span:Lixa/kaflib/Span;
     344: goto          360
     347: aload_0
     348: new           #42                 // class ixa/kaflib/Span
     351: dup
     352: aload         5
     354: invokespecial #44                 // Method ixa/kaflib/Span."<init>":(Ljava/util/List;)V
     357: putfield      #5                  // Field span:Lixa/kaflib/Span;
     360: aload_0
     361: new           #2                  // class java/util/ArrayList
     364: dup
     365: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
     368: putfield      #6                  // Field externalReferences:Ljava/util/List;
     371: aload_1
     372: invokevirtual #45                 // Method getExternalRefs:()Ljava/util/List;
     375: invokeinterface #20,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     380: astore        6
     382: aload         6
     384: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     389: ifeq          426
     392: aload         6
     394: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     399: checkcast     #46                 // class ixa/kaflib/ExternalRef
     402: astore        7
     404: aload_0
     405: getfield      #6                  // Field externalReferences:Ljava/util/List;
     408: new           #46                 // class ixa/kaflib/ExternalRef
     411: dup
     412: aload         7
     414: invokespecial #47                 // Method ixa/kaflib/ExternalRef."<init>":(Lixa/kaflib/ExternalRef;)V
     417: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     422: pop
     423: goto          382
     426: return

  public boolean hasType();
    Code:
       0: aload_0
       1: getfield      #9                  // Field type:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.String getType();
    Code:
       0: aload_0
       1: getfield      #9                  // Field type:Ljava/lang/String;
       4: areturn

  public void setType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field type:Ljava/lang/String;
       5: return

  public boolean hasLemma();
    Code:
       0: aload_0
       1: getfield      #10                 // Field lemma:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.String getLemma();
    Code:
       0: aload_0
       1: getfield      #10                 // Field lemma:Ljava/lang/String;
       4: areturn

  public void setLemma(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field lemma:Ljava/lang/String;
       5: return

  public boolean hasPos();
    Code:
       0: aload_0
       1: getfield      #11                 // Field pos:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.String getPos();
    Code:
       0: aload_0
       1: getfield      #11                 // Field pos:Ljava/lang/String;
       4: areturn

  public void setPos(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field pos:Ljava/lang/String;
       5: return

  public boolean hasMorphofeat();
    Code:
       0: aload_0
       1: getfield      #12                 // Field morphofeat:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.String getMorphofeat();
    Code:
       0: aload_0
       1: getfield      #12                 // Field morphofeat:Ljava/lang/String;
       4: areturn

  public void setMorphofeat(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field morphofeat:Ljava/lang/String;
       5: return

  public boolean hasCase();
    Code:
       0: aload_0
       1: getfield      #13                 // Field termcase:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.String getCase();
    Code:
       0: aload_0
       1: getfield      #13                 // Field termcase:Ljava/lang/String;
       4: areturn

  public void setCase(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field termcase:Ljava/lang/String;
       5: return

  public java.lang.String getForm();
    Code:
       0: ldc           #48                 // String
       2: astore_1
       3: aload_0
       4: getfield      #5                  // Field span:Lixa/kaflib/Span;
       7: invokevirtual #30                 // Method ixa/kaflib/Span.getTargets:()Ljava/util/List;
      10: invokeinterface #20,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          87
      25: aload_2
      26: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #31                 // class ixa/kaflib/WF
      34: astore_3
      35: aload_1
      36: invokevirtual #49                 // Method java/lang/String.isEmpty:()Z
      39: ifne          62
      42: new           #34                 // class java/lang/StringBuilder
      45: dup
      46: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      49: aload_1
      50: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: ldc           #50                 // String
      55: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: astore_1
      62: new           #34                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      69: aload_1
      70: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_3
      74: invokevirtual #51                 // Method ixa/kaflib/WF.getForm:()Ljava/lang/String;
      77: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: astore_1
      84: goto          16
      87: aload_1
      88: areturn

  public java.lang.String getStr();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method getForm:()Ljava/lang/String;
       4: astore_1
       5: iconst_0
       6: istore_2
       7: iload_2
       8: ifne          67
      11: aload_1
      12: ldc           #53                 // String -
      14: invokevirtual #54                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      17: ifne          29
      20: aload_1
      21: ldc           #53                 // String -
      23: invokevirtual #55                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      26: ifeq          41
      29: aload_1
      30: ldc           #53                 // String -
      32: ldc           #56                 // String  -
      34: invokevirtual #57                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      37: astore_1
      38: goto          7
      41: aload_1
      42: ldc           #58                 // String --
      44: invokevirtual #59                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      47: ifeq          62
      50: aload_1
      51: ldc           #58                 // String --
      53: ldc           #53                 // String -
      55: invokevirtual #57                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      58: astore_1
      59: goto          7
      62: iconst_1
      63: istore_2
      64: goto          7
      67: aload_1
      68: areturn

  public boolean hasHead();
    Code:
       0: aload_0
       1: getfield      #28                 // Field head:Lixa/kaflib/Term;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public ixa.kaflib.Term getHead();
    Code:
       0: aload_0
       1: getfield      #28                 // Field head:Lixa/kaflib/Term;
       4: areturn

  public ixa.kaflib.Term$Sentiment createSentiment();
    Code:
       0: new           #15                 // class ixa/kaflib/Term$Sentiment
       3: dup
       4: invokespecial #60                 // Method ixa/kaflib/Term$Sentiment."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #61                 // Method setSentiment:(Lixa/kaflib/Term$Sentiment;)V
      13: aload_1
      14: areturn

  public boolean hasSentiment();
    Code:
       0: aload_0
       1: getfield      #16                 // Field sentiment:Lixa/kaflib/Term$Sentiment;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public ixa.kaflib.Term$Sentiment getSentiment();
    Code:
       0: aload_0
       1: getfield      #16                 // Field sentiment:Lixa/kaflib/Term$Sentiment;
       4: areturn

  public void setSentiment(ixa.kaflib.Term$Sentiment);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field sentiment:Lixa/kaflib/Term$Sentiment;
       5: return

  public java.util.List<ixa.kaflib.Term> getComponents();
    Code:
       0: aload_0
       1: getfield      #4                  // Field components:Ljava/util/List;
       4: areturn

  public void addComponent(ixa.kaflib.Term);
    Code:
       0: aload_0
       1: getfield      #4                  // Field components:Ljava/util/List;
       4: aload_1
       5: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void addComponent(ixa.kaflib.Term, boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field components:Ljava/util/List;
       4: aload_1
       5: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: iload_2
      12: ifeq          20
      15: aload_0
      16: aload_1
      17: putfield      #28                 // Field head:Lixa/kaflib/Term;
      20: return

  public java.util.List<ixa.kaflib.WF> getWFs();
    Code:
       0: aload_0
       1: getfield      #5                  // Field span:Lixa/kaflib/Span;
       4: invokevirtual #30                 // Method ixa/kaflib/Span.getTargets:()Ljava/util/List;
       7: areturn

  public ixa.kaflib.WF getHeadWF();
    Code:
       0: aload_0
       1: getfield      #5                  // Field span:Lixa/kaflib/Span;
       4: invokevirtual #41                 // Method ixa/kaflib/Span.getHead:()Lixa/kaflib/IdentifiableAnnotation;
       7: checkcast     #31                 // class ixa/kaflib/WF
      10: areturn

  public void addWF(ixa.kaflib.WF);
    Code:
       0: aload_0
       1: getfield      #5                  // Field span:Lixa/kaflib/Span;
       4: aload_1
       5: invokevirtual #62                 // Method ixa/kaflib/Span.addTarget:(Lixa/kaflib/IdentifiableAnnotation;)V
       8: return

  public void addWF(ixa.kaflib.WF, boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field span:Lixa/kaflib/Span;
       4: aload_1
       5: iload_2
       6: invokevirtual #63                 // Method ixa/kaflib/Span.addTarget:(Lixa/kaflib/IdentifiableAnnotation;Z)V
       9: return

  public ixa.kaflib.Span<ixa.kaflib.WF> getSpan();
    Code:
       0: aload_0
       1: getfield      #5                  // Field span:Lixa/kaflib/Span;
       4: areturn

  public void setSpan(ixa.kaflib.Span<ixa.kaflib.WF>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field span:Lixa/kaflib/Span;
       5: return

  public java.lang.Integer getSent();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method getSpan:()Lixa/kaflib/Span;
       4: astore_1
       5: aload_1
       6: invokevirtual #30                 // Method ixa/kaflib/Span.getTargets:()Ljava/util/List;
       9: astore_2
      10: aload_2
      11: iconst_0
      12: invokeinterface #65,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      17: checkcast     #31                 // class ixa/kaflib/WF
      20: astore_3
      21: aload_3
      22: ifnonnull     37
      25: getstatic     #66                 // Field java/lang/System.out:Ljava/io/PrintStream;
      28: aload_2
      29: invokeinterface #67,  1           // InterfaceMethod java/util/List.size:()I
      34: invokevirtual #68                 // Method java/io/PrintStream.println:(I)V
      37: aload_3
      38: invokevirtual #69                 // Method ixa/kaflib/WF.getSent:()Ljava/lang/Integer;
      41: astore        4
      43: aload_0
      44: invokevirtual #64                 // Method getSpan:()Lixa/kaflib/Span;
      47: invokevirtual #30                 // Method ixa/kaflib/Span.getTargets:()Ljava/util/List;
      50: iconst_0
      51: invokeinterface #65,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      56: checkcast     #31                 // class ixa/kaflib/WF
      59: invokevirtual #69                 // Method ixa/kaflib/WF.getSent:()Ljava/lang/Integer;
      62: areturn

  public java.lang.Integer getPara();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method getSpan:()Lixa/kaflib/Span;
       4: invokevirtual #30                 // Method ixa/kaflib/Span.getTargets:()Ljava/util/List;
       7: iconst_0
       8: invokeinterface #65,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      13: checkcast     #31                 // class ixa/kaflib/WF
      16: invokevirtual #70                 // Method ixa/kaflib/WF.getPara:()Ljava/lang/Integer;
      19: areturn

  public java.util.List<ixa.kaflib.ExternalRef> getExternalRefs();
    Code:
       0: aload_0
       1: getfield      #6                  // Field externalReferences:Ljava/util/List;
       4: areturn

  public void addExternalRef(ixa.kaflib.ExternalRef);
    Code:
       0: aload_0
       1: getfield      #6                  // Field externalReferences:Ljava/util/List;
       4: aload_1
       5: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void addExternalRefs(java.util.List<ixa.kaflib.ExternalRef>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field externalReferences:Ljava/util/List;
       4: aload_1
       5: invokeinterface #71,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      10: pop
      11: return

  boolean isComponent();
    Code:
       0: aload_0
       1: getfield      #7                  // Field isComponent:Z
       4: ireturn

  public void setCompound(ixa.kaflib.Term);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #72                 // Field compound:Lixa/kaflib/Term;
       5: return

  public ixa.kaflib.Term getCompound();
    Code:
       0: aload_0
       1: getfield      #72                 // Field compound:Lixa/kaflib/Term;
       4: areturn

  java.util.Map<ixa.kaflib.KAFDocument$AnnotationType, java.util.List<ixa.kaflib.Annotation>> getReferencedAnnotations();
    Code:
       0: new           #18                 // class java/util/HashMap
       3: dup
       4: invokespecial #19                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_1
       9: getstatic     #73                 // Field ixa/kaflib/KAFDocument$AnnotationType.WF:Lixa/kaflib/KAFDocument$AnnotationType;
      12: aload_0
      13: invokevirtual #64                 // Method getSpan:()Lixa/kaflib/Span;
      16: invokevirtual #30                 // Method ixa/kaflib/Span.getTargets:()Ljava/util/List;
      19: invokeinterface #74,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: aload_1
      26: areturn
}
