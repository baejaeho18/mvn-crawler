Compiled from "BaseEncoding.java"
final class com.google.common.io.BaseEncoding$Alphabet extends com.google.common.base.CharMatcher {
  private final java.lang.String name;

  private final char[] chars;

  final int mask;

  final int bitsPerChar;

  final int charsPerChunk;

  final int bytesPerChunk;

  private final byte[] decodabet;

  private final boolean[] validPadding;

  com.google.common.io.BaseEncoding$Alphabet(java.lang.String, char[]);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/google/common/base/CharMatcher."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #4                  // class java/lang/String
      12: putfield      #5                  // Field name:Ljava/lang/String;
      15: aload_0
      16: aload_2
      17: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #6                  // class "[C"
      23: putfield      #7                  // Field chars:[C
      26: aload_0
      27: aload_2
      28: arraylength
      29: getstatic     #8                  // Field java/math/RoundingMode.UNNECESSARY:Ljava/math/RoundingMode;
      32: invokestatic  #9                  // Method com/google/common/math/IntMath.log2:(ILjava/math/RoundingMode;)I
      35: putfield      #10                 // Field bitsPerChar:I
      38: goto          77
      41: astore_3
      42: new           #12                 // class java/lang/IllegalArgumentException
      45: dup
      46: aload_2
      47: arraylength
      48: istore        4
      50: new           #13                 // class java/lang/StringBuilder
      53: dup
      54: bipush        35
      56: invokespecial #14                 // Method java/lang/StringBuilder."<init>":(I)V
      59: ldc           #15                 // String Illegal alphabet length
      61: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: iload         4
      66: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      69: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: aload_3
      73: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      76: athrow
      77: bipush        8
      79: aload_0
      80: getfield      #10                 // Field bitsPerChar:I
      83: invokestatic  #20                 // Method java/lang/Integer.lowestOneBit:(I)I
      86: invokestatic  #21                 // Method java/lang/Math.min:(II)I
      89: istore_3
      90: aload_0
      91: bipush        8
      93: iload_3
      94: idiv
      95: putfield      #22                 // Field charsPerChunk:I
      98: aload_0
      99: aload_0
     100: getfield      #10                 // Field bitsPerChar:I
     103: iload_3
     104: idiv
     105: putfield      #23                 // Field bytesPerChunk:I
     108: aload_0
     109: aload_2
     110: arraylength
     111: iconst_1
     112: isub
     113: putfield      #24                 // Field mask:I
     116: sipush        128
     119: newarray       byte
     121: astore        4
     123: aload         4
     125: iconst_m1
     126: invokestatic  #25                 // Method java/util/Arrays.fill:([BB)V
     129: iconst_0
     130: istore        5
     132: iload         5
     134: aload_2
     135: arraylength
     136: if_icmpge     215
     139: aload_2
     140: iload         5
     142: caload
     143: istore        6
     145: getstatic     #26                 // Field com/google/common/base/CharMatcher.ASCII:Lcom/google/common/base/CharMatcher;
     148: iload         6
     150: invokevirtual #27                 // Method com/google/common/base/CharMatcher.matches:(C)Z
     153: ldc           #28                 // String Non-ASCII character: %s
     155: iconst_1
     156: anewarray     #29                 // class java/lang/Object
     159: dup
     160: iconst_0
     161: iload         6
     163: invokestatic  #30                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     166: aastore
     167: invokestatic  #31                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
     170: aload         4
     172: iload         6
     174: baload
     175: iconst_m1
     176: if_icmpne     183
     179: iconst_1
     180: goto          184
     183: iconst_0
     184: ldc           #32                 // String Duplicate character: %s
     186: iconst_1
     187: anewarray     #29                 // class java/lang/Object
     190: dup
     191: iconst_0
     192: iload         6
     194: invokestatic  #30                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     197: aastore
     198: invokestatic  #31                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
     201: aload         4
     203: iload         6
     205: iload         5
     207: i2b
     208: bastore
     209: iinc          5, 1
     212: goto          132
     215: aload_0
     216: aload         4
     218: putfield      #33                 // Field decodabet:[B
     221: aload_0
     222: getfield      #22                 // Field charsPerChunk:I
     225: newarray       boolean
     227: astore        5
     229: iconst_0
     230: istore        6
     232: iload         6
     234: aload_0
     235: getfield      #23                 // Field bytesPerChunk:I
     238: if_icmpge     266
     241: aload         5
     243: iload         6
     245: bipush        8
     247: imul
     248: aload_0
     249: getfield      #10                 // Field bitsPerChar:I
     252: getstatic     #34                 // Field java/math/RoundingMode.CEILING:Ljava/math/RoundingMode;
     255: invokestatic  #35                 // Method com/google/common/math/IntMath.divide:(IILjava/math/RoundingMode;)I
     258: iconst_1
     259: bastore
     260: iinc          6, 1
     263: goto          232
     266: aload_0
     267: aload         5
     269: putfield      #36                 // Field validPadding:[Z
     272: return
    Exception table:
       from    to  target type
          26    38    41   Class java/lang/ArithmeticException

  char encode(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field chars:[C
       4: iload_1
       5: caload
       6: ireturn

  boolean isValidPaddingStartPosition(int);
    Code:
       0: aload_0
       1: getfield      #36                 // Field validPadding:[Z
       4: iload_1
       5: aload_0
       6: getfield      #22                 // Field charsPerChunk:I
       9: irem
      10: baload
      11: ireturn

  int decode(char) throws java.io.IOException;
    Code:
       0: iload_1
       1: bipush        127
       3: if_icmpgt     16
       6: aload_0
       7: getfield      #33                 // Field decodabet:[B
      10: iload_1
      11: baload
      12: iconst_m1
      13: if_icmpne     47
      16: new           #37                 // class com/google/common/io/BaseEncoding$DecodingException
      19: dup
      20: iload_1
      21: istore_2
      22: new           #13                 // class java/lang/StringBuilder
      25: dup
      26: bipush        25
      28: invokespecial #14                 // Method java/lang/StringBuilder."<init>":(I)V
      31: ldc           #38                 // String Unrecognized character:
      33: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: iload_2
      37: invokevirtual #39                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      40: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #40                 // Method com/google/common/io/BaseEncoding$DecodingException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: getfield      #33                 // Field decodabet:[B
      51: iload_1
      52: baload
      53: ireturn

  private boolean hasLowerCase();
    Code:
       0: aload_0
       1: getfield      #7                  // Field chars:[C
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     36
      15: aload_1
      16: iload_3
      17: caload
      18: istore        4
      20: iload         4
      22: invokestatic  #41                 // Method com/google/common/base/Ascii.isLowerCase:(C)Z
      25: ifeq          30
      28: iconst_1
      29: ireturn
      30: iinc          3, 1
      33: goto          10
      36: iconst_0
      37: ireturn

  private boolean hasUpperCase();
    Code:
       0: aload_0
       1: getfield      #7                  // Field chars:[C
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     36
      15: aload_1
      16: iload_3
      17: caload
      18: istore        4
      20: iload         4
      22: invokestatic  #42                 // Method com/google/common/base/Ascii.isUpperCase:(C)Z
      25: ifeq          30
      28: iconst_1
      29: ireturn
      30: iinc          3, 1
      33: goto          10
      36: iconst_0
      37: ireturn

  com.google.common.io.BaseEncoding$Alphabet upperCase();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method hasLowerCase:()Z
       4: ifne          9
       7: aload_0
       8: areturn
       9: aload_0
      10: invokespecial #44                 // Method hasUpperCase:()Z
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ldc           #45                 // String Cannot call upperCase() on a mixed-case alphabet
      23: invokestatic  #46                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      26: aload_0
      27: getfield      #7                  // Field chars:[C
      30: arraylength
      31: newarray       char
      33: astore_1
      34: iconst_0
      35: istore_2
      36: iload_2
      37: aload_0
      38: getfield      #7                  // Field chars:[C
      41: arraylength
      42: if_icmpge     63
      45: aload_1
      46: iload_2
      47: aload_0
      48: getfield      #7                  // Field chars:[C
      51: iload_2
      52: caload
      53: invokestatic  #47                 // Method com/google/common/base/Ascii.toUpperCase:(C)C
      56: castore
      57: iinc          2, 1
      60: goto          36
      63: new           #48                 // class com/google/common/io/BaseEncoding$Alphabet
      66: dup
      67: aload_0
      68: getfield      #5                  // Field name:Ljava/lang/String;
      71: invokestatic  #49                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      74: ldc           #50                 // String .upperCase()
      76: invokevirtual #51                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
      79: aload_1
      80: invokespecial #52                 // Method "<init>":(Ljava/lang/String;[C)V
      83: areturn

  com.google.common.io.BaseEncoding$Alphabet lowerCase();
    Code:
       0: aload_0
       1: invokespecial #44                 // Method hasUpperCase:()Z
       4: ifne          9
       7: aload_0
       8: areturn
       9: aload_0
      10: invokespecial #43                 // Method hasLowerCase:()Z
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ldc           #53                 // String Cannot call lowerCase() on a mixed-case alphabet
      23: invokestatic  #46                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      26: aload_0
      27: getfield      #7                  // Field chars:[C
      30: arraylength
      31: newarray       char
      33: astore_1
      34: iconst_0
      35: istore_2
      36: iload_2
      37: aload_0
      38: getfield      #7                  // Field chars:[C
      41: arraylength
      42: if_icmpge     63
      45: aload_1
      46: iload_2
      47: aload_0
      48: getfield      #7                  // Field chars:[C
      51: iload_2
      52: caload
      53: invokestatic  #54                 // Method com/google/common/base/Ascii.toLowerCase:(C)C
      56: castore
      57: iinc          2, 1
      60: goto          36
      63: new           #48                 // class com/google/common/io/BaseEncoding$Alphabet
      66: dup
      67: aload_0
      68: getfield      #5                  // Field name:Ljava/lang/String;
      71: invokestatic  #49                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      74: ldc           #55                 // String .lowerCase()
      76: invokevirtual #51                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
      79: aload_1
      80: invokespecial #52                 // Method "<init>":(Ljava/lang/String;[C)V
      83: areturn

  public boolean matches(char);
    Code:
       0: getstatic     #26                 // Field com/google/common/base/CharMatcher.ASCII:Lcom/google/common/base/CharMatcher;
       3: iload_1
       4: invokevirtual #27                 // Method com/google/common/base/CharMatcher.matches:(C)Z
       7: ifeq          24
      10: aload_0
      11: getfield      #33                 // Field decodabet:[B
      14: iload_1
      15: baload
      16: iconst_m1
      17: if_icmpeq     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field name:Ljava/lang/String;
       4: areturn
}
