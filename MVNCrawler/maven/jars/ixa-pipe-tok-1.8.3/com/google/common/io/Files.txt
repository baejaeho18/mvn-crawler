Compiled from "Files.java"
public final class com.google.common.io.Files {
  private static final int TEMP_DIR_ATTEMPTS;

  private static final com.google.common.collect.TreeTraverser<java.io.File> FILE_TREE_TRAVERSER;

  private com.google.common.io.Files();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.io.BufferedReader newReader(java.io.File, java.nio.charset.Charset) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: new           #4                  // class java/io/BufferedReader
      13: dup
      14: new           #5                  // class java/io/InputStreamReader
      17: dup
      18: new           #6                  // class java/io/FileInputStream
      21: dup
      22: aload_0
      23: invokespecial #7                  // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      26: aload_1
      27: invokespecial #8                  // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
      30: invokespecial #9                  // Method java/io/BufferedReader."<init>":(Ljava/io/Reader;)V
      33: areturn

  public static java.io.BufferedWriter newWriter(java.io.File, java.nio.charset.Charset) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: new           #10                 // class java/io/BufferedWriter
      13: dup
      14: new           #11                 // class java/io/OutputStreamWriter
      17: dup
      18: new           #12                 // class java/io/FileOutputStream
      21: dup
      22: aload_0
      23: invokespecial #13                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
      26: aload_1
      27: invokespecial #14                 // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
      30: invokespecial #15                 // Method java/io/BufferedWriter."<init>":(Ljava/io/Writer;)V
      33: areturn

  public static com.google.common.io.ByteSource asByteSource(java.io.File);
    Code:
       0: new           #16                 // class com/google/common/io/Files$FileByteSource
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #17                 // Method com/google/common/io/Files$FileByteSource."<init>":(Ljava/io/File;Lcom/google/common/io/Files$1;)V
       9: areturn

  static byte[] readFile(java.io.InputStream, long) throws java.io.IOException;
    Code:
       0: lload_1
       1: ldc2_w        #18                 // long 2147483647l
       4: lcmp
       5: ifle          44
       8: new           #20                 // class java/lang/OutOfMemoryError
      11: dup
      12: lload_1
      13: lstore_3
      14: new           #21                 // class java/lang/StringBuilder
      17: dup
      18: bipush        68
      20: invokespecial #22                 // Method java/lang/StringBuilder."<init>":(I)V
      23: ldc           #23                 // String file is too large to fit in a byte array:
      25: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: lload_3
      29: invokevirtual #25                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      32: ldc           #26                 // String  bytes
      34: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokespecial #28                 // Method java/lang/OutOfMemoryError."<init>":(Ljava/lang/String;)V
      43: athrow
      44: lload_1
      45: lconst_0
      46: lcmp
      47: ifne          57
      50: aload_0
      51: invokestatic  #29                 // Method com/google/common/io/ByteStreams.toByteArray:(Ljava/io/InputStream;)[B
      54: goto          63
      57: aload_0
      58: lload_1
      59: l2i
      60: invokestatic  #30                 // Method com/google/common/io/ByteStreams.toByteArray:(Ljava/io/InputStream;I)[B
      63: areturn

  public static com.google.common.io.ByteSink asByteSink(java.io.File, com.google.common.io.FileWriteMode...);
    Code:
       0: new           #31                 // class com/google/common/io/Files$FileByteSink
       3: dup
       4: aload_0
       5: aload_1
       6: aconst_null
       7: invokespecial #32                 // Method com/google/common/io/Files$FileByteSink."<init>":(Ljava/io/File;[Lcom/google/common/io/FileWriteMode;Lcom/google/common/io/Files$1;)V
      10: areturn

  public static com.google.common.io.CharSource asCharSource(java.io.File, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: invokestatic  #33                 // Method asByteSource:(Ljava/io/File;)Lcom/google/common/io/ByteSource;
       4: aload_1
       5: invokevirtual #34                 // Method com/google/common/io/ByteSource.asCharSource:(Ljava/nio/charset/Charset;)Lcom/google/common/io/CharSource;
       8: areturn

  public static com.google.common.io.CharSink asCharSink(java.io.File, java.nio.charset.Charset, com.google.common.io.FileWriteMode...);
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #35                 // Method asByteSink:(Ljava/io/File;[Lcom/google/common/io/FileWriteMode;)Lcom/google/common/io/ByteSink;
       5: aload_1
       6: invokevirtual #36                 // Method com/google/common/io/ByteSink.asCharSink:(Ljava/nio/charset/Charset;)Lcom/google/common/io/CharSink;
       9: areturn

  private static com.google.common.io.FileWriteMode[] modes(boolean);
    Code:
       0: iload_0
       1: ifeq          17
       4: iconst_1
       5: anewarray     #37                 // class com/google/common/io/FileWriteMode
       8: dup
       9: iconst_0
      10: getstatic     #38                 // Field com/google/common/io/FileWriteMode.APPEND:Lcom/google/common/io/FileWriteMode;
      13: aastore
      14: goto          21
      17: iconst_0
      18: anewarray     #37                 // class com/google/common/io/FileWriteMode
      21: areturn

  public static byte[] toByteArray(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #33                 // Method asByteSource:(Ljava/io/File;)Lcom/google/common/io/ByteSource;
       4: invokevirtual #39                 // Method com/google/common/io/ByteSource.read:()[B
       7: areturn

  public static java.lang.String toString(java.io.File, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #40                 // Method asCharSource:(Ljava/io/File;Ljava/nio/charset/Charset;)Lcom/google/common/io/CharSource;
       5: invokevirtual #41                 // Method com/google/common/io/CharSource.read:()Ljava/lang/String;
       8: areturn

  public static void write(byte[], java.io.File) throws java.io.IOException;
    Code:
       0: aload_1
       1: iconst_0
       2: anewarray     #37                 // class com/google/common/io/FileWriteMode
       5: invokestatic  #35                 // Method asByteSink:(Ljava/io/File;[Lcom/google/common/io/FileWriteMode;)Lcom/google/common/io/ByteSink;
       8: aload_0
       9: invokevirtual #42                 // Method com/google/common/io/ByteSink.write:([B)V
      12: return

  public static void copy(java.io.File, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #33                 // Method asByteSource:(Ljava/io/File;)Lcom/google/common/io/ByteSource;
       4: aload_1
       5: invokevirtual #43                 // Method com/google/common/io/ByteSource.copyTo:(Ljava/io/OutputStream;)J
       8: pop2
       9: return

  public static void copy(java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #44                 // Method java/io/File.equals:(Ljava/lang/Object;)Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ldc           #45                 // String Source %s and destination %s must be different
      15: iconst_2
      16: anewarray     #46                 // class java/lang/Object
      19: dup
      20: iconst_0
      21: aload_0
      22: aastore
      23: dup
      24: iconst_1
      25: aload_1
      26: aastore
      27: invokestatic  #47                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      30: aload_0
      31: invokestatic  #33                 // Method asByteSource:(Ljava/io/File;)Lcom/google/common/io/ByteSource;
      34: aload_1
      35: iconst_0
      36: anewarray     #37                 // class com/google/common/io/FileWriteMode
      39: invokestatic  #35                 // Method asByteSink:(Ljava/io/File;[Lcom/google/common/io/FileWriteMode;)Lcom/google/common/io/ByteSink;
      42: invokevirtual #48                 // Method com/google/common/io/ByteSource.copyTo:(Lcom/google/common/io/ByteSink;)J
      45: pop2
      46: return

  public static void write(java.lang.CharSequence, java.io.File, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: iconst_0
       3: anewarray     #37                 // class com/google/common/io/FileWriteMode
       6: invokestatic  #49                 // Method asCharSink:(Ljava/io/File;Ljava/nio/charset/Charset;[Lcom/google/common/io/FileWriteMode;)Lcom/google/common/io/CharSink;
       9: aload_0
      10: invokevirtual #50                 // Method com/google/common/io/CharSink.write:(Ljava/lang/CharSequence;)V
      13: return

  public static void append(java.lang.CharSequence, java.io.File, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokestatic  #51                 // Method write:(Ljava/lang/CharSequence;Ljava/io/File;Ljava/nio/charset/Charset;Z)V
       7: return

  private static void write(java.lang.CharSequence, java.io.File, java.nio.charset.Charset, boolean) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_2
       2: iload_3
       3: invokestatic  #52                 // Method modes:(Z)[Lcom/google/common/io/FileWriteMode;
       6: invokestatic  #49                 // Method asCharSink:(Ljava/io/File;Ljava/nio/charset/Charset;[Lcom/google/common/io/FileWriteMode;)Lcom/google/common/io/CharSink;
       9: aload_0
      10: invokevirtual #50                 // Method com/google/common/io/CharSink.write:(Ljava/lang/CharSequence;)V
      13: return

  public static void copy(java.io.File, java.nio.charset.Charset, java.lang.Appendable) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #40                 // Method asCharSource:(Ljava/io/File;Ljava/nio/charset/Charset;)Lcom/google/common/io/CharSource;
       5: aload_2
       6: invokevirtual #53                 // Method com/google/common/io/CharSource.copyTo:(Ljava/lang/Appendable;)J
       9: pop2
      10: return

  public static boolean equal(java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: aload_1
      12: if_acmpeq     23
      15: aload_0
      16: aload_1
      17: invokevirtual #44                 // Method java/io/File.equals:(Ljava/lang/Object;)Z
      20: ifeq          25
      23: iconst_1
      24: ireturn
      25: aload_0
      26: invokevirtual #54                 // Method java/io/File.length:()J
      29: lstore_2
      30: aload_1
      31: invokevirtual #54                 // Method java/io/File.length:()J
      34: lstore        4
      36: lload_2
      37: lconst_0
      38: lcmp
      39: ifeq          58
      42: lload         4
      44: lconst_0
      45: lcmp
      46: ifeq          58
      49: lload_2
      50: lload         4
      52: lcmp
      53: ifeq          58
      56: iconst_0
      57: ireturn
      58: aload_0
      59: invokestatic  #33                 // Method asByteSource:(Ljava/io/File;)Lcom/google/common/io/ByteSource;
      62: aload_1
      63: invokestatic  #33                 // Method asByteSource:(Ljava/io/File;)Lcom/google/common/io/ByteSource;
      66: invokevirtual #55                 // Method com/google/common/io/ByteSource.contentEquals:(Lcom/google/common/io/ByteSource;)Z
      69: ireturn

  public static java.io.File createTempDir();
    Code:
       0: new           #56                 // class java/io/File
       3: dup
       4: ldc           #57                 // String java.io.tmpdir
       6: invokestatic  #58                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       9: invokespecial #59                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      12: astore_0
      13: invokestatic  #60                 // Method java/lang/System.currentTimeMillis:()J
      16: lstore_2
      17: new           #21                 // class java/lang/StringBuilder
      20: dup
      21: bipush        21
      23: invokespecial #22                 // Method java/lang/StringBuilder."<init>":(I)V
      26: lload_2
      27: invokevirtual #25                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      30: ldc           #61                 // String -
      32: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: astore_1
      39: iconst_0
      40: istore        4
      42: iload         4
      44: sipush        10000
      47: if_icmpge     118
      50: new           #56                 // class java/io/File
      53: dup
      54: aload_0
      55: aload_1
      56: invokestatic  #62                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      59: invokestatic  #62                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      62: astore        6
      64: iload         4
      66: istore        7
      68: new           #21                 // class java/lang/StringBuilder
      71: dup
      72: bipush        11
      74: aload         6
      76: invokevirtual #63                 // Method java/lang/String.length:()I
      79: iadd
      80: invokespecial #22                 // Method java/lang/StringBuilder."<init>":(I)V
      83: aload         6
      85: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: iload         7
      90: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      93: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: invokespecial #65                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      99: astore        5
     101: aload         5
     103: invokevirtual #66                 // Method java/io/File.mkdir:()Z
     106: ifeq          112
     109: aload         5
     111: areturn
     112: iinc          4, 1
     115: goto          42
     118: new           #67                 // class java/lang/IllegalStateException
     121: dup
     122: ldc           #68                 // String Failed to create directory within 10000 attempts (tried
     124: invokestatic  #62                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     127: invokestatic  #62                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     130: astore        4
     132: aload_1
     133: invokestatic  #62                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     136: invokestatic  #62                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     139: astore        5
     141: aload_1
     142: invokestatic  #62                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     145: invokestatic  #62                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     148: astore        6
     150: sipush        9999
     153: istore        7
     155: new           #21                 // class java/lang/StringBuilder
     158: dup
     159: bipush        17
     161: aload         4
     163: invokevirtual #63                 // Method java/lang/String.length:()I
     166: iadd
     167: aload         5
     169: invokevirtual #63                 // Method java/lang/String.length:()I
     172: iadd
     173: aload         6
     175: invokevirtual #63                 // Method java/lang/String.length:()I
     178: iadd
     179: invokespecial #22                 // Method java/lang/StringBuilder."<init>":(I)V
     182: aload         4
     184: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     187: aload         5
     189: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     192: ldc           #69                 // String 0 to
     194: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     197: aload         6
     199: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     202: iload         7
     204: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     207: ldc           #70                 // String )
     209: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     212: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     215: invokespecial #71                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     218: athrow

  public static void touch(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokevirtual #72                 // Method java/io/File.createNewFile:()Z
       9: ifne          64
      12: aload_0
      13: invokestatic  #60                 // Method java/lang/System.currentTimeMillis:()J
      16: invokevirtual #73                 // Method java/io/File.setLastModified:(J)Z
      19: ifne          64
      22: new           #74                 // class java/io/IOException
      25: dup
      26: aload_0
      27: invokestatic  #62                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      30: invokestatic  #62                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      33: astore_1
      34: new           #21                 // class java/lang/StringBuilder
      37: dup
      38: bipush        38
      40: aload_1
      41: invokevirtual #63                 // Method java/lang/String.length:()I
      44: iadd
      45: invokespecial #22                 // Method java/lang/StringBuilder."<init>":(I)V
      48: ldc           #75                 // String Unable to update modification time of
      50: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_1
      54: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #76                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: return

  public static void createParentDirs(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokevirtual #77                 // Method java/io/File.getCanonicalFile:()Ljava/io/File;
       9: invokevirtual #78                 // Method java/io/File.getParentFile:()Ljava/io/File;
      12: astore_1
      13: aload_1
      14: ifnonnull     18
      17: return
      18: aload_1
      19: invokevirtual #79                 // Method java/io/File.mkdirs:()Z
      22: pop
      23: aload_1
      24: invokevirtual #80                 // Method java/io/File.isDirectory:()Z
      27: ifne          72
      30: new           #74                 // class java/io/IOException
      33: dup
      34: aload_0
      35: invokestatic  #62                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      38: invokestatic  #62                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      41: astore_2
      42: new           #21                 // class java/lang/StringBuilder
      45: dup
      46: bipush        39
      48: aload_2
      49: invokevirtual #63                 // Method java/lang/String.length:()I
      52: iadd
      53: invokespecial #22                 // Method java/lang/StringBuilder."<init>":(I)V
      56: ldc           #81                 // String Unable to create parent directories of
      58: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_2
      62: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #76                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: return

  public static void move(java.io.File, java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: aload_1
      12: invokevirtual #44                 // Method java/io/File.equals:(Ljava/lang/Object;)Z
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ldc           #45                 // String Source %s and destination %s must be different
      25: iconst_2
      26: anewarray     #46                 // class java/lang/Object
      29: dup
      30: iconst_0
      31: aload_0
      32: aastore
      33: dup
      34: iconst_1
      35: aload_1
      36: aastore
      37: invokestatic  #47                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      40: aload_0
      41: aload_1
      42: invokevirtual #82                 // Method java/io/File.renameTo:(Ljava/io/File;)Z
      45: ifne          151
      48: aload_0
      49: aload_1
      50: invokestatic  #83                 // Method copy:(Ljava/io/File;Ljava/io/File;)V
      53: aload_0
      54: invokevirtual #84                 // Method java/io/File.delete:()Z
      57: ifne          151
      60: aload_1
      61: invokevirtual #84                 // Method java/io/File.delete:()Z
      64: ifne          109
      67: new           #74                 // class java/io/IOException
      70: dup
      71: aload_1
      72: invokestatic  #62                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      75: invokestatic  #62                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      78: astore_2
      79: new           #21                 // class java/lang/StringBuilder
      82: dup
      83: bipush        17
      85: aload_2
      86: invokevirtual #63                 // Method java/lang/String.length:()I
      89: iadd
      90: invokespecial #22                 // Method java/lang/StringBuilder."<init>":(I)V
      93: ldc           #85                 // String Unable to delete
      95: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_2
      99: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: invokespecial #76                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     108: athrow
     109: new           #74                 // class java/io/IOException
     112: dup
     113: aload_0
     114: invokestatic  #62                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     117: invokestatic  #62                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     120: astore_2
     121: new           #21                 // class java/lang/StringBuilder
     124: dup
     125: bipush        17
     127: aload_2
     128: invokevirtual #63                 // Method java/lang/String.length:()I
     131: iadd
     132: invokespecial #22                 // Method java/lang/StringBuilder."<init>":(I)V
     135: ldc           #85                 // String Unable to delete
     137: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: aload_2
     141: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     147: invokespecial #76                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     150: athrow
     151: return

  public static java.lang.String readFirstLine(java.io.File, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #40                 // Method asCharSource:(Ljava/io/File;Ljava/nio/charset/Charset;)Lcom/google/common/io/CharSource;
       5: invokevirtual #86                 // Method com/google/common/io/CharSource.readFirstLine:()Ljava/lang/String;
       8: areturn

  public static java.util.List<java.lang.String> readLines(java.io.File, java.nio.charset.Charset) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #87                 // class com/google/common/io/Files$1
       5: dup
       6: invokespecial #88                 // Method com/google/common/io/Files$1."<init>":()V
       9: invokestatic  #89                 // Method readLines:(Ljava/io/File;Ljava/nio/charset/Charset;Lcom/google/common/io/LineProcessor;)Ljava/lang/Object;
      12: checkcast     #90                 // class java/util/List
      15: areturn

  public static <T> T readLines(java.io.File, java.nio.charset.Charset, com.google.common.io.LineProcessor<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #40                 // Method asCharSource:(Ljava/io/File;Ljava/nio/charset/Charset;)Lcom/google/common/io/CharSource;
       5: aload_2
       6: invokevirtual #91                 // Method com/google/common/io/CharSource.readLines:(Lcom/google/common/io/LineProcessor;)Ljava/lang/Object;
       9: areturn

  public static <T> T readBytes(java.io.File, com.google.common.io.ByteProcessor<T>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #33                 // Method asByteSource:(Ljava/io/File;)Lcom/google/common/io/ByteSource;
       4: aload_1
       5: invokevirtual #92                 // Method com/google/common/io/ByteSource.read:(Lcom/google/common/io/ByteProcessor;)Ljava/lang/Object;
       8: areturn

  public static com.google.common.hash.HashCode hash(java.io.File, com.google.common.hash.HashFunction) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #33                 // Method asByteSource:(Ljava/io/File;)Lcom/google/common/io/ByteSource;
       4: aload_1
       5: invokevirtual #93                 // Method com/google/common/io/ByteSource.hash:(Lcom/google/common/hash/HashFunction;)Lcom/google/common/hash/HashCode;
       8: areturn

  public static java.nio.MappedByteBuffer map(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getstatic     #94                 // Field java/nio/channels/FileChannel$MapMode.READ_ONLY:Ljava/nio/channels/FileChannel$MapMode;
       9: invokestatic  #95                 // Method map:(Ljava/io/File;Ljava/nio/channels/FileChannel$MapMode;)Ljava/nio/MappedByteBuffer;
      12: areturn

  public static java.nio.MappedByteBuffer map(java.io.File, java.nio.channels.FileChannel$MapMode) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: invokevirtual #96                 // Method java/io/File.exists:()Z
      14: ifne          29
      17: new           #97                 // class java/io/FileNotFoundException
      20: dup
      21: aload_0
      22: invokevirtual #98                 // Method java/io/File.toString:()Ljava/lang/String;
      25: invokespecial #99                 // Method java/io/FileNotFoundException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: aload_1
      31: aload_0
      32: invokevirtual #54                 // Method java/io/File.length:()J
      35: invokestatic  #100                // Method map:(Ljava/io/File;Ljava/nio/channels/FileChannel$MapMode;J)Ljava/nio/MappedByteBuffer;
      38: areturn

  public static java.nio.MappedByteBuffer map(java.io.File, java.nio.channels.FileChannel$MapMode, long) throws java.io.FileNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: invokestatic  #101                // Method com/google/common/io/Closer.create:()Lcom/google/common/io/Closer;
      13: astore        4
      15: aload         4
      17: new           #102                // class java/io/RandomAccessFile
      20: dup
      21: aload_0
      22: aload_1
      23: getstatic     #94                 // Field java/nio/channels/FileChannel$MapMode.READ_ONLY:Ljava/nio/channels/FileChannel$MapMode;
      26: if_acmpne     34
      29: ldc           #103                // String r
      31: goto          36
      34: ldc           #104                // String rw
      36: invokespecial #105                // Method java/io/RandomAccessFile."<init>":(Ljava/io/File;Ljava/lang/String;)V
      39: invokevirtual #106                // Method com/google/common/io/Closer.register:(Ljava/io/Closeable;)Ljava/io/Closeable;
      42: checkcast     #102                // class java/io/RandomAccessFile
      45: astore        5
      47: aload         5
      49: aload_1
      50: lload_2
      51: invokestatic  #107                // Method map:(Ljava/io/RandomAccessFile;Ljava/nio/channels/FileChannel$MapMode;J)Ljava/nio/MappedByteBuffer;
      54: astore        6
      56: aload         4
      58: invokevirtual #108                // Method com/google/common/io/Closer.close:()V
      61: aload         6
      63: areturn
      64: astore        5
      66: aload         4
      68: aload         5
      70: invokevirtual #110                // Method com/google/common/io/Closer.rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      73: athrow
      74: astore        7
      76: aload         4
      78: invokevirtual #108                // Method com/google/common/io/Closer.close:()V
      81: aload         7
      83: athrow
    Exception table:
       from    to  target type
          15    56    64   Class java/lang/Throwable
          15    56    74   any
          64    76    74   any

  private static java.nio.MappedByteBuffer map(java.io.RandomAccessFile, java.nio.channels.FileChannel$MapMode, long) throws java.io.IOException;
    Code:
       0: invokestatic  #101                // Method com/google/common/io/Closer.create:()Lcom/google/common/io/Closer;
       3: astore        4
       5: aload         4
       7: aload_0
       8: invokevirtual #111                // Method java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
      11: invokevirtual #106                // Method com/google/common/io/Closer.register:(Ljava/io/Closeable;)Ljava/io/Closeable;
      14: checkcast     #112                // class java/nio/channels/FileChannel
      17: astore        5
      19: aload         5
      21: aload_1
      22: lconst_0
      23: lload_2
      24: invokevirtual #113                // Method java/nio/channels/FileChannel.map:(Ljava/nio/channels/FileChannel$MapMode;JJ)Ljava/nio/MappedByteBuffer;
      27: astore        6
      29: aload         4
      31: invokevirtual #108                // Method com/google/common/io/Closer.close:()V
      34: aload         6
      36: areturn
      37: astore        5
      39: aload         4
      41: aload         5
      43: invokevirtual #110                // Method com/google/common/io/Closer.rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      46: athrow
      47: astore        7
      49: aload         4
      51: invokevirtual #108                // Method com/google/common/io/Closer.close:()V
      54: aload         7
      56: athrow
    Exception table:
       from    to  target type
           5    29    37   Class java/lang/Throwable
           5    29    47   any
          37    49    47   any

  public static java.lang.String simplifyPath(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokevirtual #63                 // Method java/lang/String.length:()I
       9: ifne          15
      12: ldc           #114                // String .
      14: areturn
      15: bipush        47
      17: invokestatic  #115                // Method com/google/common/base/Splitter.on:(C)Lcom/google/common/base/Splitter;
      20: invokevirtual #116                // Method com/google/common/base/Splitter.omitEmptyStrings:()Lcom/google/common/base/Splitter;
      23: aload_0
      24: invokevirtual #117                // Method com/google/common/base/Splitter.split:(Ljava/lang/CharSequence;)Ljava/lang/Iterable;
      27: astore_1
      28: new           #118                // class java/util/ArrayList
      31: dup
      32: invokespecial #119                // Method java/util/ArrayList."<init>":()V
      35: astore_2
      36: aload_1
      37: invokeinterface #120,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      42: astore_3
      43: aload_3
      44: invokeinterface #121,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          162
      52: aload_3
      53: invokeinterface #122,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #123                // class java/lang/String
      61: astore        4
      63: aload         4
      65: ldc           #114                // String .
      67: invokevirtual #124                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      70: ifeq          76
      73: goto          43
      76: aload         4
      78: ldc           #125                // String ..
      80: invokevirtual #124                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      83: ifeq          150
      86: aload_2
      87: invokeinterface #126,  1          // InterfaceMethod java/util/List.size:()I
      92: ifle          138
      95: aload_2
      96: aload_2
      97: invokeinterface #126,  1          // InterfaceMethod java/util/List.size:()I
     102: iconst_1
     103: isub
     104: invokeinterface #127,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     109: checkcast     #123                // class java/lang/String
     112: ldc           #125                // String ..
     114: invokevirtual #124                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     117: ifne          138
     120: aload_2
     121: aload_2
     122: invokeinterface #126,  1          // InterfaceMethod java/util/List.size:()I
     127: iconst_1
     128: isub
     129: invokeinterface #128,  2          // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
     134: pop
     135: goto          159
     138: aload_2
     139: ldc           #125                // String ..
     141: invokeinterface #129,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     146: pop
     147: goto          159
     150: aload_2
     151: aload         4
     153: invokeinterface #129,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     158: pop
     159: goto          43
     162: bipush        47
     164: invokestatic  #130                // Method com/google/common/base/Joiner.on:(C)Lcom/google/common/base/Joiner;
     167: aload_2
     168: invokevirtual #131                // Method com/google/common/base/Joiner.join:(Ljava/lang/Iterable;)Ljava/lang/String;
     171: astore_3
     172: aload_0
     173: iconst_0
     174: invokevirtual #132                // Method java/lang/String.charAt:(I)C
     177: bipush        47
     179: if_icmpne     211
     182: ldc           #133                // String /
     184: aload_3
     185: invokestatic  #62                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     188: dup
     189: invokevirtual #63                 // Method java/lang/String.length:()I
     192: ifeq          201
     195: invokevirtual #134                // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
     198: goto          210
     201: pop
     202: new           #123                // class java/lang/String
     205: dup_x1
     206: swap
     207: invokespecial #135                // Method java/lang/String."<init>":(Ljava/lang/String;)V
     210: astore_3
     211: aload_3
     212: ldc           #136                // String /../
     214: invokevirtual #137                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     217: ifeq          229
     220: aload_3
     221: iconst_3
     222: invokevirtual #138                // Method java/lang/String.substring:(I)Ljava/lang/String;
     225: astore_3
     226: goto          211
     229: aload_3
     230: ldc           #139                // String /..
     232: invokevirtual #124                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     235: ifeq          244
     238: ldc           #133                // String /
     240: astore_3
     241: goto          256
     244: ldc           #140                // String
     246: aload_3
     247: invokevirtual #124                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     250: ifeq          256
     253: ldc           #114                // String .
     255: astore_3
     256: aload_3
     257: areturn

  public static java.lang.String getFileExtension(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #56                 // class java/io/File
       8: dup
       9: aload_0
      10: invokespecial #59                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      13: invokevirtual #141                // Method java/io/File.getName:()Ljava/lang/String;
      16: astore_1
      17: aload_1
      18: bipush        46
      20: invokevirtual #142                // Method java/lang/String.lastIndexOf:(I)I
      23: istore_2
      24: iload_2
      25: iconst_m1
      26: if_icmpne     34
      29: ldc           #140                // String
      31: goto          41
      34: aload_1
      35: iload_2
      36: iconst_1
      37: iadd
      38: invokevirtual #138                // Method java/lang/String.substring:(I)Ljava/lang/String;
      41: areturn

  public static java.lang.String getNameWithoutExtension(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #56                 // class java/io/File
       8: dup
       9: aload_0
      10: invokespecial #59                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      13: invokevirtual #141                // Method java/io/File.getName:()Ljava/lang/String;
      16: astore_1
      17: aload_1
      18: bipush        46
      20: invokevirtual #142                // Method java/lang/String.lastIndexOf:(I)I
      23: istore_2
      24: iload_2
      25: iconst_m1
      26: if_icmpne     33
      29: aload_1
      30: goto          39
      33: aload_1
      34: iconst_0
      35: iload_2
      36: invokevirtual #143                // Method java/lang/String.substring:(II)Ljava/lang/String;
      39: areturn

  public static com.google.common.collect.TreeTraverser<java.io.File> fileTreeTraverser();
    Code:
       0: getstatic     #144                // Field FILE_TREE_TRAVERSER:Lcom/google/common/collect/TreeTraverser;
       3: areturn

  public static com.google.common.base.Predicate<java.io.File> isDirectory();
    Code:
       0: getstatic     #145                // Field com/google/common/io/Files$FilePredicate.IS_DIRECTORY:Lcom/google/common/io/Files$FilePredicate;
       3: areturn

  public static com.google.common.base.Predicate<java.io.File> isFile();
    Code:
       0: getstatic     #146                // Field com/google/common/io/Files$FilePredicate.IS_FILE:Lcom/google/common/io/Files$FilePredicate;
       3: areturn

  static {};
    Code:
       0: new           #147                // class com/google/common/io/Files$2
       3: dup
       4: invokespecial #148                // Method com/google/common/io/Files$2."<init>":()V
       7: putstatic     #144                // Field FILE_TREE_TRAVERSER:Lcom/google/common/collect/TreeTraverser;
      10: return
}
