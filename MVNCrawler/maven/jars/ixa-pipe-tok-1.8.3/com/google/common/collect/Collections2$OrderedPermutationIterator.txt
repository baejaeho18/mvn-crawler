Compiled from "Collections2.java"
final class com.google.common.collect.Collections2$OrderedPermutationIterator<E> extends com.google.common.collect.AbstractIterator<java.util.List<E>> {
  java.util.List<E> nextPermutation;

  final java.util.Comparator<? super E> comparator;

  com.google.common.collect.Collections2$OrderedPermutationIterator(java.util.List<E>, java.util.Comparator<? super E>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/common/collect/AbstractIterator."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/collect/Lists.newArrayList:(Ljava/lang/Iterable;)Ljava/util/ArrayList;
       9: putfield      #3                  // Field nextPermutation:Ljava/util/List;
      12: aload_0
      13: aload_2
      14: putfield      #4                  // Field comparator:Ljava/util/Comparator;
      17: return

  protected java.util.List<E> computeNext();
    Code:
       0: aload_0
       1: getfield      #3                  // Field nextPermutation:Ljava/util/List;
       4: ifnonnull     15
       7: aload_0
       8: invokevirtual #5                  // Method endOfData:()Ljava/lang/Object;
      11: checkcast     #6                  // class java/util/List
      14: areturn
      15: aload_0
      16: getfield      #3                  // Field nextPermutation:Ljava/util/List;
      19: invokestatic  #7                  // Method com/google/common/collect/ImmutableList.copyOf:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;
      22: astore_1
      23: aload_0
      24: invokevirtual #8                  // Method calculateNextPermutation:()V
      27: aload_1
      28: areturn

  void calculateNextPermutation();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method findNextJ:()I
       4: istore_1
       5: iload_1
       6: iconst_m1
       7: if_icmpne     16
      10: aload_0
      11: aconst_null
      12: putfield      #3                  // Field nextPermutation:Ljava/util/List;
      15: return
      16: aload_0
      17: iload_1
      18: invokevirtual #10                 // Method findNextL:(I)I
      21: istore_2
      22: aload_0
      23: getfield      #3                  // Field nextPermutation:Ljava/util/List;
      26: iload_1
      27: iload_2
      28: invokestatic  #11                 // Method java/util/Collections.swap:(Ljava/util/List;II)V
      31: aload_0
      32: getfield      #3                  // Field nextPermutation:Ljava/util/List;
      35: invokeinterface #12,  1           // InterfaceMethod java/util/List.size:()I
      40: istore_3
      41: aload_0
      42: getfield      #3                  // Field nextPermutation:Ljava/util/List;
      45: iload_1
      46: iconst_1
      47: iadd
      48: iload_3
      49: invokeinterface #13,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      54: invokestatic  #14                 // Method java/util/Collections.reverse:(Ljava/util/List;)V
      57: return

  int findNextJ();
    Code:
       0: aload_0
       1: getfield      #3                  // Field nextPermutation:Ljava/util/List;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/List.size:()I
       9: iconst_2
      10: isub
      11: istore_1
      12: iload_1
      13: iflt          58
      16: aload_0
      17: getfield      #4                  // Field comparator:Ljava/util/Comparator;
      20: aload_0
      21: getfield      #3                  // Field nextPermutation:Ljava/util/List;
      24: iload_1
      25: invokeinterface #15,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      30: aload_0
      31: getfield      #3                  // Field nextPermutation:Ljava/util/List;
      34: iload_1
      35: iconst_1
      36: iadd
      37: invokeinterface #15,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      42: invokeinterface #16,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      47: ifge          52
      50: iload_1
      51: ireturn
      52: iinc          1, -1
      55: goto          12
      58: iconst_m1
      59: ireturn

  int findNextL(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field nextPermutation:Ljava/util/List;
       4: iload_1
       5: invokeinterface #15,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: astore_2
      11: aload_0
      12: getfield      #3                  // Field nextPermutation:Ljava/util/List;
      15: invokeinterface #12,  1           // InterfaceMethod java/util/List.size:()I
      20: iconst_1
      21: isub
      22: istore_3
      23: iload_3
      24: iload_1
      25: if_icmple     59
      28: aload_0
      29: getfield      #4                  // Field comparator:Ljava/util/Comparator;
      32: aload_2
      33: aload_0
      34: getfield      #3                  // Field nextPermutation:Ljava/util/List;
      37: iload_3
      38: invokeinterface #15,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      43: invokeinterface #16,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      48: ifge          53
      51: iload_3
      52: ireturn
      53: iinc          3, -1
      56: goto          23
      59: new           #17                 // class java/lang/AssertionError
      62: dup
      63: ldc           #18                 // String this statement should be unreachable
      65: invokespecial #19                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      68: athrow

  protected java.lang.Object computeNext();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method computeNext:()Ljava/util/List;
       4: areturn
}
