Compiled from "AbstractMapBasedMultiset.java"
abstract class com.google.common.collect.AbstractMapBasedMultiset<E> extends com.google.common.collect.AbstractMultiset<E> implements java.io.Serializable {
  private transient java.util.Map<E, com.google.common.collect.Count> backingMap;

  private transient long size;

  private static final long serialVersionUID;

  protected com.google.common.collect.AbstractMapBasedMultiset(java.util.Map<E, com.google.common.collect.Count>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method com/google/common/collect/AbstractMultiset."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #6                  // class java/util/Map
      12: putfield      #3                  // Field backingMap:Ljava/util/Map;
      15: aload_0
      16: aload_0
      17: invokespecial #7                  // Method com/google/common/collect/AbstractMultiset.size:()I
      20: i2l
      21: putfield      #2                  // Field size:J
      24: return

  void setBackingMap(java.util.Map<E, com.google.common.collect.Count>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field backingMap:Ljava/util/Map;
       5: return

  public java.util.Set<com.google.common.collect.Multiset$Entry<E>> entrySet();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method com/google/common/collect/AbstractMultiset.entrySet:()Ljava/util/Set;
       4: areturn

  java.util.Iterator<com.google.common.collect.Multiset$Entry<E>> entryIterator();
    Code:
       0: aload_0
       1: getfield      #3                  // Field backingMap:Ljava/util/Map;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #10,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: new           #11                 // class com/google/common/collect/AbstractMapBasedMultiset$1
      18: dup
      19: aload_0
      20: aload_1
      21: invokespecial #12                 // Method com/google/common/collect/AbstractMapBasedMultiset$1."<init>":(Lcom/google/common/collect/AbstractMapBasedMultiset;Ljava/util/Iterator;)V
      24: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #3                  // Field backingMap:Ljava/util/Map;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #14,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          42
      24: aload_1
      25: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #17                 // class com/google/common/collect/Count
      33: astore_2
      34: aload_2
      35: iconst_0
      36: invokevirtual #18                 // Method com/google/common/collect/Count.set:(I)V
      39: goto          15
      42: aload_0
      43: getfield      #3                  // Field backingMap:Ljava/util/Map;
      46: invokeinterface #19,  1           // InterfaceMethod java/util/Map.clear:()V
      51: aload_0
      52: lconst_0
      53: putfield      #2                  // Field size:J
      56: return

  int distinctElements();
    Code:
       0: aload_0
       1: getfield      #3                  // Field backingMap:Ljava/util/Map;
       4: invokeinterface #20,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #2                  // Field size:J
       4: invokestatic  #21                 // Method com/google/common/primitives/Ints.saturatedCast:(J)I
       7: ireturn

  public java.util.Iterator<E> iterator();
    Code:
       0: new           #22                 // class com/google/common/collect/AbstractMapBasedMultiset$MapBasedMultisetIterator
       3: dup
       4: aload_0
       5: invokespecial #23                 // Method com/google/common/collect/AbstractMapBasedMultiset$MapBasedMultisetIterator."<init>":(Lcom/google/common/collect/AbstractMapBasedMultiset;)V
       8: areturn

  public int count(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field backingMap:Ljava/util/Map;
       4: aload_1
       5: invokestatic  #24                 // Method com/google/common/collect/Maps.safeGet:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #17                 // class com/google/common/collect/Count
      11: astore_2
      12: aload_2
      13: ifnonnull     20
      16: iconst_0
      17: goto          24
      20: aload_2
      21: invokevirtual #25                 // Method com/google/common/collect/Count.get:()I
      24: ireturn

  public int add(E, int);
    Code:
       0: iload_2
       1: ifne          10
       4: aload_0
       5: aload_1
       6: invokevirtual #26                 // Method count:(Ljava/lang/Object;)I
       9: ireturn
      10: iload_2
      11: ifle          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #27                 // String occurrences cannot be negative: %s
      21: iconst_1
      22: anewarray     #28                 // class java/lang/Object
      25: dup
      26: iconst_0
      27: iload_2
      28: invokestatic  #29                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      31: aastore
      32: invokestatic  #30                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      35: aload_0
      36: getfield      #3                  // Field backingMap:Ljava/util/Map;
      39: aload_1
      40: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #17                 // class com/google/common/collect/Count
      48: astore_3
      49: aload_3
      50: ifnonnull     78
      53: iconst_0
      54: istore        4
      56: aload_0
      57: getfield      #3                  // Field backingMap:Ljava/util/Map;
      60: aload_1
      61: new           #17                 // class com/google/common/collect/Count
      64: dup
      65: iload_2
      66: invokespecial #32                 // Method com/google/common/collect/Count."<init>":(I)V
      69: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      74: pop
      75: goto          129
      78: aload_3
      79: invokevirtual #25                 // Method com/google/common/collect/Count.get:()I
      82: istore        4
      84: iload         4
      86: i2l
      87: iload_2
      88: i2l
      89: ladd
      90: lstore        5
      92: lload         5
      94: ldc2_w        #34                 // long 2147483647l
      97: lcmp
      98: ifgt          105
     101: iconst_1
     102: goto          106
     105: iconst_0
     106: ldc           #36                 // String too many occurrences: %s
     108: iconst_1
     109: anewarray     #28                 // class java/lang/Object
     112: dup
     113: iconst_0
     114: lload         5
     116: invokestatic  #37                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     119: aastore
     120: invokestatic  #30                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
     123: aload_3
     124: iload_2
     125: invokevirtual #38                 // Method com/google/common/collect/Count.getAndAdd:(I)I
     128: pop
     129: aload_0
     130: dup
     131: getfield      #2                  // Field size:J
     134: iload_2
     135: i2l
     136: ladd
     137: putfield      #2                  // Field size:J
     140: iload         4
     142: ireturn

  public int remove(java.lang.Object, int);
    Code:
       0: iload_2
       1: ifne          10
       4: aload_0
       5: aload_1
       6: invokevirtual #26                 // Method count:(Ljava/lang/Object;)I
       9: ireturn
      10: iload_2
      11: ifle          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #27                 // String occurrences cannot be negative: %s
      21: iconst_1
      22: anewarray     #28                 // class java/lang/Object
      25: dup
      26: iconst_0
      27: iload_2
      28: invokestatic  #29                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      31: aastore
      32: invokestatic  #30                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      35: aload_0
      36: getfield      #3                  // Field backingMap:Ljava/util/Map;
      39: aload_1
      40: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #17                 // class com/google/common/collect/Count
      48: astore_3
      49: aload_3
      50: ifnonnull     55
      53: iconst_0
      54: ireturn
      55: aload_3
      56: invokevirtual #25                 // Method com/google/common/collect/Count.get:()I
      59: istore        4
      61: iload         4
      63: iload_2
      64: if_icmple     73
      67: iload_2
      68: istore        5
      70: goto          88
      73: iload         4
      75: istore        5
      77: aload_0
      78: getfield      #3                  // Field backingMap:Ljava/util/Map;
      81: aload_1
      82: invokeinterface #39,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      87: pop
      88: aload_3
      89: iload         5
      91: ineg
      92: invokevirtual #40                 // Method com/google/common/collect/Count.addAndGet:(I)I
      95: pop
      96: aload_0
      97: dup
      98: getfield      #2                  // Field size:J
     101: iload         5
     103: i2l
     104: lsub
     105: putfield      #2                  // Field size:J
     108: iload         4
     110: ireturn

  public int setCount(E, int);
    Code:
       0: iload_2
       1: ldc           #41                 // String count
       3: invokestatic  #42                 // Method com/google/common/collect/CollectPreconditions.checkNonnegative:(ILjava/lang/String;)I
       6: pop
       7: iload_2
       8: ifne          35
      11: aload_0
      12: getfield      #3                  // Field backingMap:Ljava/util/Map;
      15: aload_1
      16: invokeinterface #39,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #17                 // class com/google/common/collect/Count
      24: astore_3
      25: aload_3
      26: iload_2
      27: invokestatic  #43                 // Method getAndSet:(Lcom/google/common/collect/Count;I)I
      30: istore        4
      32: goto          79
      35: aload_0
      36: getfield      #3                  // Field backingMap:Ljava/util/Map;
      39: aload_1
      40: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #17                 // class com/google/common/collect/Count
      48: astore_3
      49: aload_3
      50: iload_2
      51: invokestatic  #43                 // Method getAndSet:(Lcom/google/common/collect/Count;I)I
      54: istore        4
      56: aload_3
      57: ifnonnull     79
      60: aload_0
      61: getfield      #3                  // Field backingMap:Ljava/util/Map;
      64: aload_1
      65: new           #17                 // class com/google/common/collect/Count
      68: dup
      69: iload_2
      70: invokespecial #32                 // Method com/google/common/collect/Count."<init>":(I)V
      73: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload_0
      80: dup
      81: getfield      #2                  // Field size:J
      84: iload_2
      85: iload         4
      87: isub
      88: i2l
      89: ladd
      90: putfield      #2                  // Field size:J
      93: iload         4
      95: ireturn

  private static int getAndSet(com.google.common.collect.Count, int);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: iload_1
       8: invokevirtual #44                 // Method com/google/common/collect/Count.getAndSet:(I)I
      11: ireturn

  private void readObjectNoData() throws java.io.ObjectStreamException;
    Code:
       0: new           #45                 // class java/io/InvalidObjectException
       3: dup
       4: ldc           #46                 // String Stream data required
       6: invokespecial #47                 // Method java/io/InvalidObjectException."<init>":(Ljava/lang/String;)V
       9: athrow

  static java.util.Map access$000(com.google.common.collect.AbstractMapBasedMultiset);
    Code:
       0: aload_0
       1: getfield      #3                  // Field backingMap:Ljava/util/Map;
       4: areturn

  static long access$122(com.google.common.collect.AbstractMapBasedMultiset, long);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field size:J
       5: lload_1
       6: lsub
       7: dup2_x1
       8: putfield      #2                  // Field size:J
      11: lreturn

  static long access$110(com.google.common.collect.AbstractMapBasedMultiset);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field size:J
       5: dup2_x1
       6: lconst_1
       7: lsub
       8: putfield      #2                  // Field size:J
      11: lreturn
}
