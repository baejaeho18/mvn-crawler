Compiled from "Iterators.java"
public final class com.google.common.collect.Iterators {
  static final com.google.common.collect.UnmodifiableListIterator<java.lang.Object> EMPTY_LIST_ITERATOR;

  private static final java.util.Iterator<java.lang.Object> EMPTY_MODIFIABLE_ITERATOR;

  private com.google.common.collect.Iterators();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <T> com.google.common.collect.UnmodifiableIterator<T> emptyIterator();
    Code:
       0: invokestatic  #2                  // Method emptyListIterator:()Lcom/google/common/collect/UnmodifiableListIterator;
       3: areturn

  static <T> com.google.common.collect.UnmodifiableListIterator<T> emptyListIterator();
    Code:
       0: getstatic     #3                  // Field EMPTY_LIST_ITERATOR:Lcom/google/common/collect/UnmodifiableListIterator;
       3: areturn

  static <T> java.util.Iterator<T> emptyModifiableIterator();
    Code:
       0: getstatic     #4                  // Field EMPTY_MODIFIABLE_ITERATOR:Ljava/util/Iterator;
       3: areturn

  public static <T> com.google.common.collect.UnmodifiableIterator<T> unmodifiableIterator(java.util.Iterator<T>);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: instanceof    #6                  // class com/google/common/collect/UnmodifiableIterator
       9: ifeq          17
      12: aload_0
      13: checkcast     #6                  // class com/google/common/collect/UnmodifiableIterator
      16: areturn
      17: new           #7                  // class com/google/common/collect/Iterators$3
      20: dup
      21: aload_0
      22: invokespecial #8                  // Method com/google/common/collect/Iterators$3."<init>":(Ljava/util/Iterator;)V
      25: areturn

  public static <T> com.google.common.collect.UnmodifiableIterator<T> unmodifiableIterator(com.google.common.collect.UnmodifiableIterator<T>);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: checkcast     #6                  // class com/google/common/collect/UnmodifiableIterator
       7: areturn

  public static int size(java.util.Iterator<?>);
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
       8: ifeq          24
      11: aload_0
      12: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      17: pop
      18: iinc          1, 1
      21: goto          2
      24: iload_1
      25: ireturn

  public static boolean contains(java.util.Iterator<?>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #11                 // Method com/google/common/base/Predicates.equalTo:(Ljava/lang/Object;)Lcom/google/common/base/Predicate;
       5: invokestatic  #12                 // Method any:(Ljava/util/Iterator;Lcom/google/common/base/Predicate;)Z
       8: ireturn

  public static boolean removeAll(java.util.Iterator<?>, java.util.Collection<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #13                 // Method com/google/common/base/Predicates.in:(Ljava/util/Collection;)Lcom/google/common/base/Predicate;
       5: invokestatic  #14                 // Method removeIf:(Ljava/util/Iterator;Lcom/google/common/base/Predicate;)Z
       8: ireturn

  public static <T> boolean removeIf(java.util.Iterator<T>, com.google.common.base.Predicate<? super T>);
    Code:
       0: aload_1
       1: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iconst_0
       6: istore_2
       7: aload_0
       8: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          42
      16: aload_1
      17: aload_0
      18: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: invokeinterface #15,  2           // InterfaceMethod com/google/common/base/Predicate.apply:(Ljava/lang/Object;)Z
      28: ifeq          7
      31: aload_0
      32: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.remove:()V
      37: iconst_1
      38: istore_2
      39: goto          7
      42: iload_2
      43: ireturn

  public static boolean retainAll(java.util.Iterator<?>, java.util.Collection<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #13                 // Method com/google/common/base/Predicates.in:(Ljava/util/Collection;)Lcom/google/common/base/Predicate;
       5: invokestatic  #17                 // Method com/google/common/base/Predicates.not:(Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
       8: invokestatic  #14                 // Method removeIf:(Ljava/util/Iterator;Lcom/google/common/base/Predicate;)Z
      11: ireturn

  public static boolean elementsEqual(java.util.Iterator<?>, java.util.Iterator<?>);
    Code:
       0: aload_0
       1: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
       6: ifeq          47
       9: aload_1
      10: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifne          20
      18: iconst_0
      19: ireturn
      20: aload_0
      21: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: astore_2
      27: aload_1
      28: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: astore_3
      34: aload_2
      35: aload_3
      36: invokestatic  #18                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      39: ifne          44
      42: iconst_0
      43: ireturn
      44: goto          0
      47: aload_1
      48: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      53: ifne          60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: ireturn

  public static java.lang.String toString(java.util.Iterator<?>);
    Code:
       0: getstatic     #19                 // Field com/google/common/collect/Collections2.STANDARD_JOINER:Lcom/google/common/base/Joiner;
       3: new           #20                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      10: bipush        91
      12: invokevirtual #22                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      15: aload_0
      16: invokevirtual #23                 // Method com/google/common/base/Joiner.appendTo:(Ljava/lang/StringBuilder;Ljava/util/Iterator;)Ljava/lang/StringBuilder;
      19: bipush        93
      21: invokevirtual #22                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public static <T> T getOnlyElement(java.util.Iterator<T>);
    Code:
       0: aload_0
       1: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
       6: astore_1
       7: aload_0
       8: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifne          18
      16: aload_1
      17: areturn
      18: new           #20                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      25: astore_2
      26: aload_2
      27: aload_1
      28: invokestatic  #25                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      31: invokestatic  #25                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      34: astore_3
      35: new           #20                 // class java/lang/StringBuilder
      38: dup
      39: bipush        31
      41: aload_3
      42: invokevirtual #26                 // Method java/lang/String.length:()I
      45: iadd
      46: invokespecial #27                 // Method java/lang/StringBuilder."<init>":(I)V
      49: ldc           #28                 // String expected one element but was: <
      51: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_3
      55: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: pop
      65: iconst_0
      66: istore        4
      68: iload         4
      70: iconst_4
      71: if_icmpge     135
      74: aload_0
      75: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      80: ifeq          135
      83: aload_2
      84: aload_0
      85: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      90: invokestatic  #25                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      93: invokestatic  #25                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      96: astore        5
      98: new           #20                 // class java/lang/StringBuilder
     101: dup
     102: iconst_2
     103: aload         5
     105: invokevirtual #26                 // Method java/lang/String.length:()I
     108: iadd
     109: invokespecial #27                 // Method java/lang/StringBuilder."<init>":(I)V
     112: ldc           #30                 // String ,
     114: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: aload         5
     119: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     125: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: pop
     129: iinc          4, 1
     132: goto          68
     135: aload_0
     136: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     141: ifeq          151
     144: aload_2
     145: ldc           #31                 // String , ...
     147: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: pop
     151: aload_2
     152: bipush        62
     154: invokevirtual #22                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     157: pop
     158: new           #32                 // class java/lang/IllegalArgumentException
     161: dup
     162: aload_2
     163: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     166: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     169: athrow

  public static <T> T getOnlyElement(java.util.Iterator<? extends T>, T);
    Code:
       0: aload_0
       1: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
       6: ifeq          16
       9: aload_0
      10: invokestatic  #34                 // Method getOnlyElement:(Ljava/util/Iterator;)Ljava/lang/Object;
      13: goto          17
      16: aload_1
      17: areturn

  public static <T> T[] toArray(java.util.Iterator<? extends T>, java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokestatic  #35                 // Method com/google/common/collect/Lists.newArrayList:(Ljava/util/Iterator;)Ljava/util/ArrayList;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokestatic  #36                 // Method com/google/common/collect/Iterables.toArray:(Ljava/lang/Iterable;Ljava/lang/Class;)[Ljava/lang/Object;
      10: areturn

  public static <T> boolean addAll(java.util.Collection<T>, java.util.Iterator<? extends T>);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: iconst_0
      11: istore_2
      12: aload_1
      13: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          39
      21: iload_2
      22: aload_0
      23: aload_1
      24: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: invokeinterface #37,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      34: ior
      35: istore_2
      36: goto          12
      39: iload_2
      40: ireturn

  public static int frequency(java.util.Iterator<?>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #11                 // Method com/google/common/base/Predicates.equalTo:(Ljava/lang/Object;)Lcom/google/common/base/Predicate;
       5: invokestatic  #38                 // Method filter:(Ljava/util/Iterator;Lcom/google/common/base/Predicate;)Lcom/google/common/collect/UnmodifiableIterator;
       8: invokestatic  #39                 // Method size:(Ljava/util/Iterator;)I
      11: ireturn

  public static <T> java.util.Iterator<T> cycle(java.lang.Iterable<T>);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #40                 // class com/google/common/collect/Iterators$4
       8: dup
       9: aload_0
      10: invokespecial #41                 // Method com/google/common/collect/Iterators$4."<init>":(Ljava/lang/Iterable;)V
      13: areturn

  public static <T> java.util.Iterator<T> cycle(T...);
    Code:
       0: aload_0
       1: invokestatic  #42                 // Method com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
       4: invokestatic  #43                 // Method cycle:(Ljava/lang/Iterable;)Ljava/util/Iterator;
       7: areturn

  public static <T> java.util.Iterator<T> concat(java.util.Iterator<? extends T>, java.util.Iterator<? extends T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #44                 // Method com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
       5: invokevirtual #45                 // Method com/google/common/collect/ImmutableList.iterator:()Lcom/google/common/collect/UnmodifiableIterator;
       8: invokestatic  #46                 // Method concat:(Ljava/util/Iterator;)Ljava/util/Iterator;
      11: areturn

  public static <T> java.util.Iterator<T> concat(java.util.Iterator<? extends T>, java.util.Iterator<? extends T>, java.util.Iterator<? extends T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #47                 // Method com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
       6: invokevirtual #45                 // Method com/google/common/collect/ImmutableList.iterator:()Lcom/google/common/collect/UnmodifiableIterator;
       9: invokestatic  #46                 // Method concat:(Ljava/util/Iterator;)Ljava/util/Iterator;
      12: areturn

  public static <T> java.util.Iterator<T> concat(java.util.Iterator<? extends T>, java.util.Iterator<? extends T>, java.util.Iterator<? extends T>, java.util.Iterator<? extends T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #48                 // Method com/google/common/collect/ImmutableList.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
       7: invokevirtual #45                 // Method com/google/common/collect/ImmutableList.iterator:()Lcom/google/common/collect/UnmodifiableIterator;
      10: invokestatic  #46                 // Method concat:(Ljava/util/Iterator;)Ljava/util/Iterator;
      13: areturn

  public static <T> java.util.Iterator<T> concat(java.util.Iterator<? extends T>...);
    Code:
       0: aload_0
       1: invokestatic  #49                 // Method com/google/common/collect/ImmutableList.copyOf:([Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
       4: invokevirtual #45                 // Method com/google/common/collect/ImmutableList.iterator:()Lcom/google/common/collect/UnmodifiableIterator;
       7: invokestatic  #46                 // Method concat:(Ljava/util/Iterator;)Ljava/util/Iterator;
      10: areturn

  public static <T> java.util.Iterator<T> concat(java.util.Iterator<? extends java.util.Iterator<? extends T>>);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #50                 // class com/google/common/collect/Iterators$5
       8: dup
       9: aload_0
      10: invokespecial #51                 // Method com/google/common/collect/Iterators$5."<init>":(Ljava/util/Iterator;)V
      13: areturn

  public static <T> com.google.common.collect.UnmodifiableIterator<java.util.List<T>> partition(java.util.Iterator<T>, int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokestatic  #52                 // Method partitionImpl:(Ljava/util/Iterator;IZ)Lcom/google/common/collect/UnmodifiableIterator;
       6: areturn

  public static <T> com.google.common.collect.UnmodifiableIterator<java.util.List<T>> paddedPartition(java.util.Iterator<T>, int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: invokestatic  #52                 // Method partitionImpl:(Ljava/util/Iterator;IZ)Lcom/google/common/collect/UnmodifiableIterator;
       6: areturn

  private static <T> com.google.common.collect.UnmodifiableIterator<java.util.List<T>> partitionImpl(java.util.Iterator<T>, int, boolean);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iload_1
       6: ifle          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokestatic  #53                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      17: new           #54                 // class com/google/common/collect/Iterators$6
      20: dup
      21: aload_0
      22: iload_1
      23: iload_2
      24: invokespecial #55                 // Method com/google/common/collect/Iterators$6."<init>":(Ljava/util/Iterator;IZ)V
      27: areturn

  public static <T> com.google.common.collect.UnmodifiableIterator<T> filter(java.util.Iterator<T>, com.google.common.base.Predicate<? super T>);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: new           #56                 // class com/google/common/collect/Iterators$7
      13: dup
      14: aload_0
      15: aload_1
      16: invokespecial #57                 // Method com/google/common/collect/Iterators$7."<init>":(Ljava/util/Iterator;Lcom/google/common/base/Predicate;)V
      19: areturn

  public static <T> com.google.common.collect.UnmodifiableIterator<T> filter(java.util.Iterator<?>, java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #58                 // Method com/google/common/base/Predicates.instanceOf:(Ljava/lang/Class;)Lcom/google/common/base/Predicate;
       5: invokestatic  #38                 // Method filter:(Ljava/util/Iterator;Lcom/google/common/base/Predicate;)Lcom/google/common/collect/UnmodifiableIterator;
       8: areturn

  public static <T> boolean any(java.util.Iterator<T>, com.google.common.base.Predicate<? super T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #59                 // Method indexOf:(Ljava/util/Iterator;Lcom/google/common/base/Predicate;)I
       5: iconst_m1
       6: if_icmpeq     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public static <T> boolean all(java.util.Iterator<T>, com.google.common.base.Predicate<? super T>);
    Code:
       0: aload_1
       1: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          36
      14: aload_0
      15: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: astore_2
      21: aload_1
      22: aload_2
      23: invokeinterface #15,  2           // InterfaceMethod com/google/common/base/Predicate.apply:(Ljava/lang/Object;)Z
      28: ifne          33
      31: iconst_0
      32: ireturn
      33: goto          5
      36: iconst_1
      37: ireturn

  public static <T> T find(java.util.Iterator<T>, com.google.common.base.Predicate<? super T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #38                 // Method filter:(Ljava/util/Iterator;Lcom/google/common/base/Predicate;)Lcom/google/common/collect/UnmodifiableIterator;
       5: invokevirtual #60                 // Method com/google/common/collect/UnmodifiableIterator.next:()Ljava/lang/Object;
       8: areturn

  public static <T> T find(java.util.Iterator<? extends T>, com.google.common.base.Predicate<? super T>, T);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #38                 // Method filter:(Ljava/util/Iterator;Lcom/google/common/base/Predicate;)Lcom/google/common/collect/UnmodifiableIterator;
       5: aload_2
       6: invokestatic  #61                 // Method getNext:(Ljava/util/Iterator;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public static <T> com.google.common.base.Optional<T> tryFind(java.util.Iterator<T>, com.google.common.base.Predicate<? super T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #38                 // Method filter:(Ljava/util/Iterator;Lcom/google/common/base/Predicate;)Lcom/google/common/collect/UnmodifiableIterator;
       5: astore_2
       6: aload_2
       7: invokevirtual #62                 // Method com/google/common/collect/UnmodifiableIterator.hasNext:()Z
      10: ifeq          23
      13: aload_2
      14: invokevirtual #60                 // Method com/google/common/collect/UnmodifiableIterator.next:()Ljava/lang/Object;
      17: invokestatic  #63                 // Method com/google/common/base/Optional.of:(Ljava/lang/Object;)Lcom/google/common/base/Optional;
      20: goto          26
      23: invokestatic  #64                 // Method com/google/common/base/Optional.absent:()Lcom/google/common/base/Optional;
      26: areturn

  public static <T> int indexOf(java.util.Iterator<T>, com.google.common.base.Predicate<? super T>);
    Code:
       0: aload_1
       1: ldc           #65                 // String predicate
       3: invokestatic  #66                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: iconst_0
       8: istore_2
       9: aload_0
      10: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          43
      18: aload_0
      19: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: astore_3
      25: aload_1
      26: aload_3
      27: invokeinterface #15,  2           // InterfaceMethod com/google/common/base/Predicate.apply:(Ljava/lang/Object;)Z
      32: ifeq          37
      35: iload_2
      36: ireturn
      37: iinc          2, 1
      40: goto          9
      43: iconst_m1
      44: ireturn

  public static <F, T> java.util.Iterator<T> transform(java.util.Iterator<F>, com.google.common.base.Function<? super F, ? extends T>);
    Code:
       0: aload_1
       1: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #67                 // class com/google/common/collect/Iterators$8
       8: dup
       9: aload_0
      10: aload_1
      11: invokespecial #68                 // Method com/google/common/collect/Iterators$8."<init>":(Ljava/util/Iterator;Lcom/google/common/base/Function;)V
      14: areturn

  public static <T> T get(java.util.Iterator<T>, int);
    Code:
       0: iload_1
       1: invokestatic  #69                 // Method checkNonnegative:(I)V
       4: aload_0
       5: iload_1
       6: invokestatic  #70                 // Method advance:(Ljava/util/Iterator;I)I
       9: istore_2
      10: aload_0
      11: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifne          68
      19: new           #71                 // class java/lang/IndexOutOfBoundsException
      22: dup
      23: iload_1
      24: istore_3
      25: iload_2
      26: istore        4
      28: new           #20                 // class java/lang/StringBuilder
      31: dup
      32: bipush        91
      34: invokespecial #27                 // Method java/lang/StringBuilder."<init>":(I)V
      37: ldc           #72                 // String position (
      39: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: iload_3
      43: invokevirtual #73                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      46: ldc           #74                 // String ) must be less than the number of elements that remained (
      48: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: iload         4
      53: invokevirtual #73                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      56: ldc           #75                 // String )
      58: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokespecial #76                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: aload_0
      69: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      74: areturn

  static void checkNonnegative(int);
    Code:
       0: iload_0
       1: ifge          40
       4: new           #71                 // class java/lang/IndexOutOfBoundsException
       7: dup
       8: iload_0
       9: istore_1
      10: new           #20                 // class java/lang/StringBuilder
      13: dup
      14: bipush        43
      16: invokespecial #27                 // Method java/lang/StringBuilder."<init>":(I)V
      19: ldc           #72                 // String position (
      21: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: iload_1
      25: invokevirtual #73                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: ldc           #77                 // String ) must not be negative
      30: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #76                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: return

  public static <T> T get(java.util.Iterator<? extends T>, int, T);
    Code:
       0: iload_1
       1: invokestatic  #69                 // Method checkNonnegative:(I)V
       4: aload_0
       5: iload_1
       6: invokestatic  #70                 // Method advance:(Ljava/util/Iterator;I)I
       9: pop
      10: aload_0
      11: aload_2
      12: invokestatic  #61                 // Method getNext:(Ljava/util/Iterator;Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public static <T> T getNext(java.util.Iterator<? extends T>, T);
    Code:
       0: aload_0
       1: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
       6: ifeq          18
       9: aload_0
      10: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      15: goto          19
      18: aload_1
      19: areturn

  public static <T> T getLast(java.util.Iterator<T>);
    Code:
       0: aload_0
       1: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
       6: astore_1
       7: aload_0
       8: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifne          18
      16: aload_1
      17: areturn
      18: goto          0

  public static <T> T getLast(java.util.Iterator<? extends T>, T);
    Code:
       0: aload_0
       1: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
       6: ifeq          16
       9: aload_0
      10: invokestatic  #78                 // Method getLast:(Ljava/util/Iterator;)Ljava/lang/Object;
      13: goto          17
      16: aload_1
      17: areturn

  public static int advance(java.util.Iterator<?>, int);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iload_1
       6: iflt          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ldc           #79                 // String numberToAdvance must be nonnegative
      16: invokestatic  #80                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      19: iconst_0
      20: istore_2
      21: iload_2
      22: iload_1
      23: if_icmpge     48
      26: aload_0
      27: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          48
      35: aload_0
      36: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: pop
      42: iinc          2, 1
      45: goto          21
      48: iload_2
      49: ireturn

  public static <T> java.util.Iterator<T> limit(java.util.Iterator<T>, int);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iload_1
       6: iflt          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ldc           #81                 // String limit is negative
      16: invokestatic  #80                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      19: new           #82                 // class com/google/common/collect/Iterators$9
      22: dup
      23: iload_1
      24: aload_0
      25: invokespecial #83                 // Method com/google/common/collect/Iterators$9."<init>":(ILjava/util/Iterator;)V
      28: areturn

  public static <T> java.util.Iterator<T> consumingIterator(java.util.Iterator<T>);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #84                 // class com/google/common/collect/Iterators$10
       8: dup
       9: aload_0
      10: invokespecial #85                 // Method com/google/common/collect/Iterators$10."<init>":(Ljava/util/Iterator;)V
      13: areturn

  static <T> T pollNext(java.util.Iterator<T>);
    Code:
       0: aload_0
       1: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
       6: ifeq          24
       9: aload_0
      10: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      15: astore_1
      16: aload_0
      17: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.remove:()V
      22: aload_1
      23: areturn
      24: aconst_null
      25: areturn

  static void clear(java.util.Iterator<?>);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          30
      14: aload_0
      15: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: pop
      21: aload_0
      22: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.remove:()V
      27: goto          5
      30: return

  public static <T> com.google.common.collect.UnmodifiableIterator<T> forArray(T...);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: arraylength
       4: iconst_0
       5: invokestatic  #86                 // Method forArray:([Ljava/lang/Object;III)Lcom/google/common/collect/UnmodifiableListIterator;
       8: areturn

  static <T> com.google.common.collect.UnmodifiableListIterator<T> forArray(T[], int, int, int);
    Code:
       0: iload_2
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: invokestatic  #53                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      12: iload_1
      13: iload_2
      14: iadd
      15: istore        4
      17: iload_1
      18: iload         4
      20: aload_0
      21: arraylength
      22: invokestatic  #87                 // Method com/google/common/base/Preconditions.checkPositionIndexes:(III)V
      25: iload_3
      26: iload_2
      27: invokestatic  #88                 // Method com/google/common/base/Preconditions.checkPositionIndex:(II)I
      30: pop
      31: iload_2
      32: ifne          39
      35: invokestatic  #2                  // Method emptyListIterator:()Lcom/google/common/collect/UnmodifiableListIterator;
      38: areturn
      39: new           #89                 // class com/google/common/collect/Iterators$11
      42: dup
      43: iload_2
      44: iload_3
      45: aload_0
      46: iload_1
      47: invokespecial #90                 // Method com/google/common/collect/Iterators$11."<init>":(II[Ljava/lang/Object;I)V
      50: areturn

  public static <T> com.google.common.collect.UnmodifiableIterator<T> singletonIterator(T);
    Code:
       0: new           #91                 // class com/google/common/collect/Iterators$12
       3: dup
       4: aload_0
       5: invokespecial #92                 // Method com/google/common/collect/Iterators$12."<init>":(Ljava/lang/Object;)V
       8: areturn

  public static <T> com.google.common.collect.UnmodifiableIterator<T> forEnumeration(java.util.Enumeration<T>);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #93                 // class com/google/common/collect/Iterators$13
       8: dup
       9: aload_0
      10: invokespecial #94                 // Method com/google/common/collect/Iterators$13."<init>":(Ljava/util/Enumeration;)V
      13: areturn

  public static <T> java.util.Enumeration<T> asEnumeration(java.util.Iterator<T>);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #95                 // class com/google/common/collect/Iterators$14
       8: dup
       9: aload_0
      10: invokespecial #96                 // Method com/google/common/collect/Iterators$14."<init>":(Ljava/util/Iterator;)V
      13: areturn

  public static <T> com.google.common.collect.PeekingIterator<T> peekingIterator(java.util.Iterator<? extends T>);
    Code:
       0: aload_0
       1: instanceof    #97                 // class com/google/common/collect/Iterators$PeekingImpl
       4: ifeq          14
       7: aload_0
       8: checkcast     #97                 // class com/google/common/collect/Iterators$PeekingImpl
      11: astore_1
      12: aload_1
      13: areturn
      14: new           #97                 // class com/google/common/collect/Iterators$PeekingImpl
      17: dup
      18: aload_0
      19: invokespecial #98                 // Method com/google/common/collect/Iterators$PeekingImpl."<init>":(Ljava/util/Iterator;)V
      22: areturn

  public static <T> com.google.common.collect.PeekingIterator<T> peekingIterator(com.google.common.collect.PeekingIterator<T>);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: checkcast     #99                 // class com/google/common/collect/PeekingIterator
       7: areturn

  public static <T> com.google.common.collect.UnmodifiableIterator<T> mergeSorted(java.lang.Iterable<? extends java.util.Iterator<? extends T>>, java.util.Comparator<? super T>);
    Code:
       0: aload_0
       1: ldc           #100                // String iterators
       3: invokestatic  #66                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: ldc           #101                // String comparator
      10: invokestatic  #66                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: new           #102                // class com/google/common/collect/Iterators$MergingIterator
      17: dup
      18: aload_0
      19: aload_1
      20: invokespecial #103                // Method com/google/common/collect/Iterators$MergingIterator."<init>":(Ljava/lang/Iterable;Ljava/util/Comparator;)V
      23: areturn

  static <T> java.util.ListIterator<T> cast(java.util.Iterator<T>);
    Code:
       0: aload_0
       1: checkcast     #104                // class java/util/ListIterator
       4: areturn

  static {};
    Code:
       0: new           #105                // class com/google/common/collect/Iterators$1
       3: dup
       4: invokespecial #106                // Method com/google/common/collect/Iterators$1."<init>":()V
       7: putstatic     #3                  // Field EMPTY_LIST_ITERATOR:Lcom/google/common/collect/UnmodifiableListIterator;
      10: new           #107                // class com/google/common/collect/Iterators$2
      13: dup
      14: invokespecial #108                // Method com/google/common/collect/Iterators$2."<init>":()V
      17: putstatic     #4                  // Field EMPTY_MODIFIABLE_ITERATOR:Ljava/util/Iterator;
      20: return
}
