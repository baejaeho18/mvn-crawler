Compiled from "Present.java"
final class com.google.common.base.Present<T> extends com.google.common.base.Optional<T> {
  private final T reference;

  private static final long serialVersionUID;

  com.google.common.base.Present(T);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/common/base/Optional."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field reference:Ljava/lang/Object;
       9: return

  public boolean isPresent();
    Code:
       0: iconst_1
       1: ireturn

  public T get();
    Code:
       0: aload_0
       1: getfield      #2                  // Field reference:Ljava/lang/Object;
       4: areturn

  public T or(T);
    Code:
       0: aload_1
       1: ldc           #3                  // String use Optional.orNull() instead of Optional.or(null)
       3: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #2                  // Field reference:Ljava/lang/Object;
      11: areturn

  public com.google.common.base.Optional<T> or(com.google.common.base.Optional<? extends T>);
    Code:
       0: aload_1
       1: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: areturn

  public T or(com.google.common.base.Supplier<? extends T>);
    Code:
       0: aload_1
       1: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #2                  // Field reference:Ljava/lang/Object;
       9: areturn

  public T orNull();
    Code:
       0: aload_0
       1: getfield      #2                  // Field reference:Ljava/lang/Object;
       4: areturn

  public java.util.Set<T> asSet();
    Code:
       0: aload_0
       1: getfield      #2                  // Field reference:Ljava/lang/Object;
       4: invokestatic  #6                  // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
       7: areturn

  public <V> com.google.common.base.Optional<V> transform(com.google.common.base.Function<? super T, V>);
    Code:
       0: new           #7                  // class com/google/common/base/Present
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #2                  // Field reference:Ljava/lang/Object;
       9: invokeinterface #8,  2            // InterfaceMethod com/google/common/base/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: ldc           #9                  // String the Function passed to Optional.transform() must not return null.
      16: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      19: invokespecial #10                 // Method "<init>":(Ljava/lang/Object;)V
      22: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #7                  // class com/google/common/base/Present
       4: ifeq          24
       7: aload_1
       8: checkcast     #7                  // class com/google/common/base/Present
      11: astore_2
      12: aload_0
      13: getfield      #2                  // Field reference:Ljava/lang/Object;
      16: aload_2
      17: getfield      #2                  // Field reference:Ljava/lang/Object;
      20: invokevirtual #11                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      23: ireturn
      24: iconst_0
      25: ireturn

  public int hashCode();
    Code:
       0: ldc           #12                 // int 1502476572
       2: aload_0
       3: getfield      #2                  // Field reference:Ljava/lang/Object;
       6: invokevirtual #13                 // Method java/lang/Object.hashCode:()I
       9: iadd
      10: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field reference:Ljava/lang/Object;
       4: invokestatic  #14                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       7: invokestatic  #14                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      10: astore_1
      11: new           #15                 // class java/lang/StringBuilder
      14: dup
      15: bipush        13
      17: aload_1
      18: invokevirtual #16                 // Method java/lang/String.length:()I
      21: iadd
      22: invokespecial #17                 // Method java/lang/StringBuilder."<init>":(I)V
      25: ldc           #18                 // String Optional.of(
      27: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #20                 // String )
      36: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: areturn
}
