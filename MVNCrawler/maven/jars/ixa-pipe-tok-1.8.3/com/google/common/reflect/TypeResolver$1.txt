Compiled from "TypeResolver.java"
final class com.google.common.reflect.TypeResolver$1 extends com.google.common.reflect.TypeVisitor {
  final java.util.Map val$mappings;

  final java.lang.reflect.Type val$to;

  com.google.common.reflect.TypeResolver$1(java.util.Map, java.lang.reflect.Type);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$mappings:Ljava/util/Map;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$to:Ljava/lang/reflect/Type;
      10: aload_0
      11: invokespecial #3                  // Method com/google/common/reflect/TypeVisitor."<init>":()V
      14: return

  void visitTypeVariable(java.lang.reflect.TypeVariable<?>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$mappings:Ljava/util/Map;
       4: new           #4                  // class com/google/common/reflect/TypeResolver$TypeVariableKey
       7: dup
       8: aload_1
       9: invokespecial #5                  // Method com/google/common/reflect/TypeResolver$TypeVariableKey."<init>":(Ljava/lang/reflect/TypeVariable;)V
      12: aload_0
      13: getfield      #2                  // Field val$to:Ljava/lang/reflect/Type;
      16: invokeinterface #6,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: return

  void visitWildcardType(java.lang.reflect.WildcardType);
    Code:
       0: ldc_w         #7                  // class java/lang/reflect/WildcardType
       3: aload_0
       4: getfield      #2                  // Field val$to:Ljava/lang/reflect/Type;
       7: invokestatic  #8                  // Method com/google/common/reflect/TypeResolver.access$000:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #7                  // class java/lang/reflect/WildcardType
      13: astore_2
      14: aload_1
      15: invokeinterface #9,  1            // InterfaceMethod java/lang/reflect/WildcardType.getUpperBounds:()[Ljava/lang/reflect/Type;
      20: astore_3
      21: aload_2
      22: invokeinterface #9,  1            // InterfaceMethod java/lang/reflect/WildcardType.getUpperBounds:()[Ljava/lang/reflect/Type;
      27: astore        4
      29: aload_1
      30: invokeinterface #10,  1           // InterfaceMethod java/lang/reflect/WildcardType.getLowerBounds:()[Ljava/lang/reflect/Type;
      35: astore        5
      37: aload_2
      38: invokeinterface #10,  1           // InterfaceMethod java/lang/reflect/WildcardType.getLowerBounds:()[Ljava/lang/reflect/Type;
      43: astore        6
      45: aload_3
      46: arraylength
      47: aload         4
      49: arraylength
      50: if_icmpne     66
      53: aload         5
      55: arraylength
      56: aload         6
      58: arraylength
      59: if_icmpne     66
      62: iconst_1
      63: goto          67
      66: iconst_0
      67: ldc           #11                 // String Incompatible type: %s vs. %s
      69: iconst_2
      70: anewarray     #12                 // class java/lang/Object
      73: dup
      74: iconst_0
      75: aload_1
      76: aastore
      77: dup
      78: iconst_1
      79: aload_0
      80: getfield      #2                  // Field val$to:Ljava/lang/reflect/Type;
      83: aastore
      84: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      87: iconst_0
      88: istore        7
      90: iload         7
      92: aload_3
      93: arraylength
      94: if_icmpge     119
      97: aload_0
      98: getfield      #1                  // Field val$mappings:Ljava/util/Map;
     101: aload_3
     102: iload         7
     104: aaload
     105: aload         4
     107: iload         7
     109: aaload
     110: invokestatic  #14                 // Method com/google/common/reflect/TypeResolver.access$100:(Ljava/util/Map;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)V
     113: iinc          7, 1
     116: goto          90
     119: iconst_0
     120: istore        7
     122: iload         7
     124: aload         5
     126: arraylength
     127: if_icmpge     153
     130: aload_0
     131: getfield      #1                  // Field val$mappings:Ljava/util/Map;
     134: aload         5
     136: iload         7
     138: aaload
     139: aload         6
     141: iload         7
     143: aaload
     144: invokestatic  #14                 // Method com/google/common/reflect/TypeResolver.access$100:(Ljava/util/Map;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)V
     147: iinc          7, 1
     150: goto          122
     153: return

  void visitParameterizedType(java.lang.reflect.ParameterizedType);
    Code:
       0: ldc_w         #15                 // class java/lang/reflect/ParameterizedType
       3: aload_0
       4: getfield      #2                  // Field val$to:Ljava/lang/reflect/Type;
       7: invokestatic  #8                  // Method com/google/common/reflect/TypeResolver.access$000:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #15                 // class java/lang/reflect/ParameterizedType
      13: astore_2
      14: aload_1
      15: invokeinterface #16,  1           // InterfaceMethod java/lang/reflect/ParameterizedType.getRawType:()Ljava/lang/reflect/Type;
      20: aload_2
      21: invokeinterface #16,  1           // InterfaceMethod java/lang/reflect/ParameterizedType.getRawType:()Ljava/lang/reflect/Type;
      26: invokevirtual #17                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      29: ldc           #18                 // String Inconsistent raw type: %s vs. %s
      31: iconst_2
      32: anewarray     #12                 // class java/lang/Object
      35: dup
      36: iconst_0
      37: aload_1
      38: aastore
      39: dup
      40: iconst_1
      41: aload_0
      42: getfield      #2                  // Field val$to:Ljava/lang/reflect/Type;
      45: aastore
      46: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      49: aload_1
      50: invokeinterface #19,  1           // InterfaceMethod java/lang/reflect/ParameterizedType.getActualTypeArguments:()[Ljava/lang/reflect/Type;
      55: astore_3
      56: aload_2
      57: invokeinterface #19,  1           // InterfaceMethod java/lang/reflect/ParameterizedType.getActualTypeArguments:()[Ljava/lang/reflect/Type;
      62: astore        4
      64: aload_3
      65: arraylength
      66: aload         4
      68: arraylength
      69: if_icmpne     76
      72: iconst_1
      73: goto          77
      76: iconst_0
      77: ldc           #20                 // String %s not compatible with %s
      79: iconst_2
      80: anewarray     #12                 // class java/lang/Object
      83: dup
      84: iconst_0
      85: aload_1
      86: aastore
      87: dup
      88: iconst_1
      89: aload_2
      90: aastore
      91: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      94: iconst_0
      95: istore        5
      97: iload         5
      99: aload_3
     100: arraylength
     101: if_icmpge     126
     104: aload_0
     105: getfield      #1                  // Field val$mappings:Ljava/util/Map;
     108: aload_3
     109: iload         5
     111: aaload
     112: aload         4
     114: iload         5
     116: aaload
     117: invokestatic  #14                 // Method com/google/common/reflect/TypeResolver.access$100:(Ljava/util/Map;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)V
     120: iinc          5, 1
     123: goto          97
     126: return

  void visitGenericArrayType(java.lang.reflect.GenericArrayType);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$to:Ljava/lang/reflect/Type;
       4: invokestatic  #21                 // Method com/google/common/reflect/Types.getComponentType:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
       7: astore_2
       8: aload_2
       9: ifnull        16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ldc           #22                 // String %s is not an array type.
      19: iconst_1
      20: anewarray     #12                 // class java/lang/Object
      23: dup
      24: iconst_0
      25: aload_0
      26: getfield      #2                  // Field val$to:Ljava/lang/reflect/Type;
      29: aastore
      30: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      33: aload_0
      34: getfield      #1                  // Field val$mappings:Ljava/util/Map;
      37: aload_1
      38: invokeinterface #23,  1           // InterfaceMethod java/lang/reflect/GenericArrayType.getGenericComponentType:()Ljava/lang/reflect/Type;
      43: aload_2
      44: invokestatic  #14                 // Method com/google/common/reflect/TypeResolver.access$100:(Ljava/util/Map;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)V
      47: return

  void visitClass(java.lang.Class<?>);
    Code:
       0: new           #24                 // class java/lang/IllegalArgumentException
       3: dup
       4: aload_1
       5: invokestatic  #25                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       8: invokestatic  #25                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      11: astore_2
      12: new           #26                 // class java/lang/StringBuilder
      15: dup
      16: bipush        21
      18: aload_2
      19: invokevirtual #27                 // Method java/lang/String.length:()I
      22: iadd
      23: invokespecial #28                 // Method java/lang/StringBuilder."<init>":(I)V
      26: ldc           #29                 // String No type mapping from
      28: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_2
      32: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #32                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
}
