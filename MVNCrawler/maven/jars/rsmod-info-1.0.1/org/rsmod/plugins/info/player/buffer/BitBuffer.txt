Compiled from "BitBuffer.kt"
public final class org.rsmod.plugins.info.player.buffer.BitBuffer implements java.lang.AutoCloseable {
  private static final org.rsmod.plugins.info.player.buffer.BitBuffer$Companion Companion;

  private final java.nio.ByteBuffer buf;

  private int position;

  private int limit;

  private static final int LOG_BITS_PER_BYTE;

  private static final int BITS_PER_BYTE;

  private static final int MASK_BITS_PER_BYTE;

  private static final int BITS_PER_INT;

  public org.rsmod.plugins.info.player.buffer.BitBuffer(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: ldc           #11                 // String buf
       3: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #20                 // Method java/lang/Object."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #23                 // Field buf:Ljava/nio/ByteBuffer;
      15: aload_0
      16: aload_0
      17: getfield      #23                 // Field buf:Ljava/nio/ByteBuffer;
      20: invokevirtual #29                 // Method java/nio/ByteBuffer.position:()I
      23: iconst_3
      24: ishl
      25: putfield      #32                 // Field position:I
      28: aload_0
      29: aload_0
      30: getfield      #23                 // Field buf:Ljava/nio/ByteBuffer;
      33: invokevirtual #35                 // Method java/nio/ByteBuffer.limit:()I
      36: iconst_3
      37: ishl
      38: putfield      #37                 // Field limit:I
      41: return

  private final void setPosition(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #32                 // Field position:I
       5: aload_0
       6: getfield      #23                 // Field buf:Ljava/nio/ByteBuffer;
       9: aload_0
      10: getfield      #32                 // Field position:I
      13: iconst_3
      14: ishr
      15: invokevirtual #44                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
      18: pop
      19: return

  private final void setLimit(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #37                 // Field limit:I
       5: aload_0
       6: getfield      #23                 // Field buf:Ljava/nio/ByteBuffer;
       9: aload_0
      10: getfield      #37                 // Field limit:I
      13: iconst_3
      14: ishr
      15: invokevirtual #48                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
      18: pop
      19: return

  public final boolean getBoolean(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: invokevirtual #54                 // Method getBits:(II)I
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public final int getBit(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: invokevirtual #54                 // Method getBits:(II)I
       6: ireturn

  public final int getBits(int, int);
    Code:
       0: iconst_1
       1: iload_2
       2: if_icmpgt     19
       5: iload_2
       6: bipush        33
       8: if_icmpge     15
      11: iconst_1
      12: goto          20
      15: iconst_0
      16: goto          20
      19: iconst_0
      20: ifne          40
      23: ldc           #59                 // String Failed requirement.
      25: astore        4
      27: new           #61                 // class java/lang/IllegalArgumentException
      30: dup
      31: aload         4
      33: invokevirtual #65                 // Method java/lang/Object.toString:()Ljava/lang/String;
      36: invokespecial #68                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: iload_1
      41: iflt          56
      44: iload_1
      45: iload_2
      46: iadd
      47: i2l
      48: aload_0
      49: invokevirtual #72                 // Method capacity:()J
      52: lcmp
      53: ifle          64
      56: new           #74                 // class java/lang/IndexOutOfBoundsException
      59: dup
      60: invokespecial #75                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      63: athrow
      64: iconst_0
      65: istore_3
      66: iload_2
      67: istore        4
      69: iload_1
      70: iconst_3
      71: ishr
      72: istore        5
      74: iload_1
      75: bipush        7
      77: iand
      78: istore        6
      80: iload         4
      82: ifle          165
      85: bipush        8
      87: iload         6
      89: isub
      90: iload         4
      92: invokestatic  #80                 // Method java/lang/Math.min:(II)I
      95: istore        7
      97: bipush        8
      99: iload         6
     101: iload         7
     103: iadd
     104: isub
     105: bipush        7
     107: iand
     108: istore        8
     110: iconst_1
     111: iload         7
     113: ishl
     114: iconst_1
     115: isub
     116: istore        9
     118: aload_0
     119: getfield      #23                 // Field buf:Ljava/nio/ByteBuffer;
     122: iload         5
     124: invokevirtual #84                 // Method java/nio/ByteBuffer.get:(I)B
     127: sipush        255
     130: iand
     131: istore        10
     133: iload_3
     134: iload         7
     136: ishl
     137: istore_3
     138: iload_3
     139: iload         10
     141: iload         8
     143: ishr
     144: iload         9
     146: iand
     147: ior
     148: istore_3
     149: iload         4
     151: iload         7
     153: isub
     154: istore        4
     156: iinc          5, 1
     159: iconst_0
     160: istore        6
     162: goto          80
     165: iload_3
     166: ireturn

  public final boolean getBoolean();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #95                 // Method getBits:(I)I
       5: ifeq          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public final int getBit();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #95                 // Method getBits:(I)I
       5: ireturn

  public final int getBits(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #98                 // Method checkReadableBits:(I)V
       5: aload_0
       6: aload_0
       7: getfield      #32                 // Field position:I
      10: iload_1
      11: invokevirtual #54                 // Method getBits:(II)I
      14: istore_2
      15: aload_0
      16: aload_0
      17: getfield      #32                 // Field position:I
      20: iload_1
      21: iadd
      22: invokespecial #100                // Method setPosition:(I)V
      25: iload_2
      26: ireturn

  public final org.rsmod.plugins.info.player.buffer.BitBuffer skipBits(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #98                 // Method checkReadableBits:(I)V
       5: aload_0
       6: aload_0
       7: getfield      #32                 // Field position:I
      10: iload_1
      11: iadd
      12: invokespecial #100                // Method setPosition:(I)V
      15: aload_0
      16: areturn

  public final org.rsmod.plugins.info.player.buffer.BitBuffer setBoolean(int, boolean);
    Code:
       0: iload_2
       1: ifeq          15
       4: aload_0
       5: iload_1
       6: iconst_1
       7: iconst_1
       8: invokevirtual #108                // Method setBits:(III)Lorg/rsmod/plugins/info/player/buffer/BitBuffer;
      11: pop
      12: goto          23
      15: aload_0
      16: iload_1
      17: iconst_1
      18: iconst_0
      19: invokevirtual #108                // Method setBits:(III)Lorg/rsmod/plugins/info/player/buffer/BitBuffer;
      22: pop
      23: aload_0
      24: areturn

  public final org.rsmod.plugins.info.player.buffer.BitBuffer setBit(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: iload_2
       4: invokevirtual #108                // Method setBits:(III)Lorg/rsmod/plugins/info/player/buffer/BitBuffer;
       7: pop
       8: aload_0
       9: areturn

  public final org.rsmod.plugins.info.player.buffer.BitBuffer setBits(int, int, int);
    Code:
       0: iconst_1
       1: iload_2
       2: if_icmpgt     19
       5: iload_2
       6: bipush        33
       8: if_icmpge     15
      11: iconst_1
      12: goto          20
      15: iconst_0
      16: goto          20
      19: iconst_0
      20: ifne          40
      23: ldc           #59                 // String Failed requirement.
      25: astore        5
      27: new           #61                 // class java/lang/IllegalArgumentException
      30: dup
      31: aload         5
      33: invokevirtual #65                 // Method java/lang/Object.toString:()Ljava/lang/String;
      36: invokespecial #68                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: iload_1
      41: iflt          56
      44: iload_1
      45: iload_2
      46: iadd
      47: i2l
      48: aload_0
      49: invokevirtual #72                 // Method capacity:()J
      52: lcmp
      53: ifle          75
      56: new           #74                 // class java/lang/IndexOutOfBoundsException
      59: dup
      60: iload_1
      61: iload_2
      62: aload_0
      63: invokevirtual #72                 // Method capacity:()J
      66: invokedynamic #123,  0            // InvokeDynamic #0:makeConcatWithConstants:(IIJ)Ljava/lang/String;
      71: invokespecial #124                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      74: athrow
      75: iload_2
      76: istore        4
      78: iload_1
      79: iconst_3
      80: ishr
      81: istore        5
      83: iload_1
      84: bipush        7
      86: iand
      87: istore        6
      89: iload         4
      91: ifle          201
      94: bipush        8
      96: iload         6
      98: isub
      99: iload         4
     101: invokestatic  #80                 // Method java/lang/Math.min:(II)I
     104: istore        7
     106: bipush        8
     108: iload         6
     110: iload         7
     112: iadd
     113: isub
     114: bipush        7
     116: iand
     117: istore        8
     119: iconst_1
     120: iload         7
     122: ishl
     123: iconst_1
     124: isub
     125: istore        9
     127: aload_0
     128: getfield      #23                 // Field buf:Ljava/nio/ByteBuffer;
     131: iload         5
     133: invokevirtual #84                 // Method java/nio/ByteBuffer.get:(I)B
     136: sipush        255
     139: iand
     140: istore        10
     142: iload         10
     144: iload         9
     146: iload         8
     148: ishl
     149: iconst_m1
     150: ixor
     151: iand
     152: istore        10
     154: iload         10
     156: iload_3
     157: iload         4
     159: iload         7
     161: isub
     162: ishr
     163: iload         9
     165: iand
     166: iload         8
     168: ishl
     169: ior
     170: istore        10
     172: aload_0
     173: getfield      #23                 // Field buf:Ljava/nio/ByteBuffer;
     176: iload         5
     178: iload         10
     180: i2b
     181: invokevirtual #128                // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     184: pop
     185: iload         4
     187: iload         7
     189: isub
     190: istore        4
     192: iinc          5, 1
     195: iconst_0
     196: istore        6
     198: goto          89
     201: aload_0
     202: areturn

  public final org.rsmod.plugins.info.player.buffer.BitBuffer putBoolean(boolean);
    Code:
       0: iload_1
       1: ifeq          14
       4: aload_0
       5: iconst_1
       6: iconst_1
       7: invokevirtual #133                // Method putBits:(II)Lorg/rsmod/plugins/info/player/buffer/BitBuffer;
      10: pop
      11: goto          21
      14: aload_0
      15: iconst_1
      16: iconst_0
      17: invokevirtual #133                // Method putBits:(II)Lorg/rsmod/plugins/info/player/buffer/BitBuffer;
      20: pop
      21: aload_0
      22: areturn

  public final org.rsmod.plugins.info.player.buffer.BitBuffer putBit(int);
    Code:
       0: aload_0
       1: iconst_1
       2: iload_1
       3: invokevirtual #133                // Method putBits:(II)Lorg/rsmod/plugins/info/player/buffer/BitBuffer;
       6: pop
       7: aload_0
       8: areturn

  public final org.rsmod.plugins.info.player.buffer.BitBuffer putBits(int, int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #32                 // Field position:I
       5: iload_1
       6: iload_2
       7: invokevirtual #108                // Method setBits:(III)Lorg/rsmod/plugins/info/player/buffer/BitBuffer;
      10: pop
      11: aload_0
      12: aload_0
      13: getfield      #32                 // Field position:I
      16: iload_1
      17: iadd
      18: invokespecial #100                // Method setPosition:(I)V
      21: aload_0
      22: areturn

  public final org.rsmod.plugins.info.player.buffer.BitBuffer putZero(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokevirtual #133                // Method putBits:(II)Lorg/rsmod/plugins/info/player/buffer/BitBuffer;
       6: pop
       7: aload_0
       8: areturn

  private final void checkReadableBits(int);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ifne          27
      12: ldc           #59                 // String Failed requirement.
      14: astore_2
      15: new           #61                 // class java/lang/IllegalArgumentException
      18: dup
      19: aload_2
      20: invokevirtual #65                 // Method java/lang/Object.toString:()Ljava/lang/String;
      23: invokespecial #68                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: getfield      #32                 // Field position:I
      31: iload_1
      32: iadd
      33: aload_0
      34: getfield      #37                 // Field limit:I
      37: if_icmple     48
      40: new           #74                 // class java/lang/IndexOutOfBoundsException
      43: dup
      44: invokespecial #75                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      47: athrow
      48: return

  public final int readableBits();
    Code:
       0: aload_0
       1: getfield      #37                 // Field limit:I
       4: aload_0
       5: getfield      #32                 // Field position:I
       8: isub
       9: ireturn

  public final long writableBits();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method capacity:()J
       4: aload_0
       5: getfield      #32                 // Field position:I
       8: i2l
       9: lsub
      10: lreturn

  public final long maxWritableBits();
    Code:
       0: aload_0
       1: invokevirtual #141                // Method maxCapacity:()J
       4: aload_0
       5: getfield      #32                 // Field position:I
       8: i2l
       9: lsub
      10: lreturn

  public final long capacity();
    Code:
       0: aload_0
       1: getfield      #23                 // Field buf:Ljava/nio/ByteBuffer;
       4: invokevirtual #35                 // Method java/nio/ByteBuffer.limit:()I
       7: i2l
       8: iconst_3
       9: lshl
      10: lreturn

  public final long maxCapacity();
    Code:
       0: aload_0
       1: getfield      #23                 // Field buf:Ljava/nio/ByteBuffer;
       4: invokevirtual #143                // Method java/nio/ByteBuffer.capacity:()I
       7: i2l
       8: iconst_3
       9: lshl
      10: lreturn

  public final boolean isReadable();
    Code:
       0: aload_0
       1: getfield      #32                 // Field position:I
       4: aload_0
       5: getfield      #37                 // Field limit:I
       8: if_icmpge     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public final boolean isReadable(int);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ifne          27
      12: ldc           #59                 // String Failed requirement.
      14: astore_2
      15: new           #61                 // class java/lang/IllegalArgumentException
      18: dup
      19: aload_2
      20: invokevirtual #65                 // Method java/lang/Object.toString:()Ljava/lang/String;
      23: invokespecial #68                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: getfield      #32                 // Field position:I
      31: iload_1
      32: iadd
      33: aload_0
      34: getfield      #37                 // Field limit:I
      37: if_icmpgt     44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn

  public final boolean isWritable();
    Code:
       0: aload_0
       1: getfield      #32                 // Field position:I
       4: i2l
       5: aload_0
       6: invokevirtual #72                 // Method capacity:()J
       9: lcmp
      10: ifge          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public final boolean isWritable(int);
    Code:
       0: iload_1
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ifne          27
      12: ldc           #59                 // String Failed requirement.
      14: astore_2
      15: new           #61                 // class java/lang/IllegalArgumentException
      18: dup
      19: aload_2
      20: invokevirtual #65                 // Method java/lang/Object.toString:()Ljava/lang/String;
      23: invokespecial #68                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: getfield      #32                 // Field position:I
      31: iload_1
      32: iadd
      33: i2l
      34: aload_0
      35: invokevirtual #72                 // Method capacity:()J
      38: lcmp
      39: ifgt          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn

  public final int position();
    Code:
       0: aload_0
       1: getfield      #32                 // Field position:I
       4: ireturn

  public final org.rsmod.plugins.info.player.buffer.BitBuffer position(int);
    Code:
       0: iload_1
       1: iflt          14
       4: iload_1
       5: i2l
       6: aload_0
       7: invokevirtual #141                // Method maxCapacity:()J
      10: lcmp
      11: ifle          22
      14: new           #74                 // class java/lang/IndexOutOfBoundsException
      17: dup
      18: invokespecial #75                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      21: athrow
      22: aload_0
      23: iload_1
      24: invokespecial #100                // Method setPosition:(I)V
      27: aload_0
      28: areturn

  public final org.rsmod.plugins.info.player.buffer.BitBuffer clear();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #100                // Method setPosition:(I)V
       5: aload_0
       6: areturn

  public final org.rsmod.plugins.info.player.buffer.BitBuffer flip();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #150                // Method position:(I)Lorg/rsmod/plugins/info/player/buffer/BitBuffer;
       5: pop
       6: aload_0
       7: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #32                 // Field position:I
       4: bipush        7
       6: iadd
       7: bipush        -8
       9: iand
      10: aload_0
      11: getfield      #32                 // Field position:I
      14: isub
      15: istore_1
      16: iload_1
      17: ifeq          26
      20: aload_0
      21: iload_1
      22: invokevirtual #153                // Method putZero:(I)Lorg/rsmod/plugins/info/player/buffer/BitBuffer;
      25: pop
      26: aload_0
      27: aload_0
      28: getfield      #32                 // Field position:I
      31: bipush        7
      33: iadd
      34: bipush        -8
      36: iand
      37: invokespecial #100                // Method setPosition:(I)V
      40: return

  static {};
    Code:
       0: new           #157                // class org/rsmod/plugins/info/player/buffer/BitBuffer$Companion
       3: dup
       4: aconst_null
       5: invokespecial #160                // Method org/rsmod/plugins/info/player/buffer/BitBuffer$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #164                // Field Companion:Lorg/rsmod/plugins/info/player/buffer/BitBuffer$Companion;
      11: return
}
