Compiled from "ZipkinRule.java"
class zipkin2.junit.ZipkinRule$1 extends okhttp3.mockwebserver.Dispatcher {
  final zipkin2.junit.ZipkinDispatcher successDispatch;

  final zipkin2.junit.ZipkinRule this$0;

  zipkin2.junit.ZipkinRule$1(zipkin2.junit.ZipkinRule);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lzipkin2/junit/ZipkinRule;
       5: aload_0
       6: invokespecial #7                  // Method okhttp3/mockwebserver/Dispatcher."<init>":()V
       9: aload_0
      10: new           #13                 // class zipkin2/junit/ZipkinDispatcher
      13: dup
      14: aload_0
      15: getfield      #1                  // Field this$0:Lzipkin2/junit/ZipkinRule;
      18: invokestatic  #15                 // Method zipkin2/junit/ZipkinRule.access$000:(Lzipkin2/junit/ZipkinRule;)Lzipkin2/storage/InMemoryStorage;
      21: aload_0
      22: getfield      #1                  // Field this$0:Lzipkin2/junit/ZipkinRule;
      25: invokestatic  #21                 // Method zipkin2/junit/ZipkinRule.access$100:(Lzipkin2/junit/ZipkinRule;)Lzipkin2/collector/InMemoryCollectorMetrics;
      28: aload_0
      29: getfield      #1                  // Field this$0:Lzipkin2/junit/ZipkinRule;
      32: invokestatic  #25                 // Method zipkin2/junit/ZipkinRule.access$200:(Lzipkin2/junit/ZipkinRule;)Lokhttp3/mockwebserver/MockWebServer;
      35: invokespecial #29                 // Method zipkin2/junit/ZipkinDispatcher."<init>":(Lzipkin2/storage/StorageComponent;Lzipkin2/collector/CollectorMetrics;Lokhttp3/mockwebserver/MockWebServer;)V
      38: putfield      #32                 // Field successDispatch:Lzipkin2/junit/ZipkinDispatcher;
      41: return

  public okhttp3.mockwebserver.MockResponse dispatch(okhttp3.mockwebserver.RecordedRequest);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lzipkin2/junit/ZipkinRule;
       4: invokestatic  #36                 // Method zipkin2/junit/ZipkinRule.access$300:(Lzipkin2/junit/ZipkinRule;)Ljava/util/concurrent/BlockingQueue;
       7: invokeinterface #40,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.poll:()Ljava/lang/Object;
      12: checkcast     #46                 // class okhttp3/mockwebserver/MockResponse
      15: astore_2
      16: aload_2
      17: ifnull        22
      20: aload_2
      21: areturn
      22: aload_0
      23: getfield      #32                 // Field successDispatch:Lzipkin2/junit/ZipkinDispatcher;
      26: aload_1
      27: invokevirtual #48                 // Method zipkin2/junit/ZipkinDispatcher.dispatch:(Lokhttp3/mockwebserver/RecordedRequest;)Lokhttp3/mockwebserver/MockResponse;
      30: astore_3
      31: aload_1
      32: invokevirtual #52                 // Method okhttp3/mockwebserver/RecordedRequest.getMethod:()Ljava/lang/String;
      35: ldc           #58                 // String POST
      37: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ifeq          59
      43: aload_0
      44: getfield      #1                  // Field this$0:Lzipkin2/junit/ZipkinRule;
      47: invokestatic  #66                 // Method zipkin2/junit/ZipkinRule.access$400:(Lzipkin2/junit/ZipkinRule;)Ljava/util/concurrent/atomic/AtomicInteger;
      50: aload_1
      51: invokevirtual #70                 // Method okhttp3/mockwebserver/RecordedRequest.getBodySize:()J
      54: l2i
      55: invokevirtual #74                 // Method java/util/concurrent/atomic/AtomicInteger.addAndGet:(I)I
      58: pop
      59: aload_3
      60: areturn

  public okhttp3.mockwebserver.MockResponse peek();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lzipkin2/junit/ZipkinRule;
       4: invokestatic  #36                 // Method zipkin2/junit/ZipkinRule.access$300:(Lzipkin2/junit/ZipkinRule;)Ljava/util/concurrent/BlockingQueue;
       7: invokeinterface #80,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.peek:()Ljava/lang/Object;
      12: checkcast     #46                 // class okhttp3/mockwebserver/MockResponse
      15: astore_1
      16: aload_1
      17: ifnull        25
      20: aload_1
      21: invokevirtual #83                 // Method okhttp3/mockwebserver/MockResponse.clone:()Lokhttp3/mockwebserver/MockResponse;
      24: areturn
      25: new           #46                 // class okhttp3/mockwebserver/MockResponse
      28: dup
      29: invokespecial #87                 // Method okhttp3/mockwebserver/MockResponse."<init>":()V
      32: getstatic     #88                 // Field okhttp3/mockwebserver/SocketPolicy.KEEP_OPEN:Lokhttp3/mockwebserver/SocketPolicy;
      35: invokevirtual #94                 // Method okhttp3/mockwebserver/MockResponse.setSocketPolicy:(Lokhttp3/mockwebserver/SocketPolicy;)Lokhttp3/mockwebserver/MockResponse;
      38: areturn
}
