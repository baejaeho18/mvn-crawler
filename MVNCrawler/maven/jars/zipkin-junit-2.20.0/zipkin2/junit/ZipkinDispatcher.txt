Compiled from "ZipkinDispatcher.java"
final class zipkin2.junit.ZipkinDispatcher extends okhttp3.mockwebserver.Dispatcher {
  private final zipkin2.collector.Collector consumer;

  private final zipkin2.collector.CollectorMetrics metrics;

  private final okhttp3.mockwebserver.MockWebServer server;

  zipkin2.junit.ZipkinDispatcher(zipkin2.storage.StorageComponent, zipkin2.collector.CollectorMetrics, okhttp3.mockwebserver.MockWebServer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method okhttp3/mockwebserver/Dispatcher."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #13                 // Method zipkin2/collector/Collector.newBuilder:(Ljava/lang/Class;)Lzipkin2/collector/Collector$Builder;
      12: aload_1
      13: invokevirtual #19                 // Method zipkin2/collector/Collector$Builder.storage:(Lzipkin2/storage/StorageComponent;)Lzipkin2/collector/Collector$Builder;
      16: aload_2
      17: invokevirtual #25                 // Method zipkin2/collector/Collector$Builder.metrics:(Lzipkin2/collector/CollectorMetrics;)Lzipkin2/collector/Collector$Builder;
      20: invokevirtual #29                 // Method zipkin2/collector/Collector$Builder.build:()Lzipkin2/collector/Collector;
      23: putfield      #33                 // Field consumer:Lzipkin2/collector/Collector;
      26: aload_0
      27: aload_2
      28: putfield      #39                 // Field metrics:Lzipkin2/collector/CollectorMetrics;
      31: aload_0
      32: aload_3
      33: putfield      #42                 // Field server:Lokhttp3/mockwebserver/MockWebServer;
      36: return

  public okhttp3.mockwebserver.MockResponse dispatch(okhttp3.mockwebserver.RecordedRequest);
    Code:
       0: aload_0
       1: getfield      #42                 // Field server:Lokhttp3/mockwebserver/MockWebServer;
       4: aload_1
       5: invokevirtual #46                 // Method okhttp3/mockwebserver/RecordedRequest.getPath:()Ljava/lang/String;
       8: invokevirtual #52                 // Method okhttp3/mockwebserver/MockWebServer.url:(Ljava/lang/String;)Lokhttp3/HttpUrl;
      11: astore_2
      12: aload_1
      13: invokevirtual #58                 // Method okhttp3/mockwebserver/RecordedRequest.getMethod:()Ljava/lang/String;
      16: ldc           #61                 // String POST
      18: invokevirtual #63                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      21: ifeq          122
      24: aload_1
      25: ldc           #69                 // String Content-Type
      27: invokevirtual #71                 // Method okhttp3/mockwebserver/RecordedRequest.getHeader:(Ljava/lang/String;)Ljava/lang/String;
      30: astore_3
      31: aload_2
      32: invokevirtual #75                 // Method okhttp3/HttpUrl.encodedPath:()Ljava/lang/String;
      35: ldc           #80                 // String /api/v1/spans
      37: invokevirtual #63                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ifeq          75
      43: aload_3
      44: ifnull        62
      47: aload_3
      48: ldc           #82                 // String /x-thrift
      50: invokevirtual #84                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      53: ifeq          62
      56: getstatic     #88                 // Field zipkin2/codec/SpanBytesDecoder.THRIFT:Lzipkin2/codec/SpanBytesDecoder;
      59: goto          65
      62: getstatic     #94                 // Field zipkin2/codec/SpanBytesDecoder.JSON_V1:Lzipkin2/codec/SpanBytesDecoder;
      65: astore        4
      67: aload_0
      68: aload_1
      69: aload         4
      71: invokevirtual #97                 // Method acceptSpans:(Lokhttp3/mockwebserver/RecordedRequest;Lzipkin2/codec/SpanBytesDecoder;)Lokhttp3/mockwebserver/MockResponse;
      74: areturn
      75: aload_2
      76: invokevirtual #75                 // Method okhttp3/HttpUrl.encodedPath:()Ljava/lang/String;
      79: ldc           #101                // String /api/v2/spans
      81: invokevirtual #63                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      84: ifeq          119
      87: aload_3
      88: ifnull        106
      91: aload_3
      92: ldc           #103                // String /x-protobuf
      94: invokevirtual #84                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      97: ifeq          106
     100: getstatic     #105                // Field zipkin2/codec/SpanBytesDecoder.PROTO3:Lzipkin2/codec/SpanBytesDecoder;
     103: goto          109
     106: getstatic     #108                // Field zipkin2/codec/SpanBytesDecoder.JSON_V2:Lzipkin2/codec/SpanBytesDecoder;
     109: astore        4
     111: aload_0
     112: aload_1
     113: aload         4
     115: invokevirtual #97                 // Method acceptSpans:(Lokhttp3/mockwebserver/RecordedRequest;Lzipkin2/codec/SpanBytesDecoder;)Lokhttp3/mockwebserver/MockResponse;
     118: areturn
     119: goto          136
     122: new           #111                // class okhttp3/mockwebserver/MockResponse
     125: dup
     126: invokespecial #113                // Method okhttp3/mockwebserver/MockResponse."<init>":()V
     129: sipush        405
     132: invokevirtual #114                // Method okhttp3/mockwebserver/MockResponse.setResponseCode:(I)Lokhttp3/mockwebserver/MockResponse;
     135: areturn
     136: new           #111                // class okhttp3/mockwebserver/MockResponse
     139: dup
     140: invokespecial #113                // Method okhttp3/mockwebserver/MockResponse."<init>":()V
     143: sipush        404
     146: invokevirtual #114                // Method okhttp3/mockwebserver/MockResponse.setResponseCode:(I)Lokhttp3/mockwebserver/MockResponse;
     149: areturn

  okhttp3.mockwebserver.MockResponse acceptSpans(okhttp3.mockwebserver.RecordedRequest, zipkin2.codec.SpanBytesDecoder);
    Code:
       0: aload_1
       1: invokevirtual #118                // Method okhttp3/mockwebserver/RecordedRequest.getBody:()Lokio/Buffer;
       4: invokevirtual #122                // Method okio/Buffer.readByteArray:()[B
       7: astore_3
       8: aload_0
       9: getfield      #39                 // Field metrics:Lzipkin2/collector/CollectorMetrics;
      12: invokeinterface #128,  1          // InterfaceMethod zipkin2/collector/CollectorMetrics.incrementMessages:()V
      17: aload_1
      18: ldc           #133                // String Content-Encoding
      20: invokevirtual #71                 // Method okhttp3/mockwebserver/RecordedRequest.getHeader:(Ljava/lang/String;)Ljava/lang/String;
      23: astore        4
      25: aload         4
      27: ifnull        128
      30: aload         4
      32: ldc           #135                // String gzip
      34: invokevirtual #84                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      37: ifeq          128
      40: new           #123                // class okio/Buffer
      43: dup
      44: invokespecial #137                // Method okio/Buffer."<init>":()V
      47: astore        5
      49: new           #138                // class okio/GzipSource
      52: dup
      53: new           #123                // class okio/Buffer
      56: dup
      57: invokespecial #137                // Method okio/Buffer."<init>":()V
      60: aload_3
      61: invokevirtual #140                // Method okio/Buffer.write:([B)Lokio/Buffer;
      64: invokespecial #144                // Method okio/GzipSource."<init>":(Lokio/Source;)V
      67: astore        6
      69: aload         6
      71: aload         5
      73: ldc2_w        #149                // long 2147483647l
      76: invokevirtual #151                // Method okio/GzipSource.read:(Lokio/Buffer;J)J
      79: ldc2_w        #155                // long -1l
      82: lcmp
      83: ifeq          89
      86: goto          69
      89: aload         5
      91: invokevirtual #122                // Method okio/Buffer.readByteArray:()[B
      94: astore_3
      95: goto          128
      98: astore        5
     100: aload_0
     101: getfield      #39                 // Field metrics:Lzipkin2/collector/CollectorMetrics;
     104: invokeinterface #159,  1          // InterfaceMethod zipkin2/collector/CollectorMetrics.incrementMessagesDropped:()V
     109: new           #111                // class okhttp3/mockwebserver/MockResponse
     112: dup
     113: invokespecial #113                // Method okhttp3/mockwebserver/MockResponse."<init>":()V
     116: sipush        400
     119: invokevirtual #114                // Method okhttp3/mockwebserver/MockResponse.setResponseCode:(I)Lokhttp3/mockwebserver/MockResponse;
     122: ldc           #162                // String Cannot gunzip spans
     124: invokevirtual #164                // Method okhttp3/mockwebserver/MockResponse.setBody:(Ljava/lang/String;)Lokhttp3/mockwebserver/MockResponse;
     127: areturn
     128: aload_0
     129: getfield      #39                 // Field metrics:Lzipkin2/collector/CollectorMetrics;
     132: aload_3
     133: arraylength
     134: invokeinterface #168,  2          // InterfaceMethod zipkin2/collector/CollectorMetrics.incrementBytes:(I)V
     139: new           #111                // class okhttp3/mockwebserver/MockResponse
     142: dup
     143: invokespecial #113                // Method okhttp3/mockwebserver/MockResponse."<init>":()V
     146: astore        5
     148: aload_3
     149: arraylength
     150: ifne          162
     153: aload         5
     155: sipush        202
     158: invokevirtual #114                // Method okhttp3/mockwebserver/MockResponse.setResponseCode:(I)Lokhttp3/mockwebserver/MockResponse;
     161: areturn
     162: aload_0
     163: getfield      #33                 // Field consumer:Lzipkin2/collector/Collector;
     166: aload_3
     167: aload_2
     168: new           #172                // class zipkin2/junit/ZipkinDispatcher$1
     171: dup
     172: aload_0
     173: aload         5
     175: invokespecial #174                // Method zipkin2/junit/ZipkinDispatcher$1."<init>":(Lzipkin2/junit/ZipkinDispatcher;Lokhttp3/mockwebserver/MockResponse;)V
     178: invokevirtual #177                // Method zipkin2/collector/Collector.acceptSpans:([BLzipkin2/codec/BytesDecoder;Lzipkin2/Callback;)V
     181: aload         5
     183: areturn
    Exception table:
       from    to  target type
          40    95    98   Class java/io/IOException
}
