Compiled from "SslSelectChannelConnector.java"
public class org.mortbay.jetty.security.SslSelectChannelConnector extends org.mortbay.jetty.nio.SelectChannelConnector {
  static final java.lang.String CACHED_INFO_ATTR;

  public static final java.lang.String DEFAULT_KEYSTORE;

  public static final java.lang.String KEYPASSWORD_PROPERTY;

  public static final java.lang.String PASSWORD_PROPERTY;

  private java.lang.String[] _excludeCipherSuites;

  private java.lang.String _keystore;

  private java.lang.String _keystoreType;

  private boolean _needClientAuth;

  private boolean _wantClientAuth;

  private transient org.mortbay.jetty.security.Password _password;

  private transient org.mortbay.jetty.security.Password _keyPassword;

  private transient org.mortbay.jetty.security.Password _trustPassword;

  private java.lang.String _protocol;

  private java.lang.String _algorithm;

  private java.lang.String _provider;

  private java.lang.String _secureRandomAlgorithm;

  private java.lang.String _sslKeyManagerFactoryAlgorithm;

  private java.lang.String _sslTrustManagerFactoryAlgorithm;

  private java.lang.String _truststore;

  private java.lang.String _truststoreType;

  private javax.net.ssl.SSLContext _context;

  private int _packetBufferSize;

  private int _applicationBufferSize;

  private java.util.concurrent.ConcurrentLinkedQueue<org.mortbay.io.Buffer> _packetBuffers;

  private java.util.concurrent.ConcurrentLinkedQueue<org.mortbay.io.Buffer> _applicationBuffers;

  public org.mortbay.io.Buffer getBuffer(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #1                  // Field _applicationBufferSize:I
       5: if_icmpne     35
       8: aload_0
       9: getfield      #2                  // Field _applicationBuffers:Ljava/util/concurrent/ConcurrentLinkedQueue;
      12: invokevirtual #3                  // Method java/util/concurrent/ConcurrentLinkedQueue.poll:()Ljava/lang/Object;
      15: checkcast     #4                  // class org/mortbay/io/Buffer
      18: astore_2
      19: aload_2
      20: ifnonnull     94
      23: new           #5                  // class org/mortbay/io/nio/IndirectNIOBuffer
      26: dup
      27: iload_1
      28: invokespecial #6                  // Method org/mortbay/io/nio/IndirectNIOBuffer."<init>":(I)V
      31: astore_2
      32: goto          94
      35: iload_1
      36: aload_0
      37: getfield      #7                  // Field _packetBufferSize:I
      40: if_icmpne     88
      43: aload_0
      44: getfield      #8                  // Field _packetBuffers:Ljava/util/concurrent/ConcurrentLinkedQueue;
      47: invokevirtual #3                  // Method java/util/concurrent/ConcurrentLinkedQueue.poll:()Ljava/lang/Object;
      50: checkcast     #4                  // class org/mortbay/io/Buffer
      53: astore_2
      54: aload_2
      55: ifnonnull     94
      58: aload_0
      59: invokevirtual #9                  // Method getUseDirectBuffers:()Z
      62: ifeq          76
      65: new           #10                 // class org/mortbay/io/nio/DirectNIOBuffer
      68: dup
      69: iload_1
      70: invokespecial #11                 // Method org/mortbay/io/nio/DirectNIOBuffer."<init>":(I)V
      73: goto          84
      76: new           #5                  // class org/mortbay/io/nio/IndirectNIOBuffer
      79: dup
      80: iload_1
      81: invokespecial #6                  // Method org/mortbay/io/nio/IndirectNIOBuffer."<init>":(I)V
      84: astore_2
      85: goto          94
      88: aload_0
      89: iload_1
      90: invokespecial #12                 // Method org/mortbay/jetty/nio/SelectChannelConnector.getBuffer:(I)Lorg/mortbay/io/Buffer;
      93: astore_2
      94: aload_2
      95: areturn

  public void returnBuffer(org.mortbay.io.Buffer);
    Code:
       0: aload_1
       1: invokeinterface #13,  1           // InterfaceMethod org/mortbay/io/Buffer.clear:()V
       6: aload_1
       7: invokeinterface #14,  1           // InterfaceMethod org/mortbay/io/Buffer.capacity:()I
      12: istore_2
      13: aload_1
      14: checkcast     #15                 // class org/mortbay/io/nio/NIOBuffer
      17: invokeinterface #16,  1           // InterfaceMethod org/mortbay/io/nio/NIOBuffer.getByteBuffer:()Ljava/nio/ByteBuffer;
      22: astore_3
      23: aload_3
      24: iconst_0
      25: invokevirtual #17                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      28: pop
      29: aload_3
      30: iload_2
      31: invokevirtual #18                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      34: pop
      35: iload_2
      36: aload_0
      37: getfield      #1                  // Field _applicationBufferSize:I
      40: if_icmpne     55
      43: aload_0
      44: getfield      #2                  // Field _applicationBuffers:Ljava/util/concurrent/ConcurrentLinkedQueue;
      47: aload_1
      48: invokevirtual #19                 // Method java/util/concurrent/ConcurrentLinkedQueue.add:(Ljava/lang/Object;)Z
      51: pop
      52: goto          80
      55: iload_2
      56: aload_0
      57: getfield      #7                  // Field _packetBufferSize:I
      60: if_icmpne     75
      63: aload_0
      64: getfield      #8                  // Field _packetBuffers:Ljava/util/concurrent/ConcurrentLinkedQueue;
      67: aload_1
      68: invokevirtual #19                 // Method java/util/concurrent/ConcurrentLinkedQueue.add:(Ljava/lang/Object;)Z
      71: pop
      72: goto          80
      75: aload_0
      76: aload_1
      77: invokespecial #20                 // Method org/mortbay/jetty/nio/SelectChannelConnector.returnBuffer:(Lorg/mortbay/io/Buffer;)V
      80: return

  private static java.security.cert.X509Certificate[] getCertChain(javax.net.ssl.SSLSession);
    Code:
       0: aload_0
       1: invokeinterface #21,  1           // InterfaceMethod javax/net/ssl/SSLSession.getPeerCertificateChain:()[Ljavax/security/cert/X509Certificate;
       6: astore_1
       7: aload_1
       8: ifnull        16
      11: aload_1
      12: arraylength
      13: ifne          18
      16: aconst_null
      17: areturn
      18: aload_1
      19: arraylength
      20: istore_2
      21: iload_2
      22: anewarray     #22                 // class java/security/cert/X509Certificate
      25: astore_3
      26: ldc           #23                 // String X.509
      28: invokestatic  #24                 // Method java/security/cert/CertificateFactory.getInstance:(Ljava/lang/String;)Ljava/security/cert/CertificateFactory;
      31: astore        4
      33: iconst_0
      34: istore        5
      36: iload         5
      38: iload_2
      39: if_icmpge     82
      42: aload_1
      43: iload         5
      45: aaload
      46: invokevirtual #25                 // Method javax/security/cert/X509Certificate.getEncoded:()[B
      49: astore        6
      51: new           #26                 // class java/io/ByteArrayInputStream
      54: dup
      55: aload         6
      57: invokespecial #27                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      60: astore        7
      62: aload_3
      63: iload         5
      65: aload         4
      67: aload         7
      69: invokevirtual #28                 // Method java/security/cert/CertificateFactory.generateCertificate:(Ljava/io/InputStream;)Ljava/security/cert/Certificate;
      72: checkcast     #22                 // class java/security/cert/X509Certificate
      75: aastore
      76: iinc          5, 1
      79: goto          36
      82: aload_3
      83: areturn
      84: astore_1
      85: aload_1
      86: invokestatic  #30                 // Method org/mortbay/log/Log.ignore:(Ljava/lang/Throwable;)V
      89: aconst_null
      90: areturn
      91: astore_1
      92: ldc           #32                 // String EXCEPTION
      94: aload_1
      95: invokestatic  #33                 // Method org/mortbay/log/Log.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      98: aconst_null
      99: areturn
    Exception table:
       from    to  target type
           0    17    84   Class javax/net/ssl/SSLPeerUnverifiedException
          18    83    84   Class javax/net/ssl/SSLPeerUnverifiedException
           0    17    91   Class java/lang/Exception
          18    83    91   Class java/lang/Exception

  public void customize(org.mortbay.io.EndPoint, org.mortbay.jetty.Request) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #34                 // Method org/mortbay/jetty/nio/SelectChannelConnector.customize:(Lorg/mortbay/io/EndPoint;Lorg/mortbay/jetty/Request;)V
       6: aload_2
       7: ldc           #35                 // String https
       9: invokevirtual #36                 // Method org/mortbay/jetty/Request.setScheme:(Ljava/lang/String;)V
      12: aload_1
      13: checkcast     #37                 // class org/mortbay/jetty/security/SslHttpChannelEndPoint
      16: astore_3
      17: aload_3
      18: invokevirtual #38                 // Method org/mortbay/jetty/security/SslHttpChannelEndPoint.getSSLEngine:()Ljavax/net/ssl/SSLEngine;
      21: astore        4
      23: aload         4
      25: invokevirtual #39                 // Method javax/net/ssl/SSLEngine.getSession:()Ljavax/net/ssl/SSLSession;
      28: astore        5
      30: aload         5
      32: invokeinterface #40,  1           // InterfaceMethod javax/net/ssl/SSLSession.getCipherSuite:()Ljava/lang/String;
      37: astore        6
      39: aload         5
      41: getstatic     #41                 // Field CACHED_INFO_ATTR:Ljava/lang/String;
      44: invokeinterface #42,  2           // InterfaceMethod javax/net/ssl/SSLSession.getValue:(Ljava/lang/String;)Ljava/lang/Object;
      49: checkcast     #43                 // class org/mortbay/jetty/security/SslSelectChannelConnector$CachedInfo
      52: astore        9
      54: aload         9
      56: ifnull        76
      59: aload         9
      61: invokevirtual #44                 // Method org/mortbay/jetty/security/SslSelectChannelConnector$CachedInfo.getKeySize:()Ljava/lang/Integer;
      64: astore        7
      66: aload         9
      68: invokevirtual #45                 // Method org/mortbay/jetty/security/SslSelectChannelConnector$CachedInfo.getCerts:()[Ljava/security/cert/X509Certificate;
      71: astore        8
      73: goto          123
      76: new           #46                 // class java/lang/Integer
      79: dup
      80: aload         6
      82: invokestatic  #47                 // Method org/mortbay/jetty/security/ServletSSL.deduceKeyLength:(Ljava/lang/String;)I
      85: invokespecial #48                 // Method java/lang/Integer."<init>":(I)V
      88: astore        7
      90: aload         5
      92: invokestatic  #49                 // Method getCertChain:(Ljavax/net/ssl/SSLSession;)[Ljava/security/cert/X509Certificate;
      95: astore        8
      97: new           #43                 // class org/mortbay/jetty/security/SslSelectChannelConnector$CachedInfo
     100: dup
     101: aload_0
     102: aload         7
     104: aload         8
     106: invokespecial #50                 // Method org/mortbay/jetty/security/SslSelectChannelConnector$CachedInfo."<init>":(Lorg/mortbay/jetty/security/SslSelectChannelConnector;Ljava/lang/Integer;[Ljava/security/cert/X509Certificate;)V
     109: astore        9
     111: aload         5
     113: getstatic     #41                 // Field CACHED_INFO_ATTR:Ljava/lang/String;
     116: aload         9
     118: invokeinterface #51,  3           // InterfaceMethod javax/net/ssl/SSLSession.putValue:(Ljava/lang/String;Ljava/lang/Object;)V
     123: aload         8
     125: ifnull        136
     128: aload_2
     129: ldc           #52                 // String javax.servlet.request.X509Certificate
     131: aload         8
     133: invokevirtual #53                 // Method org/mortbay/jetty/Request.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
     136: aload_2
     137: ldc           #54                 // String javax.servlet.request.cipher_suite
     139: aload         6
     141: invokevirtual #53                 // Method org/mortbay/jetty/Request.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
     144: aload_2
     145: ldc           #55                 // String javax.servlet.request.key_size
     147: aload         7
     149: invokevirtual #53                 // Method org/mortbay/jetty/Request.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
     152: goto          164
     155: astore        5
     157: ldc           #32                 // String EXCEPTION
     159: aload         5
     161: invokestatic  #33                 // Method org/mortbay/log/Log.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     164: return
    Exception table:
       from    to  target type
          23   152   155   Class java/lang/Exception

  public org.mortbay.jetty.security.SslSelectChannelConnector();
    Code:
       0: aload_0
       1: invokespecial #56                 // Method org/mortbay/jetty/nio/SelectChannelConnector."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #57                 // Field _excludeCipherSuites:[Ljava/lang/String;
       9: aload_0
      10: getstatic     #58                 // Field DEFAULT_KEYSTORE:Ljava/lang/String;
      13: putfield      #59                 // Field _keystore:Ljava/lang/String;
      16: aload_0
      17: ldc           #60                 // String JKS
      19: putfield      #61                 // Field _keystoreType:Ljava/lang/String;
      22: aload_0
      23: iconst_0
      24: putfield      #62                 // Field _needClientAuth:Z
      27: aload_0
      28: iconst_0
      29: putfield      #63                 // Field _wantClientAuth:Z
      32: aload_0
      33: ldc           #64                 // String TLS
      35: putfield      #65                 // Field _protocol:Ljava/lang/String;
      38: aload_0
      39: ldc           #66                 // String SunX509
      41: putfield      #67                 // Field _algorithm:Ljava/lang/String;
      44: aload_0
      45: ldc           #68                 // String ssl.KeyManagerFactory.algorithm
      47: invokestatic  #69                 // Method java/security/Security.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      50: ifnonnull     58
      53: ldc           #66                 // String SunX509
      55: goto          63
      58: ldc           #68                 // String ssl.KeyManagerFactory.algorithm
      60: invokestatic  #69                 // Method java/security/Security.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      63: putfield      #70                 // Field _sslKeyManagerFactoryAlgorithm:Ljava/lang/String;
      66: aload_0
      67: ldc           #71                 // String ssl.TrustManagerFactory.algorithm
      69: invokestatic  #69                 // Method java/security/Security.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      72: ifnonnull     80
      75: ldc           #66                 // String SunX509
      77: goto          85
      80: ldc           #71                 // String ssl.TrustManagerFactory.algorithm
      82: invokestatic  #69                 // Method java/security/Security.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      85: putfield      #72                 // Field _sslTrustManagerFactoryAlgorithm:Ljava/lang/String;
      88: aload_0
      89: ldc           #60                 // String JKS
      91: putfield      #73                 // Field _truststoreType:Ljava/lang/String;
      94: aload_0
      95: new           #74                 // class java/util/concurrent/ConcurrentLinkedQueue
      98: dup
      99: invokespecial #75                 // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
     102: putfield      #8                  // Field _packetBuffers:Ljava/util/concurrent/ConcurrentLinkedQueue;
     105: aload_0
     106: new           #74                 // class java/util/concurrent/ConcurrentLinkedQueue
     109: dup
     110: invokespecial #75                 // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
     113: putfield      #2                  // Field _applicationBuffers:Ljava/util/concurrent/ConcurrentLinkedQueue;
     116: return

  public java.lang.String[] getCipherSuites();
    Code:
       0: aload_0
       1: invokevirtual #76                 // Method getExcludeCipherSuites:()[Ljava/lang/String;
       4: areturn

  public java.lang.String[] getExcludeCipherSuites();
    Code:
       0: aload_0
       1: getfield      #57                 // Field _excludeCipherSuites:[Ljava/lang/String;
       4: areturn

  public void setCipherSuites(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #77                 // Method setExcludeCipherSuites:([Ljava/lang/String;)V
       5: return

  public void setExcludeCipherSuites(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #57                 // Field _excludeCipherSuites:[Ljava/lang/String;
       5: return

  public void setPassword(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #78                 // String jetty.ssl.password
       3: aload_1
       4: aconst_null
       5: invokestatic  #79                 // Method org/mortbay/jetty/security/Password.getPassword:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/mortbay/jetty/security/Password;
       8: putfield      #80                 // Field _password:Lorg/mortbay/jetty/security/Password;
      11: return

  public void setTrustPassword(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #78                 // String jetty.ssl.password
       3: aload_1
       4: aconst_null
       5: invokestatic  #79                 // Method org/mortbay/jetty/security/Password.getPassword:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/mortbay/jetty/security/Password;
       8: putfield      #81                 // Field _trustPassword:Lorg/mortbay/jetty/security/Password;
      11: return

  public void setKeyPassword(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #82                 // String jetty.ssl.keypassword
       3: aload_1
       4: aconst_null
       5: invokestatic  #79                 // Method org/mortbay/jetty/security/Password.getPassword:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/mortbay/jetty/security/Password;
       8: putfield      #83                 // Field _keyPassword:Lorg/mortbay/jetty/security/Password;
      11: return

  public java.lang.String getAlgorithm();
    Code:
       0: aload_0
       1: getfield      #67                 // Field _algorithm:Ljava/lang/String;
       4: areturn

  public void setAlgorithm(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #67                 // Field _algorithm:Ljava/lang/String;
       5: return

  public java.lang.String getProtocol();
    Code:
       0: aload_0
       1: getfield      #65                 // Field _protocol:Ljava/lang/String;
       4: areturn

  public void setProtocol(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #65                 // Field _protocol:Ljava/lang/String;
       5: return

  public void setKeystore(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #59                 // Field _keystore:Ljava/lang/String;
       5: return

  public java.lang.String getKeystore();
    Code:
       0: aload_0
       1: getfield      #59                 // Field _keystore:Ljava/lang/String;
       4: areturn

  public java.lang.String getKeystoreType();
    Code:
       0: aload_0
       1: getfield      #61                 // Field _keystoreType:Ljava/lang/String;
       4: areturn

  public boolean getNeedClientAuth();
    Code:
       0: aload_0
       1: getfield      #62                 // Field _needClientAuth:Z
       4: ireturn

  public boolean getWantClientAuth();
    Code:
       0: aload_0
       1: getfield      #63                 // Field _wantClientAuth:Z
       4: ireturn

  public void setNeedClientAuth(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #62                 // Field _needClientAuth:Z
       5: return

  public void setWantClientAuth(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #63                 // Field _wantClientAuth:Z
       5: return

  public void setKeystoreType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #61                 // Field _keystoreType:Ljava/lang/String;
       5: return

  public java.lang.String getProvider();
    Code:
       0: aload_0
       1: getfield      #84                 // Field _provider:Ljava/lang/String;
       4: areturn

  public java.lang.String getSecureRandomAlgorithm();
    Code:
       0: aload_0
       1: getfield      #85                 // Field _secureRandomAlgorithm:Ljava/lang/String;
       4: areturn

  public java.lang.String getSslKeyManagerFactoryAlgorithm();
    Code:
       0: aload_0
       1: getfield      #70                 // Field _sslKeyManagerFactoryAlgorithm:Ljava/lang/String;
       4: areturn

  public java.lang.String getSslTrustManagerFactoryAlgorithm();
    Code:
       0: aload_0
       1: getfield      #72                 // Field _sslTrustManagerFactoryAlgorithm:Ljava/lang/String;
       4: areturn

  public java.lang.String getTruststore();
    Code:
       0: aload_0
       1: getfield      #86                 // Field _truststore:Ljava/lang/String;
       4: areturn

  public java.lang.String getTruststoreType();
    Code:
       0: aload_0
       1: getfield      #73                 // Field _truststoreType:Ljava/lang/String;
       4: areturn

  public void setProvider(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #84                 // Field _provider:Ljava/lang/String;
       5: return

  public void setSecureRandomAlgorithm(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #85                 // Field _secureRandomAlgorithm:Ljava/lang/String;
       5: return

  public void setSslKeyManagerFactoryAlgorithm(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #70                 // Field _sslKeyManagerFactoryAlgorithm:Ljava/lang/String;
       5: return

  public void setSslTrustManagerFactoryAlgorithm(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #72                 // Field _sslTrustManagerFactoryAlgorithm:Ljava/lang/String;
       5: return

  public void setTruststore(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #86                 // Field _truststore:Ljava/lang/String;
       5: return

  public void setTruststoreType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #73                 // Field _truststoreType:Ljava/lang/String;
       5: return

  public boolean isConfidential(org.mortbay.jetty.Request);
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method getConfidentialPort:()I
       4: istore_2
       5: iload_2
       6: ifeq          17
       9: iload_2
      10: aload_1
      11: invokevirtual #88                 // Method org/mortbay/jetty/Request.getServerPort:()I
      14: if_icmpne     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public boolean isIntegral(org.mortbay.jetty.Request);
    Code:
       0: aload_0
       1: invokevirtual #89                 // Method getIntegralPort:()I
       4: istore_2
       5: iload_2
       6: ifeq          17
       9: iload_2
      10: aload_1
      11: invokevirtual #88                 // Method org/mortbay/jetty/Request.getServerPort:()I
      14: if_icmpne     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  protected org.mortbay.io.nio.SelectChannelEndPoint newEndPoint(java.nio.channels.SocketChannel, org.mortbay.io.nio.SelectorManager$SelectSet, java.nio.channels.SelectionKey) throws java.io.IOException;
    Code:
       0: new           #37                 // class org/mortbay/jetty/security/SslHttpChannelEndPoint
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: aload_0
       9: invokevirtual #90                 // Method createSSLEngine:()Ljavax/net/ssl/SSLEngine;
      12: invokespecial #91                 // Method org/mortbay/jetty/security/SslHttpChannelEndPoint."<init>":(Lorg/mortbay/io/Buffers;Ljava/nio/channels/SocketChannel;Lorg/mortbay/io/nio/SelectorManager$SelectSet;Ljava/nio/channels/SelectionKey;Ljavax/net/ssl/SSLEngine;)V
      15: areturn

  protected org.mortbay.io.Connection newConnection(java.nio.channels.SocketChannel, org.mortbay.io.nio.SelectChannelEndPoint);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #92                 // Method org/mortbay/jetty/nio/SelectChannelConnector.newConnection:(Ljava/nio/channels/SocketChannel;Lorg/mortbay/io/nio/SelectChannelEndPoint;)Lorg/mortbay/io/Connection;
       6: checkcast     #93                 // class org/mortbay/jetty/HttpConnection
       9: astore_3
      10: aload_3
      11: invokevirtual #94                 // Method org/mortbay/jetty/HttpConnection.getParser:()Lorg/mortbay/jetty/Parser;
      14: checkcast     #95                 // class org/mortbay/jetty/HttpParser
      17: iconst_1
      18: invokevirtual #96                 // Method org/mortbay/jetty/HttpParser.setForceContentBuffer:(Z)V
      21: aload_3
      22: areturn

  protected javax.net.ssl.SSLEngine createSSLEngine() throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #97                 // Field _context:Ljavax/net/ssl/SSLContext;
       6: invokevirtual #98                 // Method javax/net/ssl/SSLContext.createSSLEngine:()Ljavax/net/ssl/SSLEngine;
       9: astore_1
      10: aload_1
      11: iconst_0
      12: invokevirtual #99                 // Method javax/net/ssl/SSLEngine.setUseClientMode:(Z)V
      15: aload_0
      16: getfield      #63                 // Field _wantClientAuth:Z
      19: ifeq          30
      22: aload_1
      23: aload_0
      24: getfield      #63                 // Field _wantClientAuth:Z
      27: invokevirtual #100                // Method javax/net/ssl/SSLEngine.setWantClientAuth:(Z)V
      30: aload_0
      31: getfield      #62                 // Field _needClientAuth:Z
      34: ifeq          45
      37: aload_1
      38: aload_0
      39: getfield      #62                 // Field _needClientAuth:Z
      42: invokevirtual #101                // Method javax/net/ssl/SSLEngine.setNeedClientAuth:(Z)V
      45: aload_0
      46: getfield      #57                 // Field _excludeCipherSuites:[Ljava/lang/String;
      49: ifnull        167
      52: aload_0
      53: getfield      #57                 // Field _excludeCipherSuites:[Ljava/lang/String;
      56: arraylength
      57: ifle          167
      60: aload_0
      61: getfield      #57                 // Field _excludeCipherSuites:[Ljava/lang/String;
      64: invokestatic  #102                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      67: astore_2
      68: aload_1
      69: invokevirtual #103                // Method javax/net/ssl/SSLEngine.getEnabledCipherSuites:()[Ljava/lang/String;
      72: astore_3
      73: new           #104                // class java/util/ArrayList
      76: dup
      77: aload_3
      78: invokestatic  #102                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      81: invokespecial #105                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      84: astore        4
      86: aload_2
      87: invokeinterface #106,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      92: astore        5
      94: aload         5
      96: invokeinterface #107,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     101: ifeq          141
     104: aload         5
     106: invokeinterface #108,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     111: checkcast     #109                // class java/lang/String
     114: astore        6
     116: aload         4
     118: aload         6
     120: invokeinterface #110,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     125: ifeq          138
     128: aload         4
     130: aload         6
     132: invokeinterface #111,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
     137: pop
     138: goto          94
     141: aload         4
     143: aload         4
     145: invokeinterface #112,  1          // InterfaceMethod java/util/List.size:()I
     150: anewarray     #109                // class java/lang/String
     153: invokeinterface #113,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     158: checkcast     #114                // class "[Ljava/lang/String;"
     161: astore_3
     162: aload_1
     163: aload_3
     164: invokevirtual #115                // Method javax/net/ssl/SSLEngine.setEnabledCipherSuites:([Ljava/lang/String;)V
     167: goto          190
     170: astore_2
     171: ldc           #116                // String Error creating sslEngine -- closing this connector
     173: aload_2
     174: invokestatic  #33                 // Method org/mortbay/log/Log.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     177: aload_0
     178: invokevirtual #117                // Method close:()V
     181: new           #118                // class java/lang/IllegalStateException
     184: dup
     185: aload_2
     186: invokespecial #119                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
     189: athrow
     190: aload_1
     191: areturn
    Exception table:
       from    to  target type
           2   167   170   Class java/lang/Exception

  protected void doStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #120                // Method createSSLContext:()Ljavax/net/ssl/SSLContext;
       5: putfield      #97                 // Field _context:Ljavax/net/ssl/SSLContext;
       8: aload_0
       9: invokevirtual #90                 // Method createSSLEngine:()Ljavax/net/ssl/SSLEngine;
      12: astore_1
      13: aload_1
      14: invokevirtual #39                 // Method javax/net/ssl/SSLEngine.getSession:()Ljavax/net/ssl/SSLSession;
      17: astore_2
      18: aload_0
      19: aload_2
      20: invokeinterface #121,  1          // InterfaceMethod javax/net/ssl/SSLSession.getApplicationBufferSize:()I
      25: invokevirtual #122                // Method setHeaderBufferSize:(I)V
      28: aload_0
      29: aload_2
      30: invokeinterface #121,  1          // InterfaceMethod javax/net/ssl/SSLSession.getApplicationBufferSize:()I
      35: invokevirtual #123                // Method setRequestBufferSize:(I)V
      38: aload_0
      39: aload_2
      40: invokeinterface #121,  1          // InterfaceMethod javax/net/ssl/SSLSession.getApplicationBufferSize:()I
      45: invokevirtual #124                // Method setResponseBufferSize:(I)V
      48: aload_0
      49: invokespecial #125                // Method org/mortbay/jetty/nio/SelectChannelConnector.doStart:()V
      52: return

  protected javax.net.ssl.SSLContext createSSLContext() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #86                 // Field _truststore:Ljava/lang/String;
       4: ifnonnull     23
       7: aload_0
       8: aload_0
       9: getfield      #59                 // Field _keystore:Ljava/lang/String;
      12: putfield      #86                 // Field _truststore:Ljava/lang/String;
      15: aload_0
      16: aload_0
      17: getfield      #61                 // Field _keystoreType:Ljava/lang/String;
      20: putfield      #73                 // Field _truststoreType:Ljava/lang/String;
      23: aconst_null
      24: astore_1
      25: aconst_null
      26: astore_2
      27: aload_0
      28: getfield      #59                 // Field _keystore:Ljava/lang/String;
      31: ifnull        45
      34: aload_0
      35: getfield      #59                 // Field _keystore:Ljava/lang/String;
      38: invokestatic  #126                // Method org/mortbay/resource/Resource.newResource:(Ljava/lang/String;)Lorg/mortbay/resource/Resource;
      41: invokevirtual #127                // Method org/mortbay/resource/Resource.getInputStream:()Ljava/io/InputStream;
      44: astore_2
      45: aload_0
      46: getfield      #61                 // Field _keystoreType:Ljava/lang/String;
      49: invokestatic  #128                // Method java/security/KeyStore.getInstance:(Ljava/lang/String;)Ljava/security/KeyStore;
      52: astore_3
      53: aload_3
      54: aload_2
      55: aload_0
      56: getfield      #80                 // Field _password:Lorg/mortbay/jetty/security/Password;
      59: ifnonnull     66
      62: aconst_null
      63: goto          76
      66: aload_0
      67: getfield      #80                 // Field _password:Lorg/mortbay/jetty/security/Password;
      70: invokevirtual #129                // Method org/mortbay/jetty/security/Password.toString:()Ljava/lang/String;
      73: invokevirtual #130                // Method java/lang/String.toCharArray:()[C
      76: invokevirtual #131                // Method java/security/KeyStore.load:(Ljava/io/InputStream;[C)V
      79: aload_0
      80: getfield      #70                 // Field _sslKeyManagerFactoryAlgorithm:Ljava/lang/String;
      83: invokestatic  #132                // Method javax/net/ssl/KeyManagerFactory.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/KeyManagerFactory;
      86: astore        4
      88: aload         4
      90: aload_3
      91: aload_0
      92: getfield      #83                 // Field _keyPassword:Lorg/mortbay/jetty/security/Password;
      95: ifnonnull     102
      98: aconst_null
      99: goto          112
     102: aload_0
     103: getfield      #83                 // Field _keyPassword:Lorg/mortbay/jetty/security/Password;
     106: invokevirtual #129                // Method org/mortbay/jetty/security/Password.toString:()Ljava/lang/String;
     109: invokevirtual #130                // Method java/lang/String.toCharArray:()[C
     112: invokevirtual #133                // Method javax/net/ssl/KeyManagerFactory.init:(Ljava/security/KeyStore;[C)V
     115: aload         4
     117: invokevirtual #134                // Method javax/net/ssl/KeyManagerFactory.getKeyManagers:()[Ljavax/net/ssl/KeyManager;
     120: astore_1
     121: aconst_null
     122: astore        5
     124: aconst_null
     125: astore        6
     127: aload_0
     128: getfield      #86                 // Field _truststore:Ljava/lang/String;
     131: ifnull        146
     134: aload_0
     135: getfield      #86                 // Field _truststore:Ljava/lang/String;
     138: invokestatic  #126                // Method org/mortbay/resource/Resource.newResource:(Ljava/lang/String;)Lorg/mortbay/resource/Resource;
     141: invokevirtual #127                // Method org/mortbay/resource/Resource.getInputStream:()Ljava/io/InputStream;
     144: astore        6
     146: aload_0
     147: getfield      #73                 // Field _truststoreType:Ljava/lang/String;
     150: invokestatic  #128                // Method java/security/KeyStore.getInstance:(Ljava/lang/String;)Ljava/security/KeyStore;
     153: astore        7
     155: aload         7
     157: aload         6
     159: aload_0
     160: getfield      #81                 // Field _trustPassword:Lorg/mortbay/jetty/security/Password;
     163: ifnonnull     170
     166: aconst_null
     167: goto          180
     170: aload_0
     171: getfield      #81                 // Field _trustPassword:Lorg/mortbay/jetty/security/Password;
     174: invokevirtual #129                // Method org/mortbay/jetty/security/Password.toString:()Ljava/lang/String;
     177: invokevirtual #130                // Method java/lang/String.toCharArray:()[C
     180: invokevirtual #131                // Method java/security/KeyStore.load:(Ljava/io/InputStream;[C)V
     183: aload_0
     184: getfield      #72                 // Field _sslTrustManagerFactoryAlgorithm:Ljava/lang/String;
     187: invokestatic  #135                // Method javax/net/ssl/TrustManagerFactory.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;
     190: astore        8
     192: aload         8
     194: aload         7
     196: invokevirtual #136                // Method javax/net/ssl/TrustManagerFactory.init:(Ljava/security/KeyStore;)V
     199: aload         8
     201: invokevirtual #137                // Method javax/net/ssl/TrustManagerFactory.getTrustManagers:()[Ljavax/net/ssl/TrustManager;
     204: astore        5
     206: aload_0
     207: getfield      #85                 // Field _secureRandomAlgorithm:Ljava/lang/String;
     210: ifnonnull     217
     213: aconst_null
     214: goto          224
     217: aload_0
     218: getfield      #85                 // Field _secureRandomAlgorithm:Ljava/lang/String;
     221: invokestatic  #138                // Method java/security/SecureRandom.getInstance:(Ljava/lang/String;)Ljava/security/SecureRandom;
     224: astore        9
     226: aload_0
     227: getfield      #84                 // Field _provider:Ljava/lang/String;
     230: ifnonnull     243
     233: aload_0
     234: getfield      #65                 // Field _protocol:Ljava/lang/String;
     237: invokestatic  #139                // Method javax/net/ssl/SSLContext.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;
     240: goto          254
     243: aload_0
     244: getfield      #65                 // Field _protocol:Ljava/lang/String;
     247: aload_0
     248: getfield      #84                 // Field _provider:Ljava/lang/String;
     251: invokestatic  #140                // Method javax/net/ssl/SSLContext.getInstance:(Ljava/lang/String;Ljava/lang/String;)Ljavax/net/ssl/SSLContext;
     254: astore        10
     256: aload         10
     258: aload_1
     259: aload         5
     261: aload         9
     263: invokevirtual #141                // Method javax/net/ssl/SSLContext.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V
     266: aload         10
     268: areturn

  static {};
    Code:
       0: ldc_w         #43                 // class org/mortbay/jetty/security/SslSelectChannelConnector$CachedInfo
       3: invokevirtual #142                // Method java/lang/Class.getName:()Ljava/lang/String;
       6: putstatic     #41                 // Field CACHED_INFO_ATTR:Ljava/lang/String;
       9: new           #143                // class java/lang/StringBuilder
      12: dup
      13: invokespecial #144                // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #145                // String user.home
      18: invokestatic  #146                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      21: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: getstatic     #148                // Field java/io/File.separator:Ljava/lang/String;
      27: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #149                // String .keystore
      32: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #150                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: putstatic     #58                 // Field DEFAULT_KEYSTORE:Ljava/lang/String;
      41: return
}
