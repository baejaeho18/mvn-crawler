Compiled from "SpringSessionSynchronization.java"
public class org.grails.datastore.mapping.transactions.support.SpringSessionSynchronization implements org.springframework.transaction.support.TransactionSynchronization {
  private final org.grails.datastore.mapping.transactions.SessionHolder sessionHolder;

  private final org.grails.datastore.mapping.core.Datastore datastore;

  private final boolean newSession;

  private boolean holderActive;

  public org.grails.datastore.mapping.transactions.support.SpringSessionSynchronization(org.grails.datastore.mapping.transactions.SessionHolder, org.grails.datastore.mapping.core.Datastore, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field holderActive:Z
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field sessionHolder:Lorg/grails/datastore/mapping/transactions/SessionHolder;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field datastore:Lorg/grails/datastore/mapping/core/Datastore;
      19: aload_0
      20: iload_3
      21: putfield      #5                  // Field newSession:Z
      24: return

  private org.grails.datastore.mapping.core.Session getCurrentSession();
    Code:
       0: aload_0
       1: getfield      #3                  // Field sessionHolder:Lorg/grails/datastore/mapping/transactions/SessionHolder;
       4: invokevirtual #6                  // Method org/grails/datastore/mapping/transactions/SessionHolder.getSession:()Lorg/grails/datastore/mapping/core/Session;
       7: areturn

  public void suspend();
    Code:
       0: aload_0
       1: getfield      #2                  // Field holderActive:Z
       4: ifeq          24
       7: aload_0
       8: getfield      #4                  // Field datastore:Lorg/grails/datastore/mapping/core/Datastore;
      11: invokestatic  #7                  // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_0
      16: invokespecial #8                  // Method getCurrentSession:()Lorg/grails/datastore/mapping/core/Session;
      19: invokeinterface #9,  1            // InterfaceMethod org/grails/datastore/mapping/core/Session.disconnect:()V
      24: return

  public void resume();
    Code:
       0: aload_0
       1: getfield      #2                  // Field holderActive:Z
       4: ifeq          18
       7: aload_0
       8: getfield      #4                  // Field datastore:Lorg/grails/datastore/mapping/core/Datastore;
      11: aload_0
      12: getfield      #3                  // Field sessionHolder:Lorg/grails/datastore/mapping/transactions/SessionHolder;
      15: invokestatic  #10                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
      18: return

  public void flush();
    Code:
       0: return

  public void beforeCommit(boolean) throws org.springframework.dao.DataAccessException;
    Code:
       0: return

  public void beforeCompletion();
    Code:
       0: aload_0
       1: getfield      #5                  // Field newSession:Z
       4: ifeq          20
       7: aload_0
       8: getfield      #4                  // Field datastore:Lorg/grails/datastore/mapping/core/Datastore;
      11: invokestatic  #7                  // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_0
      16: iconst_0
      17: putfield      #2                  // Field holderActive:Z
      20: return

  public void afterCommit();
    Code:
       0: return

  public void afterCompletion(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field sessionHolder:Lorg/grails/datastore/mapping/transactions/SessionHolder;
       4: invokevirtual #6                  // Method org/grails/datastore/mapping/transactions/SessionHolder.getSession:()Lorg/grails/datastore/mapping/core/Session;
       7: astore_2
       8: aload_0
       9: getfield      #5                  // Field newSession:Z
      12: ifeq          26
      15: aload_2
      16: aload_0
      17: getfield      #4                  // Field datastore:Lorg/grails/datastore/mapping/core/Datastore;
      20: invokestatic  #11                 // Method org/grails/datastore/mapping/core/DatastoreUtils.closeSessionOrRegisterDeferredClose:(Lorg/grails/datastore/mapping/core/Session;Lorg/grails/datastore/mapping/core/Datastore;)V
      23: goto          32
      26: aload_2
      27: invokeinterface #9,  1            // InterfaceMethod org/grails/datastore/mapping/core/Session.disconnect:()V
      32: aload_0
      33: getfield      #3                  // Field sessionHolder:Lorg/grails/datastore/mapping/transactions/SessionHolder;
      36: invokevirtual #12                 // Method org/grails/datastore/mapping/transactions/SessionHolder.doesNotHoldNonDefaultSession:()Z
      39: ifeq          50
      42: aload_0
      43: getfield      #3                  // Field sessionHolder:Lorg/grails/datastore/mapping/transactions/SessionHolder;
      46: iconst_0
      47: invokevirtual #13                 // Method org/grails/datastore/mapping/transactions/SessionHolder.setSynchronizedWithTransaction:(Z)V
      50: return
}
