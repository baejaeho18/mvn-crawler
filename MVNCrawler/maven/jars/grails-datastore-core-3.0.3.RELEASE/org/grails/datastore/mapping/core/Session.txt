Compiled from "Session.java"
public interface org.grails.datastore.mapping.core.Session {
  public abstract void setAttribute(java.lang.Object, java.lang.String, java.lang.Object);

  public abstract java.lang.Object getAttribute(java.lang.Object, java.lang.String);

  public abstract java.lang.Object setSessionProperty(java.lang.String, java.lang.Object);

  public abstract java.lang.Object getSessionProperty(java.lang.String);

  public abstract java.lang.Object clearSessionProperty(java.lang.String);

  public abstract boolean isConnected();

  public abstract void disconnect();

  public abstract org.grails.datastore.mapping.transactions.Transaction beginTransaction();

  public abstract org.grails.datastore.mapping.model.MappingContext getMappingContext();

  public abstract java.io.Serializable persist(java.lang.Object);

  public abstract java.io.Serializable insert(java.lang.Object);

  public abstract void refresh(java.lang.Object);

  public abstract void attach(java.lang.Object);

  public abstract void flush();

  public abstract void clear();

  public abstract void clear(java.lang.Object);

  public abstract boolean contains(java.lang.Object);

  public abstract void setFlushMode(javax.persistence.FlushModeType);

  public abstract javax.persistence.FlushModeType getFlushMode();

  public abstract void lock(java.lang.Object);

  public abstract void unlock(java.lang.Object);

  public abstract java.util.List<java.io.Serializable> persist(java.lang.Iterable);

  public abstract <T> T retrieve(java.lang.Class<T>, java.io.Serializable);

  public abstract <T> T proxy(java.lang.Class<T>, java.io.Serializable);

  public abstract <T> T lock(java.lang.Class<T>, java.io.Serializable);

  public abstract void delete(java.lang.Iterable);

  public abstract void delete(java.lang.Object);

  public abstract int deleteAll(org.grails.datastore.mapping.query.api.QueryableCriteria);

  public abstract int updateAll(org.grails.datastore.mapping.query.api.QueryableCriteria, java.util.Map<java.lang.String, java.lang.Object>);

  public abstract java.util.List retrieveAll(java.lang.Class, java.lang.Iterable);

  public abstract java.util.List retrieveAll(java.lang.Class, java.io.Serializable...);

  public abstract org.grails.datastore.mapping.query.Query createQuery(java.lang.Class);

  public abstract java.lang.Object getNativeInterface();

  public abstract org.grails.datastore.mapping.engine.Persister getPersister(java.lang.Object);

  public abstract org.grails.datastore.mapping.transactions.Transaction getTransaction();

  public abstract org.grails.datastore.mapping.core.Datastore getDatastore();

  public abstract boolean isDirty(java.lang.Object);

  public abstract java.io.Serializable getObjectIdentifier(java.lang.Object);
}
