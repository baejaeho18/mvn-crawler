Compiled from "ValidatingEventListener.java"
public class org.grails.datastore.mapping.validation.ValidatingEventListener extends org.grails.datastore.mapping.engine.event.AbstractPersistenceEventListener {
  public org.grails.datastore.mapping.validation.ValidatingEventListener(org.grails.datastore.mapping.core.Datastore);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/grails/datastore/mapping/engine/event/AbstractPersistenceEventListener."<init>":(Lorg/grails/datastore/mapping/core/Datastore;)V
       5: return

  protected void onPersistenceEvent(org.grails.datastore.mapping.engine.event.AbstractPersistenceEvent);
    Code:
       0: aload_1
       1: instanceof    #2                  // class org/grails/datastore/mapping/engine/event/PreInsertEvent
       4: ifeq          23
       7: aload_0
       8: aload_1
       9: invokevirtual #3                  // Method org/grails/datastore/mapping/engine/event/AbstractPersistenceEvent.getEntity:()Lorg/grails/datastore/mapping/model/PersistentEntity;
      12: aload_1
      13: invokevirtual #4                  // Method org/grails/datastore/mapping/engine/event/AbstractPersistenceEvent.getEntityAccess:()Lorg/grails/datastore/mapping/engine/EntityAccess;
      16: invokevirtual #5                  // Method beforeInsert:(Lorg/grails/datastore/mapping/model/PersistentEntity;Lorg/grails/datastore/mapping/engine/EntityAccess;)Z
      19: pop
      20: goto          43
      23: aload_1
      24: instanceof    #6                  // class org/grails/datastore/mapping/engine/event/PreUpdateEvent
      27: ifeq          43
      30: aload_0
      31: aload_1
      32: invokevirtual #3                  // Method org/grails/datastore/mapping/engine/event/AbstractPersistenceEvent.getEntity:()Lorg/grails/datastore/mapping/model/PersistentEntity;
      35: aload_1
      36: invokevirtual #4                  // Method org/grails/datastore/mapping/engine/event/AbstractPersistenceEvent.getEntityAccess:()Lorg/grails/datastore/mapping/engine/EntityAccess;
      39: invokevirtual #7                  // Method beforeUpdate:(Lorg/grails/datastore/mapping/model/PersistentEntity;Lorg/grails/datastore/mapping/engine/EntityAccess;)Z
      42: pop
      43: return

  public boolean supportsEventType(java.lang.Class<? extends org.springframework.context.ApplicationEvent>);
    Code:
       0: ldc_w         #2                  // class org/grails/datastore/mapping/engine/event/PreInsertEvent
       3: aload_1
       4: invokevirtual #8                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       7: ifne          20
      10: ldc_w         #6                  // class org/grails/datastore/mapping/engine/event/PreUpdateEvent
      13: aload_1
      14: invokevirtual #8                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public boolean beforeInsert(org.grails.datastore.mapping.model.PersistentEntity, org.grails.datastore.mapping.engine.EntityAccess);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #9                  // Method org/grails/datastore/mapping/engine/EntityAccess.getEntity:()Ljava/lang/Object;
       6: invokespecial #10                 // Method doValidate:(Lorg/grails/datastore/mapping/model/PersistentEntity;Ljava/lang/Object;)Z
       9: ireturn

  public boolean beforeUpdate(org.grails.datastore.mapping.model.PersistentEntity, org.grails.datastore.mapping.engine.EntityAccess);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #9                  // Method org/grails/datastore/mapping/engine/EntityAccess.getEntity:()Ljava/lang/Object;
       6: invokespecial #10                 // Method doValidate:(Lorg/grails/datastore/mapping/model/PersistentEntity;Ljava/lang/Object;)Z
       9: ireturn

  private boolean doValidate(org.grails.datastore.mapping.model.PersistentEntity, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #11                 // Field datastore:Lorg/grails/datastore/mapping/core/Datastore;
       4: invokeinterface #12,  1           // InterfaceMethod org/grails/datastore/mapping/core/Datastore.getMappingContext:()Lorg/grails/datastore/mapping/model/MappingContext;
       9: aload_1
      10: invokeinterface #13,  2           // InterfaceMethod org/grails/datastore/mapping/model/MappingContext.getEntityValidator:(Lorg/grails/datastore/mapping/model/PersistentEntity;)Lorg/springframework/validation/Validator;
      15: astore_3
      16: aload_3
      17: ifnonnull     22
      20: iconst_1
      21: ireturn
      22: aload_0
      23: getfield      #11                 // Field datastore:Lorg/grails/datastore/mapping/core/Datastore;
      26: aload_2
      27: invokeinterface #14,  2           // InterfaceMethod org/grails/datastore/mapping/core/Datastore.skipValidation:(Ljava/lang/Object;)Z
      32: ifeq          37
      35: iconst_1
      36: ireturn
      37: aload_0
      38: getfield      #11                 // Field datastore:Lorg/grails/datastore/mapping/core/Datastore;
      41: invokeinterface #15,  1           // InterfaceMethod org/grails/datastore/mapping/core/Datastore.getCurrentSession:()Lorg/grails/datastore/mapping/core/Session;
      46: astore        4
      48: aload         4
      50: invokeinterface #16,  1           // InterfaceMethod org/grails/datastore/mapping/core/Session.getFlushMode:()Ljavax/persistence/FlushModeType;
      55: astore        5
      57: aload         4
      59: getstatic     #17                 // Field javax/persistence/FlushModeType.COMMIT:Ljavax/persistence/FlushModeType;
      62: invokeinterface #18,  2           // InterfaceMethod org/grails/datastore/mapping/core/Session.setFlushMode:(Ljavax/persistence/FlushModeType;)V
      67: new           #19                 // class org/grails/datastore/mapping/validation/ValidationErrors
      70: dup
      71: aload_2
      72: invokespecial #20                 // Method org/grails/datastore/mapping/validation/ValidationErrors."<init>":(Ljava/lang/Object;)V
      75: astore        6
      77: aload_3
      78: aload_2
      79: aload         6
      81: invokeinterface #21,  3           // InterfaceMethod org/springframework/validation/Validator.validate:(Ljava/lang/Object;Lorg/springframework/validation/Errors;)V
      86: aload         6
      88: invokeinterface #22,  1           // InterfaceMethod org/springframework/validation/Errors.hasErrors:()Z
      93: ifeq          118
      96: aload_0
      97: aload_2
      98: aload         6
     100: invokevirtual #23                 // Method onErrors:(Ljava/lang/Object;Lorg/springframework/validation/Errors;)V
     103: iconst_0
     104: istore        7
     106: aload         4
     108: aload         5
     110: invokeinterface #18,  2           // InterfaceMethod org/grails/datastore/mapping/core/Session.setFlushMode:(Ljavax/persistence/FlushModeType;)V
     115: iload         7
     117: ireturn
     118: iconst_1
     119: istore        7
     121: aload         4
     123: aload         5
     125: invokeinterface #18,  2           // InterfaceMethod org/grails/datastore/mapping/core/Session.setFlushMode:(Ljavax/persistence/FlushModeType;)V
     130: iload         7
     132: ireturn
     133: astore        8
     135: aload         4
     137: aload         5
     139: invokeinterface #18,  2           // InterfaceMethod org/grails/datastore/mapping/core/Session.setFlushMode:(Ljavax/persistence/FlushModeType;)V
     144: aload         8
     146: athrow
    Exception table:
       from    to  target type
          57   106   133   any
         118   121   133   any
         133   135   133   any

  protected void onErrors(java.lang.Object, org.springframework.validation.Errors);
    Code:
       0: aload_0
       1: getfield      #11                 // Field datastore:Lorg/grails/datastore/mapping/core/Datastore;
       4: aload_1
       5: aload_2
       6: invokeinterface #24,  3           // InterfaceMethod org/grails/datastore/mapping/core/Datastore.setObjectErrors:(Ljava/lang/Object;Lorg/springframework/validation/Errors;)V
      11: return
}
