Compiled from "AbstractDatastore.java"
public abstract class org.grails.datastore.mapping.core.AbstractDatastore implements org.grails.datastore.mapping.core.Datastore,org.grails.datastore.mapping.core.StatelessDatastore,org.springframework.beans.factory.DisposableBean {
  private org.springframework.context.ApplicationContext applicationContext;

  private static final org.grails.datastore.mapping.core.SoftThreadLocalMap ERRORS_MAP;

  private static final org.grails.datastore.mapping.core.SoftThreadLocalMap VALIDATE_MAP;

  protected org.grails.datastore.mapping.model.MappingContext mappingContext;

  protected java.util.Map<java.lang.String, java.lang.String> connectionDetails;

  protected org.grails.datastore.mapping.cache.TPCacheAdapterRepository cacheAdapterRepository;

  public org.grails.datastore.mapping.core.AbstractDatastore();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       8: putfield      #3                  // Field connectionDetails:Ljava/util/Map;
      11: return

  public org.grails.datastore.mapping.core.AbstractDatastore(org.grails.datastore.mapping.model.MappingContext);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: invokespecial #4                  // Method "<init>":(Lorg/grails/datastore/mapping/model/MappingContext;Ljava/util/Map;Lorg/springframework/context/ConfigurableApplicationContext;)V
       7: return

  public org.grails.datastore.mapping.core.AbstractDatastore(org.grails.datastore.mapping.model.MappingContext, java.util.Map<java.lang.String, java.lang.String>, org.springframework.context.ConfigurableApplicationContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: invokespecial #5                  // Method "<init>":(Lorg/grails/datastore/mapping/model/MappingContext;Ljava/util/Map;Lorg/springframework/context/ConfigurableApplicationContext;Lorg/grails/datastore/mapping/cache/TPCacheAdapterRepository;)V
       8: return

  public org.grails.datastore.mapping.core.AbstractDatastore(org.grails.datastore.mapping.model.MappingContext, java.util.Map<java.lang.String, java.lang.String>, org.springframework.context.ConfigurableApplicationContext, org.grails.datastore.mapping.cache.TPCacheAdapterRepository);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       8: putfield      #3                  // Field connectionDetails:Ljava/util/Map;
      11: aload_0
      12: aload_1
      13: putfield      #6                  // Field mappingContext:Lorg/grails/datastore/mapping/model/MappingContext;
      16: aload_0
      17: aload_2
      18: ifnull        25
      21: aload_2
      22: goto          28
      25: invokestatic  #2                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      28: putfield      #3                  // Field connectionDetails:Ljava/util/Map;
      31: aload_0
      32: aload_3
      33: invokevirtual #7                  // Method setApplicationContext:(Lorg/springframework/context/ApplicationContext;)V
      36: aload_0
      37: aload         4
      39: putfield      #8                  // Field cacheAdapterRepository:Lorg/grails/datastore/mapping/cache/TPCacheAdapterRepository;
      42: return

  public void destroy() throws java.lang.Exception;
    Code:
       0: getstatic     #9                  // Field ERRORS_MAP:Lorg/grails/datastore/mapping/core/SoftThreadLocalMap;
       3: invokevirtual #10                 // Method org/grails/datastore/mapping/core/SoftThreadLocalMap.remove:()V
       6: getstatic     #11                 // Field VALIDATE_MAP:Lorg/grails/datastore/mapping/core/SoftThreadLocalMap;
       9: invokevirtual #10                 // Method org/grails/datastore/mapping/core/SoftThreadLocalMap.remove:()V
      12: return

  public void setApplicationContext(org.springframework.context.ApplicationContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       5: aload_1
       6: ifnull        45
       9: aload_0
      10: invokevirtual #13                 // Method registerValidationListener:()Z
      13: ifeq          45
      16: ldc_w         #14                 // class org/springframework/context/ConfigurableApplicationContext
      19: aload_0
      20: getfield      #12                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      23: ldc           #15                 // String ApplicationContext must be an instanceof ConfigurableApplicationContext
      25: invokestatic  #16                 // Method org/springframework/util/Assert.isInstanceOf:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;)V
      28: aload_1
      29: checkcast     #14                 // class org/springframework/context/ConfigurableApplicationContext
      32: new           #17                 // class org/grails/datastore/mapping/validation/ValidatingEventListener
      35: dup
      36: aload_0
      37: invokespecial #18                 // Method org/grails/datastore/mapping/validation/ValidatingEventListener."<init>":(Lorg/grails/datastore/mapping/core/Datastore;)V
      40: invokeinterface #19,  2           // InterfaceMethod org/springframework/context/ConfigurableApplicationContext.addApplicationListener:(Lorg/springframework/context/ApplicationListener;)V
      45: return

  protected boolean registerValidationListener();
    Code:
       0: iconst_1
       1: ireturn

  public void setConnectionDetails(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field connectionDetails:Ljava/util/Map;
       5: return

  public org.grails.datastore.mapping.core.Session connect();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field connectionDetails:Ljava/util/Map;
       5: invokevirtual #20                 // Method connect:(Ljava/util/Map;)Lorg/grails/datastore/mapping/core/Session;
       8: areturn

  public final org.grails.datastore.mapping.core.Session connect(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method createSession:(Ljava/util/Map;)Lorg/grails/datastore/mapping/core/Session;
       5: astore_2
       6: aload_0
       7: aload_2
       8: invokespecial #22                 // Method publishSessionCreationEvent:(Lorg/grails/datastore/mapping/core/Session;)V
      11: aload_2
      12: areturn

  private void publishSessionCreationEvent(org.grails.datastore.mapping.core.Session);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getApplicationEventPublisher:()Lorg/springframework/context/ApplicationEventPublisher;
       4: astore_2
       5: aload_2
       6: ifnull        23
       9: aload_2
      10: new           #24                 // class org/grails/datastore/mapping/core/SessionCreationEvent
      13: dup
      14: aload_1
      15: invokespecial #25                 // Method org/grails/datastore/mapping/core/SessionCreationEvent."<init>":(Lorg/grails/datastore/mapping/core/Session;)V
      18: invokeinterface #26,  2           // InterfaceMethod org/springframework/context/ApplicationEventPublisher.publishEvent:(Lorg/springframework/context/ApplicationEvent;)V
      23: return

  public org.grails.datastore.mapping.core.Session connectStateless();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field connectionDetails:Ljava/util/Map;
       5: invokevirtual #27                 // Method createStatelessSession:(Ljava/util/Map;)Lorg/grails/datastore/mapping/core/Session;
       8: astore_1
       9: aload_0
      10: aload_1
      11: invokespecial #22                 // Method publishSessionCreationEvent:(Lorg/grails/datastore/mapping/core/Session;)V
      14: aload_1
      15: areturn

  protected abstract org.grails.datastore.mapping.core.Session createSession(java.util.Map<java.lang.String, java.lang.String>);

  protected org.grails.datastore.mapping.core.Session createStatelessSession(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method createSession:(Ljava/util/Map;)Lorg/grails/datastore/mapping/core/Session;
       5: areturn

  public org.grails.datastore.mapping.core.Session getCurrentSession() throws org.grails.datastore.mapping.core.ConnectionNotFoundException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokestatic  #28                 // Method org/grails/datastore/mapping/core/DatastoreUtils.doGetSession:(Lorg/grails/datastore/mapping/core/Datastore;Z)Lorg/grails/datastore/mapping/core/Session;
       5: areturn

  public boolean hasCurrentSession();
    Code:
       0: aload_0
       1: invokestatic  #29                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.hasResource:(Ljava/lang/Object;)Z
       4: ireturn

  public static org.grails.datastore.mapping.core.Session retrieveSession() throws org.grails.datastore.mapping.core.ConnectionNotFoundException;
    Code:
       0: ldc_w         #30                 // class org/grails/datastore/mapping/core/Datastore
       3: invokestatic  #31                 // Method retrieveSession:(Ljava/lang/Class;)Lorg/grails/datastore/mapping/core/Session;
       6: areturn

  public static org.grails.datastore.mapping.core.Session retrieveSession(java.lang.Class) throws org.grails.datastore.mapping.core.ConnectionNotFoundException;
    Code:
       0: invokestatic  #32                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResourceMap:()Ljava/util/Map;
       3: astore_1
       4: aconst_null
       5: astore_2
       6: aload_1
       7: ifnull        84
      10: aload_1
      11: invokeinterface #33,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      16: ifne          84
      19: aload_1
      20: invokeinterface #34,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      25: invokeinterface #35,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      30: astore_3
      31: aload_3
      32: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          84
      40: aload_3
      41: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: astore        4
      48: aload_0
      49: aload         4
      51: invokevirtual #38                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      54: ifeq          81
      57: aload_1
      58: aload         4
      60: invokeinterface #39,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      65: checkcast     #40                 // class org/grails/datastore/mapping/transactions/SessionHolder
      68: astore        5
      70: aload         5
      72: ifnull        81
      75: aload         5
      77: invokevirtual #41                 // Method org/grails/datastore/mapping/transactions/SessionHolder.getSession:()Lorg/grails/datastore/mapping/core/Session;
      80: astore_2
      81: goto          31
      84: aload_2
      85: ifnonnull     98
      88: new           #42                 // class org/grails/datastore/mapping/core/ConnectionNotFoundException
      91: dup
      92: ldc           #43                 // String No datastore session found. Call Datastore.connect(..) before calling Datastore.getCurrentSession()
      94: invokespecial #44                 // Method org/grails/datastore/mapping/core/ConnectionNotFoundException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: aload_2
      99: areturn

  public org.grails.datastore.mapping.model.MappingContext getMappingContext();
    Code:
       0: aload_0
       1: getfield      #6                  // Field mappingContext:Lorg/grails/datastore/mapping/model/MappingContext;
       4: areturn

  public org.springframework.context.ConfigurableApplicationContext getApplicationContext();
    Code:
       0: aload_0
       1: getfield      #12                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       4: checkcast     #14                 // class org/springframework/context/ConfigurableApplicationContext
       7: areturn

  public org.springframework.context.ApplicationEventPublisher getApplicationEventPublisher();
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method getApplicationContext:()Lorg/springframework/context/ConfigurableApplicationContext;
       4: areturn

  public org.springframework.validation.Errors getObjectErrors(java.lang.Object);
    Code:
       0: invokestatic  #46                 // Method getValidationErrorsMap:()Ljava/util/Map;
       3: aload_1
       4: invokestatic  #47                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
       7: invokestatic  #48                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      10: invokeinterface #39,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #49                 // class org/springframework/validation/Errors
      18: areturn

  public void setObjectErrors(java.lang.Object, org.springframework.validation.Errors);
    Code:
       0: invokestatic  #46                 // Method getValidationErrorsMap:()Ljava/util/Map;
       3: aload_1
       4: invokestatic  #47                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
       7: invokestatic  #48                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      10: aload_2
      11: invokeinterface #50,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: return

  public void setSkipValidation(java.lang.Object, boolean);
    Code:
       0: getstatic     #11                 // Field VALIDATE_MAP:Lorg/grails/datastore/mapping/core/SoftThreadLocalMap;
       3: invokevirtual #51                 // Method org/grails/datastore/mapping/core/SoftThreadLocalMap.get:()Ljava/lang/Object;
       6: checkcast     #52                 // class org/springframework/util/ConcurrentReferenceHashMap
       9: aload_1
      10: invokestatic  #47                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      13: invokestatic  #48                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      16: iload_2
      17: invokestatic  #53                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      20: invokevirtual #54                 // Method org/springframework/util/ConcurrentReferenceHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: return

  public boolean skipValidation(java.lang.Object);
    Code:
       0: getstatic     #11                 // Field VALIDATE_MAP:Lorg/grails/datastore/mapping/core/SoftThreadLocalMap;
       3: invokevirtual #51                 // Method org/grails/datastore/mapping/core/SoftThreadLocalMap.get:()Ljava/lang/Object;
       6: checkcast     #52                 // class org/springframework/util/ConcurrentReferenceHashMap
       9: aload_1
      10: invokestatic  #47                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      13: invokestatic  #48                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      16: invokevirtual #55                 // Method org/springframework/util/ConcurrentReferenceHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: astore_2
      20: aload_2
      21: instanceof    #56                 // class java/lang/Boolean
      24: ifeq          41
      27: aload_2
      28: checkcast     #56                 // class java/lang/Boolean
      31: invokevirtual #57                 // Method java/lang/Boolean.booleanValue:()Z
      34: ifeq          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  public static java.util.Map<java.lang.Object, org.springframework.validation.Errors> getValidationErrorsMap();
    Code:
       0: getstatic     #9                  // Field ERRORS_MAP:Lorg/grails/datastore/mapping/core/SoftThreadLocalMap;
       3: invokevirtual #51                 // Method org/grails/datastore/mapping/core/SoftThreadLocalMap.get:()Ljava/lang/Object;
       6: checkcast     #58                 // class java/util/Map
       9: areturn

  public static java.util.Map<java.lang.Object, java.lang.Boolean> getValidationSkipMap();
    Code:
       0: getstatic     #11                 // Field VALIDATE_MAP:Lorg/grails/datastore/mapping/core/SoftThreadLocalMap;
       3: invokevirtual #51                 // Method org/grails/datastore/mapping/core/SoftThreadLocalMap.get:()Ljava/lang/Object;
       6: checkcast     #58                 // class java/util/Map
       9: areturn

  protected void initializeConverters(org.grails.datastore.mapping.model.MappingContext);
    Code:
       0: aload_1
       1: invokeinterface #59,  1           // InterfaceMethod org/grails/datastore/mapping/model/MappingContext.getConverterRegistry:()Lorg/springframework/core/convert/converter/ConverterRegistry;
       6: astore_2
       7: new           #60                 // class org/grails/datastore/mapping/model/types/BasicTypeConverterRegistrar
      10: dup
      11: invokespecial #61                 // Method org/grails/datastore/mapping/model/types/BasicTypeConverterRegistrar."<init>":()V
      14: astore_3
      15: aload_3
      16: aload_2
      17: invokevirtual #62                 // Method org/grails/datastore/mapping/model/types/BasicTypeConverterRegistrar.register:(Lorg/springframework/core/convert/converter/ConverterRegistry;)V
      20: return

  protected boolean isIndexed(org.grails.datastore.mapping.model.PersistentProperty);
    Code:
       0: aload_1
       1: invokeinterface #63,  1           // InterfaceMethod org/grails/datastore/mapping/model/PersistentProperty.getMapping:()Lorg/grails/datastore/mapping/model/PropertyMapping;
       6: astore_2
       7: aload_2
       8: invokeinterface #64,  1           // InterfaceMethod org/grails/datastore/mapping/model/PropertyMapping.getMappedForm:()Lorg/grails/datastore/mapping/config/Property;
      13: astore_3
      14: aload_3
      15: ifnull        29
      18: aload_3
      19: invokevirtual #65                 // Method org/grails/datastore/mapping/config/Property.isIndex:()Z
      22: ifeq          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  public boolean isSchemaless();
    Code:
       0: iconst_0
       1: ireturn

  static {};
    Code:
       0: new           #66                 // class org/grails/datastore/mapping/core/SoftThreadLocalMap
       3: dup
       4: invokespecial #67                 // Method org/grails/datastore/mapping/core/SoftThreadLocalMap."<init>":()V
       7: putstatic     #9                  // Field ERRORS_MAP:Lorg/grails/datastore/mapping/core/SoftThreadLocalMap;
      10: new           #66                 // class org/grails/datastore/mapping/core/SoftThreadLocalMap
      13: dup
      14: invokespecial #67                 // Method org/grails/datastore/mapping/core/SoftThreadLocalMap."<init>":()V
      17: putstatic     #11                 // Field VALIDATE_MAP:Lorg/grails/datastore/mapping/core/SoftThreadLocalMap;
      20: return
}
