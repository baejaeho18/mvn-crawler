Compiled from "DatastoreUtils.java"
public abstract class org.grails.datastore.mapping.core.DatastoreUtils {
  public static final org.apache.commons.logging.Log logger;

  private static final java.lang.ThreadLocal<java.util.Map<org.grails.datastore.mapping.core.Datastore, java.util.Set<org.grails.datastore.mapping.core.Session>>> deferredCloseHolder;

  public org.grails.datastore.mapping.core.DatastoreUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.grails.datastore.mapping.core.Session getSession(org.grails.datastore.mapping.core.Datastore, boolean) throws org.springframework.dao.DataAccessResourceFailureException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #2                  // Method doGetSession:(Lorg/grails/datastore/mapping/core/Datastore;Z)Lorg/grails/datastore/mapping/core/Session;
       5: areturn
       6: astore_2
       7: new           #4                  // class org/springframework/dao/DataAccessResourceFailureException
      10: dup
      11: ldc           #5                  // String Could not open Datastore Session
      13: aload_2
      14: invokespecial #6                  // Method org/springframework/dao/DataAccessResourceFailureException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     5     6   Class java/lang/Exception

  public static org.grails.datastore.mapping.core.Session doGetSession(org.grails.datastore.mapping.core.Datastore, boolean);
    Code:
       0: aload_0
       1: ldc           #7                  // String No Datastore specified
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #9                  // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #10                 // class org/grails/datastore/mapping/transactions/SessionHolder
      13: astore_2
      14: aload_2
      15: ifnull        99
      18: aload_2
      19: invokevirtual #11                 // Method org/grails/datastore/mapping/transactions/SessionHolder.isEmpty:()Z
      22: ifne          99
      25: invokestatic  #12                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.isSynchronizationActive:()Z
      28: ifeq          88
      31: aload_2
      32: invokevirtual #13                 // Method org/grails/datastore/mapping/transactions/SessionHolder.doesNotHoldNonDefaultSession:()Z
      35: ifeq          88
      38: aload_2
      39: invokevirtual #14                 // Method org/grails/datastore/mapping/transactions/SessionHolder.getValidatedSession:()Lorg/grails/datastore/mapping/core/Session;
      42: astore_3
      43: aload_3
      44: ifnull        82
      47: aload_2
      48: invokevirtual #15                 // Method org/grails/datastore/mapping/transactions/SessionHolder.isSynchronizedWithTransaction:()Z
      51: ifne          82
      54: getstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
      57: ldc           #17                 // String Registering Spring transaction synchronization for existing Datastore Session
      59: invokeinterface #18,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      64: new           #19                 // class org/grails/datastore/mapping/transactions/support/SpringSessionSynchronization
      67: dup
      68: aload_2
      69: aload_0
      70: iconst_0
      71: invokespecial #20                 // Method org/grails/datastore/mapping/transactions/support/SpringSessionSynchronization."<init>":(Lorg/grails/datastore/mapping/transactions/SessionHolder;Lorg/grails/datastore/mapping/core/Datastore;Z)V
      74: invokestatic  #21                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.registerSynchronization:(Lorg/springframework/transaction/support/TransactionSynchronization;)V
      77: aload_2
      78: iconst_1
      79: invokevirtual #22                 // Method org/grails/datastore/mapping/transactions/SessionHolder.setSynchronizedWithTransaction:(Z)V
      82: aload_3
      83: ifnull        99
      86: aload_3
      87: areturn
      88: aload_2
      89: invokevirtual #14                 // Method org/grails/datastore/mapping/transactions/SessionHolder.getValidatedSession:()Lorg/grails/datastore/mapping/core/Session;
      92: astore_3
      93: aload_3
      94: ifnull        99
      97: aload_3
      98: areturn
      99: getstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
     102: ldc           #23                 // String Opening Datastore Session
     104: invokeinterface #18,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     109: aload_0
     110: invokeinterface #24,  1           // InterfaceMethod org/grails/datastore/mapping/core/Datastore.connect:()Lorg/grails/datastore/mapping/core/Session;
     115: astore_3
     116: invokestatic  #12                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.isSynchronizationActive:()Z
     119: ifeq          191
     122: getstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
     125: ldc           #25                 // String Registering Spring transaction synchronization for new Datastore Session
     127: invokeinterface #18,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     132: aload_2
     133: astore        4
     135: aload         4
     137: ifnonnull     153
     140: new           #10                 // class org/grails/datastore/mapping/transactions/SessionHolder
     143: dup
     144: aload_3
     145: invokespecial #26                 // Method org/grails/datastore/mapping/transactions/SessionHolder."<init>":(Lorg/grails/datastore/mapping/core/Session;)V
     148: astore        4
     150: goto          159
     153: aload         4
     155: aload_3
     156: invokevirtual #27                 // Method org/grails/datastore/mapping/transactions/SessionHolder.addSession:(Lorg/grails/datastore/mapping/core/Session;)V
     159: new           #19                 // class org/grails/datastore/mapping/transactions/support/SpringSessionSynchronization
     162: dup
     163: aload         4
     165: aload_0
     166: iconst_1
     167: invokespecial #20                 // Method org/grails/datastore/mapping/transactions/support/SpringSessionSynchronization."<init>":(Lorg/grails/datastore/mapping/transactions/SessionHolder;Lorg/grails/datastore/mapping/core/Datastore;Z)V
     170: invokestatic  #21                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.registerSynchronization:(Lorg/springframework/transaction/support/TransactionSynchronization;)V
     173: aload         4
     175: iconst_1
     176: invokevirtual #22                 // Method org/grails/datastore/mapping/transactions/SessionHolder.setSynchronizedWithTransaction:(Z)V
     179: aload         4
     181: aload_2
     182: if_acmpeq     191
     185: aload_0
     186: aload         4
     188: invokestatic  #28                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
     191: iload_1
     192: ifne          217
     195: aload_3
     196: aload_0
     197: invokestatic  #29                 // Method isSessionTransactional:(Lorg/grails/datastore/mapping/core/Session;Lorg/grails/datastore/mapping/core/Datastore;)Z
     200: ifne          217
     203: aload_3
     204: invokestatic  #30                 // Method closeSession:(Lorg/grails/datastore/mapping/core/Session;)V
     207: new           #31                 // class java/lang/IllegalStateException
     210: dup
     211: ldc           #32                 // String No Datastore Session bound to thread, and configuration does not allow creation of non-transactional one here
     213: invokespecial #33                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     216: athrow
     217: aload_3
     218: areturn

  public static boolean isSessionTransactional(org.grails.datastore.mapping.core.Session, org.grails.datastore.mapping.core.Datastore);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: invokestatic  #9                  // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #10                 // class org/grails/datastore/mapping/transactions/SessionHolder
      13: astore_2
      14: aload_2
      15: ifnull        30
      18: aload_2
      19: aload_0
      20: invokevirtual #34                 // Method org/grails/datastore/mapping/transactions/SessionHolder.containsSession:(Lorg/grails/datastore/mapping/core/Session;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public static void closeSession(org.grails.datastore.mapping.core.Session);
    Code:
       0: aload_0
       1: ifnonnull     5
       4: return
       5: getstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
       8: ldc           #35                 // String Closing Datastore Session
      10: invokeinterface #18,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      15: aload_0
      16: invokeinterface #36,  1           // InterfaceMethod org/grails/datastore/mapping/core/Session.disconnect:()V
      21: goto          36
      24: astore_1
      25: getstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
      28: ldc           #38                 // String Unexpected exception on closing Datastore Session
      30: aload_1
      31: invokeinterface #39,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      36: return
    Exception table:
       from    to  target type
          15    21    24   Class java/lang/Throwable

  public static void releaseSession(org.grails.datastore.mapping.core.Session, org.grails.datastore.mapping.core.Datastore);
    Code:
       0: aload_0
       1: ifnonnull     5
       4: return
       5: aload_0
       6: aload_1
       7: invokestatic  #29                 // Method isSessionTransactional:(Lorg/grails/datastore/mapping/core/Session;Lorg/grails/datastore/mapping/core/Datastore;)Z
      10: ifne          18
      13: aload_0
      14: aload_1
      15: invokestatic  #40                 // Method closeSessionOrRegisterDeferredClose:(Lorg/grails/datastore/mapping/core/Session;Lorg/grails/datastore/mapping/core/Datastore;)V
      18: return

  public static void processDeferredClose(org.grails.datastore.mapping.core.Datastore);
    Code:
       0: aload_0
       1: ldc           #7                  // String No Datastore specified
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: getstatic     #41                 // Field deferredCloseHolder:Ljava/lang/ThreadLocal;
       9: invokevirtual #42                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      12: checkcast     #43                 // class java/util/Map
      15: astore_1
      16: aload_1
      17: ifnull        30
      20: aload_1
      21: aload_0
      22: invokeinterface #44,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      27: ifne          62
      30: new           #31                 // class java/lang/IllegalStateException
      33: dup
      34: new           #45                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #47                 // String Deferred close not active for Datastore [
      43: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: ldc           #50                 // String ]
      52: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokespecial #33                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: getstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
      65: ldc           #52                 // String Processing deferred close of Datastore Sessions
      67: invokeinterface #18,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      72: aload_1
      73: aload_0
      74: invokeinterface #53,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      79: checkcast     #54                 // class java/util/Set
      82: astore_2
      83: aload_2
      84: invokeinterface #55,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      89: astore_3
      90: aload_3
      91: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      96: ifeq          118
      99: aload_3
     100: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     105: checkcast     #58                 // class org/grails/datastore/mapping/core/Session
     108: astore        4
     110: aload         4
     112: invokestatic  #30                 // Method closeSession:(Lorg/grails/datastore/mapping/core/Session;)V
     115: goto          90
     118: aload_1
     119: invokeinterface #59,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
     124: ifeq          134
     127: getstatic     #41                 // Field deferredCloseHolder:Ljava/lang/ThreadLocal;
     130: aconst_null
     131: invokevirtual #60                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
     134: return

  public static void initDeferredClose(org.grails.datastore.mapping.core.Datastore);
    Code:
       0: aload_0
       1: ldc           #7                  // String No Datastore specified
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: getstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
       9: ldc           #61                 // String Initializing deferred close of Datastore Sessions
      11: invokeinterface #18,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      16: getstatic     #41                 // Field deferredCloseHolder:Ljava/lang/ThreadLocal;
      19: invokevirtual #42                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      22: checkcast     #43                 // class java/util/Map
      25: astore_1
      26: aload_1
      27: ifnonnull     45
      30: new           #62                 // class java/util/HashMap
      33: dup
      34: invokespecial #63                 // Method java/util/HashMap."<init>":()V
      37: astore_1
      38: getstatic     #41                 // Field deferredCloseHolder:Ljava/lang/ThreadLocal;
      41: aload_1
      42: invokevirtual #60                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      45: aload_1
      46: aload_0
      47: new           #64                 // class java/util/LinkedHashSet
      50: dup
      51: iconst_4
      52: invokespecial #65                 // Method java/util/LinkedHashSet."<init>":(I)V
      55: invokeinterface #66,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      60: pop
      61: return

  public static void closeSessionOrRegisterDeferredClose(org.grails.datastore.mapping.core.Session, org.grails.datastore.mapping.core.Datastore);
    Code:
       0: getstatic     #41                 // Field deferredCloseHolder:Ljava/lang/ThreadLocal;
       3: invokevirtual #42                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #43                 // class java/util/Map
       9: astore_2
      10: aload_2
      11: ifnull        58
      14: aload_1
      15: ifnull        58
      18: aload_2
      19: aload_1
      20: invokeinterface #44,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      25: ifeq          58
      28: getstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
      31: ldc           #67                 // String Registering Datastore Session for deferred close
      33: invokeinterface #18,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      38: aload_2
      39: aload_1
      40: invokeinterface #68,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #54                 // class java/util/Set
      48: aload_0
      49: invokeinterface #69,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      54: pop
      55: goto          62
      58: aload_0
      59: invokestatic  #30                 // Method closeSession:(Lorg/grails/datastore/mapping/core/Session;)V
      62: return

  public static java.lang.Object doWithSession(org.grails.datastore.mapping.core.Datastore, groovy.lang.Closure);
    Code:
       0: aload_0
       1: invokeinterface #70,  1           // InterfaceMethod org/grails/datastore/mapping/core/Datastore.hasCurrentSession:()Z
       6: istore_2
       7: iload_2
       8: ifeq          20
      11: aload_0
      12: invokeinterface #71,  1           // InterfaceMethod org/grails/datastore/mapping/core/Datastore.getCurrentSession:()Lorg/grails/datastore/mapping/core/Session;
      17: goto          29
      20: aload_0
      21: invokeinterface #24,  1           // InterfaceMethod org/grails/datastore/mapping/core/Datastore.connect:()Lorg/grails/datastore/mapping/core/Session;
      26: invokestatic  #72                 // Method bindSession:(Lorg/grails/datastore/mapping/core/Session;)Lorg/grails/datastore/mapping/core/Session;
      29: astore_3
      30: aload_1
      31: aload_3
      32: invokevirtual #73                 // Method groovy/lang/Closure.call:(Ljava/lang/Object;)Ljava/lang/Object;
      35: astore        4
      37: iload_2
      38: ifne          56
      41: aload_3
      42: invokeinterface #74,  1           // InterfaceMethod org/grails/datastore/mapping/core/Session.getDatastore:()Lorg/grails/datastore/mapping/core/Datastore;
      47: invokestatic  #75                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: aload_3
      52: aload_0
      53: invokestatic  #40                 // Method closeSessionOrRegisterDeferredClose:(Lorg/grails/datastore/mapping/core/Session;Lorg/grails/datastore/mapping/core/Datastore;)V
      56: aload         4
      58: areturn
      59: astore        5
      61: iload_2
      62: ifne          80
      65: aload_3
      66: invokeinterface #74,  1           // InterfaceMethod org/grails/datastore/mapping/core/Session.getDatastore:()Lorg/grails/datastore/mapping/core/Datastore;
      71: invokestatic  #75                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      74: pop
      75: aload_3
      76: aload_0
      77: invokestatic  #40                 // Method closeSessionOrRegisterDeferredClose:(Lorg/grails/datastore/mapping/core/Session;Lorg/grails/datastore/mapping/core/Datastore;)V
      80: aload         5
      82: athrow
    Exception table:
       from    to  target type
          30    37    59   any
          59    61    59   any

  public static <T> T execute(org.grails.datastore.mapping.core.Datastore, org.grails.datastore.mapping.core.SessionCallback<T>);
    Code:
       0: aload_0
       1: invokeinterface #70,  1           // InterfaceMethod org/grails/datastore/mapping/core/Datastore.hasCurrentSession:()Z
       6: istore_2
       7: iload_2
       8: ifeq          20
      11: aload_0
      12: invokeinterface #71,  1           // InterfaceMethod org/grails/datastore/mapping/core/Datastore.getCurrentSession:()Lorg/grails/datastore/mapping/core/Session;
      17: goto          29
      20: aload_0
      21: invokeinterface #24,  1           // InterfaceMethod org/grails/datastore/mapping/core/Datastore.connect:()Lorg/grails/datastore/mapping/core/Session;
      26: invokestatic  #72                 // Method bindSession:(Lorg/grails/datastore/mapping/core/Session;)Lorg/grails/datastore/mapping/core/Session;
      29: astore_3
      30: aload_1
      31: aload_3
      32: invokeinterface #76,  2           // InterfaceMethod org/grails/datastore/mapping/core/SessionCallback.doInSession:(Lorg/grails/datastore/mapping/core/Session;)Ljava/lang/Object;
      37: astore        4
      39: iload_2
      40: ifne          58
      43: aload_3
      44: invokeinterface #74,  1           // InterfaceMethod org/grails/datastore/mapping/core/Session.getDatastore:()Lorg/grails/datastore/mapping/core/Datastore;
      49: invokestatic  #75                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      52: pop
      53: aload_3
      54: aload_0
      55: invokestatic  #40                 // Method closeSessionOrRegisterDeferredClose:(Lorg/grails/datastore/mapping/core/Session;Lorg/grails/datastore/mapping/core/Datastore;)V
      58: aload         4
      60: areturn
      61: astore        5
      63: iload_2
      64: ifne          82
      67: aload_3
      68: invokeinterface #74,  1           // InterfaceMethod org/grails/datastore/mapping/core/Session.getDatastore:()Lorg/grails/datastore/mapping/core/Datastore;
      73: invokestatic  #75                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      76: pop
      77: aload_3
      78: aload_0
      79: invokestatic  #40                 // Method closeSessionOrRegisterDeferredClose:(Lorg/grails/datastore/mapping/core/Session;Lorg/grails/datastore/mapping/core/Datastore;)V
      82: aload         5
      84: athrow
    Exception table:
       from    to  target type
          30    39    61   any
          61    63    61   any

  public static void execute(org.grails.datastore.mapping.core.Datastore, org.grails.datastore.mapping.core.VoidSessionCallback);
    Code:
       0: aload_0
       1: invokeinterface #70,  1           // InterfaceMethod org/grails/datastore/mapping/core/Datastore.hasCurrentSession:()Z
       6: istore_2
       7: iload_2
       8: ifeq          20
      11: aload_0
      12: invokeinterface #71,  1           // InterfaceMethod org/grails/datastore/mapping/core/Datastore.getCurrentSession:()Lorg/grails/datastore/mapping/core/Session;
      17: goto          29
      20: aload_0
      21: invokeinterface #24,  1           // InterfaceMethod org/grails/datastore/mapping/core/Datastore.connect:()Lorg/grails/datastore/mapping/core/Session;
      26: invokestatic  #72                 // Method bindSession:(Lorg/grails/datastore/mapping/core/Session;)Lorg/grails/datastore/mapping/core/Session;
      29: astore_3
      30: aload_1
      31: aload_3
      32: invokeinterface #77,  2           // InterfaceMethod org/grails/datastore/mapping/core/VoidSessionCallback.doInSession:(Lorg/grails/datastore/mapping/core/Session;)V
      37: iload_2
      38: ifne          73
      41: aload_0
      42: invokestatic  #75                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: aload_3
      47: aload_0
      48: invokestatic  #40                 // Method closeSessionOrRegisterDeferredClose:(Lorg/grails/datastore/mapping/core/Session;Lorg/grails/datastore/mapping/core/Datastore;)V
      51: goto          73
      54: astore        4
      56: iload_2
      57: ifne          70
      60: aload_0
      61: invokestatic  #75                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      64: pop
      65: aload_3
      66: aload_0
      67: invokestatic  #40                 // Method closeSessionOrRegisterDeferredClose:(Lorg/grails/datastore/mapping/core/Session;Lorg/grails/datastore/mapping/core/Datastore;)V
      70: aload         4
      72: athrow
      73: return
    Exception table:
       from    to  target type
          30    37    54   any
          54    56    54   any

  public static org.grails.datastore.mapping.core.Session bindSession(org.grails.datastore.mapping.core.Session);
    Code:
       0: aload_0
       1: invokeinterface #74,  1           // InterfaceMethod org/grails/datastore/mapping/core/Session.getDatastore:()Lorg/grails/datastore/mapping/core/Datastore;
       6: new           #10                 // class org/grails/datastore/mapping/transactions/SessionHolder
       9: dup
      10: aload_0
      11: invokespecial #26                 // Method org/grails/datastore/mapping/transactions/SessionHolder."<init>":(Lorg/grails/datastore/mapping/core/Session;)V
      14: invokestatic  #28                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
      17: aload_0
      18: areturn

  public static org.grails.datastore.mapping.core.Session bindNewSession(org.grails.datastore.mapping.core.Session);
    Code:
       0: aload_0
       1: invokeinterface #74,  1           // InterfaceMethod org/grails/datastore/mapping/core/Session.getDatastore:()Lorg/grails/datastore/mapping/core/Datastore;
       6: invokestatic  #9                  // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #10                 // class org/grails/datastore/mapping/transactions/SessionHolder
      12: astore_1
      13: aload_1
      14: ifnonnull     22
      17: aload_0
      18: invokestatic  #72                 // Method bindSession:(Lorg/grails/datastore/mapping/core/Session;)Lorg/grails/datastore/mapping/core/Session;
      21: areturn
      22: aload_1
      23: aload_0
      24: invokevirtual #27                 // Method org/grails/datastore/mapping/transactions/SessionHolder.addSession:(Lorg/grails/datastore/mapping/core/Session;)V
      27: aload_0
      28: areturn

  public static void unbindSession(org.grails.datastore.mapping.core.Session);
    Code:
       0: aload_0
       1: invokeinterface #74,  1           // InterfaceMethod org/grails/datastore/mapping/core/Session.getDatastore:()Lorg/grails/datastore/mapping/core/Datastore;
       6: invokestatic  #9                  // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #10                 // class org/grails/datastore/mapping/transactions/SessionHolder
      12: astore_1
      13: aload_1
      14: ifnonnull     28
      17: getstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
      20: ldc           #78                 // String Cannot unbind session, there\'s no SessionHolder registered
      22: invokeinterface #79,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      27: return
      28: aload_1
      29: aload_0
      30: invokevirtual #34                 // Method org/grails/datastore/mapping/transactions/SessionHolder.containsSession:(Lorg/grails/datastore/mapping/core/Session;)Z
      33: ifne          47
      36: getstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
      39: ldc           #80                 // String Cannot unbind session, it\'s not registered in a SessionHolder
      41: invokeinterface #79,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      46: return
      47: aload_1
      48: invokevirtual #81                 // Method org/grails/datastore/mapping/transactions/SessionHolder.size:()I
      51: iconst_1
      52: if_icmple     63
      55: aload_1
      56: aload_0
      57: invokevirtual #82                 // Method org/grails/datastore/mapping/transactions/SessionHolder.removeSession:(Lorg/grails/datastore/mapping/core/Session;)V
      60: goto          73
      63: aload_0
      64: invokeinterface #74,  1           // InterfaceMethod org/grails/datastore/mapping/core/Session.getDatastore:()Lorg/grails/datastore/mapping/core/Datastore;
      69: invokestatic  #75                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      72: pop
      73: aload_0
      74: aload_0
      75: invokeinterface #74,  1           // InterfaceMethod org/grails/datastore/mapping/core/Session.getDatastore:()Lorg/grails/datastore/mapping/core/Datastore;
      80: invokestatic  #40                 // Method closeSessionOrRegisterDeferredClose:(Lorg/grails/datastore/mapping/core/Session;Lorg/grails/datastore/mapping/core/Datastore;)V
      83: return

  static {};
    Code:
       0: ldc_w         #83                 // class org/grails/datastore/mapping/core/DatastoreUtils
       3: invokestatic  #84                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       6: putstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
       9: new           #85                 // class org/springframework/core/NamedThreadLocal
      12: dup
      13: ldc           #86                 // String Datastore Sessions registered for deferred close
      15: invokespecial #87                 // Method org/springframework/core/NamedThreadLocal."<init>":(Ljava/lang/String;)V
      18: putstatic     #41                 // Field deferredCloseHolder:Ljava/lang/ThreadLocal;
      21: return
}
