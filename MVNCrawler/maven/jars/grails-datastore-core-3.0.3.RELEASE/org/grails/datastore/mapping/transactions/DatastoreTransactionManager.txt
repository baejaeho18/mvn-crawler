Compiled from "DatastoreTransactionManager.java"
public class org.grails.datastore.mapping.transactions.DatastoreTransactionManager extends org.springframework.transaction.support.AbstractPlatformTransactionManager {
  private org.grails.datastore.mapping.core.Datastore datastore;

  private boolean datastoreManagedSession;

  public org.grails.datastore.mapping.transactions.DatastoreTransactionManager();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/transaction/support/AbstractPlatformTransactionManager."<init>":()V
       4: return

  public void setDatastore(org.grails.datastore.mapping.core.Datastore);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field datastore:Lorg/grails/datastore/mapping/core/Datastore;
       5: return

  public org.grails.datastore.mapping.core.Datastore getDatastore();
    Code:
       0: aload_0
       1: getfield      #2                  // Field datastore:Lorg/grails/datastore/mapping/core/Datastore;
       4: ldc           #3                  // String Cannot use DatastoreTransactionManager without a datastore set!
       6: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       9: aload_0
      10: getfield      #2                  // Field datastore:Lorg/grails/datastore/mapping/core/Datastore;
      13: areturn

  public void setDatastoreManagedSession(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field datastoreManagedSession:Z
       5: return

  protected java.lang.Object doGetTransaction() throws org.springframework.transaction.TransactionException;
    Code:
       0: new           #6                  // class org/grails/datastore/mapping/transactions/TransactionObject
       3: dup
       4: invokespecial #7                  // Method org/grails/datastore/mapping/transactions/TransactionObject."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #8                  // Method getDatastore:()Lorg/grails/datastore/mapping/core/Datastore;
      12: invokestatic  #9                  // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #10                 // class org/grails/datastore/mapping/transactions/SessionHolder
      18: astore_2
      19: aload_2
      20: ifnull        79
      23: aload_0
      24: getfield      #11                 // Field logger:Lorg/apache/commons/logging/Log;
      27: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      32: ifeq          71
      35: aload_0
      36: getfield      #11                 // Field logger:Lorg/apache/commons/logging/Log;
      39: new           #13                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #15                 // String Found thread-bound Session [
      48: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_2
      52: invokevirtual #17                 // Method org/grails/datastore/mapping/transactions/SessionHolder.getSession:()Lorg/grails/datastore/mapping/core/Session;
      55: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      58: ldc           #19                 // String ] for Datastore transaction
      60: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokeinterface #21,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      71: aload_1
      72: aload_2
      73: invokevirtual #22                 // Method org/grails/datastore/mapping/transactions/TransactionObject.setSessionHolder:(Lorg/grails/datastore/mapping/transactions/SessionHolder;)V
      76: goto          176
      79: aload_0
      80: getfield      #5                  // Field datastoreManagedSession:Z
      83: ifeq          161
      86: aload_0
      87: invokevirtual #8                  // Method getDatastore:()Lorg/grails/datastore/mapping/core/Datastore;
      90: invokeinterface #23,  1           // InterfaceMethod org/grails/datastore/mapping/core/Datastore.getCurrentSession:()Lorg/grails/datastore/mapping/core/Session;
      95: astore_3
      96: aload_0
      97: getfield      #11                 // Field logger:Lorg/apache/commons/logging/Log;
     100: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     105: ifeq          141
     108: aload_0
     109: getfield      #11                 // Field logger:Lorg/apache/commons/logging/Log;
     112: new           #13                 // class java/lang/StringBuilder
     115: dup
     116: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     119: ldc           #24                 // String Found Datastore-managed Session [
     121: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: aload_3
     125: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     128: ldc           #25                 // String ] for Spring-managed transaction
     130: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     136: invokeinterface #21,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     141: aload_1
     142: aload_3
     143: invokevirtual #26                 // Method org/grails/datastore/mapping/transactions/TransactionObject.setExistingSession:(Lorg/grails/datastore/mapping/core/Session;)V
     146: goto          176
     149: astore_3
     150: new           #28                 // class org/springframework/dao/DataAccessResourceFailureException
     153: dup
     154: ldc           #29                 // String Could not obtain Datastore-managed Session for Spring-managed transaction
     156: aload_3
     157: invokespecial #30                 // Method org/springframework/dao/DataAccessResourceFailureException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     160: athrow
     161: aload_0
     162: invokevirtual #8                  // Method getDatastore:()Lorg/grails/datastore/mapping/core/Datastore;
     165: invokeinterface #31,  1           // InterfaceMethod org/grails/datastore/mapping/core/Datastore.connect:()Lorg/grails/datastore/mapping/core/Session;
     170: astore_3
     171: aload_1
     172: aload_3
     173: invokevirtual #32                 // Method org/grails/datastore/mapping/transactions/TransactionObject.setSession:(Lorg/grails/datastore/mapping/core/Session;)V
     176: aload_1
     177: areturn
    Exception table:
       from    to  target type
          86   146   149   Class org/grails/datastore/mapping/core/ConnectionNotFoundException

  protected void doBegin(java.lang.Object, org.springframework.transaction.TransactionDefinition) throws org.springframework.transaction.TransactionException;
    Code:
       0: aload_1
       1: checkcast     #6                  // class org/grails/datastore/mapping/transactions/TransactionObject
       4: astore_3
       5: aconst_null
       6: astore        4
       8: aload_3
       9: invokevirtual #33                 // Method org/grails/datastore/mapping/transactions/TransactionObject.getSessionHolder:()Lorg/grails/datastore/mapping/transactions/SessionHolder;
      12: invokevirtual #17                 // Method org/grails/datastore/mapping/transactions/SessionHolder.getSession:()Lorg/grails/datastore/mapping/core/Session;
      15: astore        4
      17: aload_2
      18: invokeinterface #34,  1           // InterfaceMethod org/springframework/transaction/TransactionDefinition.isReadOnly:()Z
      23: ifeq          36
      26: aload         4
      28: getstatic     #35                 // Field javax/persistence/FlushModeType.COMMIT:Ljavax/persistence/FlushModeType;
      31: invokeinterface #36,  2           // InterfaceMethod org/grails/datastore/mapping/core/Session.setFlushMode:(Ljavax/persistence/FlushModeType;)V
      36: aload         4
      38: invokeinterface #37,  1           // InterfaceMethod org/grails/datastore/mapping/core/Session.beginTransaction:()Lorg/grails/datastore/mapping/transactions/Transaction;
      43: astore        5
      45: aload_0
      46: aload_2
      47: invokevirtual #38                 // Method determineTimeout:(Lorg/springframework/transaction/TransactionDefinition;)I
      50: istore        6
      52: iload         6
      54: iconst_m1
      55: if_icmpeq     67
      58: aload         5
      60: iload         6
      62: invokeinterface #39,  2           // InterfaceMethod org/grails/datastore/mapping/transactions/Transaction.setTimeout:(I)V
      67: aload_3
      68: aload         5
      70: invokevirtual #40                 // Method org/grails/datastore/mapping/transactions/TransactionObject.setTransaction:(Lorg/grails/datastore/mapping/transactions/Transaction;)V
      73: aload_3
      74: invokevirtual #41                 // Method org/grails/datastore/mapping/transactions/TransactionObject.isNewSessionHolder:()Z
      77: ifeq          91
      80: aload_0
      81: invokevirtual #8                  // Method getDatastore:()Lorg/grails/datastore/mapping/core/Datastore;
      84: aload_3
      85: invokevirtual #33                 // Method org/grails/datastore/mapping/transactions/TransactionObject.getSessionHolder:()Lorg/grails/datastore/mapping/transactions/SessionHolder;
      88: invokestatic  #42                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
      91: aload_3
      92: invokevirtual #33                 // Method org/grails/datastore/mapping/transactions/TransactionObject.getSessionHolder:()Lorg/grails/datastore/mapping/transactions/SessionHolder;
      95: iconst_1
      96: invokevirtual #43                 // Method org/grails/datastore/mapping/transactions/SessionHolder.setSynchronizedWithTransaction:(Z)V
      99: goto          196
     102: astore        5
     104: aload_3
     105: invokevirtual #45                 // Method org/grails/datastore/mapping/transactions/TransactionObject.isNewSession:()Z
     108: ifeq          184
     111: aload         4
     113: ifnull        143
     116: aload         4
     118: invokeinterface #46,  1           // InterfaceMethod org/grails/datastore/mapping/core/Session.getTransaction:()Lorg/grails/datastore/mapping/transactions/Transaction;
     123: invokeinterface #47,  1           // InterfaceMethod org/grails/datastore/mapping/transactions/Transaction.isActive:()Z
     128: ifeq          143
     131: aload         4
     133: invokeinterface #46,  1           // InterfaceMethod org/grails/datastore/mapping/core/Session.getTransaction:()Lorg/grails/datastore/mapping/transactions/Transaction;
     138: invokeinterface #48,  1           // InterfaceMethod org/grails/datastore/mapping/transactions/Transaction.rollback:()V
     143: aload         4
     145: invokestatic  #49                 // Method org/grails/datastore/mapping/core/DatastoreUtils.closeSession:(Lorg/grails/datastore/mapping/core/Session;)V
     148: goto          184
     151: astore        6
     153: aload_0
     154: getfield      #11                 // Field logger:Lorg/apache/commons/logging/Log;
     157: ldc           #51                 // String Could not rollback Session after failed transaction begin
     159: aload         5
     161: invokeinterface #52,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     166: aload         4
     168: invokestatic  #49                 // Method org/grails/datastore/mapping/core/DatastoreUtils.closeSession:(Lorg/grails/datastore/mapping/core/Session;)V
     171: goto          184
     174: astore        7
     176: aload         4
     178: invokestatic  #49                 // Method org/grails/datastore/mapping/core/DatastoreUtils.closeSession:(Lorg/grails/datastore/mapping/core/Session;)V
     181: aload         7
     183: athrow
     184: new           #53                 // class org/springframework/transaction/CannotCreateTransactionException
     187: dup
     188: ldc           #54                 // String Could not open Datastore Session for transaction
     190: aload         5
     192: invokespecial #55                 // Method org/springframework/transaction/CannotCreateTransactionException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     195: athrow
     196: return
    Exception table:
       from    to  target type
           8    99   102   Class java/lang/Exception
         111   143   151   Class java/lang/Throwable
         111   143   174   any
         151   166   174   any
         174   176   174   any

  protected void doCommit(org.springframework.transaction.support.DefaultTransactionStatus) throws org.springframework.transaction.TransactionException;
    Code:
       0: aload_1
       1: invokevirtual #56                 // Method org/springframework/transaction/support/DefaultTransactionStatus.getTransaction:()Ljava/lang/Object;
       4: checkcast     #6                  // class org/grails/datastore/mapping/transactions/TransactionObject
       7: astore_2
       8: aload_2
       9: invokevirtual #33                 // Method org/grails/datastore/mapping/transactions/TransactionObject.getSessionHolder:()Lorg/grails/datastore/mapping/transactions/SessionHolder;
      12: astore_3
      13: aload_1
      14: invokevirtual #57                 // Method org/springframework/transaction/support/DefaultTransactionStatus.isDebug:()Z
      17: ifeq          56
      20: aload_0
      21: getfield      #11                 // Field logger:Lorg/apache/commons/logging/Log;
      24: new           #13                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #58                 // String Committing Datastore transaction on Session [
      33: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_3
      37: invokevirtual #17                 // Method org/grails/datastore/mapping/transactions/SessionHolder.getSession:()Lorg/grails/datastore/mapping/core/Session;
      40: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #59                 // String ]
      45: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokeinterface #21,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      56: aload_3
      57: invokevirtual #17                 // Method org/grails/datastore/mapping/transactions/SessionHolder.getSession:()Lorg/grails/datastore/mapping/core/Session;
      60: ifnull        72
      63: aload_3
      64: invokevirtual #17                 // Method org/grails/datastore/mapping/transactions/SessionHolder.getSession:()Lorg/grails/datastore/mapping/core/Session;
      67: invokeinterface #60,  1           // InterfaceMethod org/grails/datastore/mapping/core/Session.flush:()V
      72: aload_2
      73: invokevirtual #61                 // Method org/grails/datastore/mapping/transactions/TransactionObject.getTransaction:()Lorg/grails/datastore/mapping/transactions/Transaction;
      76: invokeinterface #62,  1           // InterfaceMethod org/grails/datastore/mapping/transactions/Transaction.commit:()V
      81: goto          98
      84: astore        4
      86: new           #64                 // class org/springframework/transaction/TransactionSystemException
      89: dup
      90: ldc           #65                 // String Could not commit Datastore transaction
      92: aload         4
      94: invokespecial #66                 // Method org/springframework/transaction/TransactionSystemException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      97: athrow
      98: return
    Exception table:
       from    to  target type
          56    81    84   Class org/springframework/dao/DataAccessException

  protected void doRollback(org.springframework.transaction.support.DefaultTransactionStatus) throws org.springframework.transaction.TransactionException;
    Code:
       0: aload_1
       1: invokevirtual #56                 // Method org/springframework/transaction/support/DefaultTransactionStatus.getTransaction:()Ljava/lang/Object;
       4: checkcast     #6                  // class org/grails/datastore/mapping/transactions/TransactionObject
       7: astore_2
       8: aload_2
       9: invokevirtual #33                 // Method org/grails/datastore/mapping/transactions/TransactionObject.getSessionHolder:()Lorg/grails/datastore/mapping/transactions/SessionHolder;
      12: astore_3
      13: aload_1
      14: invokevirtual #57                 // Method org/springframework/transaction/support/DefaultTransactionStatus.isDebug:()Z
      17: ifeq          56
      20: aload_0
      21: getfield      #11                 // Field logger:Lorg/apache/commons/logging/Log;
      24: new           #13                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #67                 // String Rolling back Datastore transaction on Session [
      33: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_3
      37: invokevirtual #17                 // Method org/grails/datastore/mapping/transactions/SessionHolder.getSession:()Lorg/grails/datastore/mapping/core/Session;
      40: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #59                 // String ]
      45: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokeinterface #21,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      56: aload_2
      57: invokevirtual #61                 // Method org/grails/datastore/mapping/transactions/TransactionObject.getTransaction:()Lorg/grails/datastore/mapping/transactions/Transaction;
      60: invokeinterface #48,  1           // InterfaceMethod org/grails/datastore/mapping/transactions/Transaction.rollback:()V
      65: aload_3
      66: invokevirtual #17                 // Method org/grails/datastore/mapping/transactions/SessionHolder.getSession:()Lorg/grails/datastore/mapping/core/Session;
      69: ifnull        119
      72: aload_3
      73: invokevirtual #17                 // Method org/grails/datastore/mapping/transactions/SessionHolder.getSession:()Lorg/grails/datastore/mapping/core/Session;
      76: invokeinterface #68,  1           // InterfaceMethod org/grails/datastore/mapping/core/Session.clear:()V
      81: goto          119
      84: astore        4
      86: new           #64                 // class org/springframework/transaction/TransactionSystemException
      89: dup
      90: ldc           #69                 // String Could not rollback Datastore transaction
      92: aload         4
      94: invokespecial #66                 // Method org/springframework/transaction/TransactionSystemException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      97: athrow
      98: astore        5
     100: aload_3
     101: invokevirtual #17                 // Method org/grails/datastore/mapping/transactions/SessionHolder.getSession:()Lorg/grails/datastore/mapping/core/Session;
     104: ifnull        116
     107: aload_3
     108: invokevirtual #17                 // Method org/grails/datastore/mapping/transactions/SessionHolder.getSession:()Lorg/grails/datastore/mapping/core/Session;
     111: invokeinterface #68,  1           // InterfaceMethod org/grails/datastore/mapping/core/Session.clear:()V
     116: aload         5
     118: athrow
     119: return
    Exception table:
       from    to  target type
          56    65    84   Class org/springframework/dao/DataAccessException
          56    65    98   any
          84   100    98   any

  protected void doCleanupAfterCompletion(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #6                  // class org/grails/datastore/mapping/transactions/TransactionObject
       4: astore_2
       5: aload_2
       6: invokevirtual #41                 // Method org/grails/datastore/mapping/transactions/TransactionObject.isNewSessionHolder:()Z
       9: ifeq          22
      12: aload_2
      13: invokevirtual #33                 // Method org/grails/datastore/mapping/transactions/TransactionObject.getSessionHolder:()Lorg/grails/datastore/mapping/transactions/SessionHolder;
      16: invokevirtual #17                 // Method org/grails/datastore/mapping/transactions/SessionHolder.getSession:()Lorg/grails/datastore/mapping/core/Session;
      19: invokestatic  #49                 // Method org/grails/datastore/mapping/core/DatastoreUtils.closeSession:(Lorg/grails/datastore/mapping/core/Session;)V
      22: aload_2
      23: invokevirtual #33                 // Method org/grails/datastore/mapping/transactions/TransactionObject.getSessionHolder:()Lorg/grails/datastore/mapping/transactions/SessionHolder;
      26: iconst_0
      27: invokevirtual #43                 // Method org/grails/datastore/mapping/transactions/SessionHolder.setSynchronizedWithTransaction:(Z)V
      30: return
}
