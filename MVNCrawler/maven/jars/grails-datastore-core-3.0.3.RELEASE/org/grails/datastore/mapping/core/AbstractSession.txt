Compiled from "AbstractSession.java"
public abstract class org.grails.datastore.mapping.core.AbstractSession<N> extends org.grails.datastore.mapping.core.AbstractAttributeStoringSession implements org.grails.datastore.mapping.core.SessionImplementor {
  private static final com.googlecode.concurrentlinkedhashmap.EvictionListener<org.grails.datastore.mapping.model.PersistentEntity, java.util.Collection<org.grails.datastore.mapping.core.impl.PendingInsert>> EXCEPTION_THROWING_INSERT_LISTENER;

  private static final com.googlecode.concurrentlinkedhashmap.EvictionListener<org.grails.datastore.mapping.model.PersistentEntity, java.util.Collection<org.grails.datastore.mapping.core.impl.PendingUpdate>> EXCEPTION_THROWING_UPDATE_LISTENER;

  protected java.util.Map<java.lang.Class, org.grails.datastore.mapping.engine.Persister> persisters;

  private org.grails.datastore.mapping.model.MappingContext mappingContext;

  protected java.util.concurrent.ConcurrentLinkedQueue lockedObjects;

  private org.grails.datastore.mapping.transactions.Transaction transaction;

  private org.grails.datastore.mapping.core.Datastore datastore;

  private javax.persistence.FlushModeType flushMode;

  protected java.util.Map<java.lang.Class, java.util.Map<java.io.Serializable, java.lang.Object>> firstLevelCache;

  protected java.util.Map<java.lang.Class, java.util.Map<java.io.Serializable, java.lang.Object>> firstLevelEntryCache;

  protected java.util.Map<java.lang.Class, java.util.Map<java.io.Serializable, java.lang.Object>> firstLevelEntryCacheDirtyCheck;

  protected java.util.Map<org.grails.datastore.mapping.core.AbstractSession$CollectionKey, java.util.Collection> firstLevelCollectionCache;

  protected org.grails.datastore.mapping.cache.TPCacheAdapterRepository cacheAdapterRepository;

  private java.util.Map<org.grails.datastore.mapping.model.PersistentEntity, java.util.Collection<org.grails.datastore.mapping.core.impl.PendingInsert>> pendingInserts;

  private java.util.Map<org.grails.datastore.mapping.model.PersistentEntity, java.util.Collection<org.grails.datastore.mapping.core.impl.PendingUpdate>> pendingUpdates;

  protected java.util.Collection<java.lang.Runnable> pendingDeletes;

  protected java.util.Collection<java.lang.Runnable> postFlushOperations;

  private boolean exceptionOccurred;

  protected org.springframework.context.ApplicationEventPublisher publisher;

  protected boolean stateless;

  public org.grails.datastore.mapping.core.AbstractSession(org.grails.datastore.mapping.core.Datastore, org.grails.datastore.mapping.model.MappingContext, org.springframework.context.ApplicationEventPublisher);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_0
       5: invokespecial #1                  // Method "<init>":(Lorg/grails/datastore/mapping/core/Datastore;Lorg/grails/datastore/mapping/model/MappingContext;Lorg/springframework/context/ApplicationEventPublisher;Z)V
       8: return

  public org.grails.datastore.mapping.core.AbstractSession(org.grails.datastore.mapping.core.Datastore, org.grails.datastore.mapping.model.MappingContext, org.springframework.context.ApplicationEventPublisher, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/grails/datastore/mapping/core/AbstractAttributeStoringSession."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #5                  // Field persisters:Ljava/util/Map;
      15: aload_0
      16: new           #6                  // class java/util/concurrent/ConcurrentLinkedQueue
      19: dup
      20: invokespecial #7                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      23: putfield      #8                  // Field lockedObjects:Ljava/util/concurrent/ConcurrentLinkedQueue;
      26: aload_0
      27: getstatic     #9                  // Field javax/persistence/FlushModeType.AUTO:Ljavax/persistence/FlushModeType;
      30: putfield      #10                 // Field flushMode:Ljavax/persistence/FlushModeType;
      33: aload_0
      34: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      37: dup
      38: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      41: putfield      #11                 // Field firstLevelCache:Ljava/util/Map;
      44: aload_0
      45: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      48: dup
      49: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      52: putfield      #12                 // Field firstLevelEntryCache:Ljava/util/Map;
      55: aload_0
      56: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      59: dup
      60: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      63: putfield      #13                 // Field firstLevelEntryCacheDirtyCheck:Ljava/util/Map;
      66: aload_0
      67: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      70: dup
      71: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      74: putfield      #14                 // Field firstLevelCollectionCache:Ljava/util/Map;
      77: aload_0
      78: new           #15                 // class com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Builder
      81: dup
      82: invokespecial #16                 // Method com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Builder."<init>":()V
      85: getstatic     #17                 // Field EXCEPTION_THROWING_INSERT_LISTENER:Lcom/googlecode/concurrentlinkedhashmap/EvictionListener;
      88: invokevirtual #18                 // Method com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Builder.listener:(Lcom/googlecode/concurrentlinkedhashmap/EvictionListener;)Lcom/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Builder;
      91: ldc2_w        #19                 // long 5000l
      94: invokevirtual #21                 // Method com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Builder.maximumWeightedCapacity:(J)Lcom/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Builder;
      97: invokevirtual #22                 // Method com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Builder.build:()Lcom/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap;
     100: putfield      #23                 // Field pendingInserts:Ljava/util/Map;
     103: aload_0
     104: new           #15                 // class com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Builder
     107: dup
     108: invokespecial #16                 // Method com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Builder."<init>":()V
     111: getstatic     #24                 // Field EXCEPTION_THROWING_UPDATE_LISTENER:Lcom/googlecode/concurrentlinkedhashmap/EvictionListener;
     114: invokevirtual #18                 // Method com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Builder.listener:(Lcom/googlecode/concurrentlinkedhashmap/EvictionListener;)Lcom/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Builder;
     117: ldc2_w        #19                 // long 5000l
     120: invokevirtual #21                 // Method com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Builder.maximumWeightedCapacity:(J)Lcom/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Builder;
     123: invokevirtual #22                 // Method com/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap$Builder.build:()Lcom/googlecode/concurrentlinkedhashmap/ConcurrentLinkedHashMap;
     126: putfield      #25                 // Field pendingUpdates:Ljava/util/Map;
     129: aload_0
     130: new           #6                  // class java/util/concurrent/ConcurrentLinkedQueue
     133: dup
     134: invokespecial #7                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
     137: putfield      #26                 // Field pendingDeletes:Ljava/util/Collection;
     140: aload_0
     141: new           #6                  // class java/util/concurrent/ConcurrentLinkedQueue
     144: dup
     145: invokespecial #7                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
     148: putfield      #27                 // Field postFlushOperations:Ljava/util/Collection;
     151: aload_0
     152: iconst_0
     153: putfield      #28                 // Field stateless:Z
     156: aload_0
     157: aload_2
     158: putfield      #29                 // Field mappingContext:Lorg/grails/datastore/mapping/model/MappingContext;
     161: aload_0
     162: aload_1
     163: putfield      #30                 // Field datastore:Lorg/grails/datastore/mapping/core/Datastore;
     166: aload_0
     167: aload_3
     168: putfield      #31                 // Field publisher:Lorg/springframework/context/ApplicationEventPublisher;
     171: aload_0
     172: iload         4
     174: putfield      #28                 // Field stateless:Z
     177: return

  public org.grails.datastore.mapping.core.AbstractSession(org.grails.datastore.mapping.core.Datastore, org.grails.datastore.mapping.model.MappingContext, org.springframework.context.ApplicationEventPublisher, org.grails.datastore.mapping.cache.TPCacheAdapterRepository);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_0
       5: invokespecial #1                  // Method "<init>":(Lorg/grails/datastore/mapping/core/Datastore;Lorg/grails/datastore/mapping/model/MappingContext;Lorg/springframework/context/ApplicationEventPublisher;Z)V
       8: aload_0
       9: aload         4
      11: putfield      #32                 // Field cacheAdapterRepository:Lorg/grails/datastore/mapping/cache/TPCacheAdapterRepository;
      14: return

  public org.grails.datastore.mapping.core.AbstractSession(org.grails.datastore.mapping.core.Datastore, org.grails.datastore.mapping.model.MappingContext, org.springframework.context.ApplicationEventPublisher, org.grails.datastore.mapping.cache.TPCacheAdapterRepository, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         5
       6: invokespecial #1                  // Method "<init>":(Lorg/grails/datastore/mapping/core/Datastore;Lorg/grails/datastore/mapping/model/MappingContext;Lorg/springframework/context/ApplicationEventPublisher;Z)V
       9: aload_0
      10: aload         4
      12: putfield      #32                 // Field cacheAdapterRepository:Lorg/grails/datastore/mapping/cache/TPCacheAdapterRepository;
      15: return

  public boolean isStateless();
    Code:
       0: aload_0
       1: getfield      #28                 // Field stateless:Z
       4: ireturn

  public void addPostFlushOperation(java.lang.Runnable);
    Code:
       0: aload_1
       1: ifnull        28
       4: aload_0
       5: getfield      #27                 // Field postFlushOperations:Ljava/util/Collection;
       8: aload_1
       9: invokeinterface #33,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      14: ifne          28
      17: aload_0
      18: getfield      #27                 // Field postFlushOperations:Ljava/util/Collection;
      21: aload_1
      22: invokeinterface #34,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      27: pop
      28: return

  public void addPendingInsert(org.grails.datastore.mapping.core.impl.PendingInsert);
    Code:
       0: aload_0
       1: getfield      #23                 // Field pendingInserts:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #35,  1           // InterfaceMethod org/grails/datastore/mapping/core/impl/PendingInsert.getEntity:()Lorg/grails/datastore/mapping/model/PersistentEntity;
      10: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #37                 // class java/util/Collection
      18: astore_2
      19: aload_2
      20: ifnonnull     48
      23: new           #6                  // class java/util/concurrent/ConcurrentLinkedQueue
      26: dup
      27: invokespecial #7                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      30: astore_2
      31: aload_0
      32: getfield      #23                 // Field pendingInserts:Ljava/util/Map;
      35: aload_1
      36: invokeinterface #35,  1           // InterfaceMethod org/grails/datastore/mapping/core/impl/PendingInsert.getEntity:()Lorg/grails/datastore/mapping/model/PersistentEntity;
      41: aload_2
      42: invokeinterface #38,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: aload_2
      49: aload_1
      50: invokeinterface #34,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      55: pop
      56: return

  public void addPendingUpdate(org.grails.datastore.mapping.core.impl.PendingUpdate);
    Code:
       0: aload_0
       1: getfield      #25                 // Field pendingUpdates:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #39,  1           // InterfaceMethod org/grails/datastore/mapping/core/impl/PendingUpdate.getEntity:()Lorg/grails/datastore/mapping/model/PersistentEntity;
      10: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #37                 // class java/util/Collection
      18: astore_2
      19: aload_2
      20: ifnonnull     48
      23: new           #6                  // class java/util/concurrent/ConcurrentLinkedQueue
      26: dup
      27: invokespecial #7                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      30: astore_2
      31: aload_0
      32: getfield      #25                 // Field pendingUpdates:Ljava/util/Map;
      35: aload_1
      36: invokeinterface #39,  1           // InterfaceMethod org/grails/datastore/mapping/core/impl/PendingUpdate.getEntity:()Lorg/grails/datastore/mapping/model/PersistentEntity;
      41: aload_2
      42: invokeinterface #38,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: aload_2
      49: aload_1
      50: invokeinterface #34,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      55: pop
      56: return

  public java.lang.Object getCachedEntry(org.grails.datastore.mapping.model.PersistentEntity, java.io.Serializable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method isStateless:(Lorg/grails/datastore/mapping/model/PersistentEntity;)Z
       5: ifeq          10
       8: aconst_null
       9: areturn
      10: aload_0
      11: aload_1
      12: aload_2
      13: iconst_0
      14: invokevirtual #41                 // Method getCachedEntry:(Lorg/grails/datastore/mapping/model/PersistentEntity;Ljava/io/Serializable;Z)Ljava/lang/Object;
      17: areturn

  public java.lang.Object getCachedEntry(org.grails.datastore.mapping.model.PersistentEntity, java.io.Serializable, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method isStateless:(Lorg/grails/datastore/mapping/model/PersistentEntity;)Z
       5: ifeq          10
       8: aconst_null
       9: areturn
      10: aload_2
      11: ifnonnull     16
      14: aconst_null
      15: areturn
      16: aload_0
      17: aload_1
      18: invokeinterface #42,  1           // InterfaceMethod org/grails/datastore/mapping/model/PersistentEntity.getJavaClass:()Ljava/lang/Class;
      23: iload_3
      24: invokespecial #43                 // Method getEntryCache:(Ljava/lang/Class;Z)Ljava/util/Map;
      27: aload_2
      28: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      33: areturn

  public void cacheEntry(org.grails.datastore.mapping.model.PersistentEntity, java.io.Serializable, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method isStateless:(Lorg/grails/datastore/mapping/model/PersistentEntity;)Z
       5: ifeq          9
       8: return
       9: aload_2
      10: ifnull        17
      13: aload_3
      14: ifnonnull     18
      17: return
      18: aload_0
      19: aload_2
      20: aload_3
      21: aload_0
      22: aload_1
      23: invokeinterface #42,  1           // InterfaceMethod org/grails/datastore/mapping/model/PersistentEntity.getJavaClass:()Ljava/lang/Class;
      28: iconst_1
      29: invokespecial #43                 // Method getEntryCache:(Ljava/lang/Class;Z)Ljava/util/Map;
      32: iconst_1
      33: invokevirtual #44                 // Method cacheEntry:(Ljava/io/Serializable;Ljava/lang/Object;Ljava/util/Map;Z)V
      36: aload_0
      37: aload_2
      38: aload_3
      39: aload_0
      40: aload_1
      41: invokeinterface #42,  1           // InterfaceMethod org/grails/datastore/mapping/model/PersistentEntity.getJavaClass:()Ljava/lang/Class;
      46: iconst_0
      47: invokespecial #43                 // Method getEntryCache:(Ljava/lang/Class;Z)Ljava/util/Map;
      50: iconst_0
      51: invokevirtual #44                 // Method cacheEntry:(Ljava/io/Serializable;Ljava/lang/Object;Ljava/util/Map;Z)V
      54: return

  public boolean isStateless(org.grails.datastore.mapping.model.PersistentEntity);
    Code:
       0: aload_1
       1: ifnull        18
       4: aload_1
       5: invokeinterface #45,  1           // InterfaceMethod org/grails/datastore/mapping/model/PersistentEntity.getMapping:()Lorg/grails/datastore/mapping/model/ClassMapping;
      10: invokeinterface #46,  1           // InterfaceMethod org/grails/datastore/mapping/model/ClassMapping.getMappedForm:()Lorg/grails/datastore/mapping/config/Entity;
      15: goto          19
      18: aconst_null
      19: astore_2
      20: aload_0
      21: invokevirtual #47                 // Method isStateless:()Z
      24: ifne          38
      27: aload_2
      28: ifnull        42
      31: aload_2
      32: invokevirtual #48                 // Method org/grails/datastore/mapping/config/Entity.isStateless:()Z
      35: ifeq          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: ireturn

  protected void cacheEntry(java.io.Serializable, java.lang.Object, java.util.Map<java.io.Serializable, java.lang.Object>, boolean);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method isStateless:()Z
       4: ifeq          8
       7: return
       8: aload_3
       9: aload_1
      10: aload_2
      11: invokeinterface #38,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      16: pop
      17: return

  public java.util.Collection getCachedCollection(org.grails.datastore.mapping.model.PersistentEntity, java.io.Serializable, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method isStateless:(Lorg/grails/datastore/mapping/model/PersistentEntity;)Z
       5: ifeq          10
       8: aconst_null
       9: areturn
      10: aload_2
      11: ifnull        18
      14: aload_3
      15: ifnonnull     20
      18: aconst_null
      19: areturn
      20: aload_0
      21: getfield      #14                 // Field firstLevelCollectionCache:Ljava/util/Map;
      24: new           #49                 // class org/grails/datastore/mapping/core/AbstractSession$CollectionKey
      27: dup
      28: aload_1
      29: invokeinterface #42,  1           // InterfaceMethod org/grails/datastore/mapping/model/PersistentEntity.getJavaClass:()Ljava/lang/Class;
      34: aload_2
      35: aload_3
      36: aconst_null
      37: invokespecial #50                 // Method org/grails/datastore/mapping/core/AbstractSession$CollectionKey."<init>":(Ljava/lang/Class;Ljava/io/Serializable;Ljava/lang/String;Lorg/grails/datastore/mapping/core/AbstractSession$1;)V
      40: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #37                 // class java/util/Collection
      48: areturn

  public void cacheCollection(org.grails.datastore.mapping.model.PersistentEntity, java.io.Serializable, java.util.Collection, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method isStateless:(Lorg/grails/datastore/mapping/model/PersistentEntity;)Z
       5: ifeq          9
       8: return
       9: aload_2
      10: ifnull        22
      13: aload_3
      14: ifnull        22
      17: aload         4
      19: ifnonnull     23
      22: return
      23: aload_0
      24: getfield      #14                 // Field firstLevelCollectionCache:Ljava/util/Map;
      27: new           #49                 // class org/grails/datastore/mapping/core/AbstractSession$CollectionKey
      30: dup
      31: aload_1
      32: invokeinterface #42,  1           // InterfaceMethod org/grails/datastore/mapping/model/PersistentEntity.getJavaClass:()Ljava/lang/Class;
      37: aload_2
      38: aload         4
      40: aconst_null
      41: invokespecial #50                 // Method org/grails/datastore/mapping/core/AbstractSession$CollectionKey."<init>":(Ljava/lang/Class;Ljava/io/Serializable;Ljava/lang/String;Lorg/grails/datastore/mapping/core/AbstractSession$1;)V
      44: aload_3
      45: invokeinterface #38,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: return

  public java.util.Map<org.grails.datastore.mapping.model.PersistentEntity, java.util.Collection<org.grails.datastore.mapping.core.impl.PendingInsert>> getPendingInserts();
    Code:
       0: aload_0
       1: getfield      #23                 // Field pendingInserts:Ljava/util/Map;
       4: areturn

  public java.util.Map<org.grails.datastore.mapping.model.PersistentEntity, java.util.Collection<org.grails.datastore.mapping.core.impl.PendingUpdate>> getPendingUpdates();
    Code:
       0: aload_0
       1: getfield      #25                 // Field pendingUpdates:Ljava/util/Map;
       4: areturn

  public java.util.Collection<java.lang.Runnable> getPendingDeletes();
    Code:
       0: aload_0
       1: getfield      #26                 // Field pendingDeletes:Ljava/util/Collection;
       4: areturn

  public javax.persistence.FlushModeType getFlushMode();
    Code:
       0: aload_0
       1: getfield      #10                 // Field flushMode:Ljavax/persistence/FlushModeType;
       4: areturn

  public void setFlushMode(javax.persistence.FlushModeType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field flushMode:Ljavax/persistence/FlushModeType;
       5: return

  public org.grails.datastore.mapping.core.Datastore getDatastore();
    Code:
       0: aload_0
       1: getfield      #30                 // Field datastore:Lorg/grails/datastore/mapping/core/Datastore;
       4: areturn

  public org.grails.datastore.mapping.model.MappingContext getMappingContext();
    Code:
       0: aload_0
       1: getfield      #29                 // Field mappingContext:Lorg/grails/datastore/mapping/model/MappingContext;
       4: areturn

  public void flush();
    Code:
       0: aload_0
       1: getfield      #51                 // Field exceptionOccurred:Z
       4: ifeq          17
       7: new           #52                 // class org/springframework/dao/InvalidDataAccessResourceUsageException
      10: dup
      11: ldc           #53                 // String Do not flush() the Session after an exception occurs
      13: invokespecial #54                 // Method org/springframework/dao/InvalidDataAccessResourceUsageException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokespecial #55                 // Method hasUpdates:()Z
      21: istore_1
      22: iload_1
      23: ifne          27
      26: return
      27: aload_0
      28: aload_0
      29: getfield      #23                 // Field pendingInserts:Ljava/util/Map;
      32: invokevirtual #56                 // Method flushPendingInserts:(Ljava/util/Map;)V
      35: aload_0
      36: getfield      #23                 // Field pendingInserts:Ljava/util/Map;
      39: invokeinterface #57,  1           // InterfaceMethod java/util/Map.clear:()V
      44: aload_0
      45: aload_0
      46: getfield      #25                 // Field pendingUpdates:Ljava/util/Map;
      49: invokevirtual #58                 // Method flushPendingUpdates:(Ljava/util/Map;)V
      52: aload_0
      53: getfield      #25                 // Field pendingUpdates:Ljava/util/Map;
      56: invokeinterface #57,  1           // InterfaceMethod java/util/Map.clear:()V
      61: aload_0
      62: aload_0
      63: getfield      #26                 // Field pendingDeletes:Ljava/util/Collection;
      66: invokespecial #59                 // Method executePendings:(Ljava/util/Collection;)V
      69: aload_0
      70: invokespecial #60                 // Method handleDirtyCollections:()V
      73: aload_0
      74: getfield      #14                 // Field firstLevelCollectionCache:Ljava/util/Map;
      77: invokeinterface #57,  1           // InterfaceMethod java/util/Map.clear:()V
      82: aload_0
      83: aload_0
      84: getfield      #27                 // Field postFlushOperations:Ljava/util/Collection;
      87: invokespecial #59                 // Method executePendings:(Ljava/util/Collection;)V
      90: aload_0
      91: iload_1
      92: invokevirtual #61                 // Method postFlush:(Z)V
      95: return

  public boolean isDirty(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: aload_1
       8: invokevirtual #62                 // Method getPersister:(Ljava/lang/Object;)Lorg/grails/datastore/mapping/engine/Persister;
      11: checkcast     #63                 // class org/grails/datastore/mapping/engine/EntityPersister
      14: astore_2
      15: aload_2
      16: ifnonnull     21
      19: iconst_0
      20: ireturn
      21: aload_1
      22: instanceof    #64                 // class org/grails/datastore/mapping/dirty/checking/DirtyCheckable
      25: ifeq          58
      28: aload_1
      29: checkcast     #64                 // class org/grails/datastore/mapping/dirty/checking/DirtyCheckable
      32: invokeinterface #65,  1           // InterfaceMethod org/grails/datastore/mapping/dirty/checking/DirtyCheckable.hasChanged:()Z
      37: ifne          52
      40: aload_0
      41: aload_2
      42: invokevirtual #66                 // Method org/grails/datastore/mapping/engine/EntityPersister.getPersistentEntity:()Lorg/grails/datastore/mapping/model/PersistentEntity;
      45: aload_1
      46: invokestatic  #67                 // Method org/grails/datastore/mapping/dirty/checking/DirtyCheckingSupport.areAssociationsDirty:(Lorg/grails/datastore/mapping/core/Session;Lorg/grails/datastore/mapping/model/PersistentEntity;Ljava/lang/Object;)Z
      49: ifeq          56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: ireturn
      58: aload_2
      59: instanceof    #68                 // class org/grails/datastore/mapping/engine/NativeEntryEntityPersister
      62: ifne          67
      65: iconst_0
      66: ireturn
      67: aload_2
      68: aload_1
      69: invokevirtual #69                 // Method org/grails/datastore/mapping/engine/EntityPersister.getObjectIdentifier:(Ljava/lang/Object;)Ljava/io/Serializable;
      72: astore_3
      73: aload_3
      74: ifnonnull     79
      77: iconst_0
      78: ireturn
      79: aload_0
      80: aload_2
      81: invokevirtual #66                 // Method org/grails/datastore/mapping/engine/EntityPersister.getPersistentEntity:()Lorg/grails/datastore/mapping/model/PersistentEntity;
      84: aload_3
      85: iconst_0
      86: invokevirtual #41                 // Method getCachedEntry:(Lorg/grails/datastore/mapping/model/PersistentEntity;Ljava/io/Serializable;Z)Ljava/lang/Object;
      89: astore        4
      91: aload_0
      92: aload_1
      93: invokevirtual #70                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      96: aload_3
      97: invokevirtual #71                 // Method getCachedInstance:(Ljava/lang/Class;Ljava/io/Serializable;)Ljava/lang/Object;
     100: astore        5
     102: aload_1
     103: aload         5
     105: if_acmpne     121
     108: aload_2
     109: checkcast     #68                 // class org/grails/datastore/mapping/engine/NativeEntryEntityPersister
     112: aload_1
     113: aload         4
     115: invokevirtual #72                 // Method org/grails/datastore/mapping/engine/NativeEntryEntityPersister.isDirty:(Ljava/lang/Object;Ljava/lang/Object;)Z
     118: ifeq          125
     121: iconst_1
     122: goto          126
     125: iconst_0
     126: ireturn

  public java.io.Serializable getObjectIdentifier(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #62                 // Method getPersister:(Ljava/lang/Object;)Lorg/grails/datastore/mapping/engine/Persister;
       5: astore_2
       6: aload_2
       7: ifnull        18
      10: aload_2
      11: aload_1
      12: invokeinterface #73,  2           // InterfaceMethod org/grails/datastore/mapping/engine/Persister.getObjectIdentifier:(Ljava/lang/Object;)Ljava/io/Serializable;
      17: areturn
      18: aconst_null
      19: areturn

  private void handleDirtyCollections();
    Code:
       0: aload_0
       1: getfield      #14                 // Field firstLevelCollectionCache:Ljava/util/Map;
       4: invokeinterface #74,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #75,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          116
      24: aload_1
      25: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #78                 // class java/util/Map$Entry
      33: astore_2
      34: aload_2
      35: invokeinterface #79,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      40: checkcast     #37                 // class java/util/Collection
      43: astore_3
      44: aload_3
      45: instanceof    #80                 // class org/grails/datastore/mapping/collection/PersistentCollection
      48: ifne          54
      51: goto          15
      54: aload_3
      55: checkcast     #80                 // class org/grails/datastore/mapping/collection/PersistentCollection
      58: astore        4
      60: aload         4
      62: invokeinterface #81,  1           // InterfaceMethod org/grails/datastore/mapping/collection/PersistentCollection.isDirty:()Z
      67: ifne          73
      70: goto          15
      73: aload_2
      74: invokeinterface #82,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      79: checkcast     #49                 // class org/grails/datastore/mapping/core/AbstractSession$CollectionKey
      82: astore        5
      84: aload_0
      85: aload         5
      87: getfield      #83                 // Field org/grails/datastore/mapping/core/AbstractSession$CollectionKey.clazz:Ljava/lang/Class;
      90: invokespecial #84                 // Method getInstanceCache:(Ljava/lang/Class;)Ljava/util/Map;
      93: aload         5
      95: getfield      #85                 // Field org/grails/datastore/mapping/core/AbstractSession$CollectionKey.key:Ljava/io/Serializable;
      98: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     103: astore        6
     105: aload_0
     106: aload         6
     108: invokevirtual #86                 // Method isDirty:(Ljava/lang/Object;)Z
     111: istore        7
     113: goto          15
     116: return

  protected void flushPendingUpdates(java.util.Map<org.grails.datastore.mapping.model.PersistentEntity, java.util.Collection<org.grails.datastore.mapping.core.impl.PendingUpdate>>);
    Code:
       0: aload_1
       1: invokeinterface #87,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       6: invokeinterface #88,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          39
      21: aload_2
      22: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #37                 // class java/util/Collection
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokespecial #89                 // Method flushPendingOperations:(Ljava/util/Collection;)V
      36: goto          12
      39: return

  protected void flushPendingInserts(java.util.Map<org.grails.datastore.mapping.model.PersistentEntity, java.util.Collection<org.grails.datastore.mapping.core.impl.PendingInsert>>);
    Code:
       0: aload_1
       1: invokeinterface #87,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       6: invokeinterface #88,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          39
      21: aload_2
      22: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #37                 // class java/util/Collection
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokespecial #89                 // Method flushPendingOperations:(Ljava/util/Collection;)V
      36: goto          12
      39: return

  private void flushPendingOperations(java.util.Collection);
    Code:
       0: aload_1
       1: invokeinterface #88,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          57
      16: aload_2
      17: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: astore_3
      23: aload_3
      24: checkcast     #90                 // class org/grails/datastore/mapping/core/impl/PendingOperation
      27: astore        4
      29: aload         4
      31: invokestatic  #91                 // Method org/grails/datastore/mapping/core/impl/PendingOperationExecution.executePendingOperation:(Lorg/grails/datastore/mapping/core/impl/PendingOperation;)V
      34: goto          54
      37: astore        5
      39: aload_0
      40: getstatic     #93                 // Field javax/persistence/FlushModeType.COMMIT:Ljavax/persistence/FlushModeType;
      43: invokevirtual #94                 // Method setFlushMode:(Ljavax/persistence/FlushModeType;)V
      46: aload_0
      47: iconst_1
      48: putfield      #51                 // Field exceptionOccurred:Z
      51: aload         5
      53: athrow
      54: goto          7
      57: return
    Exception table:
       from    to  target type
          29    34    37   Class java/lang/RuntimeException

  private boolean hasUpdates();
    Code:
       0: aload_0
       1: getfield      #23                 // Field pendingInserts:Ljava/util/Map;
       4: invokeinterface #95,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ifeq          48
      12: aload_0
      13: getfield      #25                 // Field pendingUpdates:Ljava/util/Map;
      16: invokeinterface #95,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      21: ifeq          48
      24: aload_0
      25: getfield      #26                 // Field pendingDeletes:Ljava/util/Collection;
      28: invokeinterface #96,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      33: ifeq          48
      36: aload_0
      37: getfield      #27                 // Field postFlushOperations:Ljava/util/Collection;
      40: invokeinterface #96,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      45: ifne          52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: ireturn

  protected void postFlush(boolean);
    Code:
       0: return

  private void executePendings(java.util.Collection<java.lang.Runnable>);
    Code:
       0: aload_1
       1: invokeinterface #88,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          35
      16: aload_2
      17: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #97                 // class java/lang/Runnable
      25: astore_3
      26: aload_3
      27: invokeinterface #98,  1           // InterfaceMethod java/lang/Runnable.run:()V
      32: goto          7
      35: goto          53
      38: astore_2
      39: aload_0
      40: getstatic     #93                 // Field javax/persistence/FlushModeType.COMMIT:Ljavax/persistence/FlushModeType;
      43: invokevirtual #94                 // Method setFlushMode:(Ljavax/persistence/FlushModeType;)V
      46: aload_0
      47: iconst_1
      48: putfield      #51                 // Field exceptionOccurred:Z
      51: aload_2
      52: athrow
      53: aload_1
      54: invokeinterface #99,  1           // InterfaceMethod java/util/Collection.clear:()V
      59: return
    Exception table:
       from    to  target type
           0    35    38   Class java/lang/RuntimeException

  public void clear();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #11                 // Field firstLevelCache:Ljava/util/Map;
       5: invokespecial #100                // Method clearMaps:(Ljava/util/Map;)V
       8: aload_0
       9: aload_0
      10: getfield      #12                 // Field firstLevelEntryCache:Ljava/util/Map;
      13: invokespecial #100                // Method clearMaps:(Ljava/util/Map;)V
      16: aload_0
      17: aload_0
      18: getfield      #13                 // Field firstLevelEntryCacheDirtyCheck:Ljava/util/Map;
      21: invokespecial #100                // Method clearMaps:(Ljava/util/Map;)V
      24: aload_0
      25: getfield      #14                 // Field firstLevelCollectionCache:Ljava/util/Map;
      28: invokeinterface #57,  1           // InterfaceMethod java/util/Map.clear:()V
      33: aload_0
      34: getfield      #23                 // Field pendingInserts:Ljava/util/Map;
      37: invokeinterface #57,  1           // InterfaceMethod java/util/Map.clear:()V
      42: aload_0
      43: getfield      #25                 // Field pendingUpdates:Ljava/util/Map;
      46: invokeinterface #57,  1           // InterfaceMethod java/util/Map.clear:()V
      51: aload_0
      52: getfield      #26                 // Field pendingDeletes:Ljava/util/Collection;
      55: invokeinterface #99,  1           // InterfaceMethod java/util/Collection.clear:()V
      60: aload_0
      61: getfield      #101                // Field attributes:Ljava/util/Map;
      64: invokeinterface #57,  1           // InterfaceMethod java/util/Map.clear:()V
      69: aload_0
      70: iconst_0
      71: putfield      #51                 // Field exceptionOccurred:Z
      74: return

  private void clearMaps(java.util.Map<java.lang.Class, java.util.Map<java.io.Serializable, java.lang.Object>>);
    Code:
       0: aload_1
       1: invokeinterface #87,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       6: invokeinterface #88,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          40
      21: aload_2
      22: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #102                // class java/util/Map
      30: astore_3
      31: aload_3
      32: invokeinterface #57,  1           // InterfaceMethod java/util/Map.clear:()V
      37: goto          12
      40: return

  public final org.grails.datastore.mapping.engine.Persister getPersister(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_1
       7: instanceof    #103                // class java/lang/Class
      10: ifeq          21
      13: aload_1
      14: checkcast     #103                // class java/lang/Class
      17: astore_2
      18: goto          46
      21: aload_1
      22: instanceof    #104                // class org/grails/datastore/mapping/model/PersistentEntity
      25: ifeq          41
      28: aload_1
      29: checkcast     #104                // class org/grails/datastore/mapping/model/PersistentEntity
      32: invokeinterface #42,  1           // InterfaceMethod org/grails/datastore/mapping/model/PersistentEntity.getJavaClass:()Ljava/lang/Class;
      37: astore_2
      38: goto          46
      41: aload_1
      42: invokevirtual #70                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      45: astore_2
      46: aload_0
      47: getfield      #5                  // Field persisters:Ljava/util/Map;
      50: aload_2
      51: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #105                // class org/grails/datastore/mapping/engine/Persister
      59: astore_3
      60: aload_3
      61: ifnonnull     122
      64: aload_0
      65: aload_2
      66: aload_0
      67: invokevirtual #106                // Method getMappingContext:()Lorg/grails/datastore/mapping/model/MappingContext;
      70: invokevirtual #107                // Method createPersister:(Ljava/lang/Class;Lorg/grails/datastore/mapping/model/MappingContext;)Lorg/grails/datastore/mapping/engine/Persister;
      73: astore_3
      74: aload_3
      75: ifnull        122
      78: aload_0
      79: aload_3
      80: checkcast     #63                 // class org/grails/datastore/mapping/engine/EntityPersister
      83: invokevirtual #66                 // Method org/grails/datastore/mapping/engine/EntityPersister.getPersistentEntity:()Lorg/grails/datastore/mapping/model/PersistentEntity;
      86: invokevirtual #40                 // Method isStateless:(Lorg/grails/datastore/mapping/model/PersistentEntity;)Z
      89: ifne          110
      92: aload_0
      93: getfield      #11                 // Field firstLevelCache:Ljava/util/Map;
      96: aload_2
      97: new           #3                  // class java/util/concurrent/ConcurrentHashMap
     100: dup
     101: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
     104: invokeinterface #38,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     109: pop
     110: aload_0
     111: getfield      #5                  // Field persisters:Ljava/util/Map;
     114: aload_2
     115: aload_3
     116: invokeinterface #38,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     121: pop
     122: aload_3
     123: areturn

  protected abstract org.grails.datastore.mapping.engine.Persister createPersister(java.lang.Class, org.grails.datastore.mapping.model.MappingContext);

  public boolean contains(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_0
       5: invokevirtual #47                 // Method isStateless:()Z
       8: ifeq          13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: aload_1
      15: invokevirtual #70                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      18: invokespecial #84                 // Method getInstanceCache:(Ljava/lang/Class;)Ljava/util/Map;
      21: aload_1
      22: invokeinterface #108,  2          // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      27: ireturn

  public boolean isCached(java.lang.Class, java.io.Serializable);
    Code:
       0: aload_0
       1: invokevirtual #106                // Method getMappingContext:()Lorg/grails/datastore/mapping/model/MappingContext;
       4: aload_1
       5: invokevirtual #109                // Method java/lang/Class.getName:()Ljava/lang/String;
       8: invokeinterface #110,  2          // InterfaceMethod org/grails/datastore/mapping/model/MappingContext.getPersistentEntity:(Ljava/lang/String;)Lorg/grails/datastore/mapping/model/PersistentEntity;
      13: astore_3
      14: aload_1
      15: ifnull        30
      18: aload_2
      19: ifnull        30
      22: aload_0
      23: aload_3
      24: invokevirtual #40                 // Method isStateless:(Lorg/grails/datastore/mapping/model/PersistentEntity;)Z
      27: ifeq          32
      30: iconst_0
      31: ireturn
      32: aload_0
      33: aload_1
      34: invokespecial #84                 // Method getInstanceCache:(Ljava/lang/Class;)Ljava/util/Map;
      37: aload_2
      38: invokeinterface #111,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      43: ireturn

  public void cacheInstance(java.lang.Class, java.io.Serializable, java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        12
       4: aload_2
       5: ifnull        12
       8: aload_3
       9: ifnonnull     13
      12: return
      13: aload_0
      14: aload_0
      15: invokevirtual #106                // Method getMappingContext:()Lorg/grails/datastore/mapping/model/MappingContext;
      18: aload_1
      19: invokevirtual #109                // Method java/lang/Class.getName:()Ljava/lang/String;
      22: invokeinterface #110,  2          // InterfaceMethod org/grails/datastore/mapping/model/MappingContext.getPersistentEntity:(Ljava/lang/String;)Lorg/grails/datastore/mapping/model/PersistentEntity;
      27: invokevirtual #40                 // Method isStateless:(Lorg/grails/datastore/mapping/model/PersistentEntity;)Z
      30: ifeq          34
      33: return
      34: aload_0
      35: aload_1
      36: invokespecial #84                 // Method getInstanceCache:(Ljava/lang/Class;)Ljava/util/Map;
      39: aload_2
      40: aload_3
      41: invokeinterface #38,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: return

  public java.lang.Object getCachedInstance(java.lang.Class, java.io.Serializable);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method isStateless:()Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aload_1
      10: ifnull        17
      13: aload_2
      14: ifnonnull     19
      17: aconst_null
      18: areturn
      19: aload_0
      20: aload_0
      21: invokevirtual #106                // Method getMappingContext:()Lorg/grails/datastore/mapping/model/MappingContext;
      24: aload_1
      25: invokevirtual #109                // Method java/lang/Class.getName:()Ljava/lang/String;
      28: invokeinterface #110,  2          // InterfaceMethod org/grails/datastore/mapping/model/MappingContext.getPersistentEntity:(Ljava/lang/String;)Lorg/grails/datastore/mapping/model/PersistentEntity;
      33: invokevirtual #40                 // Method isStateless:(Lorg/grails/datastore/mapping/model/PersistentEntity;)Z
      36: ifeq          41
      39: aconst_null
      40: areturn
      41: aload_0
      42: aload_1
      43: invokespecial #84                 // Method getInstanceCache:(Ljava/lang/Class;)Ljava/util/Map;
      46: aload_2
      47: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      52: areturn

  public void clear(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_0
       5: invokevirtual #47                 // Method isStateless:()Z
       8: ifeq          12
      11: return
      12: aload_0
      13: getfield      #11                 // Field firstLevelCache:Ljava/util/Map;
      16: aload_1
      17: invokevirtual #70                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #102                // class java/util/Map
      28: astore_2
      29: aload_2
      30: ifnull        62
      33: aload_0
      34: aload_1
      35: invokevirtual #62                 // Method getPersister:(Ljava/lang/Object;)Lorg/grails/datastore/mapping/engine/Persister;
      38: astore_3
      39: aload_3
      40: aload_1
      41: invokeinterface #73,  2           // InterfaceMethod org/grails/datastore/mapping/engine/Persister.getObjectIdentifier:(Ljava/lang/Object;)Ljava/io/Serializable;
      46: astore        4
      48: aload         4
      50: ifnull        62
      53: aload_2
      54: aload         4
      56: invokeinterface #112,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      61: pop
      62: aload_0
      63: aload_1
      64: invokevirtual #113                // Method removeAttributesForEntity:(Ljava/lang/Object;)V
      67: return

  public void attach(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: aload_1
       7: invokevirtual #62                 // Method getPersister:(Ljava/lang/Object;)Lorg/grails/datastore/mapping/engine/Persister;
      10: checkcast     #63                 // class org/grails/datastore/mapping/engine/EntityPersister
      13: astore_2
      14: aload_2
      15: ifnonnull     19
      18: return
      19: aload_2
      20: aload_1
      21: invokevirtual #69                 // Method org/grails/datastore/mapping/engine/EntityPersister.getObjectIdentifier:(Ljava/lang/Object;)Ljava/io/Serializable;
      24: astore_3
      25: aload_3
      26: ifnull        35
      29: aload_0
      30: aload_3
      31: aload_1
      32: invokevirtual #114                // Method cacheObject:(Ljava/io/Serializable;Ljava/lang/Object;)V
      35: return

  protected void cacheObject(java.io.Serializable, java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_2
       5: ifnonnull     9
       8: return
       9: aload_0
      10: aload_2
      11: invokevirtual #70                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: aload_1
      15: aload_2
      16: invokevirtual #115                // Method cacheInstance:(Ljava/lang/Class;Ljava/io/Serializable;Ljava/lang/Object;)V
      19: return

  public java.io.Serializable persist(java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #116                // String Cannot persist null object
       3: invokestatic  #117                // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #62                 // Method getPersister:(Ljava/lang/Object;)Lorg/grails/datastore/mapping/engine/Persister;
      11: astore_2
      12: aload_2
      13: ifnonnull     48
      16: new           #118                // class org/grails/datastore/mapping/engine/NonPersistentTypeException
      19: dup
      20: new           #119                // class java/lang/StringBuilder
      23: dup
      24: invokespecial #120                // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #121                // String Object [
      29: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_1
      33: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      36: ldc           #124                // String ] cannot be persisted. It is not a known persistent type.
      38: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #126                // Method org/grails/datastore/mapping/engine/NonPersistentTypeException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_2
      49: aload_1
      50: invokeinterface #127,  2          // InterfaceMethod org/grails/datastore/mapping/engine/Persister.persist:(Ljava/lang/Object;)Ljava/io/Serializable;
      55: astore_3
      56: aload_0
      57: aload_3
      58: aload_1
      59: invokevirtual #114                // Method cacheObject:(Ljava/io/Serializable;Ljava/lang/Object;)V
      62: aload_3
      63: areturn

  public java.io.Serializable insert(java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #116                // String Cannot persist null object
       3: invokestatic  #117                // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #62                 // Method getPersister:(Ljava/lang/Object;)Lorg/grails/datastore/mapping/engine/Persister;
      11: astore_2
      12: aload_2
      13: ifnonnull     48
      16: new           #118                // class org/grails/datastore/mapping/engine/NonPersistentTypeException
      19: dup
      20: new           #119                // class java/lang/StringBuilder
      23: dup
      24: invokespecial #120                // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #121                // String Object [
      29: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_1
      33: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      36: ldc           #124                // String ] cannot be persisted. It is not a known persistent type.
      38: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #126                // Method org/grails/datastore/mapping/engine/NonPersistentTypeException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_2
      49: aload_1
      50: invokeinterface #128,  2          // InterfaceMethod org/grails/datastore/mapping/engine/Persister.insert:(Ljava/lang/Object;)Ljava/io/Serializable;
      55: astore_3
      56: aload_0
      57: aload_3
      58: aload_1
      59: invokevirtual #114                // Method cacheObject:(Ljava/io/Serializable;Ljava/lang/Object;)V
      62: aload_3
      63: areturn

  public void refresh(java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #116                // String Cannot persist null object
       3: invokestatic  #117                // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #62                 // Method getPersister:(Ljava/lang/Object;)Lorg/grails/datastore/mapping/engine/Persister;
      11: astore_2
      12: aload_2
      13: ifnonnull     48
      16: new           #118                // class org/grails/datastore/mapping/engine/NonPersistentTypeException
      19: dup
      20: new           #119                // class java/lang/StringBuilder
      23: dup
      24: invokespecial #120                // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #121                // String Object [
      29: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_1
      33: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      36: ldc           #129                // String ] cannot be refreshed. It is not a known persistent type.
      38: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #126                // Method org/grails/datastore/mapping/engine/NonPersistentTypeException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_2
      49: aload_1
      50: invokeinterface #130,  2          // InterfaceMethod org/grails/datastore/mapping/engine/Persister.refresh:(Ljava/lang/Object;)Ljava/io/Serializable;
      55: astore_3
      56: aload_0
      57: aload_3
      58: aload_1
      59: invokevirtual #114                // Method cacheObject:(Ljava/io/Serializable;Ljava/lang/Object;)V
      62: return

  public java.lang.Object retrieve(java.lang.Class, java.io.Serializable);
    Code:
       0: aload_2
       1: ifnull        8
       4: aload_1
       5: ifnonnull     10
       8: aconst_null
       9: areturn
      10: aload_0
      11: aload_1
      12: invokevirtual #62                 // Method getPersister:(Ljava/lang/Object;)Lorg/grails/datastore/mapping/engine/Persister;
      15: astore_3
      16: aload_3
      17: ifnonnull     64
      20: new           #118                // class org/grails/datastore/mapping/engine/NonPersistentTypeException
      23: dup
      24: new           #119                // class java/lang/StringBuilder
      27: dup
      28: invokespecial #120                // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #131                // String Cannot retrieve object with key [
      33: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_2
      37: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      40: ldc           #132                // String ]. The class [
      42: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_1
      46: invokevirtual #109                // Method java/lang/Class.getName:()Ljava/lang/String;
      49: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: ldc           #133                // String ] is not a known persistent type.
      54: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #126                // Method org/grails/datastore/mapping/engine/NonPersistentTypeException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: aload_0
      65: invokevirtual #106                // Method getMappingContext:()Lorg/grails/datastore/mapping/model/MappingContext;
      68: aload_1
      69: invokevirtual #109                // Method java/lang/Class.getName:()Ljava/lang/String;
      72: invokeinterface #110,  2          // InterfaceMethod org/grails/datastore/mapping/model/MappingContext.getPersistentEntity:(Ljava/lang/String;)Lorg/grails/datastore/mapping/model/PersistentEntity;
      77: astore        4
      79: aload         4
      81: ifnull        115
      84: aload_0
      85: invokevirtual #106                // Method getMappingContext:()Lorg/grails/datastore/mapping/model/MappingContext;
      88: invokeinterface #134,  1          // InterfaceMethod org/grails/datastore/mapping/model/MappingContext.getConversionService:()Lorg/springframework/core/convert/ConversionService;
      93: aload_2
      94: aload         4
      96: invokeinterface #135,  1          // InterfaceMethod org/grails/datastore/mapping/model/PersistentEntity.getIdentity:()Lorg/grails/datastore/mapping/model/PersistentProperty;
     101: invokeinterface #136,  1          // InterfaceMethod org/grails/datastore/mapping/model/PersistentProperty.getType:()Ljava/lang/Class;
     106: invokeinterface #137,  3          // InterfaceMethod org/springframework/core/convert/ConversionService.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
     111: checkcast     #138                // class java/io/Serializable
     114: astore_2
     115: aload_0
     116: aload_1
     117: invokespecial #84                 // Method getInstanceCache:(Ljava/lang/Class;)Ljava/util/Map;
     120: aload_2
     121: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     126: astore        5
     128: aload         5
     130: ifnonnull     154
     133: aload_3
     134: aload_2
     135: invokeinterface #139,  2          // InterfaceMethod org/grails/datastore/mapping/engine/Persister.retrieve:(Ljava/io/Serializable;)Ljava/lang/Object;
     140: astore        5
     142: aload         5
     144: ifnull        154
     147: aload_0
     148: aload_2
     149: aload         5
     151: invokevirtual #114                // Method cacheObject:(Ljava/io/Serializable;Ljava/lang/Object;)V
     154: aload         5
     156: areturn

  public java.lang.Object proxy(java.lang.Class, java.io.Serializable);
    Code:
       0: aload_2
       1: ifnull        8
       4: aload_1
       5: ifnonnull     10
       8: aconst_null
       9: areturn
      10: aload_0
      11: aload_1
      12: invokevirtual #62                 // Method getPersister:(Ljava/lang/Object;)Lorg/grails/datastore/mapping/engine/Persister;
      15: astore_3
      16: aload_3
      17: ifnonnull     64
      20: new           #118                // class org/grails/datastore/mapping/engine/NonPersistentTypeException
      23: dup
      24: new           #119                // class java/lang/StringBuilder
      27: dup
      28: invokespecial #120                // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #131                // String Cannot retrieve object with key [
      33: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_2
      37: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      40: ldc           #132                // String ]. The class [
      42: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_1
      46: invokevirtual #109                // Method java/lang/Class.getName:()Ljava/lang/String;
      49: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: ldc           #133                // String ] is not a known persistent type.
      54: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #126                // Method org/grails/datastore/mapping/engine/NonPersistentTypeException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: aload_0
      65: aload_1
      66: invokespecial #84                 // Method getInstanceCache:(Ljava/lang/Class;)Ljava/util/Map;
      69: aload_2
      70: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      75: astore        4
      77: aload         4
      79: ifnonnull     91
      82: aload_3
      83: aload_2
      84: invokeinterface #140,  2          // InterfaceMethod org/grails/datastore/mapping/engine/Persister.proxy:(Ljava/io/Serializable;)Ljava/lang/Object;
      89: astore        4
      91: aload         4
      93: areturn

  public void lock(java.lang.Object);
    Code:
       0: new           #141                // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #119                // class java/lang/StringBuilder
       7: dup
       8: invokespecial #120                // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #142                // String Datastore [
      13: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #70                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #109                // Method java/lang/Class.getName:()Ljava/lang/String;
      23: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #143                // String ] does not support locking.
      28: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #144                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      37: athrow

  public java.lang.Object lock(java.lang.Class, java.io.Serializable);
    Code:
       0: new           #141                // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #119                // class java/lang/StringBuilder
       7: dup
       8: invokespecial #120                // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #142                // String Datastore [
      13: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #70                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #109                // Method java/lang/Class.getName:()Ljava/lang/String;
      23: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #143                // String ] does not support locking.
      28: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #144                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      37: athrow

  public void unlock(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        13
       4: aload_0
       5: getfield      #8                  // Field lockedObjects:Ljava/util/concurrent/ConcurrentLinkedQueue;
       8: aload_1
       9: invokevirtual #145                // Method java/util/concurrent/ConcurrentLinkedQueue.remove:(Ljava/lang/Object;)Z
      12: pop
      13: return

  public int deleteAll(org.grails.datastore.mapping.query.api.QueryableCriteria);
    Code:
       0: aload_1
       1: invokeinterface #146,  1          // InterfaceMethod org/grails/datastore/mapping/query/api/QueryableCriteria.list:()Ljava/util/List;
       6: astore_2
       7: aload_0
       8: aload_2
       9: invokevirtual #147                // Method delete:(Ljava/lang/Iterable;)V
      12: aload_2
      13: invokeinterface #148,  1          // InterfaceMethod java/util/List.size:()I
      18: ireturn

  public int updateAll(org.grails.datastore.mapping.query.api.QueryableCriteria, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: invokeinterface #146,  1          // InterfaceMethod org/grails/datastore/mapping/query/api/QueryableCriteria.list:()Ljava/util/List;
       6: astore_3
       7: aload_3
       8: invokeinterface #149,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      13: astore        4
      15: aload         4
      17: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          103
      25: aload         4
      27: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: astore        5
      34: new           #150                // class org/springframework/beans/BeanWrapperImpl
      37: dup
      38: aload         5
      40: invokespecial #151                // Method org/springframework/beans/BeanWrapperImpl."<init>":(Ljava/lang/Object;)V
      43: astore        6
      45: aload_2
      46: invokeinterface #152,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      51: invokeinterface #75,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      56: astore        7
      58: aload         7
      60: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      65: ifeq          100
      68: aload         7
      70: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: checkcast     #153                // class java/lang/String
      78: astore        8
      80: aload         6
      82: aload         8
      84: aload_2
      85: aload         8
      87: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      92: invokeinterface #154,  3          // InterfaceMethod org/springframework/beans/BeanWrapper.setPropertyValue:(Ljava/lang/String;Ljava/lang/Object;)V
      97: goto          58
     100: goto          15
     103: aload_0
     104: aload_3
     105: invokevirtual #155                // Method persist:(Ljava/lang/Iterable;)Ljava/util/List;
     108: pop
     109: aload_3
     110: invokeinterface #148,  1          // InterfaceMethod java/util/List.size:()I
     115: ireturn

  public void delete(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: invokevirtual #156                // Method getPendingDeletes:()Ljava/util/Collection;
       9: new           #157                // class org/grails/datastore/mapping/core/AbstractSession$3
      12: dup
      13: aload_0
      14: aload_1
      15: invokespecial #158                // Method org/grails/datastore/mapping/core/AbstractSession$3."<init>":(Lorg/grails/datastore/mapping/core/AbstractSession;Ljava/lang/Object;)V
      18: invokeinterface #34,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      23: pop
      24: return

  public void delete(java.lang.Iterable);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: new           #159                // class java/util/HashMap
       8: dup
       9: invokespecial #160                // Method java/util/HashMap."<init>":()V
      12: astore_2
      13: aload_1
      14: invokeinterface #161,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          111
      29: aload_3
      30: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: astore        4
      37: aload         4
      39: ifnonnull     45
      42: goto          20
      45: aload_0
      46: aload         4
      48: invokevirtual #62                 // Method getPersister:(Ljava/lang/Object;)Lorg/grails/datastore/mapping/engine/Persister;
      51: astore        5
      53: aload         5
      55: ifnonnull     61
      58: goto          20
      61: aload_2
      62: aload         5
      64: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      69: checkcast     #162                // class java/util/List
      72: astore        6
      74: aload         6
      76: ifnonnull     98
      79: aload_2
      80: aload         5
      82: new           #163                // class java/util/ArrayList
      85: dup
      86: invokespecial #164                // Method java/util/ArrayList."<init>":()V
      89: dup
      90: astore        6
      92: invokeinterface #38,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      97: pop
      98: aload         6
     100: aload         4
     102: invokeinterface #165,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     107: pop
     108: goto          20
     111: aload_2
     112: invokeinterface #74,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     117: invokeinterface #75,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     122: astore_3
     123: aload_3
     124: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     129: ifeq          192
     132: aload_3
     133: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     138: checkcast     #78                 // class java/util/Map$Entry
     141: astore        4
     143: aload         4
     145: invokeinterface #82,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     150: checkcast     #105                // class org/grails/datastore/mapping/engine/Persister
     153: astore        5
     155: aload         4
     157: invokeinterface #79,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     162: checkcast     #162                // class java/util/List
     165: astore        6
     167: aload_0
     168: getfield      #26                 // Field pendingDeletes:Ljava/util/Collection;
     171: new           #166                // class org/grails/datastore/mapping/core/AbstractSession$4
     174: dup
     175: aload_0
     176: aload         5
     178: aload         6
     180: invokespecial #167                // Method org/grails/datastore/mapping/core/AbstractSession$4."<init>":(Lorg/grails/datastore/mapping/core/AbstractSession;Lorg/grails/datastore/mapping/engine/Persister;Ljava/util/List;)V
     183: invokeinterface #34,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     188: pop
     189: goto          123
     192: return

  public java.util.List<java.io.Serializable> persist(java.lang.Iterable);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: invokestatic  #168                // Method java/util/Collections.emptyList:()Ljava/util/List;
       7: areturn
       8: aload_1
       9: invokeinterface #161,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifne          28
      24: invokestatic  #168                // Method java/util/Collections.emptyList:()Ljava/util/List;
      27: areturn
      28: aload_2
      29: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: astore_3
      35: aload_0
      36: aload_3
      37: invokevirtual #62                 // Method getPersister:(Ljava/lang/Object;)Lorg/grails/datastore/mapping/engine/Persister;
      40: astore        4
      42: aload         4
      44: ifnonnull     85
      47: new           #118                // class org/grails/datastore/mapping/engine/NonPersistentTypeException
      50: dup
      51: new           #119                // class java/lang/StringBuilder
      54: dup
      55: invokespecial #120                // Method java/lang/StringBuilder."<init>":()V
      58: ldc           #169                // String Cannot persist objects. The class [
      60: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_3
      64: invokevirtual #70                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      67: invokevirtual #109                // Method java/lang/Class.getName:()Ljava/lang/String;
      70: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: ldc           #133                // String ] is not a known persistent type.
      75: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokespecial #126                // Method org/grails/datastore/mapping/engine/NonPersistentTypeException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: aload         4
      87: aload_1
      88: invokeinterface #170,  2          // InterfaceMethod org/grails/datastore/mapping/engine/Persister.persist:(Ljava/lang/Iterable;)Ljava/util/List;
      93: areturn

  public java.util.List retrieveAll(java.lang.Class, java.lang.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #62                 // Method getPersister:(Ljava/lang/Object;)Lorg/grails/datastore/mapping/engine/Persister;
       5: astore_3
       6: aload_3
       7: ifnonnull     54
      10: new           #118                // class org/grails/datastore/mapping/engine/NonPersistentTypeException
      13: dup
      14: new           #119                // class java/lang/StringBuilder
      17: dup
      18: invokespecial #120                // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #171                // String Cannot retrieve objects with keys [
      23: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_2
      27: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: ldc           #132                // String ]. The class [
      32: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_1
      36: invokevirtual #109                // Method java/lang/Class.getName:()Ljava/lang/String;
      39: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #133                // String ] is not a known persistent type.
      44: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokespecial #126                // Method org/grails/datastore/mapping/engine/NonPersistentTypeException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: new           #163                // class java/util/ArrayList
      57: dup
      58: invokespecial #164                // Method java/util/ArrayList."<init>":()V
      61: astore        4
      63: new           #163                // class java/util/ArrayList
      66: dup
      67: invokespecial #164                // Method java/util/ArrayList."<init>":()V
      70: astore        5
      72: aload_0
      73: aload_1
      74: invokespecial #84                 // Method getInstanceCache:(Ljava/lang/Class;)Ljava/util/Map;
      77: astore        6
      79: aload_2
      80: invokeinterface #161,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      85: astore        7
      87: aload         7
      89: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      94: ifeq          152
      97: aload         7
      99: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     104: astore        8
     106: aload         8
     108: checkcast     #138                // class java/io/Serializable
     111: astore        9
     113: aload         6
     115: aload         9
     117: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     122: astore        10
     124: aload         4
     126: aload         10
     128: invokeinterface #165,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     133: pop
     134: aload         10
     136: ifnonnull     149
     139: aload         5
     141: aload         9
     143: invokeinterface #165,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     148: pop
     149: goto          87
     152: aload_3
     153: aload         5
     155: invokeinterface #172,  2          // InterfaceMethod org/grails/datastore/mapping/engine/Persister.retrieveAll:(Ljava/lang/Iterable;)Ljava/util/List;
     160: astore        7
     162: aload         5
     164: invokeinterface #173,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     169: astore        8
     171: aload         7
     173: invokeinterface #173,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     178: astore        9
     180: iconst_0
     181: istore        10
     183: iload         10
     185: aload         4
     187: invokeinterface #148,  1          // InterfaceMethod java/util/List.size:()I
     192: if_icmpge     259
     195: aload         4
     197: iload         10
     199: invokeinterface #174,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     204: astore        11
     206: aload         11
     208: ifnonnull     253
     211: aload         9
     213: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     218: astore        12
     220: aload         8
     222: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     227: checkcast     #138                // class java/io/Serializable
     230: astore        13
     232: aload         4
     234: iload         10
     236: aload         12
     238: invokeinterface #175,  3          // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
     243: pop
     244: aload_0
     245: aload_1
     246: aload         13
     248: aload         12
     250: invokevirtual #115                // Method cacheInstance:(Ljava/lang/Class;Ljava/io/Serializable;Ljava/lang/Object;)V
     253: iinc          10, 1
     256: goto          183
     259: aload         4
     261: areturn

  public java.util.List retrieveAll(java.lang.Class, java.io.Serializable...);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #62                 // Method getPersister:(Ljava/lang/Object;)Lorg/grails/datastore/mapping/engine/Persister;
       5: astore_3
       6: aload_3
       7: ifnonnull     54
      10: new           #118                // class org/grails/datastore/mapping/engine/NonPersistentTypeException
      13: dup
      14: new           #119                // class java/lang/StringBuilder
      17: dup
      18: invokespecial #120                // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #171                // String Cannot retrieve objects with keys [
      23: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_2
      27: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: ldc           #132                // String ]. The class [
      32: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_1
      36: invokevirtual #109                // Method java/lang/Class.getName:()Ljava/lang/String;
      39: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #133                // String ] is not a known persistent type.
      44: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokespecial #126                // Method org/grails/datastore/mapping/engine/NonPersistentTypeException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: aload_0
      55: aload_1
      56: aload_2
      57: invokestatic  #176                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      60: invokevirtual #177                // Method retrieveAll:(Ljava/lang/Class;Ljava/lang/Iterable;)Ljava/util/List;
      63: areturn

  public org.grails.datastore.mapping.query.Query createQuery(java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #62                 // Method getPersister:(Ljava/lang/Object;)Lorg/grails/datastore/mapping/engine/Persister;
       5: astore_2
       6: aload_2
       7: ifnonnull     42
      10: new           #118                // class org/grails/datastore/mapping/engine/NonPersistentTypeException
      13: dup
      14: new           #119                // class java/lang/StringBuilder
      17: dup
      18: invokespecial #120                // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #178                // String Cannot create query. The class [
      23: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_1
      27: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: ldc           #133                // String ] is not a known persistent type.
      32: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #125                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #126                // Method org/grails/datastore/mapping/engine/NonPersistentTypeException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_2
      43: invokeinterface #179,  1          // InterfaceMethod org/grails/datastore/mapping/engine/Persister.createQuery:()Lorg/grails/datastore/mapping/query/Query;
      48: areturn

  public final org.grails.datastore.mapping.transactions.Transaction beginTransaction();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #180                // Method beginTransactionInternal:()Lorg/grails/datastore/mapping/transactions/Transaction;
       5: putfield      #181                // Field transaction:Lorg/grails/datastore/mapping/transactions/Transaction;
       8: aload_0
       9: getfield      #181                // Field transaction:Lorg/grails/datastore/mapping/transactions/Transaction;
      12: areturn

  protected abstract org.grails.datastore.mapping.transactions.Transaction beginTransactionInternal();

  public org.grails.datastore.mapping.transactions.Transaction getTransaction();
    Code:
       0: aload_0
       1: getfield      #181                // Field transaction:Lorg/grails/datastore/mapping/transactions/Transaction;
       4: ifnonnull     17
       7: new           #182                // class org/springframework/transaction/NoTransactionException
      10: dup
      11: ldc           #183                // String Transaction not started. Call beginTransaction() first
      13: invokespecial #184                // Method org/springframework/transaction/NoTransactionException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #181                // Field transaction:Lorg/grails/datastore/mapping/transactions/Transaction;
      21: areturn

  private java.util.Map<java.io.Serializable, java.lang.Object> getInstanceCache(java.lang.Class);
    Code:
       0: aload_0
       1: getfield      #11                 // Field firstLevelCache:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #102                // class java/util/Map
      13: astore_2
      14: aload_2
      15: ifnonnull     38
      18: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      21: dup
      22: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      25: astore_2
      26: aload_0
      27: getfield      #11                 // Field firstLevelCache:Ljava/util/Map;
      30: aload_1
      31: aload_2
      32: invokeinterface #38,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_2
      39: areturn

  private java.util.Map<java.io.Serializable, java.lang.Object> getEntryCache(java.lang.Class, boolean);
    Code:
       0: iload_2
       1: ifeq          11
       4: aload_0
       5: getfield      #13                 // Field firstLevelEntryCacheDirtyCheck:Ljava/util/Map;
       8: goto          15
      11: aload_0
      12: getfield      #12                 // Field firstLevelEntryCache:Ljava/util/Map;
      15: astore_3
      16: aload_3
      17: aload_1
      18: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #102                // class java/util/Map
      26: astore        4
      28: aload         4
      30: ifnonnull     52
      33: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      36: dup
      37: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      40: astore        4
      42: aload_3
      43: aload_1
      44: aload         4
      46: invokeinterface #38,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      51: pop
      52: aload         4
      54: areturn

  static {};
    Code:
       0: new           #185                // class org/grails/datastore/mapping/core/AbstractSession$1
       3: dup
       4: invokespecial #186                // Method org/grails/datastore/mapping/core/AbstractSession$1."<init>":()V
       7: putstatic     #17                 // Field EXCEPTION_THROWING_INSERT_LISTENER:Lcom/googlecode/concurrentlinkedhashmap/EvictionListener;
      10: new           #187                // class org/grails/datastore/mapping/core/AbstractSession$2
      13: dup
      14: invokespecial #188                // Method org/grails/datastore/mapping/core/AbstractSession$2."<init>":()V
      17: putstatic     #24                 // Field EXCEPTION_THROWING_UPDATE_LISTENER:Lcom/googlecode/concurrentlinkedhashmap/EvictionListener;
      20: return
}
