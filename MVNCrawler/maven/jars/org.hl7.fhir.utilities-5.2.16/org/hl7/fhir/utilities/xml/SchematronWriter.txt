Compiled from "SchematronWriter.java"
public class org.hl7.fhir.utilities.xml.SchematronWriter extends org.hl7.fhir.utilities.TextStreamWriter {
  private org.hl7.fhir.utilities.xml.SchematronWriter$SchematronType type;

  private java.lang.String description;

  private java.util.List<org.hl7.fhir.utilities.xml.SchematronWriter$Section> sections;

  public org.hl7.fhir.utilities.xml.SchematronWriter(java.io.OutputStream, org.hl7.fhir.utilities.xml.SchematronWriter$SchematronType, java.lang.String) throws java.io.UnsupportedEncodingException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/hl7/fhir/utilities/TextStreamWriter."<init>":(Ljava/io/OutputStream;)V
       5: aload_0
       6: new           #2                  // class java/util/ArrayList
       9: dup
      10: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      13: putfield      #4                  // Field sections:Ljava/util/List;
      16: aload_0
      17: aload_2
      18: putfield      #5                  // Field type:Lorg/hl7/fhir/utilities/xml/SchematronWriter$SchematronType;
      21: aload_0
      22: aload_3
      23: putfield      #6                  // Field description:Ljava/lang/String;
      26: return

  public org.hl7.fhir.utilities.xml.SchematronWriter$Section section(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field sections:Ljava/util/List;
       4: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          45
      19: aload_2
      20: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #10                 // class org/hl7/fhir/utilities/xml/SchematronWriter$Section
      28: astore_3
      29: aload_3
      30: invokestatic  #11                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Section.access$400:(Lorg/hl7/fhir/utilities/xml/SchematronWriter$Section;)Ljava/lang/String;
      33: aload_1
      34: invokevirtual #12                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      37: ifeq          42
      40: aload_3
      41: areturn
      42: goto          10
      45: new           #10                 // class org/hl7/fhir/utilities/xml/SchematronWriter$Section
      48: dup
      49: aload_0
      50: invokespecial #13                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Section."<init>":(Lorg/hl7/fhir/utilities/xml/SchematronWriter;)V
      53: astore_2
      54: aload_2
      55: aload_1
      56: invokestatic  #14                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Section.access$402:(Lorg/hl7/fhir/utilities/xml/SchematronWriter$Section;Ljava/lang/String;)Ljava/lang/String;
      59: pop
      60: aload_0
      61: getfield      #4                  // Field sections:Ljava/util/List;
      64: aload_2
      65: invokeinterface #15,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      70: pop
      71: aload_2
      72: areturn

  public void dump() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #16                 // String <?xml version=\"1.0\" encoding=\"UTF-8\"?>
       3: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
       6: aload_0
       7: ldc           #18                 // String <sch:schema xmlns:sch=\"http://purl.oclc.org/dsdl/schematron\" queryBinding=\"xslt2\">
       9: invokevirtual #19                 // Method ln_i:(Ljava/lang/String;)V
      12: aload_0
      13: ldc           #20                 // String <sch:ns prefix=\"f\" uri=\"http://hl7.org/fhir\"/>
      15: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
      18: aload_0
      19: ldc           #21                 // String <sch:ns prefix=\"h\" uri=\"http://www.w3.org/1999/xhtml\"/>
      21: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
      24: aload_0
      25: invokespecial #22                 // Method addNote:()V
      28: aload_0
      29: getfield      #4                  // Field sections:Ljava/util/List;
      32: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      37: astore_1
      38: aload_1
      39: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          533
      47: aload_1
      48: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      53: checkcast     #10                 // class org/hl7/fhir/utilities/xml/SchematronWriter$Section
      56: astore_2
      57: aload_2
      58: invokevirtual #23                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Section.hasRegularContent:()Z
      61: ifeq          285
      64: aload_0
      65: ldc           #24                 // String <sch:pattern>
      67: invokevirtual #19                 // Method ln_i:(Ljava/lang/String;)V
      70: aload_0
      71: new           #25                 // class java/lang/StringBuilder
      74: dup
      75: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      78: ldc           #27                 // String <sch:title>
      80: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: aload_2
      84: invokestatic  #11                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Section.access$400:(Lorg/hl7/fhir/utilities/xml/SchematronWriter$Section;)Ljava/lang/String;
      87: invokestatic  #29                 // Method org/hl7/fhir/utilities/Utilities.escapeXml:(Ljava/lang/String;)Ljava/lang/String;
      90: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: ldc           #30                 // String </sch:title>
      95: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
     104: aload_2
     105: invokevirtual #32                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Section.getRegularRules:()Ljava/util/List;
     108: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     113: astore_3
     114: aload_3
     115: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     120: ifeq          279
     123: aload_3
     124: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     129: checkcast     #33                 // class org/hl7/fhir/utilities/xml/SchematronWriter$Rule
     132: astore        4
     134: aload         4
     136: invokestatic  #34                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Rule.access$300:(Lorg/hl7/fhir/utilities/xml/SchematronWriter$Rule;)Ljava/util/List;
     139: invokeinterface #35,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     144: ifne          276
     147: aload_0
     148: new           #25                 // class java/lang/StringBuilder
     151: dup
     152: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     155: ldc           #36                 // String <sch:rule context=\"
     157: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: aload         4
     162: invokestatic  #37                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Rule.access$200:(Lorg/hl7/fhir/utilities/xml/SchematronWriter$Rule;)Ljava/lang/String;
     165: invokestatic  #29                 // Method org/hl7/fhir/utilities/Utilities.escapeXml:(Ljava/lang/String;)Ljava/lang/String;
     168: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     171: ldc           #38                 // String \">
     173: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     176: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     179: invokevirtual #19                 // Method ln_i:(Ljava/lang/String;)V
     182: aload         4
     184: invokestatic  #34                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Rule.access$300:(Lorg/hl7/fhir/utilities/xml/SchematronWriter$Rule;)Ljava/util/List;
     187: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     192: astore        5
     194: aload         5
     196: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     201: ifeq          270
     204: aload         5
     206: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     211: checkcast     #39                 // class org/hl7/fhir/utilities/xml/SchematronWriter$Assert
     214: astore        6
     216: aload_0
     217: new           #25                 // class java/lang/StringBuilder
     220: dup
     221: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     224: ldc           #40                 // String <sch:assert test=\"
     226: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     229: aload         6
     231: invokestatic  #41                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Assert.access$000:(Lorg/hl7/fhir/utilities/xml/SchematronWriter$Assert;)Ljava/lang/String;
     234: invokestatic  #29                 // Method org/hl7/fhir/utilities/Utilities.escapeXml:(Ljava/lang/String;)Ljava/lang/String;
     237: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     240: ldc           #38                 // String \">
     242: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     245: aload         6
     247: invokestatic  #42                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Assert.access$100:(Lorg/hl7/fhir/utilities/xml/SchematronWriter$Assert;)Ljava/lang/String;
     250: invokestatic  #29                 // Method org/hl7/fhir/utilities/Utilities.escapeXml:(Ljava/lang/String;)Ljava/lang/String;
     253: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     256: ldc           #43                 // String </sch:assert>
     258: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     261: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     264: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
     267: goto          194
     270: aload_0
     271: ldc           #44                 // String </sch:rule>
     273: invokevirtual #45                 // Method ln_o:(Ljava/lang/String;)V
     276: goto          114
     279: aload_0
     280: ldc           #46                 // String </sch:pattern>
     282: invokevirtual #45                 // Method ln_o:(Ljava/lang/String;)V
     285: aload_2
     286: invokevirtual #47                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Section.hasSpecialContent:()Z
     289: ifeq          530
     292: iconst_1
     293: istore_3
     294: aload_2
     295: invokevirtual #48                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Section.getSpecialRules:()Ljava/util/List;
     298: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     303: astore        4
     305: aload         4
     307: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     312: ifeq          530
     315: aload         4
     317: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     322: checkcast     #33                 // class org/hl7/fhir/utilities/xml/SchematronWriter$Rule
     325: astore        5
     327: aload_0
     328: ldc           #24                 // String <sch:pattern>
     330: invokevirtual #19                 // Method ln_i:(Ljava/lang/String;)V
     333: aload_0
     334: new           #25                 // class java/lang/StringBuilder
     337: dup
     338: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     341: ldc           #27                 // String <sch:title>
     343: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     346: aload_2
     347: invokestatic  #11                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Section.access$400:(Lorg/hl7/fhir/utilities/xml/SchematronWriter$Section;)Ljava/lang/String;
     350: invokestatic  #29                 // Method org/hl7/fhir/utilities/Utilities.escapeXml:(Ljava/lang/String;)Ljava/lang/String;
     353: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     356: ldc           #49                 // String
     358: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     361: iload_3
     362: invokevirtual #50                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     365: ldc           #30                 // String </sch:title>
     367: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     370: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     373: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
     376: iinc          3, 1
     379: aload         5
     381: invokestatic  #34                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Rule.access$300:(Lorg/hl7/fhir/utilities/xml/SchematronWriter$Rule;)Ljava/util/List;
     384: invokeinterface #35,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     389: ifne          521
     392: aload_0
     393: new           #25                 // class java/lang/StringBuilder
     396: dup
     397: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     400: ldc           #36                 // String <sch:rule context=\"
     402: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     405: aload         5
     407: invokestatic  #37                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Rule.access$200:(Lorg/hl7/fhir/utilities/xml/SchematronWriter$Rule;)Ljava/lang/String;
     410: invokestatic  #29                 // Method org/hl7/fhir/utilities/Utilities.escapeXml:(Ljava/lang/String;)Ljava/lang/String;
     413: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     416: ldc           #38                 // String \">
     418: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     421: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     424: invokevirtual #19                 // Method ln_i:(Ljava/lang/String;)V
     427: aload         5
     429: invokestatic  #34                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Rule.access$300:(Lorg/hl7/fhir/utilities/xml/SchematronWriter$Rule;)Ljava/util/List;
     432: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     437: astore        6
     439: aload         6
     441: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     446: ifeq          515
     449: aload         6
     451: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     456: checkcast     #39                 // class org/hl7/fhir/utilities/xml/SchematronWriter$Assert
     459: astore        7
     461: aload_0
     462: new           #25                 // class java/lang/StringBuilder
     465: dup
     466: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     469: ldc           #40                 // String <sch:assert test=\"
     471: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     474: aload         7
     476: invokestatic  #41                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Assert.access$000:(Lorg/hl7/fhir/utilities/xml/SchematronWriter$Assert;)Ljava/lang/String;
     479: invokestatic  #29                 // Method org/hl7/fhir/utilities/Utilities.escapeXml:(Ljava/lang/String;)Ljava/lang/String;
     482: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     485: ldc           #38                 // String \">
     487: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     490: aload         7
     492: invokestatic  #42                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Assert.access$100:(Lorg/hl7/fhir/utilities/xml/SchematronWriter$Assert;)Ljava/lang/String;
     495: invokestatic  #29                 // Method org/hl7/fhir/utilities/Utilities.escapeXml:(Ljava/lang/String;)Ljava/lang/String;
     498: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     501: ldc           #43                 // String </sch:assert>
     503: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     506: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     509: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
     512: goto          439
     515: aload_0
     516: ldc           #44                 // String </sch:rule>
     518: invokevirtual #45                 // Method ln_o:(Ljava/lang/String;)V
     521: aload_0
     522: ldc           #46                 // String </sch:pattern>
     524: invokevirtual #45                 // Method ln_o:(Ljava/lang/String;)V
     527: goto          305
     530: goto          38
     533: aload_0
     534: ldc           #51                 // String </sch:schema>
     536: invokevirtual #45                 // Method ln_o:(Ljava/lang/String;)V
     539: aload_0
     540: invokevirtual #52                 // Method flush:()V
     543: aload_0
     544: invokevirtual #53                 // Method close:()V
     547: return

  private void addNote() throws java.io.IOException;
    Code:
       0: getstatic     #54                 // Field org/hl7/fhir/utilities/xml/SchematronWriter$1.$SwitchMap$org$hl7$fhir$utilities$xml$SchematronWriter$SchematronType:[I
       3: aload_0
       4: getfield      #5                  // Field type:Lorg/hl7/fhir/utilities/xml/SchematronWriter$SchematronType;
       7: invokevirtual #55                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$SchematronType.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 3
                     1: 36
                     2: 43
                     3: 50
               default: 54
          }
      36: aload_0
      37: invokespecial #56                 // Method addAllResourcesNote:()V
      40: goto          54
      43: aload_0
      44: invokespecial #57                 // Method addResourceNote:()V
      47: goto          54
      50: aload_0
      51: invokespecial #58                 // Method addProfileNote:()V
      54: return

  private void addAllResourcesNote() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #59                 // String <!--
       3: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
       6: aload_0
       7: ldc           #60                 // String   This file contains constraints for all resources
       9: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
      12: aload_0
      13: ldc           #61                 // String   Because of the way containment works, this file should always )
      15: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
      18: aload_0
      19: ldc           #62                 // String   be used for validating resources. Alternatively you can use
      21: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
      24: aload_0
      25: ldc           #63                 // String   the resource specific files to build a smaller version of
      27: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
      30: aload_0
      31: ldc           #64                 // String   this file (the contents are identical; only include those
      33: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
      36: aload_0
      37: ldc           #65                 // String   resources relevant to your implementation).
      39: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
      42: aload_0
      43: ldc           #66                 // String -->
      45: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
      48: return

  private void addResourceNote() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #59                 // String <!--
       3: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
       6: aload_0
       7: new           #25                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      14: ldc           #67                 // String   This file contains just the constraints for the resource
      16: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #6                  // Field description:Ljava/lang/String;
      23: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
      32: aload_0
      33: ldc           #68                 // String   It is provided for documentation purposes. When actually validating,
      35: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
      38: aload_0
      39: ldc           #69                 // String   always use fhir-invariants.sch (because of the way containment works)
      41: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
      44: aload_0
      45: ldc           #70                 // String   Alternatively you can use this file to build a smaller version of
      47: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
      50: aload_0
      51: ldc           #71                 // String   fhir-invariants.sch (the contents are identical; only include those
      53: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
      56: aload_0
      57: ldc           #65                 // String   resources relevant to your implementation).
      59: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
      62: aload_0
      63: ldc           #66                 // String -->
      65: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
      68: return

  private void addProfileNote() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #59                 // String <!--
       3: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
       6: aload_0
       7: new           #25                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      14: ldc           #72                 // String   This file contains just the constraints for the profile
      16: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #6                  // Field description:Ljava/lang/String;
      23: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
      32: aload_0
      33: ldc           #73                 // String   It includes the base constraints for the resource as well.
      35: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
      38: aload_0
      39: ldc           #74                 // String   Because of the way that schematrons and containment work,
      41: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
      44: aload_0
      45: ldc           #75                 // String   you may need to use this schematron fragment to build a,
      47: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
      50: aload_0
      51: ldc           #76                 // String   single schematron that validates contained resources (if you have any)
      53: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
      56: aload_0
      57: ldc           #66                 // String -->
      59: invokevirtual #17                 // Method ln:(Ljava/lang/String;)V
      62: return
}
