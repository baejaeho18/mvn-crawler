Compiled from "MarkDownProcessor.java"
public class org.hl7.fhir.utilities.MarkDownProcessor {
  private org.hl7.fhir.utilities.MarkDownProcessor$Dialect dialect;

  public org.hl7.fhir.utilities.MarkDownProcessor(org.hl7.fhir.utilities.MarkDownProcessor$Dialect);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field dialect:Lorg/hl7/fhir/utilities/MarkDownProcessor$Dialect;
       9: return

  public java.lang.String process(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: ldc           #3                  // String
       8: aload_1
       9: invokevirtual #4                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      12: ifeq          18
      15: ldc           #3                  // String
      17: areturn
      18: getstatic     #5                  // Field org/hl7/fhir/utilities/MarkDownProcessor$1.$SwitchMap$org$hl7$fhir$utilities$MarkDownProcessor$Dialect:[I
      21: aload_0
      22: getfield      #2                  // Field dialect:Lorg/hl7/fhir/utilities/MarkDownProcessor$Dialect;
      25: invokevirtual #6                  // Method org/hl7/fhir/utilities/MarkDownProcessor$Dialect.ordinal:()I
      28: iaload
      29: lookupswitch  { // 2
                     1: 56
                     2: 61
               default: 67
          }
      56: aload_1
      57: invokestatic  #7                  // Method com/github/rjeschke/txtmark/Processor.process:(Ljava/lang/String;)Ljava/lang/String;
      60: areturn
      61: aload_0
      62: aload_1
      63: invokespecial #8                  // Method processCommonMark:(Ljava/lang/String;)Ljava/lang/String;
      66: areturn
      67: new           #9                  // class java/lang/Error
      70: dup
      71: new           #10                 // class java/lang/StringBuilder
      74: dup
      75: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      78: ldc           #12                 // String Unknown Markdown Dialect:
      80: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: aload_0
      84: getfield      #2                  // Field dialect:Lorg/hl7/fhir/utilities/MarkDownProcessor$Dialect;
      87: invokevirtual #14                 // Method org/hl7/fhir/utilities/MarkDownProcessor$Dialect.toString:()Ljava/lang/String;
      90: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: ldc           #15                 // String  at
      95: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_2
      99: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: invokespecial #17                 // Method java/lang/Error."<init>":(Ljava/lang/String;)V
     108: athrow

  private java.lang.String processCommonMark(java.lang.String);
    Code:
       0: invokestatic  #18                 // Method org/commonmark/ext/gfm/tables/TablesExtension.create:()Lorg/commonmark/Extension;
       3: invokestatic  #19                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
       6: astore_2
       7: invokestatic  #20                 // Method org/commonmark/parser/Parser.builder:()Lorg/commonmark/parser/Parser$Builder;
      10: aload_2
      11: invokevirtual #21                 // Method org/commonmark/parser/Parser$Builder.extensions:(Ljava/lang/Iterable;)Lorg/commonmark/parser/Parser$Builder;
      14: invokevirtual #22                 // Method org/commonmark/parser/Parser$Builder.build:()Lorg/commonmark/parser/Parser;
      17: astore_3
      18: aload_3
      19: aload_1
      20: invokevirtual #23                 // Method org/commonmark/parser/Parser.parse:(Ljava/lang/String;)Lorg/commonmark/node/Node;
      23: astore        4
      25: invokestatic  #24                 // Method org/commonmark/renderer/html/HtmlRenderer.builder:()Lorg/commonmark/renderer/html/HtmlRenderer$Builder;
      28: aload_2
      29: invokevirtual #25                 // Method org/commonmark/renderer/html/HtmlRenderer$Builder.extensions:(Ljava/lang/Iterable;)Lorg/commonmark/renderer/html/HtmlRenderer$Builder;
      32: invokevirtual #26                 // Method org/commonmark/renderer/html/HtmlRenderer$Builder.build:()Lorg/commonmark/renderer/html/HtmlRenderer;
      35: astore        5
      37: aload         5
      39: aload         4
      41: invokevirtual #27                 // Method org/commonmark/renderer/html/HtmlRenderer.render:(Lorg/commonmark/node/Node;)Ljava/lang/String;
      44: astore        6
      46: aload         6
      48: ldc           #28                 // String <table>
      50: ldc           #29                 // String <table class=\"grid\">
      52: invokevirtual #30                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      55: astore        6
      57: aload         6
      59: areturn

  public static boolean isSimpleMarkdown(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #31                 // String \n
       3: invokevirtual #32                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn
}
