Compiled from "NamespaceContextMap.java"
public final class org.hl7.fhir.utilities.xml.NamespaceContextMap implements javax.xml.namespace.NamespaceContext {
  private final java.util.Map<java.lang.String, java.lang.String> prefixMap;

  private final java.util.Map<java.lang.String, java.util.Set<java.lang.String>> nsMap;

  public org.hl7.fhir.utilities.xml.NamespaceContextMap(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: aload_1
       7: invokespecial #2                  // Method createPrefixMap:(Ljava/util/Map;)Ljava/util/Map;
      10: putfield      #3                  // Field prefixMap:Ljava/util/Map;
      13: aload_0
      14: aload_0
      15: aload_0
      16: getfield      #3                  // Field prefixMap:Ljava/util/Map;
      19: invokespecial #4                  // Method createNamespaceMap:(Ljava/util/Map;)Ljava/util/Map;
      22: putfield      #5                  // Field nsMap:Ljava/util/Map;
      25: return

  public org.hl7.fhir.utilities.xml.NamespaceContextMap(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #6                  // Method toMap:([Ljava/lang/String;)Ljava/util/Map;
       5: invokespecial #7                  // Method "<init>":(Ljava/util/Map;)V
       8: return

  private static java.util.Map<java.lang.String, java.lang.String> toMap(java.lang.String...);
    Code:
       0: new           #8                  // class java/util/HashMap
       3: dup
       4: aload_0
       5: arraylength
       6: iconst_2
       7: idiv
       8: invokespecial #9                  // Method java/util/HashMap."<init>":(I)V
      11: astore_1
      12: iconst_0
      13: istore_2
      14: iload_2
      15: aload_0
      16: arraylength
      17: if_icmpge     42
      20: aload_1
      21: aload_0
      22: iload_2
      23: aaload
      24: aload_0
      25: iinc          2, 1
      28: iload_2
      29: aaload
      30: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: iinc          2, 1
      39: goto          14
      42: aload_1
      43: areturn

  private java.util.Map<java.lang.String, java.lang.String> createPrefixMap(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: new           #8                  // class java/util/HashMap
       3: dup
       4: aload_1
       5: invokespecial #11                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
       8: astore_2
       9: aload_0
      10: aload_2
      11: ldc           #13                 // String xml
      13: ldc           #14                 // String http://www.w3.org/XML/1998/namespace
      15: invokespecial #15                 // Method addConstant:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V
      18: aload_0
      19: aload_2
      20: ldc           #16                 // String xmlns
      22: ldc           #17                 // String http://www.w3.org/2000/xmlns/
      24: invokespecial #15                 // Method addConstant:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V
      27: aload_2
      28: invokestatic  #18                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      31: areturn

  private void addConstant(java.util.Map<java.lang.String, java.lang.String>, java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #19                 // class java/lang/String
      11: astore        4
      13: aload         4
      15: ifnull        64
      18: aload         4
      20: aload_3
      21: invokevirtual #20                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ifne          64
      27: new           #21                 // class java/lang/IllegalArgumentException
      30: dup
      31: new           #22                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      38: aload_2
      39: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #25                 // String  ->
      44: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload         4
      49: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: ldc           #26                 // String ; see NamespaceContext contract
      54: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #28                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: return

  private java.util.Map<java.lang.String, java.util.Set<java.lang.String>> createNamespaceMap(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: new           #8                  // class java/util/HashMap
       3: dup
       4: invokespecial #29                 // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #30,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #31,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          108
      29: aload_3
      30: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #34                 // class java/util/Map$Entry
      38: astore        4
      40: aload         4
      42: invokeinterface #35,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      47: checkcast     #19                 // class java/lang/String
      50: astore        5
      52: aload_2
      53: aload         5
      55: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      60: checkcast     #37                 // class java/util/Set
      63: astore        6
      65: aload         6
      67: ifnonnull     90
      70: new           #38                 // class java/util/HashSet
      73: dup
      74: invokespecial #39                 // Method java/util/HashSet."<init>":()V
      77: astore        6
      79: aload_2
      80: aload         5
      82: aload         6
      84: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      89: pop
      90: aload         6
      92: aload         4
      94: invokeinterface #40,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      99: invokeinterface #41,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     104: pop
     105: goto          20
     108: aload_2
     109: invokeinterface #30,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     114: invokeinterface #31,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     119: astore_3
     120: aload_3
     121: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     126: ifeq          168
     129: aload_3
     130: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     135: checkcast     #34                 // class java/util/Map$Entry
     138: astore        4
     140: aload         4
     142: invokeinterface #35,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     147: checkcast     #37                 // class java/util/Set
     150: invokestatic  #42                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
     153: astore        5
     155: aload         4
     157: aload         5
     159: invokeinterface #43,  2           // InterfaceMethod java/util/Map$Entry.setValue:(Ljava/lang/Object;)Ljava/lang/Object;
     164: pop
     165: goto          120
     168: aload_2
     169: areturn

  public java.lang.String getNamespaceURI(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #44                 // Method checkNotNull:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #3                  // Field prefixMap:Ljava/util/Map;
       9: aload_1
      10: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #19                 // class java/lang/String
      18: astore_2
      19: aload_2
      20: ifnonnull     28
      23: ldc           #45                 // String
      25: goto          29
      28: aload_2
      29: areturn

  public java.lang.String getPrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #44                 // Method checkNotNull:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #5                  // Field nsMap:Ljava/util/Map;
       9: aload_1
      10: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #37                 // class java/util/Set
      18: astore_2
      19: aload_2
      20: ifnonnull     27
      23: aconst_null
      24: goto          41
      27: aload_2
      28: invokeinterface #31,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      33: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #19                 // class java/lang/String
      41: areturn

  public java.util.Iterator<java.lang.String> getPrefixes(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #44                 // Method checkNotNull:(Ljava/lang/String;)V
       5: aload_0
       6: getfield      #5                  // Field nsMap:Ljava/util/Map;
       9: aload_1
      10: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #37                 // class java/util/Set
      18: astore_2
      19: aload_2
      20: invokeinterface #31,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: areturn

  private void checkNotNull(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #21                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #46                 // String null
      10: invokespecial #28                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: return

  public java.util.Map<java.lang.String, java.lang.String> getMap();
    Code:
       0: aload_0
       1: getfield      #3                  // Field prefixMap:Ljava/util/Map;
       4: areturn
}
