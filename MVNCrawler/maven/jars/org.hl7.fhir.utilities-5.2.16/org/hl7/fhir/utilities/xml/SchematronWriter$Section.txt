Compiled from "SchematronWriter.java"
public class org.hl7.fhir.utilities.xml.SchematronWriter$Section {
  private java.lang.String title;

  private java.util.List<org.hl7.fhir.utilities.xml.SchematronWriter$Rule> rules;

  final org.hl7.fhir.utilities.xml.SchematronWriter this$0;

  public org.hl7.fhir.utilities.xml.SchematronWriter$Section(org.hl7.fhir.utilities.xml.SchematronWriter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/hl7/fhir/utilities/xml/SchematronWriter;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #4                  // class java/util/ArrayList
      13: dup
      14: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      17: putfield      #6                  // Field rules:Ljava/util/List;
      20: return

  public java.lang.String getTitle();
    Code:
       0: aload_0
       1: getfield      #1                  // Field title:Ljava/lang/String;
       4: areturn

  public void setTitle(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field title:Ljava/lang/String;
       5: return

  public org.hl7.fhir.utilities.xml.SchematronWriter$Rule rule(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field rules:Ljava/util/List;
       4: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          45
      19: aload_2
      20: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #10                 // class org/hl7/fhir/utilities/xml/SchematronWriter$Rule
      28: astore_3
      29: aload_3
      30: invokestatic  #11                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Rule.access$200:(Lorg/hl7/fhir/utilities/xml/SchematronWriter$Rule;)Ljava/lang/String;
      33: aload_1
      34: invokevirtual #12                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      37: ifeq          42
      40: aload_3
      41: areturn
      42: goto          10
      45: new           #10                 // class org/hl7/fhir/utilities/xml/SchematronWriter$Rule
      48: dup
      49: aload_0
      50: getfield      #2                  // Field this$0:Lorg/hl7/fhir/utilities/xml/SchematronWriter;
      53: invokespecial #13                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Rule."<init>":(Lorg/hl7/fhir/utilities/xml/SchematronWriter;)V
      56: astore_2
      57: aload_2
      58: aload_1
      59: invokestatic  #14                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Rule.access$202:(Lorg/hl7/fhir/utilities/xml/SchematronWriter$Rule;Ljava/lang/String;)Ljava/lang/String;
      62: pop
      63: aload_0
      64: getfield      #6                  // Field rules:Ljava/util/List;
      67: aload_2
      68: invokeinterface #15,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      73: pop
      74: aload_2
      75: areturn

  public boolean hasRegularContent();
    Code:
       0: aload_0
       1: getfield      #6                  // Field rules:Ljava/util/List;
       4: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          53
      19: aload_1
      20: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #10                 // class org/hl7/fhir/utilities/xml/SchematronWriter$Rule
      28: astore_2
      29: aload_2
      30: invokestatic  #16                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Rule.access$300:(Lorg/hl7/fhir/utilities/xml/SchematronWriter$Rule;)Ljava/util/List;
      33: invokeinterface #17,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      38: ifne          50
      41: aload_2
      42: invokevirtual #18                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Rule.isSpecial:()Z
      45: ifne          50
      48: iconst_1
      49: ireturn
      50: goto          10
      53: iconst_0
      54: ireturn

  public boolean hasSpecialContent();
    Code:
       0: aload_0
       1: getfield      #6                  // Field rules:Ljava/util/List;
       4: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          53
      19: aload_1
      20: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #10                 // class org/hl7/fhir/utilities/xml/SchematronWriter$Rule
      28: astore_2
      29: aload_2
      30: invokestatic  #16                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Rule.access$300:(Lorg/hl7/fhir/utilities/xml/SchematronWriter$Rule;)Ljava/util/List;
      33: invokeinterface #17,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      38: ifne          50
      41: aload_2
      42: invokevirtual #18                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Rule.isSpecial:()Z
      45: ifeq          50
      48: iconst_1
      49: ireturn
      50: goto          10
      53: iconst_0
      54: ireturn

  public java.util.List<org.hl7.fhir.utilities.xml.SchematronWriter$Rule> getRegularRules();
    Code:
       0: new           #4                  // class java/util/ArrayList
       3: dup
       4: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #6                  // Field rules:Ljava/util/List;
      12: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          67
      27: aload_2
      28: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #10                 // class org/hl7/fhir/utilities/xml/SchematronWriter$Rule
      36: astore_3
      37: aload_3
      38: invokestatic  #16                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Rule.access$300:(Lorg/hl7/fhir/utilities/xml/SchematronWriter$Rule;)Ljava/util/List;
      41: invokeinterface #17,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      46: ifne          64
      49: aload_3
      50: invokevirtual #18                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Rule.isSpecial:()Z
      53: ifne          64
      56: aload_1
      57: aload_3
      58: invokeinterface #15,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      63: pop
      64: goto          18
      67: aload_1
      68: areturn

  public java.util.List<org.hl7.fhir.utilities.xml.SchematronWriter$Rule> getSpecialRules();
    Code:
       0: new           #4                  // class java/util/ArrayList
       3: dup
       4: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #6                  // Field rules:Ljava/util/List;
      12: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          67
      27: aload_2
      28: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #10                 // class org/hl7/fhir/utilities/xml/SchematronWriter$Rule
      36: astore_3
      37: aload_3
      38: invokestatic  #16                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Rule.access$300:(Lorg/hl7/fhir/utilities/xml/SchematronWriter$Rule;)Ljava/util/List;
      41: invokeinterface #17,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      46: ifne          64
      49: aload_3
      50: invokevirtual #18                 // Method org/hl7/fhir/utilities/xml/SchematronWriter$Rule.isSpecial:()Z
      53: ifeq          64
      56: aload_1
      57: aload_3
      58: invokeinterface #15,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      63: pop
      64: goto          18
      67: aload_1
      68: areturn

  static java.lang.String access$400(org.hl7.fhir.utilities.xml.SchematronWriter$Section);
    Code:
       0: aload_0
       1: getfield      #1                  // Field title:Ljava/lang/String;
       4: areturn

  static java.lang.String access$402(org.hl7.fhir.utilities.xml.SchematronWriter$Section, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field title:Ljava/lang/String;
       6: areturn
}
