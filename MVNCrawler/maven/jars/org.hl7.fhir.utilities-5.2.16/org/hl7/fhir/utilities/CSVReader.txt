Compiled from "CSVReader.java"
public class org.hl7.fhir.utilities.CSVReader extends java.io.InputStreamReader {
  private java.lang.String[] cols;

  private java.lang.String[] cells;

  private char delimiter;

  private boolean multiline;

  private int state;

  private char pc;

  public org.hl7.fhir.utilities.CSVReader(java.io.InputStream) throws org.hl7.fhir.exceptions.FHIRException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #1                  // String UTF-8
       4: invokespecial #2                  // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
       7: aload_0
       8: bipush        44
      10: putfield      #3                  // Field delimiter:C
      13: aload_0
      14: iconst_0
      15: putfield      #4                  // Field state:I
      18: aload_0
      19: invokespecial #5                  // Method checkBOM:()V
      22: return

  private void checkBOM() throws org.hl7.fhir.exceptions.FHIRException, java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #6                  // Method peek:()C
       4: ldc           #7                  // int 65279
       6: if_icmpne     13
       9: aload_0
      10: invokespecial #8                  // Method next:()V
      13: return

  public void readHeaders() throws java.io.IOException, org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #9                  // Method parseLine:()[Ljava/lang/String;
       5: putfield      #10                 // Field cols:[Ljava/lang/String;
       8: return

  public boolean line() throws java.io.IOException, org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method ready:()Z
       4: ifeq          17
       7: aload_0
       8: aload_0
       9: invokevirtual #9                  // Method parseLine:()[Ljava/lang/String;
      12: putfield      #12                 // Field cells:[Ljava/lang/String;
      15: iconst_1
      16: ireturn
      17: iconst_0
      18: ireturn

  public boolean has(java.lang.String);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #10                 // Field cols:[Ljava/lang/String;
       7: arraylength
       8: if_icmpge     47
      11: aload_1
      12: aload_0
      13: getfield      #10                 // Field cols:[Ljava/lang/String;
      16: iload_2
      17: aaload
      18: invokevirtual #13                 // Method java/lang/String.trim:()Ljava/lang/String;
      21: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ifeq          41
      27: aload_0
      28: aload_1
      29: invokevirtual #15                 // Method cell:(Ljava/lang/String;)Ljava/lang/String;
      32: ifnull        39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ireturn
      41: iinc          2, 1
      44: goto          2
      47: iconst_0
      48: ireturn

  public java.lang.String cell(java.lang.String);
    Code:
       0: iconst_m1
       1: istore_2
       2: iconst_0
       3: istore_3
       4: iload_3
       5: aload_0
       6: getfield      #10                 // Field cols:[Ljava/lang/String;
       9: arraylength
      10: if_icmpge     37
      13: aload_1
      14: aload_0
      15: getfield      #10                 // Field cols:[Ljava/lang/String;
      18: iload_3
      19: aaload
      20: invokevirtual #13                 // Method java/lang/String.trim:()Ljava/lang/String;
      23: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      26: ifeq          31
      29: iload_3
      30: istore_2
      31: iinc          3, 1
      34: goto          4
      37: iload_2
      38: iconst_m1
      39: if_icmpne     69
      42: new           #16                 // class org/hl7/fhir/exceptions/FHIRException
      45: dup
      46: new           #17                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #19                 // String no cell
      55: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_1
      59: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokespecial #22                 // Method org/hl7/fhir/exceptions/FHIRException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: aload_0
      70: getfield      #12                 // Field cells:[Ljava/lang/String;
      73: arraylength
      74: iload_2
      75: if_icmple     87
      78: aload_0
      79: getfield      #12                 // Field cells:[Ljava/lang/String;
      82: iload_2
      83: aaload
      84: goto          88
      87: aconst_null
      88: astore_3
      89: aload_3
      90: invokestatic  #23                 // Method org/hl7/fhir/utilities/Utilities.noString:(Ljava/lang/String;)Z
      93: ifeq          98
      96: aconst_null
      97: areturn
      98: aload_3
      99: ldc           #24                 // String \"
     101: invokevirtual #25                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     104: ifeq          128
     107: aload_3
     108: ldc           #24                 // String \"
     110: invokevirtual #26                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
     113: ifeq          128
     116: aload_3
     117: iconst_1
     118: aload_3
     119: invokevirtual #27                 // Method java/lang/String.length:()I
     122: iconst_2
     123: isub
     124: invokevirtual #28                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     127: areturn
     128: aload_3
     129: areturn

  protected boolean parseBoolean(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: ldc           #29                 // String y
       9: invokevirtual #30                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      12: ifne          42
      15: aload_1
      16: ldc           #31                 // String yes
      18: invokevirtual #30                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      21: ifne          42
      24: aload_1
      25: ldc           #32                 // String true
      27: invokevirtual #30                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      30: ifne          42
      33: aload_1
      34: ldc           #33                 // String 1
      36: invokevirtual #30                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      39: ifeq          44
      42: iconst_1
      43: ireturn
      44: iconst_0
      45: ireturn

  protected static java.lang.String getColumn(java.lang.String[], java.lang.String[], java.lang.String);
    Code:
       0: iconst_m1
       1: istore_3
       2: iconst_0
       3: istore        4
       5: iload         4
       7: aload_0
       8: arraylength
       9: if_icmpge     32
      12: aload_0
      13: iload         4
      15: aaload
      16: aload_2
      17: invokevirtual #30                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      20: ifeq          26
      23: iload         4
      25: istore_3
      26: iinc          4, 1
      29: goto          5
      32: iload_3
      33: iconst_m1
      34: if_icmpne     40
      37: ldc           #34                 // String
      39: areturn
      40: aload_1
      41: arraylength
      42: iload_3
      43: if_icmpgt     49
      46: ldc           #34                 // String
      48: areturn
      49: aload_1
      50: iload_3
      51: aaload
      52: areturn

  public java.lang.String[] parseLine() throws java.io.IOException, org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: new           #35                 // class java/util/ArrayList
       3: dup
       4: invokespecial #36                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: new           #17                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      15: astore_2
      16: iconst_0
      17: istore_3
      18: aload_0
      19: invokespecial #37                 // Method more:()Z
      22: ifeq          147
      25: aload_0
      26: iload_3
      27: aload_1
      28: invokeinterface #38,  1           // InterfaceMethod java/util/List.size:()I
      33: invokespecial #39                 // Method finished:(ZI)Z
      36: ifne          147
      39: aload_0
      40: invokespecial #6                  // Method peek:()C
      43: istore        4
      45: aload_0
      46: invokespecial #8                  // Method next:()V
      49: iload         4
      51: bipush        34
      53: if_icmpne     99
      56: aload_0
      57: invokevirtual #11                 // Method ready:()Z
      60: ifeq          86
      63: aload_0
      64: invokespecial #6                  // Method peek:()C
      67: bipush        34
      69: if_icmpne     86
      72: aload_2
      73: iload         4
      75: invokevirtual #40                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      78: pop
      79: aload_0
      80: invokespecial #8                  // Method next:()V
      83: goto          144
      86: iload_3
      87: ifne          94
      90: iconst_1
      91: goto          95
      94: iconst_0
      95: istore_3
      96: goto          144
      99: iload_3
     100: ifne          137
     103: iload         4
     105: aload_0
     106: getfield      #3                  // Field delimiter:C
     109: if_icmpne     137
     112: aload_1
     113: aload_2
     114: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     117: invokevirtual #13                 // Method java/lang/String.trim:()Ljava/lang/String;
     120: invokeinterface #41,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     125: pop
     126: new           #17                 // class java/lang/StringBuilder
     129: dup
     130: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     133: astore_2
     134: goto          144
     137: aload_2
     138: iload         4
     140: invokevirtual #40                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     143: pop
     144: goto          18
     147: aload_1
     148: aload_2
     149: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     152: invokevirtual #13                 // Method java/lang/String.trim:()Ljava/lang/String;
     155: invokeinterface #41,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     160: pop
     161: aload_0
     162: invokevirtual #11                 // Method ready:()Z
     165: ifeq          193
     168: aload_0
     169: invokespecial #6                  // Method peek:()C
     172: bipush        13
     174: if_icmpeq     186
     177: aload_0
     178: invokespecial #6                  // Method peek:()C
     181: bipush        10
     183: if_icmpne     193
     186: aload_0
     187: invokespecial #8                  // Method next:()V
     190: goto          161
     193: iconst_0
     194: anewarray     #42                 // class java/lang/String
     197: astore        4
     199: aload_1
     200: aload         4
     202: invokeinterface #43,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     207: checkcast     #44                 // class "[Ljava/lang/String;"
     210: astore        4
     212: aload         4
     214: areturn

  private boolean more() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: iconst_1
       5: if_icmpeq     15
       8: aload_0
       9: invokevirtual #11                 // Method ready:()Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  private boolean finished(boolean, int) throws org.hl7.fhir.exceptions.FHIRException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #45                 // Field multiline:Z
       4: ifeq          62
       7: aload_0
       8: getfield      #10                 // Field cols:[Ljava/lang/String;
      11: ifnull        62
      14: iload_2
      15: aload_0
      16: getfield      #10                 // Field cols:[Ljava/lang/String;
      19: arraylength
      20: if_icmpeq     56
      23: iload_2
      24: aload_0
      25: getfield      #10                 // Field cols:[Ljava/lang/String;
      28: arraylength
      29: iconst_1
      30: isub
      31: if_icmpne     60
      34: iload_1
      35: ifne          60
      38: aload_0
      39: invokespecial #6                  // Method peek:()C
      42: bipush        13
      44: if_icmpeq     56
      47: aload_0
      48: invokespecial #6                  // Method peek:()C
      51: bipush        10
      53: if_icmpne     60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: ireturn
      62: iload_1
      63: ifne          88
      66: aload_0
      67: invokespecial #6                  // Method peek:()C
      70: bipush        13
      72: if_icmpeq     84
      75: aload_0
      76: invokespecial #6                  // Method peek:()C
      79: bipush        10
      81: if_icmpne     88
      84: iconst_1
      85: goto          89
      88: iconst_0
      89: ireturn

  private char peek() throws org.hl7.fhir.exceptions.FHIRException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: ifne          11
       7: aload_0
       8: invokespecial #8                  // Method next:()V
      11: aload_0
      12: getfield      #4                  // Field state:I
      15: iconst_1
      16: if_icmpne     24
      19: aload_0
      20: getfield      #46                 // Field pc:C
      23: ireturn
      24: new           #16                 // class org/hl7/fhir/exceptions/FHIRException
      27: dup
      28: ldc           #47                 // String read past end of source
      30: invokespecial #22                 // Method org/hl7/fhir/exceptions/FHIRException."<init>":(Ljava/lang/String;)V
      33: athrow

  private void next() throws org.hl7.fhir.exceptions.FHIRException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field state:I
       4: iconst_2
       5: if_icmpne     18
       8: new           #16                 // class org/hl7/fhir/exceptions/FHIRException
      11: dup
      12: ldc           #47                 // String read past end of source
      14: invokespecial #22                 // Method org/hl7/fhir/exceptions/FHIRException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: iconst_1
      20: putfield      #4                  // Field state:I
      23: aload_0
      24: invokevirtual #48                 // Method read:()I
      27: istore_1
      28: iload_1
      29: iconst_m1
      30: if_icmpne     41
      33: aload_0
      34: iconst_2
      35: putfield      #4                  // Field state:I
      38: goto          47
      41: aload_0
      42: iload_1
      43: i2c
      44: putfield      #46                 // Field pc:C
      47: return

  public void checkColumn(int, java.lang.String, java.lang.String) throws org.hl7.fhir.exceptions.FHIRException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field cols:[Ljava/lang/String;
       4: arraylength
       5: iload_1
       6: if_icmpge     72
       9: new           #16                 // class org/hl7/fhir/exceptions/FHIRException
      12: dup
      13: new           #17                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #49                 // String Error parsing
      22: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_3
      26: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #50                 // String : expected column
      31: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_2
      35: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #51                 // String  at col
      40: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: iload_1
      44: invokevirtual #52                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      47: ldc           #53                 // String  but only found
      49: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_0
      53: getfield      #10                 // Field cols:[Ljava/lang/String;
      56: arraylength
      57: invokevirtual #52                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      60: ldc           #54                 // String  cols
      62: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #22                 // Method org/hl7/fhir/exceptions/FHIRException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: aload_0
      73: getfield      #10                 // Field cols:[Ljava/lang/String;
      76: iload_1
      77: iconst_1
      78: isub
      79: aaload
      80: aload_2
      81: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      84: ifne          153
      87: new           #16                 // class org/hl7/fhir/exceptions/FHIRException
      90: dup
      91: new           #17                 // class java/lang/StringBuilder
      94: dup
      95: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      98: ldc           #49                 // String Error parsing
     100: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: aload_3
     104: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: ldc           #50                 // String : expected column
     109: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: aload_2
     113: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: ldc           #51                 // String  at col
     118: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: iload_1
     122: invokevirtual #52                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     125: ldc           #55                 // String  but found \'
     127: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: aload_0
     131: getfield      #10                 // Field cols:[Ljava/lang/String;
     134: iload_1
     135: iconst_1
     136: isub
     137: aaload
     138: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: ldc           #56                 // String \'
     143: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     149: invokespecial #22                 // Method org/hl7/fhir/exceptions/FHIRException."<init>":(Ljava/lang/String;)V
     152: athrow
     153: return

  public java.lang.String value(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #12                 // Field cells:[Ljava/lang/String;
       5: arraylength
       6: if_icmple     11
       9: aconst_null
      10: areturn
      11: aload_0
      12: getfield      #12                 // Field cells:[Ljava/lang/String;
      15: iload_1
      16: iconst_1
      17: isub
      18: aaload
      19: invokestatic  #23                 // Method org/hl7/fhir/utilities/Utilities.noString:(Ljava/lang/String;)Z
      22: ifeq          27
      25: aconst_null
      26: areturn
      27: aload_0
      28: getfield      #12                 // Field cells:[Ljava/lang/String;
      31: iload_1
      32: iconst_1
      33: isub
      34: aaload
      35: areturn

  public char getDelimiter();
    Code:
       0: aload_0
       1: getfield      #3                  // Field delimiter:C
       4: ireturn

  public void setDelimiter(char);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field delimiter:C
       5: return

  public boolean isMultiline();
    Code:
       0: aload_0
       1: getfield      #45                 // Field multiline:Z
       4: ireturn

  public void setMultiline(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #45                 // Field multiline:Z
       5: return
}
