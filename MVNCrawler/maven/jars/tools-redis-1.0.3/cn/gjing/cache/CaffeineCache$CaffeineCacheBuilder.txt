Compiled from "CaffeineCache.java"
public class cn.gjing.cache.CaffeineCache$CaffeineCacheBuilder {
  private boolean expireAfterAccess$set;

  private java.lang.Integer expireAfterAccess;

  private boolean expireAfterWrite$set;

  private java.lang.Integer expireAfterWrite;

  private boolean refreshAfterWrite$set;

  private java.lang.Integer refreshAfterWrite;

  private boolean initialCapacity$set;

  private java.lang.Integer initialCapacity;

  private boolean maximumSize$set;

  private java.lang.Integer maximumSize;

  cn.gjing.cache.CaffeineCache$CaffeineCacheBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public cn.gjing.cache.CaffeineCache$CaffeineCacheBuilder expireAfterAccess(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field expireAfterAccess:Ljava/lang/Integer;
       5: aload_0
       6: iconst_1
       7: putfield      #3                  // Field expireAfterAccess$set:Z
      10: aload_0
      11: areturn

  public cn.gjing.cache.CaffeineCache$CaffeineCacheBuilder expireAfterWrite(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field expireAfterWrite:Ljava/lang/Integer;
       5: aload_0
       6: iconst_1
       7: putfield      #5                  // Field expireAfterWrite$set:Z
      10: aload_0
      11: areturn

  public cn.gjing.cache.CaffeineCache$CaffeineCacheBuilder refreshAfterWrite(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field refreshAfterWrite:Ljava/lang/Integer;
       5: aload_0
       6: iconst_1
       7: putfield      #7                  // Field refreshAfterWrite$set:Z
      10: aload_0
      11: areturn

  public cn.gjing.cache.CaffeineCache$CaffeineCacheBuilder initialCapacity(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field initialCapacity:Ljava/lang/Integer;
       5: aload_0
       6: iconst_1
       7: putfield      #9                  // Field initialCapacity$set:Z
      10: aload_0
      11: areturn

  public cn.gjing.cache.CaffeineCache$CaffeineCacheBuilder maximumSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field maximumSize:Ljava/lang/Integer;
       5: aload_0
       6: iconst_1
       7: putfield      #11                 // Field maximumSize$set:Z
      10: aload_0
      11: areturn

  public cn.gjing.cache.CaffeineCache build();
    Code:
       0: aload_0
       1: getfield      #2                  // Field expireAfterAccess:Ljava/lang/Integer;
       4: astore_1
       5: aload_0
       6: getfield      #3                  // Field expireAfterAccess$set:Z
       9: ifne          16
      12: invokestatic  #12                 // Method cn/gjing/cache/CaffeineCache.access$000:()Ljava/lang/Integer;
      15: astore_1
      16: aload_0
      17: getfield      #4                  // Field expireAfterWrite:Ljava/lang/Integer;
      20: astore_2
      21: aload_0
      22: getfield      #5                  // Field expireAfterWrite$set:Z
      25: ifne          32
      28: invokestatic  #13                 // Method cn/gjing/cache/CaffeineCache.access$100:()Ljava/lang/Integer;
      31: astore_2
      32: aload_0
      33: getfield      #6                  // Field refreshAfterWrite:Ljava/lang/Integer;
      36: astore_3
      37: aload_0
      38: getfield      #7                  // Field refreshAfterWrite$set:Z
      41: ifne          48
      44: invokestatic  #14                 // Method cn/gjing/cache/CaffeineCache.access$200:()Ljava/lang/Integer;
      47: astore_3
      48: aload_0
      49: getfield      #8                  // Field initialCapacity:Ljava/lang/Integer;
      52: astore        4
      54: aload_0
      55: getfield      #9                  // Field initialCapacity$set:Z
      58: ifne          66
      61: invokestatic  #15                 // Method cn/gjing/cache/CaffeineCache.access$300:()Ljava/lang/Integer;
      64: astore        4
      66: aload_0
      67: getfield      #10                 // Field maximumSize:Ljava/lang/Integer;
      70: astore        5
      72: aload_0
      73: getfield      #11                 // Field maximumSize$set:Z
      76: ifne          84
      79: invokestatic  #16                 // Method cn/gjing/cache/CaffeineCache.access$400:()Ljava/lang/Integer;
      82: astore        5
      84: new           #17                 // class cn/gjing/cache/CaffeineCache
      87: dup
      88: aload_1
      89: aload_2
      90: aload_3
      91: aload         4
      93: aload         5
      95: invokespecial #18                 // Method cn/gjing/cache/CaffeineCache."<init>":(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)V
      98: areturn

  public java.lang.String toString();
    Code:
       0: new           #19                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #21                 // String CaffeineCache.CaffeineCacheBuilder(expireAfterAccess=
       9: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field expireAfterAccess:Ljava/lang/Integer;
      16: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #24                 // String , expireAfterWrite=
      21: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #4                  // Field expireAfterWrite:Ljava/lang/Integer;
      28: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #25                 // String , refreshAfterWrite=
      33: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #6                  // Field refreshAfterWrite:Ljava/lang/Integer;
      40: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #26                 // String , initialCapacity=
      45: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #8                  // Field initialCapacity:Ljava/lang/Integer;
      52: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #27                 // String , maximumSize=
      57: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #10                 // Field maximumSize:Ljava/lang/Integer;
      64: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: ldc           #28                 // String )
      69: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: areturn
}
