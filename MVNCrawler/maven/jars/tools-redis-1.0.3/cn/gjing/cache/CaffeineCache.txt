Compiled from "CaffeineCache.java"
public class cn.gjing.cache.CaffeineCache {
  private java.lang.Integer expireAfterAccess;

  private java.lang.Integer expireAfterWrite;

  private java.lang.Integer refreshAfterWrite;

  private java.lang.Integer initialCapacity;

  private java.lang.Integer maximumSize;

  private static java.lang.Integer $default$expireAfterAccess();
    Code:
       0: iconst_m1
       1: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       4: areturn

  private static java.lang.Integer $default$expireAfterWrite();
    Code:
       0: iconst_m1
       1: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       4: areturn

  private static java.lang.Integer $default$refreshAfterWrite();
    Code:
       0: iconst_m1
       1: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       4: areturn

  private static java.lang.Integer $default$initialCapacity();
    Code:
       0: iconst_m1
       1: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       4: areturn

  private static java.lang.Integer $default$maximumSize();
    Code:
       0: iconst_m1
       1: invokestatic  #6                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       4: areturn

  public static cn.gjing.cache.CaffeineCache$CaffeineCacheBuilder builder();
    Code:
       0: new           #7                  // class cn/gjing/cache/CaffeineCache$CaffeineCacheBuilder
       3: dup
       4: invokespecial #8                  // Method cn/gjing/cache/CaffeineCache$CaffeineCacheBuilder."<init>":()V
       7: areturn

  public java.lang.Integer getExpireAfterAccess();
    Code:
       0: aload_0
       1: getfield      #9                  // Field expireAfterAccess:Ljava/lang/Integer;
       4: areturn

  public java.lang.Integer getExpireAfterWrite();
    Code:
       0: aload_0
       1: getfield      #10                 // Field expireAfterWrite:Ljava/lang/Integer;
       4: areturn

  public java.lang.Integer getRefreshAfterWrite();
    Code:
       0: aload_0
       1: getfield      #11                 // Field refreshAfterWrite:Ljava/lang/Integer;
       4: areturn

  public java.lang.Integer getInitialCapacity();
    Code:
       0: aload_0
       1: getfield      #12                 // Field initialCapacity:Ljava/lang/Integer;
       4: areturn

  public java.lang.Integer getMaximumSize();
    Code:
       0: aload_0
       1: getfield      #13                 // Field maximumSize:Ljava/lang/Integer;
       4: areturn

  public void setExpireAfterAccess(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field expireAfterAccess:Ljava/lang/Integer;
       5: return

  public void setExpireAfterWrite(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field expireAfterWrite:Ljava/lang/Integer;
       5: return

  public void setRefreshAfterWrite(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field refreshAfterWrite:Ljava/lang/Integer;
       5: return

  public void setInitialCapacity(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field initialCapacity:Ljava/lang/Integer;
       5: return

  public void setMaximumSize(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field maximumSize:Ljava/lang/Integer;
       5: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #14                 // class cn/gjing/cache/CaffeineCache
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #14                 // class cn/gjing/cache/CaffeineCache
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #15                 // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokevirtual #16                 // Method getExpireAfterAccess:()Ljava/lang/Integer;
      35: astore_3
      36: aload_2
      37: invokevirtual #16                 // Method getExpireAfterAccess:()Ljava/lang/Integer;
      40: astore        4
      42: aload_3
      43: ifnonnull     54
      46: aload         4
      48: ifnull        65
      51: goto          63
      54: aload_3
      55: aload         4
      57: invokevirtual #17                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifne          65
      63: iconst_0
      64: ireturn
      65: aload_0
      66: invokevirtual #18                 // Method getExpireAfterWrite:()Ljava/lang/Integer;
      69: astore        5
      71: aload_2
      72: invokevirtual #18                 // Method getExpireAfterWrite:()Ljava/lang/Integer;
      75: astore        6
      77: aload         5
      79: ifnonnull     90
      82: aload         6
      84: ifnull        102
      87: goto          100
      90: aload         5
      92: aload         6
      94: invokevirtual #17                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      97: ifne          102
     100: iconst_0
     101: ireturn
     102: aload_0
     103: invokevirtual #19                 // Method getRefreshAfterWrite:()Ljava/lang/Integer;
     106: astore        7
     108: aload_2
     109: invokevirtual #19                 // Method getRefreshAfterWrite:()Ljava/lang/Integer;
     112: astore        8
     114: aload         7
     116: ifnonnull     127
     119: aload         8
     121: ifnull        139
     124: goto          137
     127: aload         7
     129: aload         8
     131: invokevirtual #17                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     134: ifne          139
     137: iconst_0
     138: ireturn
     139: aload_0
     140: invokevirtual #20                 // Method getInitialCapacity:()Ljava/lang/Integer;
     143: astore        9
     145: aload_2
     146: invokevirtual #20                 // Method getInitialCapacity:()Ljava/lang/Integer;
     149: astore        10
     151: aload         9
     153: ifnonnull     164
     156: aload         10
     158: ifnull        176
     161: goto          174
     164: aload         9
     166: aload         10
     168: invokevirtual #17                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     171: ifne          176
     174: iconst_0
     175: ireturn
     176: aload_0
     177: invokevirtual #21                 // Method getMaximumSize:()Ljava/lang/Integer;
     180: astore        11
     182: aload_2
     183: invokevirtual #21                 // Method getMaximumSize:()Ljava/lang/Integer;
     186: astore        12
     188: aload         11
     190: ifnonnull     201
     193: aload         12
     195: ifnull        213
     198: goto          211
     201: aload         11
     203: aload         12
     205: invokevirtual #17                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     208: ifne          213
     211: iconst_0
     212: ireturn
     213: iconst_1
     214: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #14                 // class cn/gjing/cache/CaffeineCache
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #16                 // Method getExpireAfterAccess:()Ljava/lang/Integer;
       9: astore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: aload_3
      15: ifnonnull     23
      18: bipush        43
      20: goto          27
      23: aload_3
      24: invokevirtual #22                 // Method java/lang/Object.hashCode:()I
      27: iadd
      28: istore_2
      29: aload_0
      30: invokevirtual #18                 // Method getExpireAfterWrite:()Ljava/lang/Integer;
      33: astore        4
      35: iload_2
      36: bipush        59
      38: imul
      39: aload         4
      41: ifnonnull     49
      44: bipush        43
      46: goto          54
      49: aload         4
      51: invokevirtual #22                 // Method java/lang/Object.hashCode:()I
      54: iadd
      55: istore_2
      56: aload_0
      57: invokevirtual #19                 // Method getRefreshAfterWrite:()Ljava/lang/Integer;
      60: astore        5
      62: iload_2
      63: bipush        59
      65: imul
      66: aload         5
      68: ifnonnull     76
      71: bipush        43
      73: goto          81
      76: aload         5
      78: invokevirtual #22                 // Method java/lang/Object.hashCode:()I
      81: iadd
      82: istore_2
      83: aload_0
      84: invokevirtual #20                 // Method getInitialCapacity:()Ljava/lang/Integer;
      87: astore        6
      89: iload_2
      90: bipush        59
      92: imul
      93: aload         6
      95: ifnonnull     103
      98: bipush        43
     100: goto          108
     103: aload         6
     105: invokevirtual #22                 // Method java/lang/Object.hashCode:()I
     108: iadd
     109: istore_2
     110: aload_0
     111: invokevirtual #21                 // Method getMaximumSize:()Ljava/lang/Integer;
     114: astore        7
     116: iload_2
     117: bipush        59
     119: imul
     120: aload         7
     122: ifnonnull     130
     125: bipush        43
     127: goto          135
     130: aload         7
     132: invokevirtual #22                 // Method java/lang/Object.hashCode:()I
     135: iadd
     136: istore_2
     137: iload_2
     138: ireturn

  public java.lang.String toString();
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #25                 // String CaffeineCache(expireAfterAccess=
       9: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #16                 // Method getExpireAfterAccess:()Ljava/lang/Integer;
      16: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #28                 // String , expireAfterWrite=
      21: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #18                 // Method getExpireAfterWrite:()Ljava/lang/Integer;
      28: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #29                 // String , refreshAfterWrite=
      33: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #19                 // Method getRefreshAfterWrite:()Ljava/lang/Integer;
      40: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #30                 // String , initialCapacity=
      45: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #20                 // Method getInitialCapacity:()Ljava/lang/Integer;
      52: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #31                 // String , maximumSize=
      57: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #21                 // Method getMaximumSize:()Ljava/lang/Integer;
      64: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: ldc           #32                 // String )
      69: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: areturn

  public cn.gjing.cache.CaffeineCache();
    Code:
       0: aload_0
       1: invokespecial #34                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #5                  // Method $default$expireAfterAccess:()Ljava/lang/Integer;
       8: putfield      #9                  // Field expireAfterAccess:Ljava/lang/Integer;
      11: aload_0
      12: invokestatic  #4                  // Method $default$expireAfterWrite:()Ljava/lang/Integer;
      15: putfield      #10                 // Field expireAfterWrite:Ljava/lang/Integer;
      18: aload_0
      19: invokestatic  #3                  // Method $default$refreshAfterWrite:()Ljava/lang/Integer;
      22: putfield      #11                 // Field refreshAfterWrite:Ljava/lang/Integer;
      25: aload_0
      26: invokestatic  #2                  // Method $default$initialCapacity:()Ljava/lang/Integer;
      29: putfield      #12                 // Field initialCapacity:Ljava/lang/Integer;
      32: aload_0
      33: invokestatic  #1                  // Method $default$maximumSize:()Ljava/lang/Integer;
      36: putfield      #13                 // Field maximumSize:Ljava/lang/Integer;
      39: return

  public cn.gjing.cache.CaffeineCache(java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #9                  // Field expireAfterAccess:Ljava/lang/Integer;
       9: aload_0
      10: aload_2
      11: putfield      #10                 // Field expireAfterWrite:Ljava/lang/Integer;
      14: aload_0
      15: aload_3
      16: putfield      #11                 // Field refreshAfterWrite:Ljava/lang/Integer;
      19: aload_0
      20: aload         4
      22: putfield      #12                 // Field initialCapacity:Ljava/lang/Integer;
      25: aload_0
      26: aload         5
      28: putfield      #13                 // Field maximumSize:Ljava/lang/Integer;
      31: return

  static java.lang.Integer access$000();
    Code:
       0: invokestatic  #5                  // Method $default$expireAfterAccess:()Ljava/lang/Integer;
       3: areturn

  static java.lang.Integer access$100();
    Code:
       0: invokestatic  #4                  // Method $default$expireAfterWrite:()Ljava/lang/Integer;
       3: areturn

  static java.lang.Integer access$200();
    Code:
       0: invokestatic  #3                  // Method $default$refreshAfterWrite:()Ljava/lang/Integer;
       3: areturn

  static java.lang.Integer access$300();
    Code:
       0: invokestatic  #2                  // Method $default$initialCapacity:()Ljava/lang/Integer;
       3: areturn

  static java.lang.Integer access$400();
    Code:
       0: invokestatic  #1                  // Method $default$maximumSize:()Ljava/lang/Integer;
       3: areturn
}
