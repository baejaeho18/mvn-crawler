Compiled from "SecondCacheManager.java"
class cn.gjing.cache.core.SecondCacheManager implements org.springframework.cache.CacheManager {
  private org.springframework.data.redis.core.RedisTemplate<java.lang.Object, java.lang.Object> redisTemplate;

  private java.util.concurrent.ConcurrentHashMap<java.lang.String, org.springframework.cache.Cache> cacheMap;

  private cn.gjing.cache.SecondCache secondCache;

  private boolean dynamic;

  private java.util.Set<java.lang.String> cacheNames;

  private org.springframework.data.redis.core.script.DefaultRedisScript<java.lang.Boolean> setNxScript;

  private org.springframework.data.redis.core.script.DefaultRedisScript<java.lang.Boolean> setScript;

  private cn.gjing.cache.RedisCache redisCache;

  private cn.gjing.cache.CaffeineCache caffeineCache;

  cn.gjing.cache.core.SecondCacheManager(cn.gjing.cache.SecondCache, org.springframework.data.redis.core.script.DefaultRedisScript<java.lang.Boolean>, org.springframework.data.redis.core.script.DefaultRedisScript<java.lang.Boolean>, cn.gjing.cache.RedisCache, cn.gjing.cache.CaffeineCache);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field cacheMap:Ljava/util/concurrent/ConcurrentHashMap;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field secondCache:Lcn/gjing/cache/SecondCache;
      20: aload_0
      21: aload_1
      22: invokevirtual #6                  // Method cn/gjing/cache/SecondCache.isDynamic:()Z
      25: putfield      #7                  // Field dynamic:Z
      28: aload_0
      29: aload_1
      30: invokevirtual #8                  // Method cn/gjing/cache/SecondCache.getCacheNames:()Ljava/util/Set;
      33: putfield      #9                  // Field cacheNames:Ljava/util/Set;
      36: aload_0
      37: aload_2
      38: putfield      #10                 // Field setNxScript:Lorg/springframework/data/redis/core/script/DefaultRedisScript;
      41: aload_0
      42: aload_3
      43: putfield      #11                 // Field setScript:Lorg/springframework/data/redis/core/script/DefaultRedisScript;
      46: aload_0
      47: aload         4
      49: putfield      #12                 // Field redisCache:Lcn/gjing/cache/RedisCache;
      52: aload_0
      53: aload         5
      55: putfield      #13                 // Field caffeineCache:Lcn/gjing/cache/CaffeineCache;
      58: return

  public org.springframework.cache.Cache getCache(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field cacheMap:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #14                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #15                 // class org/springframework/cache/Cache
      11: astore_2
      12: aload_2
      13: ifnull        18
      16: aload_2
      17: areturn
      18: aload_0
      19: getfield      #7                  // Field dynamic:Z
      22: ifne          40
      25: aload_0
      26: getfield      #9                  // Field cacheNames:Ljava/util/Set;
      29: aload_1
      30: invokeinterface #16,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      35: ifeq          40
      38: aconst_null
      39: areturn
      40: new           #17                 // class cn/gjing/cache/core/SecondCacheAdapter
      43: dup
      44: aload_1
      45: aload_0
      46: getfield      #18                 // Field redisTemplate:Lorg/springframework/data/redis/core/RedisTemplate;
      49: aload_0
      50: invokespecial #19                 // Method caffeineCache:()Lcom/github/benmanes/caffeine/cache/Cache;
      53: aload_0
      54: getfield      #5                  // Field secondCache:Lcn/gjing/cache/SecondCache;
      57: aload_0
      58: getfield      #11                 // Field setScript:Lorg/springframework/data/redis/core/script/DefaultRedisScript;
      61: aload_0
      62: getfield      #10                 // Field setNxScript:Lorg/springframework/data/redis/core/script/DefaultRedisScript;
      65: aload_0
      66: getfield      #12                 // Field redisCache:Lcn/gjing/cache/RedisCache;
      69: invokespecial #20                 // Method cn/gjing/cache/core/SecondCacheAdapter."<init>":(Ljava/lang/String;Lorg/springframework/data/redis/core/RedisTemplate;Lcom/github/benmanes/caffeine/cache/Cache;Lcn/gjing/cache/SecondCache;Lorg/springframework/data/redis/core/script/DefaultRedisScript;Lorg/springframework/data/redis/core/script/DefaultRedisScript;Lcn/gjing/cache/RedisCache;)V
      72: astore_2
      73: aload_0
      74: getfield      #4                  // Field cacheMap:Ljava/util/concurrent/ConcurrentHashMap;
      77: aload_1
      78: aload_2
      79: invokevirtual #21                 // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      82: checkcast     #15                 // class org/springframework/cache/Cache
      85: astore_3
      86: aload_3
      87: ifnonnull     94
      90: aload_2
      91: goto          95
      94: aload_3
      95: areturn

  public java.util.Collection<java.lang.String> getCacheNames();
    Code:
       0: aload_0
       1: getfield      #9                  // Field cacheNames:Ljava/util/Set;
       4: areturn

  void clearLocal(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field cacheMap:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #14                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #15                 // class org/springframework/cache/Cache
      11: astore_3
      12: aload_3
      13: ifnonnull     17
      16: return
      17: aload_3
      18: checkcast     #17                 // class cn/gjing/cache/core/SecondCacheAdapter
      21: astore        4
      23: aload         4
      25: aload_2
      26: invokevirtual #22                 // Method cn/gjing/cache/core/SecondCacheAdapter.clearLocal:(Ljava/lang/Object;)V
      29: return

  private com.github.benmanes.caffeine.cache.Cache<java.lang.Object, java.lang.Object> caffeineCache();
    Code:
       0: invokestatic  #23                 // Method com/github/benmanes/caffeine/cache/Caffeine.newBuilder:()Lcom/github/benmanes/caffeine/cache/Caffeine;
       3: astore_1
       4: aload_0
       5: getfield      #13                 // Field caffeineCache:Lcn/gjing/cache/CaffeineCache;
       8: invokevirtual #24                 // Method cn/gjing/cache/CaffeineCache.getExpireAfterAccess:()Ljava/lang/Integer;
      11: invokevirtual #25                 // Method java/lang/Integer.intValue:()I
      14: ifle          36
      17: aload_1
      18: aload_0
      19: getfield      #13                 // Field caffeineCache:Lcn/gjing/cache/CaffeineCache;
      22: invokevirtual #24                 // Method cn/gjing/cache/CaffeineCache.getExpireAfterAccess:()Ljava/lang/Integer;
      25: invokevirtual #25                 // Method java/lang/Integer.intValue:()I
      28: i2l
      29: getstatic     #26                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      32: invokevirtual #27                 // Method com/github/benmanes/caffeine/cache/Caffeine.expireAfterAccess:(JLjava/util/concurrent/TimeUnit;)Lcom/github/benmanes/caffeine/cache/Caffeine;
      35: pop
      36: aload_0
      37: getfield      #13                 // Field caffeineCache:Lcn/gjing/cache/CaffeineCache;
      40: invokevirtual #28                 // Method cn/gjing/cache/CaffeineCache.getExpireAfterWrite:()Ljava/lang/Integer;
      43: invokevirtual #25                 // Method java/lang/Integer.intValue:()I
      46: ifle          68
      49: aload_1
      50: aload_0
      51: getfield      #13                 // Field caffeineCache:Lcn/gjing/cache/CaffeineCache;
      54: invokevirtual #28                 // Method cn/gjing/cache/CaffeineCache.getExpireAfterWrite:()Ljava/lang/Integer;
      57: invokevirtual #25                 // Method java/lang/Integer.intValue:()I
      60: i2l
      61: getstatic     #26                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      64: invokevirtual #29                 // Method com/github/benmanes/caffeine/cache/Caffeine.expireAfterWrite:(JLjava/util/concurrent/TimeUnit;)Lcom/github/benmanes/caffeine/cache/Caffeine;
      67: pop
      68: aload_0
      69: getfield      #13                 // Field caffeineCache:Lcn/gjing/cache/CaffeineCache;
      72: invokevirtual #30                 // Method cn/gjing/cache/CaffeineCache.getInitialCapacity:()Ljava/lang/Integer;
      75: invokevirtual #25                 // Method java/lang/Integer.intValue:()I
      78: ifle          96
      81: aload_1
      82: aload_0
      83: getfield      #13                 // Field caffeineCache:Lcn/gjing/cache/CaffeineCache;
      86: invokevirtual #30                 // Method cn/gjing/cache/CaffeineCache.getInitialCapacity:()Ljava/lang/Integer;
      89: invokevirtual #25                 // Method java/lang/Integer.intValue:()I
      92: invokevirtual #31                 // Method com/github/benmanes/caffeine/cache/Caffeine.initialCapacity:(I)Lcom/github/benmanes/caffeine/cache/Caffeine;
      95: pop
      96: aload_0
      97: getfield      #13                 // Field caffeineCache:Lcn/gjing/cache/CaffeineCache;
     100: invokevirtual #32                 // Method cn/gjing/cache/CaffeineCache.getMaximumSize:()Ljava/lang/Integer;
     103: invokevirtual #25                 // Method java/lang/Integer.intValue:()I
     106: ifle          125
     109: aload_1
     110: aload_0
     111: getfield      #13                 // Field caffeineCache:Lcn/gjing/cache/CaffeineCache;
     114: invokevirtual #32                 // Method cn/gjing/cache/CaffeineCache.getMaximumSize:()Ljava/lang/Integer;
     117: invokevirtual #25                 // Method java/lang/Integer.intValue:()I
     120: i2l
     121: invokevirtual #33                 // Method com/github/benmanes/caffeine/cache/Caffeine.maximumSize:(J)Lcom/github/benmanes/caffeine/cache/Caffeine;
     124: pop
     125: aload_0
     126: getfield      #13                 // Field caffeineCache:Lcn/gjing/cache/CaffeineCache;
     129: invokevirtual #34                 // Method cn/gjing/cache/CaffeineCache.getRefreshAfterWrite:()Ljava/lang/Integer;
     132: invokevirtual #25                 // Method java/lang/Integer.intValue:()I
     135: ifle          157
     138: aload_1
     139: aload_0
     140: getfield      #13                 // Field caffeineCache:Lcn/gjing/cache/CaffeineCache;
     143: invokevirtual #34                 // Method cn/gjing/cache/CaffeineCache.getRefreshAfterWrite:()Ljava/lang/Integer;
     146: invokevirtual #25                 // Method java/lang/Integer.intValue:()I
     149: i2l
     150: getstatic     #26                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     153: invokevirtual #35                 // Method com/github/benmanes/caffeine/cache/Caffeine.refreshAfterWrite:(JLjava/util/concurrent/TimeUnit;)Lcom/github/benmanes/caffeine/cache/Caffeine;
     156: pop
     157: aload_1
     158: invokevirtual #36                 // Method com/github/benmanes/caffeine/cache/Caffeine.build:()Lcom/github/benmanes/caffeine/cache/Cache;
     161: areturn
}
