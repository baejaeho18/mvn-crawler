Compiled from "DateType.java"
public class cloud.agileframework.elasticsearch.types.DateType implements cloud.agileframework.elasticsearch.types.TypeHelper<java.sql.Date> {
  public static final cloud.agileframework.elasticsearch.types.DateType INSTANCE;

  private cloud.agileframework.elasticsearch.types.DateType();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.sql.Date fromValue(java.lang.Object, java.util.Map<java.lang.String, java.lang.Object>) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_2
       7: ifnull        24
      10: aload_2
      11: ldc           #2                  // String calendar
      13: invokeinterface #3,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #4                  // class java/util/Calendar
      21: goto          25
      24: aconst_null
      25: astore_3
      26: aload_1
      27: instanceof    #5                  // class java/sql/Date
      30: ifeq          43
      33: aload_0
      34: aload_1
      35: checkcast     #5                  // class java/sql/Date
      38: aload_3
      39: invokevirtual #6                  // Method asDate:(Ljava/sql/Date;Ljava/util/Calendar;)Ljava/sql/Date;
      42: areturn
      43: aload_1
      44: instanceof    #7                  // class java/lang/String
      47: ifeq          60
      50: aload_0
      51: aload_1
      52: checkcast     #7                  // class java/lang/String
      55: aload_3
      56: invokevirtual #8                  // Method asDate:(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Date;
      59: areturn
      60: aload_1
      61: instanceof    #9                  // class java/lang/Number
      64: ifeq          76
      67: aload_0
      68: aload_1
      69: checkcast     #9                  // class java/lang/Number
      72: invokevirtual #10                 // Method asDate:(Ljava/lang/Number;)Ljava/sql/Date;
      75: areturn
      76: aload_0
      77: aload_1
      78: invokevirtual #11                 // Method objectConversionException:(Ljava/lang/Object;)Ljava/sql/SQLDataException;
      81: athrow

  public java.sql.Date asDate(java.sql.Date, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: ifnonnull     6
       4: aload_1
       5: areturn
       6: aload_0
       7: aload_1
       8: invokevirtual #12                 // Method java/sql/Date.toLocalDate:()Ljava/time/LocalDate;
      11: aload_2
      12: invokespecial #13                 // Method localDatetoSqlDate:(Ljava/time/LocalDate;Ljava/util/Calendar;)Ljava/sql/Date;
      15: areturn

  public java.sql.Date asDate(java.lang.String, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: ifnonnull     13
       4: aload_0
       5: aload_1
       6: invokespecial #14                 // Method toLocalDate:(Ljava/lang/String;)Ljava/time/LocalDate;
       9: invokestatic  #15                 // Method java/sql/Date.valueOf:(Ljava/time/LocalDate;)Ljava/sql/Date;
      12: areturn
      13: aload_0
      14: aload_0
      15: aload_1
      16: invokespecial #14                 // Method toLocalDate:(Ljava/lang/String;)Ljava/time/LocalDate;
      19: aload_2
      20: invokespecial #13                 // Method localDatetoSqlDate:(Ljava/time/LocalDate;Ljava/util/Calendar;)Ljava/sql/Date;
      23: areturn
      24: astore_3
      25: aload_0
      26: aload_1
      27: aload_3
      28: invokevirtual #17                 // Method stringConversionException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLDataException;
      31: athrow
    Exception table:
       from    to  target type
           0    12    24   Class java/time/format/DateTimeParseException
          13    23    24   Class java/time/format/DateTimeParseException

  private java.sql.Date localDatetoSqlDate(java.time.LocalDate, java.util.Calendar);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #18                 // Method java/time/LocalDate.getYear:()I
       5: aload_1
       6: invokevirtual #19                 // Method java/time/LocalDate.getMonthValue:()I
       9: iconst_1
      10: isub
      11: aload_1
      12: invokevirtual #20                 // Method java/time/LocalDate.getDayOfMonth:()I
      15: iconst_0
      16: iconst_0
      17: iconst_0
      18: invokevirtual #21                 // Method java/util/Calendar.set:(IIIIII)V
      21: aload_2
      22: bipush        14
      24: iconst_0
      25: invokevirtual #22                 // Method java/util/Calendar.set:(II)V
      28: new           #5                  // class java/sql/Date
      31: dup
      32: aload_2
      33: invokevirtual #23                 // Method java/util/Calendar.getTimeInMillis:()J
      36: invokespecial #24                 // Method java/sql/Date."<init>":(J)V
      39: areturn

  public java.sql.Date asDate(java.lang.Number);
    Code:
       0: new           #5                  // class java/sql/Date
       3: dup
       4: aload_1
       5: invokevirtual #25                 // Method java/lang/Number.longValue:()J
       8: invokespecial #24                 // Method java/sql/Date."<init>":(J)V
      11: areturn

  private java.time.LocalDate toLocalDate(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: ifnull        13
       4: aload_1
       5: invokevirtual #26                 // Method java/lang/String.length:()I
       8: bipush        10
      10: if_icmpge     20
      13: aload_0
      14: aload_1
      15: aconst_null
      16: invokevirtual #17                 // Method stringConversionException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLDataException;
      19: athrow
      20: aload_1
      21: iconst_0
      22: bipush        10
      24: invokevirtual #27                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      27: invokestatic  #28                 // Method java/time/LocalDate.parse:(Ljava/lang/CharSequence;)Ljava/time/LocalDate;
      30: areturn

  public java.lang.String getTypeName();
    Code:
       0: ldc           #29                 // String Date
       2: areturn

  public java.lang.Object fromValue(java.lang.Object, java.util.Map) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #30                 // Method fromValue:(Ljava/lang/Object;Ljava/util/Map;)Ljava/sql/Date;
       6: areturn

  static {};
    Code:
       0: new           #31                 // class cloud/agileframework/elasticsearch/types/DateType
       3: dup
       4: invokespecial #32                 // Method "<init>":()V
       7: putstatic     #33                 // Field INSTANCE:Lcloud/agileframework/elasticsearch/types/DateType;
      10: return
}
