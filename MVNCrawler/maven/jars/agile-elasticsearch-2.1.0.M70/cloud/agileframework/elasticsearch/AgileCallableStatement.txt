Compiled from "AgileCallableStatement.java"
public class cloud.agileframework.elasticsearch.AgileCallableStatement extends cloud.agileframework.elasticsearch.BaseStatement implements java.sql.CallableStatement {
  private java.lang.String sql;

  protected cloud.agileframework.elasticsearch.AgileCallableStatement(cloud.agileframework.elasticsearch.ConnectionEnhanceImpl);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method cloud/agileframework/elasticsearch/BaseStatement."<init>":(Lcloud/agileframework/elasticsearch/ConnectionEnhanceImpl;)V
       5: return

  public cloud.agileframework.elasticsearch.AgileCallableStatement(cloud.agileframework.elasticsearch.ConnectionEnhanceImpl, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method cloud/agileframework/elasticsearch/BaseStatement."<init>":(Lcloud/agileframework/elasticsearch/ConnectionEnhanceImpl;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field sql:Ljava/lang/String;
      10: return

  public void registerOutParameter(int, int) throws java.sql.SQLException;
    Code:
       0: return

  public void registerOutParameter(int, int, int) throws java.sql.SQLException;
    Code:
       0: return

  public boolean wasNull() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String getString(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public boolean getBoolean(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public byte getByte(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public short getShort(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public int getInt(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public long getLong(int) throws java.sql.SQLException;
    Code:
       0: lconst_0
       1: lreturn

  public float getFloat(int) throws java.sql.SQLException;
    Code:
       0: fconst_0
       1: freturn

  public double getDouble(int) throws java.sql.SQLException;
    Code:
       0: dconst_0
       1: dreturn

  public java.math.BigDecimal getBigDecimal(int, int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public byte[] getBytes(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: newarray       byte
       3: areturn

  public java.sql.Date getDate(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Time getTime(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Timestamp getTimestamp(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.lang.Object getObject(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.math.BigDecimal getBigDecimal(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.lang.Object getObject(int, java.util.Map<java.lang.String, java.lang.Class<?>>) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Ref getRef(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Blob getBlob(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Clob getClob(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Array getArray(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Date getDate(int, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Time getTime(int, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Timestamp getTimestamp(int, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public void registerOutParameter(int, int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: return

  public void registerOutParameter(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: return

  public void registerOutParameter(java.lang.String, int, int) throws java.sql.SQLException;
    Code:
       0: return

  public void registerOutParameter(java.lang.String, int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: return

  public java.net.URL getURL(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public void setURL(java.lang.String, java.net.URL) throws java.sql.SQLException;
    Code:
       0: return

  public void setNull(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setBoolean(java.lang.String, boolean) throws java.sql.SQLException;
    Code:
       0: return

  public void setByte(java.lang.String, byte) throws java.sql.SQLException;
    Code:
       0: return

  public void setShort(java.lang.String, short) throws java.sql.SQLException;
    Code:
       0: return

  public void setInt(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setLong(java.lang.String, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setFloat(java.lang.String, float) throws java.sql.SQLException;
    Code:
       0: return

  public void setDouble(java.lang.String, double) throws java.sql.SQLException;
    Code:
       0: return

  public void setBigDecimal(java.lang.String, java.math.BigDecimal) throws java.sql.SQLException;
    Code:
       0: return

  public void setString(java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: return

  public void setBytes(java.lang.String, byte[]) throws java.sql.SQLException;
    Code:
       0: return

  public void setDate(java.lang.String, java.sql.Date) throws java.sql.SQLException;
    Code:
       0: return

  public void setTime(java.lang.String, java.sql.Time) throws java.sql.SQLException;
    Code:
       0: return

  public void setTimestamp(java.lang.String, java.sql.Timestamp) throws java.sql.SQLException;
    Code:
       0: return

  public void setAsciiStream(java.lang.String, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setBinaryStream(java.lang.String, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setObject(java.lang.String, java.lang.Object, int, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setObject(java.lang.String, java.lang.Object, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setObject(java.lang.String, java.lang.Object) throws java.sql.SQLException;
    Code:
       0: return

  public void setCharacterStream(java.lang.String, java.io.Reader, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setDate(java.lang.String, java.sql.Date, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: return

  public void setTime(java.lang.String, java.sql.Time, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: return

  public void setTimestamp(java.lang.String, java.sql.Timestamp, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: return

  public void setNull(java.lang.String, int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: return

  public java.lang.String getString(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public boolean getBoolean(java.lang.String) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public byte getByte(java.lang.String) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public short getShort(java.lang.String) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public int getInt(java.lang.String) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public long getLong(java.lang.String) throws java.sql.SQLException;
    Code:
       0: lconst_0
       1: lreturn

  public float getFloat(java.lang.String) throws java.sql.SQLException;
    Code:
       0: fconst_0
       1: freturn

  public double getDouble(java.lang.String) throws java.sql.SQLException;
    Code:
       0: dconst_0
       1: dreturn

  public byte[] getBytes(java.lang.String) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: newarray       byte
       3: areturn

  public java.sql.Date getDate(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Time getTime(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Timestamp getTimestamp(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.lang.Object getObject(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.math.BigDecimal getBigDecimal(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.lang.Object getObject(java.lang.String, java.util.Map<java.lang.String, java.lang.Class<?>>) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Ref getRef(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Blob getBlob(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Clob getClob(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Array getArray(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Date getDate(java.lang.String, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Time getTime(java.lang.String, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.Timestamp getTimestamp(java.lang.String, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.net.URL getURL(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.RowId getRowId(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.RowId getRowId(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public void setRowId(java.lang.String, java.sql.RowId) throws java.sql.SQLException;
    Code:
       0: return

  public void setNString(java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: return

  public void setNCharacterStream(java.lang.String, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setNClob(java.lang.String, java.sql.NClob) throws java.sql.SQLException;
    Code:
       0: return

  public void setClob(java.lang.String, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setBlob(java.lang.String, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setNClob(java.lang.String, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: return

  public java.sql.NClob getNClob(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.NClob getNClob(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public void setSQLXML(java.lang.String, java.sql.SQLXML) throws java.sql.SQLException;
    Code:
       0: return

  public java.sql.SQLXML getSQLXML(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.SQLXML getSQLXML(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getNString(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getNString(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.io.Reader getNCharacterStream(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.io.Reader getNCharacterStream(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.io.Reader getCharacterStream(int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.io.Reader getCharacterStream(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public void setBlob(java.lang.String, java.sql.Blob) throws java.sql.SQLException;
    Code:
       0: return

  public void setClob(java.lang.String, java.sql.Clob) throws java.sql.SQLException;
    Code:
       0: return

  public void setAsciiStream(java.lang.String, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setBinaryStream(java.lang.String, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setCharacterStream(java.lang.String, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setAsciiStream(java.lang.String, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: return

  public void setBinaryStream(java.lang.String, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: return

  public void setCharacterStream(java.lang.String, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: return

  public void setNCharacterStream(java.lang.String, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: return

  public void setClob(java.lang.String, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: return

  public void setBlob(java.lang.String, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: return

  public void setNClob(java.lang.String, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: return

  public <T> T getObject(int, java.lang.Class<T>) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public <T> T getObject(java.lang.String, java.lang.Class<T>) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public java.sql.ResultSet executeQuery() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method checkOpen:()V
       4: aload_0
       5: getfield      #2                  // Field sql:Ljava/lang/String;
       8: aload_0
       9: invokestatic  #4                  // Method cloud/agileframework/elasticsearch/proxy/JdbcRequest.send:(Ljava/lang/String;Lcloud/agileframework/elasticsearch/BaseStatement;)Lcloud/agileframework/elasticsearch/proxy/JdbcResponse;
      12: astore_1
      13: goto          26
      16: astore_2
      17: new           #6                  // class java/sql/SQLException
      20: dup
      21: aload_2
      22: invokespecial #7                  // Method java/sql/SQLException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
      26: aload_1
      27: invokeinterface #8,  1            // InterfaceMethod cloud/agileframework/elasticsearch/proxy/JdbcResponse.resultSet:()Ljava/sql/ResultSet;
      32: areturn
    Exception table:
       from    to  target type
           4    13    16   Class java/io/IOException

  public int executeUpdate() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method checkOpen:()V
       4: aload_0
       5: getfield      #2                  // Field sql:Ljava/lang/String;
       8: aload_0
       9: invokestatic  #4                  // Method cloud/agileframework/elasticsearch/proxy/JdbcRequest.send:(Ljava/lang/String;Lcloud/agileframework/elasticsearch/BaseStatement;)Lcloud/agileframework/elasticsearch/proxy/JdbcResponse;
      12: astore_1
      13: goto          26
      16: astore_2
      17: new           #6                  // class java/sql/SQLException
      20: dup
      21: aload_2
      22: invokespecial #7                  // Method java/sql/SQLException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
      26: aload_1
      27: invokeinterface #9,  1            // InterfaceMethod cloud/agileframework/elasticsearch/proxy/JdbcResponse.count:()I
      32: ireturn
    Exception table:
       from    to  target type
           4    13    16   Class java/io/IOException

  public void setNull(int, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setBoolean(int, boolean) throws java.sql.SQLException;
    Code:
       0: return

  public void setByte(int, byte) throws java.sql.SQLException;
    Code:
       0: return

  public void setShort(int, short) throws java.sql.SQLException;
    Code:
       0: return

  public void setInt(int, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setLong(int, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setFloat(int, float) throws java.sql.SQLException;
    Code:
       0: return

  public void setDouble(int, double) throws java.sql.SQLException;
    Code:
       0: return

  public void setBigDecimal(int, java.math.BigDecimal) throws java.sql.SQLException;
    Code:
       0: return

  public void setString(int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: return

  public void setBytes(int, byte[]) throws java.sql.SQLException;
    Code:
       0: return

  public void setDate(int, java.sql.Date) throws java.sql.SQLException;
    Code:
       0: return

  public void setTime(int, java.sql.Time) throws java.sql.SQLException;
    Code:
       0: return

  public void setTimestamp(int, java.sql.Timestamp) throws java.sql.SQLException;
    Code:
       0: return

  public void setAsciiStream(int, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setUnicodeStream(int, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setBinaryStream(int, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: return

  public void clearParameters() throws java.sql.SQLException;
    Code:
       0: return

  public void setObject(int, java.lang.Object, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setObject(int, java.lang.Object) throws java.sql.SQLException;
    Code:
       0: return

  public boolean execute() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public void addBatch() throws java.sql.SQLException;
    Code:
       0: return

  public void setCharacterStream(int, java.io.Reader, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setRef(int, java.sql.Ref) throws java.sql.SQLException;
    Code:
       0: return

  public void setBlob(int, java.sql.Blob) throws java.sql.SQLException;
    Code:
       0: return

  public void setClob(int, java.sql.Clob) throws java.sql.SQLException;
    Code:
       0: return

  public void setArray(int, java.sql.Array) throws java.sql.SQLException;
    Code:
       0: return

  public java.sql.ResultSetMetaData getMetaData() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public void setDate(int, java.sql.Date, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: return

  public void setTime(int, java.sql.Time, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: return

  public void setTimestamp(int, java.sql.Timestamp, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: return

  public void setNull(int, int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: return

  public void setURL(int, java.net.URL) throws java.sql.SQLException;
    Code:
       0: return

  public java.sql.ParameterMetaData getParameterMetaData() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public void setRowId(int, java.sql.RowId) throws java.sql.SQLException;
    Code:
       0: return

  public void setNString(int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: return

  public void setNCharacterStream(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setNClob(int, java.sql.NClob) throws java.sql.SQLException;
    Code:
       0: return

  public void setClob(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setBlob(int, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setNClob(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setSQLXML(int, java.sql.SQLXML) throws java.sql.SQLException;
    Code:
       0: return

  public void setObject(int, java.lang.Object, int, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setAsciiStream(int, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setBinaryStream(int, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setCharacterStream(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setAsciiStream(int, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: return

  public void setBinaryStream(int, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: return

  public void setCharacterStream(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: return

  public void setNCharacterStream(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: return

  public void setClob(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: return

  public void setBlob(int, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: return

  public void setNClob(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: return

  public java.sql.ResultSet executeQuery(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method checkOpen:()V
       4: aload_1
       5: aload_0
       6: invokestatic  #4                  // Method cloud/agileframework/elasticsearch/proxy/JdbcRequest.send:(Ljava/lang/String;Lcloud/agileframework/elasticsearch/BaseStatement;)Lcloud/agileframework/elasticsearch/proxy/JdbcResponse;
       9: astore_2
      10: goto          23
      13: astore_3
      14: new           #6                  // class java/sql/SQLException
      17: dup
      18: aload_3
      19: invokespecial #7                  // Method java/sql/SQLException."<init>":(Ljava/lang/Throwable;)V
      22: athrow
      23: aload_2
      24: invokeinterface #8,  1            // InterfaceMethod cloud/agileframework/elasticsearch/proxy/JdbcResponse.resultSet:()Ljava/sql/ResultSet;
      29: areturn
    Exception table:
       from    to  target type
           4    10    13   Class java/io/IOException

  public int executeUpdate(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method checkOpen:()V
       4: aload_1
       5: aload_0
       6: invokestatic  #4                  // Method cloud/agileframework/elasticsearch/proxy/JdbcRequest.send:(Ljava/lang/String;Lcloud/agileframework/elasticsearch/BaseStatement;)Lcloud/agileframework/elasticsearch/proxy/JdbcResponse;
       9: astore_2
      10: goto          23
      13: astore_3
      14: new           #6                  // class java/sql/SQLException
      17: dup
      18: aload_3
      19: invokespecial #7                  // Method java/sql/SQLException."<init>":(Ljava/lang/Throwable;)V
      22: athrow
      23: aload_2
      24: invokeinterface #9,  1            // InterfaceMethod cloud/agileframework/elasticsearch/proxy/JdbcResponse.count:()I
      29: ireturn
    Exception table:
       from    to  target type
           4    10    13   Class java/io/IOException

  public boolean execute(java.lang.String) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public int[] executeBatch() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: newarray       int
       3: areturn
}
