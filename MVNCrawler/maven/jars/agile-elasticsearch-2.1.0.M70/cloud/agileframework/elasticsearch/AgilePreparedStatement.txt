Compiled from "AgilePreparedStatement.java"
public class cloud.agileframework.elasticsearch.AgilePreparedStatement extends cloud.agileframework.elasticsearch.AgileStatement implements java.sql.PreparedStatement {
  private java.lang.String sql;

  public cloud.agileframework.elasticsearch.AgilePreparedStatement(cloud.agileframework.elasticsearch.ConnectionEnhanceImpl);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method cloud/agileframework/elasticsearch/AgileStatement."<init>":(Lcloud/agileframework/elasticsearch/ConnectionEnhanceImpl;)V
       5: return

  public cloud.agileframework.elasticsearch.AgilePreparedStatement(cloud.agileframework.elasticsearch.ConnectionEnhanceImpl, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method cloud/agileframework/elasticsearch/AgileStatement."<init>":(Lcloud/agileframework/elasticsearch/ConnectionEnhanceImpl;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field sql:Ljava/lang/String;
      10: return

  public java.sql.ResultSet executeQuery() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method checkOpen:()V
       4: aload_0
       5: getfield      #2                  // Field sql:Ljava/lang/String;
       8: aload_0
       9: invokestatic  #4                  // Method cloud/agileframework/elasticsearch/proxy/JdbcRequest.send:(Ljava/lang/String;Lcloud/agileframework/elasticsearch/BaseStatement;)Lcloud/agileframework/elasticsearch/proxy/JdbcResponse;
      12: astore_1
      13: goto          26
      16: astore_2
      17: new           #6                  // class java/sql/SQLException
      20: dup
      21: aload_2
      22: invokespecial #7                  // Method java/sql/SQLException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
      26: aload_1
      27: invokeinterface #8,  1            // InterfaceMethod cloud/agileframework/elasticsearch/proxy/JdbcResponse.resultSet:()Ljava/sql/ResultSet;
      32: areturn
    Exception table:
       from    to  target type
           4    13    16   Class java/io/IOException

  public int executeUpdate() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method checkOpen:()V
       4: aload_0
       5: getfield      #2                  // Field sql:Ljava/lang/String;
       8: aload_0
       9: invokestatic  #4                  // Method cloud/agileframework/elasticsearch/proxy/JdbcRequest.send:(Ljava/lang/String;Lcloud/agileframework/elasticsearch/BaseStatement;)Lcloud/agileframework/elasticsearch/proxy/JdbcResponse;
      12: astore_1
      13: goto          26
      16: astore_2
      17: new           #6                  // class java/sql/SQLException
      20: dup
      21: aload_2
      22: invokespecial #7                  // Method java/sql/SQLException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
      26: aload_1
      27: invokeinterface #9,  1            // InterfaceMethod cloud/agileframework/elasticsearch/proxy/JdbcResponse.count:()I
      32: ireturn
    Exception table:
       from    to  target type
           4    13    16   Class java/io/IOException

  public void setNull(int, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setBoolean(int, boolean) throws java.sql.SQLException;
    Code:
       0: return

  public void setByte(int, byte) throws java.sql.SQLException;
    Code:
       0: return

  public void setShort(int, short) throws java.sql.SQLException;
    Code:
       0: return

  public void setInt(int, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setLong(int, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setFloat(int, float) throws java.sql.SQLException;
    Code:
       0: return

  public void setDouble(int, double) throws java.sql.SQLException;
    Code:
       0: return

  public void setBigDecimal(int, java.math.BigDecimal) throws java.sql.SQLException;
    Code:
       0: return

  public void setString(int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: return

  public void setBytes(int, byte[]) throws java.sql.SQLException;
    Code:
       0: return

  public void setDate(int, java.sql.Date) throws java.sql.SQLException;
    Code:
       0: return

  public void setTime(int, java.sql.Time) throws java.sql.SQLException;
    Code:
       0: return

  public void setTimestamp(int, java.sql.Timestamp) throws java.sql.SQLException;
    Code:
       0: return

  public void setAsciiStream(int, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setUnicodeStream(int, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setBinaryStream(int, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: return

  public void clearParameters() throws java.sql.SQLException;
    Code:
       0: return

  public void setObject(int, java.lang.Object, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setObject(int, java.lang.Object) throws java.sql.SQLException;
    Code:
       0: return

  public boolean execute() throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public void addBatch() throws java.sql.SQLException;
    Code:
       0: return

  public void setCharacterStream(int, java.io.Reader, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setRef(int, java.sql.Ref) throws java.sql.SQLException;
    Code:
       0: return

  public void setBlob(int, java.sql.Blob) throws java.sql.SQLException;
    Code:
       0: return

  public void setClob(int, java.sql.Clob) throws java.sql.SQLException;
    Code:
       0: return

  public void setArray(int, java.sql.Array) throws java.sql.SQLException;
    Code:
       0: return

  public java.sql.ResultSetMetaData getMetaData() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public void setDate(int, java.sql.Date, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: return

  public void setTime(int, java.sql.Time, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: return

  public void setTimestamp(int, java.sql.Timestamp, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: return

  public void setNull(int, int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: return

  public void setURL(int, java.net.URL) throws java.sql.SQLException;
    Code:
       0: return

  public java.sql.ParameterMetaData getParameterMetaData() throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: areturn

  public void setRowId(int, java.sql.RowId) throws java.sql.SQLException;
    Code:
       0: return

  public void setNString(int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: return

  public void setNCharacterStream(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setNClob(int, java.sql.NClob) throws java.sql.SQLException;
    Code:
       0: return

  public void setClob(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setBlob(int, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setNClob(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setSQLXML(int, java.sql.SQLXML) throws java.sql.SQLException;
    Code:
       0: return

  public void setObject(int, java.lang.Object, int, int) throws java.sql.SQLException;
    Code:
       0: return

  public void setAsciiStream(int, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setBinaryStream(int, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setCharacterStream(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: return

  public void setAsciiStream(int, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: return

  public void setBinaryStream(int, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: return

  public void setCharacterStream(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: return

  public void setNCharacterStream(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: return

  public void setClob(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: return

  public void setBlob(int, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: return

  public void setNClob(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: return
}
